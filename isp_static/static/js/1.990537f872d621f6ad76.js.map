{"version":3,"sources":["webpack:///static/js/1.990537f872d621f6ad76.js","webpack:///./src/pages/viewAd/ViewAd.vue","webpack:///./~/zrender/lib/core/util.js?10f4","webpack:///./~/echarts/lib/util/graphic.js?e267","webpack:///./~/echarts/lib/echarts.js?68a2","webpack:///./~/echarts/lib/util/model.js?e2bd","webpack:///./~/echarts/lib/util/number.js?43e3","webpack:///./~/zrender/lib/core/vector.js?6654","webpack:///./~/zrender/lib/graphic/Path.js?c119","webpack:///./~/zrender/lib/core/env.js?9ccc","webpack:///./~/echarts/lib/util/format.js?7f72","webpack:///./~/babel-runtime/core-js/object/assign.js?e6ca","webpack:///./~/echarts/lib/model/Model.js?f4df","webpack:///./~/core-js/library/fn/object/assign.js?80e4","webpack:///./~/core-js/library/modules/_object-assign.js?5c0c","webpack:///./~/core-js/library/modules/es6.object.assign.js?9007","webpack:///./~/echarts/lib/util/clazz.js?3e66","webpack:///./~/zrender/lib/core/BoundingRect.js?76f6","webpack:///./~/echarts/lib/model/Component.js?0e02","webpack:///./~/zrender/lib/core/event.js?24ff","webpack:///./~/echarts/lib/util/layout.js?2b1e","webpack:///./~/echarts/lib/coord/axisHelper.js?4730","webpack:///./~/zrender/lib/contain/text.js?3a43","webpack:///./~/zrender/lib/core/curve.js?9511","webpack:///./~/zrender/lib/core/matrix.js?97a2","webpack:///./~/zrender/lib/mixin/Eventful.js?223b","webpack:///./~/zrender/lib/tool/color.js?284f","webpack:///./~/core-js/library/modules/_classof.js?b4b3","webpack:///./~/core-js/library/modules/_is-array-iter.js?a4b3","webpack:///./~/core-js/library/modules/_iter-call.js?5189","webpack:///./~/core-js/library/modules/_iter-detect.js?0a91","webpack:///./~/core-js/library/modules/core.get-iterator-method.js?9c88","webpack:///./~/echarts/lib/component/axisPointer/modelHelper.js?ba01","webpack:///./~/echarts/lib/scale/Scale.js?c922","webpack:///./~/echarts/lib/util/throttle.js?56b3","webpack:///./~/zrender/lib/config.js?2861","webpack:///./~/zrender/lib/container/Group.js?8d57","webpack:///./~/zrender/lib/core/PathProxy.js?69e9","webpack:///./~/babel-runtime/core-js/array/from.js?efc2","webpack:///./~/core-js/library/fn/array/from.js?669d","webpack:///./~/core-js/library/modules/_create-property.js?1ad1","webpack:///./~/core-js/library/modules/es6.array.from.js?ce7d","webpack:///./~/echarts/lib/CoordinateSystem.js?2b30","webpack:///./~/echarts/lib/component/dataZoom/DataZoomModel.js?4b9b","webpack:///./~/echarts/lib/component/dataZoom/DataZoomView.js?03fe","webpack:///./~/echarts/lib/component/dataZoom/helper.js?ee2f","webpack:///./~/echarts/lib/model/mixin/makeStyleMapper.js?e2b1","webpack:///./~/echarts/lib/scale/Interval.js?08e9","webpack:///./~/echarts/lib/util/component.js?cc72","webpack:///./~/zrender/lib/core/timsort.js?0a74","webpack:///./~/zrender/lib/graphic/Displayable.js?5c45","webpack:///./~/zrender/lib/graphic/Gradient.js?5165","webpack:///./~/echarts/lib/util/symbol.js?be2c","webpack:///./~/core-js/library/modules/_task.js","webpack:///./~/echarts/lib/chart/helper/Symbol.js?9fa3","webpack:///./~/echarts/lib/chart/helper/createListFromArray.js?e3fc","webpack:///./~/echarts/lib/component/axis/AxisBuilder.js?6417","webpack:///./~/echarts/lib/component/axis/AxisView.js?f854","webpack:///./~/echarts/lib/component/axis/cartesianAxisHelper.js?ce88","webpack:///./~/echarts/lib/component/axisPointer/findPointFromSeries.js?2189","webpack:///./~/echarts/lib/component/axisPointer/globalListener.js?00cf","webpack:///./~/echarts/lib/component/axisPointer/viewHelper.js?35c0","webpack:///./~/echarts/lib/component/helper/sliderMove.js?10f2","webpack:///./~/echarts/lib/coord/Axis.js?736c","webpack:///./~/echarts/lib/coord/axisModelCommonMixin.js?a8d0","webpack:///./~/echarts/lib/coord/cartesian/AxisModel.js?0573","webpack:///./~/echarts/lib/data/List.js?b096","webpack:///./~/echarts/lib/data/helper/completeDimensions.js?9c9e","webpack:///./~/echarts/lib/model/Series.js?186c","webpack:///./~/echarts/lib/model/mixin/colorPalette.js?b454","webpack:///./~/echarts/lib/scale/helper.js?370b","webpack:///./~/echarts/lib/view/Chart.js?72f3","webpack:///./~/echarts/lib/view/Component.js?415a","webpack:///./~/qs/lib/formats.js","webpack:///./~/qs/lib/utils.js","webpack:///./~/zrender/lib/Element.js?325b","webpack:///./~/zrender/lib/animation/Animator.js?d2b9","webpack:///./~/zrender/lib/animation/requestAnimationFrame.js?6d88","webpack:///./~/zrender/lib/contain/util.js?0031","webpack:///./~/zrender/lib/core/LRU.js?018e","webpack:///./~/zrender/lib/core/guid.js?f0e4","webpack:///./~/zrender/lib/core/log.js?26a2","webpack:///./~/zrender/lib/graphic/Image.js?bf1b","webpack:///./~/zrender/lib/graphic/Pattern.js?a97e","webpack:///./~/zrender/lib/graphic/Style.js?22d9","webpack:///./~/zrender/lib/graphic/helper/poly.js?788c","webpack:///./~/zrender/lib/mixin/Transformable.js?f61b","webpack:///./~/qs/lib/index.js","webpack:///ECharts.vue?2290","webpack:///./src/plugins/tool.js","webpack:///./~/babel-runtime/core-js/promise.js","webpack:///./~/babel-runtime/helpers/toConsumableArray.js?1825","webpack:///./~/core-js/library/fn/promise.js","webpack:///./~/core-js/library/modules/_an-instance.js","webpack:///./~/core-js/library/modules/_for-of.js","webpack:///./~/core-js/library/modules/_invoke.js","webpack:///./~/core-js/library/modules/_microtask.js","webpack:///./~/core-js/library/modules/_redefine-all.js","webpack:///./~/core-js/library/modules/_set-species.js","webpack:///./~/core-js/library/modules/_species-constructor.js","webpack:///./~/core-js/library/modules/es6.promise.js","webpack:///./~/vue-echarts/components/ECharts.vue?c47b*","webpack:///./~/echarts/lib/ExtensionAPI.js?e283","webpack:///./~/echarts/lib/chart/helper/SymbolDraw.js?6b79","webpack:///./~/echarts/lib/chart/helper/labelHelper.js?2f49","webpack:///./~/echarts/lib/chart/line.js?f251","webpack:///./~/echarts/lib/chart/line/LineSeries.js?6f66","webpack:///./~/echarts/lib/chart/line/LineView.js?018e","webpack:///./~/echarts/lib/chart/line/lineAnimationDiff.js?8da6","webpack:///./~/echarts/lib/chart/line/poly.js?c760","webpack:///./~/echarts/lib/component/axis.js?8a87","webpack:///./~/echarts/lib/component/axis/CartesianAxisView.js?076a","webpack:///./~/echarts/lib/component/axisPointer.js?110d","webpack:///./~/echarts/lib/component/axisPointer/AxisPointerModel.js?e99a","webpack:///./~/echarts/lib/component/axisPointer/AxisPointerView.js?4293","webpack:///./~/echarts/lib/component/axisPointer/BaseAxisPointer.js?027a","webpack:///./~/echarts/lib/component/axisPointer/CartesianAxisPointer.js?ab1e","webpack:///./~/echarts/lib/component/axisPointer/axisTrigger.js?86e8","webpack:///./~/echarts/lib/component/dataZoom.js?398c","webpack:///./~/echarts/lib/component/dataZoom/AxisProxy.js?0ffe","webpack:///./~/echarts/lib/component/dataZoom/InsideZoomModel.js?13d5","webpack:///./~/echarts/lib/component/dataZoom/InsideZoomView.js?e452","webpack:///./~/echarts/lib/component/dataZoom/SliderZoomModel.js?352b","webpack:///./~/echarts/lib/component/dataZoom/SliderZoomView.js?af7b","webpack:///./~/echarts/lib/component/dataZoom/dataZoomAction.js?375c","webpack:///./~/echarts/lib/component/dataZoom/dataZoomProcessor.js?d800","webpack:///./~/echarts/lib/component/dataZoom/roams.js?8015","webpack:///./~/echarts/lib/component/dataZoom/typeDefaulter.js?6484","webpack:///./~/echarts/lib/component/gridSimple.js?eec5","webpack:///./~/echarts/lib/component/helper/RoamController.js?a07f","webpack:///./~/echarts/lib/component/helper/interactionMutex.js?ab5d","webpack:///./~/echarts/lib/component/tooltip.js?b491","webpack:///./~/echarts/lib/component/tooltip/TooltipContent.js?2c54","webpack:///./~/echarts/lib/component/tooltip/TooltipModel.js?19ac","webpack:///./~/echarts/lib/component/tooltip/TooltipView.js?ae52","webpack:///./~/echarts/lib/coord/axisDefault.js?4492","webpack:///./~/echarts/lib/coord/axisModelCreator.js?34e4","webpack:///./~/echarts/lib/coord/cartesian/Axis2D.js?9345","webpack:///./~/echarts/lib/coord/cartesian/Cartesian.js?9246","webpack:///./~/echarts/lib/coord/cartesian/Cartesian2D.js?103b","webpack:///./~/echarts/lib/coord/cartesian/Grid.js?f167","webpack:///./~/echarts/lib/coord/cartesian/GridModel.js?1817","webpack:///./~/echarts/lib/data/DataDiffer.js?f330","webpack:///./~/echarts/lib/helper.js?5794","webpack:///./~/echarts/lib/layout/points.js?4302","webpack:///./~/echarts/lib/loading/default.js?8a5f","webpack:///./~/echarts/lib/model/Global.js?b9d3","webpack:///./~/echarts/lib/model/OptionManager.js?a7a5","webpack:///./~/echarts/lib/model/globalDefault.js?fd54","webpack:///./~/echarts/lib/model/mixin/areaStyle.js?4e41","webpack:///./~/echarts/lib/model/mixin/boxLayout.js?92d7","webpack:///./~/echarts/lib/model/mixin/itemStyle.js?9011","webpack:///./~/echarts/lib/model/mixin/lineStyle.js?3579","webpack:///./~/echarts/lib/model/mixin/textStyle.js?e4c8","webpack:///./~/echarts/lib/preprocessor/backwardCompat.js?f171","webpack:///./~/echarts/lib/preprocessor/helper/compatStyle.js?aff6","webpack:///./~/echarts/lib/processor/dataSample.js?6fcd","webpack:///./~/echarts/lib/scale/Log.js?0ad0","webpack:///./~/echarts/lib/scale/Ordinal.js?3a6b","webpack:///./~/echarts/lib/scale/Time.js?6fdf","webpack:///./~/echarts/lib/visual/seriesColor.js?4b6a","webpack:///./~/echarts/lib/visual/symbol.js?518b","webpack:///./~/vue-echarts/components/ECharts.vue?edff*","webpack:///./~/lodash.debounce/index.js?3bdc","webpack:///./~/qs/lib/parse.js","webpack:///./~/qs/lib/stringify.js","webpack:///./~/vue-echarts/components/ECharts.vue","webpack:///./~/vue-echarts/components/ECharts.vue?e7cb*","webpack:///./~/zrender/lib/Handler.js?fbeb","webpack:///./~/zrender/lib/Layer.js?f586","webpack:///./~/zrender/lib/Painter.js?ee99","webpack:///./~/zrender/lib/Storage.js?7e93","webpack:///./~/zrender/lib/animation/Animation.js?8743","webpack:///./~/zrender/lib/animation/Clip.js?fef9","webpack:///./~/zrender/lib/animation/easing.js?64b6","webpack:///./~/zrender/lib/contain/arc.js?7367","webpack:///./~/zrender/lib/contain/cubic.js?b90e","webpack:///./~/zrender/lib/contain/line.js?4326","webpack:///./~/zrender/lib/contain/path.js?2e7f","webpack:///./~/zrender/lib/contain/quadratic.js?f589","webpack:///./~/zrender/lib/contain/windingLine.js?625a","webpack:///./~/zrender/lib/core/GestureMgr.js?00fd","webpack:///./~/zrender/lib/core/bbox.js?1b56","webpack:///./~/zrender/lib/dom/HandlerProxy.js?2fc7","webpack:///./~/zrender/lib/graphic/CompoundPath.js?8636","webpack:///./~/zrender/lib/graphic/LinearGradient.js?4250","webpack:///./~/zrender/lib/graphic/RadialGradient.js?895e","webpack:///./~/zrender/lib/graphic/Text.js?3244","webpack:///./~/zrender/lib/graphic/helper/roundRect.js?418d","webpack:///./~/zrender/lib/graphic/helper/smoothBezier.js?2713","webpack:///./~/zrender/lib/graphic/helper/smoothSpline.js?a17c","webpack:///./~/zrender/lib/graphic/mixin/RectText.js?94ea","webpack:///./~/zrender/lib/graphic/shape/Arc.js?2994","webpack:///./~/zrender/lib/graphic/shape/BezierCurve.js?f5c4","webpack:///./~/zrender/lib/graphic/shape/Circle.js?076e","webpack:///./~/zrender/lib/graphic/shape/Line.js?7728","webpack:///./~/zrender/lib/graphic/shape/Polygon.js?d37d","webpack:///./~/zrender/lib/graphic/shape/Polyline.js?3cdb","webpack:///./~/zrender/lib/graphic/shape/Rect.js?3b3d","webpack:///./~/zrender/lib/graphic/shape/Ring.js?b71c","webpack:///./~/zrender/lib/graphic/shape/Sector.js?9767","webpack:///./~/zrender/lib/mixin/Animatable.js?35cb","webpack:///./~/zrender/lib/mixin/Draggable.js?fbca","webpack:///./~/zrender/lib/tool/path.js?dc4b","webpack:///./~/zrender/lib/tool/transformPath.js?ddb2","webpack:///./~/zrender/lib/zrender.js?5dcd","webpack:///DailogRow.vue","webpack:///LineChart.vue","webpack:///./src/components/DailogRow.vue?6334","webpack:///./src/components/DailogRow.vue?9b6e","webpack:///./src/components/DailogRow.vue","webpack:///./src/components/LineChart.vue","webpack:///./src/components/DailogRow.vue?cece","webpack:///./src/components/LineChart.vue?cc56","webpack:///ViewAd.vue","webpack:///./src/pages/viewAd/ViewAd.vue?3883","webpack:///./src/pages/viewAd/ViewAd.vue?7aa6","webpack:///./src/pages/viewAd/ViewAd.vue?d758"],"names":["webpackJsonp","Array","concat","module","exports","__webpack_require__","Component","clone","source","result","typeStr","objToString","call","i","len","length","TYPED_ARRAY","constructor","from","BUILTIN_OBJECT","isPrimitive","isDom","key","hasOwnProperty","merge","target","overwrite","isObject","targetProp","sourceProp","isArray","isBuiltInObject","mergeAll","targetAndSources","extend","defaults","overlay","createCanvas","document","createElement","getContext","_ctx","util","indexOf","array","value","inherits","clazz","baseClazz","F","clazzPrototype","prototype","prop","superClass","mixin","isArrayLike","data","each","obj","cb","context","forEach","nativeForEach","map","nativeMap","push","reduce","memo","nativeReduce","filter","nativeFilter","find","bind","func","args","nativeSlice","arguments","apply","curry","this","isFunction","isString","type","nodeType","ownerDocument","eqNaN","retrieve","values","slice","Function","assert","condition","message","Error","setAsPrimitive","primitiveKey","HashMap","set","createHashMap","[object Function]","[object RegExp]","[object Date]","[object Error]","[object CanvasGradient]","[object CanvasPattern]","[object Image]","[object Canvas]","[object Int8Array]","[object Uint8Array]","[object Uint8ClampedArray]","[object Int16Array]","[object Uint16Array]","[object Int32Array]","[object Uint32Array]","[object Float32Array]","[object Float64Array]","Object","toString","arrayProto","get","prefixedKey","removeKey","noop","hasFillOrStroke","fillOrStroke","liftColor","color","colorTool","lift","cacheElementStl","el","__hoverStlDirty","stroke","style","fill","hoverStyle","__hoverStl","normalStyle","name","__normalStl","doSingleEnterHover","__isHover","useHoverLayer","__zr","addHover","setStyle","z2","doSingleLeaveHover","normalStl","removeHover","doEnterHover","traverse","child","doLeaveHover","setElementHoverStl","hoverStl","onElementMouseOver","e","__hoverSilentOnTouch","zrByTouch","__isEmphasis","onElementMouseOut","enterEmphasis","leaveEmphasis","animateOrSetProps","isUpdate","props","animatableModel","dataIndex","isAnimationEnabled","postfix","duration","getShallow","animationEasing","animationDelay","getAnimationDelayParams","animateTo","stopAnimation","attr","zrUtil","pathTool","Path","matrix","vector","Transformable","BoundingRect","round","Math","mathMax","max","mathMin","min","graphic","Group","Image","Text","Circle","Sector","Ring","Polygon","Polyline","Rect","Line","BezierCurve","Arc","CompoundPath","LinearGradient","RadialGradient","extendShape","opts","extendPath","pathData","extendFromString","makePath","rect","layout","path","createFromString","boundingRect","getBoundingRect","aspect","width","height","cx","x","cy","y","resizePath","mergePath","applyTransform","pathRect","m","calculateTransform","subPixelOptimizeLine","param","subPixelOptimize","shape","lineWidth","x1","x2","y1","y2","subPixelOptimizeRect","originX","originY","originWidth","originHeight","position","positiveOrNegative","doubledPosition","setHoverStyle","opt","hoverSilentOnTouch","on","setText","textStyle","labelModel","labelPosition","labelOffset","labelColor","textStyleModel","getModel","textDistance","textFont","getFont","textPosition","textOffset","textFill","getTextColor","ecModel","gTextStyleModel","fontStyle","fontWeight","fontSize","fontFamily","join","updateProps","initProps","getTransform","ancestor","mat","identity","mul","getLocalTransform","parent","transform","invert","transformDirection","direction","hBase","abs","vBase","vertex","groupTransition","g1","g2","getAnimatableProps","rotation","elMap1","g","elMap","isGroup","anid","oldEl","newProp","clipPointsByRect","points","point","clipRectByRect","targetRect","global","createRegisterEventWithLowercaseName","method","eventName","handler","toLowerCase","Eventful","MessageCenter","ECharts","dom","theme","prioritySortFunc","a","b","prio","themeStorage","id","group","_dom","zr","_zr","zrender","init","renderer","devicePixelRatio","_throttledZrFlush","throttle","flush","_theme","_chartsViews","_chartsMap","_componentsViews","_componentsMap","_coordSysMgr","CoordinateSystemManager","_api","createExtensionAPI","_messageCenter","_initEvents","resize","_pendingActions","timsort","visualFuncs","dataProcessorFuncs","animation","_onframe","doConvertPixel","methodName","finder","_model","coordSysList","getCoordinateSystems","modelUtil","parseFinder","coordSys","__DEV__","console","warn","updateDirectly","ecIns","payload","mainType","subType","callView","view","__alive","__model","query","eachComponent","model","index","__viewId","doDispatchAction","silent","payloadType","escapeConnect","actionWrap","actions","actionInfo","cptType","update","split","updateMethod","pop","parseClassType","IN_MAIN_PROCESS","payloads","batched","batch","item","eventObj","eventObjBatch","isHighDown","batchItem","action","event","main","sub","OPTION_UPDATED","updateMethods","prepareAndUpdate","trigger","flushPendingActions","pendingActions","shift","triggerUpdatedEvent","invokeUpdateMethod","api","component","componentModel","updateZ","eachSeries","seriesModel","idx","chart","updateProgressiveAndBlend","updateHoverLayerStatus","postUpdateFuncs","prepareView","isComponent","viewList","viewMap","componentType","viewId","classType","Clazz","ComponentView","getClass","ChartView","add","__id","__ecComponentInfo","componentIndex","remove","dispose","splice","processData","process","stackSeriesData","stackedDataMap","series","stack","getData","previousStack","stackedOn","doLayout","visual","isLayout","doVisualEncoding","excludesLayout","clearColorPalette","doRender","componentView","render","chartView","storage","elCount","env","node","ignore","frameDrawNum","needProgressive","progressive","floor","blendMode","canvasSupported","z","zlevel","ecInstance","coordSysMgr","ExtensionAPI","getComponentByElement","modelInfo","getComponent","enableConnect","updateConnectedChartsStatus","charts","status","STATUS_KEY","eventActionMap","actionType","eventType","connectedGroups","makeActionFromEvent","otherCharts","instances","otherChart","dispatchAction","window","GlobalModel","OptionManager","ComponentModel","SeriesModel","ACTION_REG","off","one","echartsProto","getDom","getZr","setOption","option","notMerge","lazyUpdate","optionManager","optionPreprocessorFuncs","setTheme","log","getOption","getWidth","getHeight","getDevicePixelRatio","painter","dpr","getRenderedCanvas","pixelRatio","backgroundColor","list","getDisplayList","getDataURL","excludeComponents","excludesComponentViews","self","url","toDataURL","getConnectedDataURL","groupId","left","Infinity","top","right","bottom","canvasList","canvas","getBoundingClientRect","targetCanvas","img","image","refreshImmediately","convertToPixel","convertFromPixel","containPixel","models","coordinateSystem","containPoint","getVisual","visualType","defaultMainType","dataIndexInside","indexOfRawIndex","getItemVisual","getViewOfComponentModel","getViewOfSeriesModel","restoreData","create","isSingleCanvas","configLayer","clearColor","colorArr","parse","stringify","colorStops","background","updateView","clearAllVisual","updateVisual","updateLayout","optionChanged","resetOption","_loadingFX","showLoading","cfg","hideLoading","loadingEffects","browser","weChat","MOUSE_EVENT_NAMES","eveName","params","dataModel","getSeriesByIndex","seriesIndex","getDataParams","dataType","eventData","isDisposed","_disposed","clear","idBase","Date","groupIdBase","echarts","version","dependencies","replace","existInstance","getInstanceByDom","nodeName","toUpperCase","clientWidth","clientHeight","setAttribute","connect","disConnect","disconnect","getAttribute","getInstanceById","registerTheme","registerPreprocessor","preprocessorFunc","registerProcessor","priority","processorFunc","isNaN","registerPostUpdate","postUpdateFunc","registerAction","test","registerCoordinateSystem","CoordinateSystem","register","getCoordinateSystemDimensions","coordSysCreator","getDimensionsInfo","dimensions","registerLayout","layoutFunc","registerVisual","visualFunc","registerLoading","loadingFx","extendComponentModel","extendComponentView","extendSeriesModel","extendChartView","setCanvasCreator","creator","List","Model","Axis","number","format","helper","PRIORITY","PROCESSOR","FILTER","STATISTIC","VISUAL","LAYOUT","GLOBAL","CHART","COMPONENT","BRUSH","has","formatUtil","nubmerUtil","normalizeToArray","defaultEmphasis","subOpts","emphasisOpt","emphasis","normalOpt","normal","subOptName","val","LABEL_OPTIONS","getDataItemValue","dataItem","isDataItemOption","converDataValue","dimInfo","dimType","parseDate","NaN","createDataFormatModel","dataFormatMixin","rawValue","getRawValue","rawDataIndex","getRawIndex","getName","itemOpt","getRawDataItem","componentSubType","seriesType","seriesId","seriesName","marker","getTooltipMarker","$vars","getFormattedLabel","dimIndex","labelProp","itemModel","getItemModel","formatter","formatTpl","formatTooltip","mappingToExists","exists","newCptOptions","exist","cptOption","isIdInner","makeIdAndName","mapResult","idMap","existCpt","keyInfo","idNum","compressBatches","batchA","batchB","makeMap","sourceBatch","otherMap","dataIndices","otherDataIndices","j","lenj","mapToArray","isData","mapA","mapB","queryDataIndex","indexOfName","makeGetter","hostObj","parsedKey","match","queryType","includeMainTypes","queryParam","queryComponents","dataDimToCoordDim","dataDim","getDimension","dimItem","getDimensionInfo","coordDim","coordDimToDataDim","dimName","coordDimIndex","otherDimToDataDim","otherDim","otherDims","_trim","str","quantityExponent","LN10","linearMap","domain","range","clamp","subDomain","subRange","parsePercent","percent","all","parseFloat","precision","returnStr","toFixed","asc","arr","sort","getPrecision","count","getPrecisionSafe","eIndex","dotIndex","getPixelPrecision","dataExtent","pixelExtent","dataQuantity","sizeQuantity","isFinite","getPercentWithPrecision","valueList","sum","acc","digits","pow","votesPerQuota","targetSeats","seats","votes","currentSum","remainder","Number","NEGATIVE_INFINITY","maxId","MAX_SAFE_INTEGER","remRadian","radian","pi2","PI","isRadianAroundZero","TIME_REG","getTimezoneOffset","exec","timezoneOffset","timeOffset","quantity","nice","nf","exponent","exp10","f","reformIntervals","littleThan","lg","interval","close","curr","currClose","isNumeric","v","ArrayCtor","Float32Array","out","copy","v1","v2","scaleAndAdd","sqrt","lenSquare","div","dot","scale","s","normalize","d","distance","distanceSquare","negate","lerp","t","lengthSquare","dist","distSquare","Displayable","PathProxy","pathContain","Pattern","getCanvasPattern","pathProxyForDraw","__dirtyPath","strokeContainThreshold","brush","ctx","prevEl","hasStroke","hasFill","hasFillGradient","hasStrokeGradient","hasFillPattern","hasStrokePattern","setTransform","__dirty","_fillGradient","getGradient","_strokeGradient","fillStyle","strokeStyle","lineDash","lineDashOffset","ctxLineDash","setLineDash","getGlobalScale","setScale","beginPath","setLineDashOffset","buildPath","rebuildPath","restoreTransform","text","drawRectText","shapeCfg","inBundle","createPathProxy","_rect","needsUpdateRect","rectWithStroke","_rectWithStroke","w","lineScale","strokeNoScale","getLineScale","contain","localPos","transformCoordToLocal","containStroke","dirty","dirtyPath","refresh","__clipTarget","animateShape","loop","animate","attrKV","setShape","Sub","extendFrom","defaultShape","thisShape","navigator","os","ua","firefox","ie","edge","touchEventsSupported","pointerEventsSupported","userAgent","numberUtil","textContain","addCommas","toCamelCase","upperCaseFirst","group1","charAt","normalizeCssArray","encodeHTML","String","TPL_VAR_ALIAS","wrapVar","varName","seriesIdx","tpl","paramsList","encode","seriesLen","alias","k","formatTplSimple","extraCssText","s2d","formatTime","isUTC","date","utc","M","h","capitalFirst","substr","truncateText","default","__esModule","parentModel","doGet","pathArr","getParent","getParentMethod","clazzUtil","mergeOption","ignoreParent","parsePath","thisParentModel","isEmpty","Ctor","setReadOnly","properties","customizeGetParent","enableClassExtend","assign","getKeys","gOPS","pIE","toObject","IObject","$assign","A","B","S","Symbol","K","keys","T","aLen","getSymbols","isEnum","$export","checkClassType","superCall","superApply","IS_CONTAINER","host","hasOwn","ret","RootClass","mandatoryMethods","$constructor","proto","ExtendedClass","enableClassManagement","entity","options","makeContainer","container","registerClass","componentMainType","throwWhenNotFound","getClassesByMainType","o","hasClass","getAllClassMainTypes","types","hasSubTypes","registerWhenExtend","originalExtend","vec2","v2ApplyTransform","union","other","lt","rb","lb","rt","maxX","maxY","sx","sy","translate","intersect","ax0","ax1","ay0","ay1","bx0","bx1","by0","by1","plain","getDependencies","deps","arrayPush","componentUtil","defaultOption","dependentModels","uid","layoutMode","extraOpt","getUID","mergeDefaultAndTheme","inputPositionParams","getLayoutParams","themeModel","getTheme","getDefaultOption","mergeLayoutParam","optionUpdated","newCptOption","isInit","optList","Class","getReferringComponents","enableSubTypeDefaulter","enableTopologicalTravel","clientToLocal","calculate","defaultGetZrXY","layerX","offsetX","zrX","zrY","layerY","offsetY","box","clientX","clientY","normalizeEvent","touch","targetTouches","changedTouches","zrDelta","wheelDelta","detail","addEventListener","isDomLevel2","attachEvent","removeEventListener","detachEvent","stop","preventDefault","stopPropagation","cancelBubble","returnValue","Dispatcher","boxLayout","orient","gap","maxWidth","maxHeight","currentLineMaxSize","eachChild","nextX","nextY","nextChild","childAt","nextChildRect","moveX","newline","moveY","LOCATION_PARAMS","HV_NAMES","vbox","hbox","getAvailableSize","positionInfo","containerRect","margin","containerWidth","containerHeight","getLayoutRect","verticalMargin","horizontalMargin","positionElement","hv","boundingMode","needLocalTransform","elPos","dx","dy","sizeCalculable","hvIdx","targetOption","newOption","names","newParams","newValueCount","merged","mergedValueCount","hasProp","hasValue","ignoreSize","hResult","vResult","copyLayoutParams","OrdinalScale","IntervalScale","Scale","axisHelper","getScaleExtent","axisDataLen","boundaryGap","span","scaleType","getMin","getMax","fixMin","fixMax","originalExtent","getExtent","setBlank","getNeedCrossZero","niceScaleExtent","extent","splitNumber","base","setExtent","niceExtent","minInterval","setInterval","createScaleByModel","axisType","getCategories","ifAxisCrossZero","axis","getAxisLabelInterval","tickCoords","labels","font","isAxisHorizontal","textSpaceTakenRect","autoLabelInterval","accumulatedLabelInterval","step","tickCoord","getFormattedLabels","labelFormatter","getTicksLabels","ticks","getTicks","tick","getAxisRawValue","getLabel","getTextWidth","textWidthCache","textLines","l","measureText","textWidthCacheCounter","TEXT_CACHE_MAX","getTextRect","textAlign","textBaseline","textLineLen","lineHeight","adjustTextPositionOnRect","textRect","textHeight","halfHeight","ellipsis","maxIterations","minChar","cnCharWidth","ascCharWidth","placeholder","contentWidth","ellipsisWidth","textLine","subLength","estimateLength","charCode","charCodeAt","isAroundZero","EPSILON","isNotAroundZero","cubicAt","p0","p1","p2","p3","onet","cubicDerivativeAt","cubicRootAt","roots","c","C","n","t1","disc","t2","discSqrt","mathSqrt","Y1","Y2","mathPow","ONE_THIRD","theta","acos","ASqrt","tmp","cos","THREE_SQRT","sin","t3","cubicExtrema","extrema","cubicSubdivide","p01","p12","p23","p012","p123","p0123","cubicProjectPoint","x0","y0","x3","y3","prev","next","d1","d2","_v0","_t","_v1","v2DistSquare","EPSILON_NUMERIC","_v2","quadraticAt","quadraticDerivativeAt","quadraticRootAt","quadraticExtremum","divider","quadraticSubdivide","quadraticProjectPoint","v2Create","m1","m2","out0","out1","out2","out3","out4","out5","rotate","rad","aa","ac","atx","ab","ad","aty","st","ct","vx","vy","det","arrySlice","_$handlers","_h","isSilent","newList","argLen","triggerWithContext","clampCssByte","clampCssAngle","clampCssFloat","parseCssInt","parseInt","parseCssFloat","cssHueToRgb","p","setRgba","r","copyRgba","putToCache","colorStr","rgbaArr","lastRemovedArr","colorCache","put","cached","kCSSColorTable","op","ep","fname","alpha","hsla2rgba","iv","hsla","rgba","rgba2hsla","H","R","G","vMin","vMax","delta","L","deltaR","deltaG","deltaB","level","toHex","fastMapToColor","normalizedValue","colors","leftIndex","rightIndex","ceil","leftColor","rightColor","dv","mapToColor","fullOutput","modifyHSL","modifyAlpha","arrColor","LRU","transparent","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","cof","TAG","ARG","tryGet","it","O","undefined","callee","Iterators","ITERATOR","ArrayProto","anObject","iterator","fn","entries","SAFE_CLOSING","riter","skipClosing","safe","iter","done","classof","getIteratorMethod","collectAxesInfo","globalTooltipModel","globalAxisPointerModel","linksOption","linkGroups","saveTooltipAxisInfo","fromTooltip","triggerTooltip","axisPointerModel","axisPointerShow","isHandleTrigger","makeAxisPointerModel","baseTooltipModel","snap","makeKey","involveSeries","axisInfo","axesInfo","useHandle","seriesModels","axesInfoInCoordSys","seriesInvolved","groupIndex","getLinkGroupIndex","linkGroup","mapper","axisPointerEnabled","coordSysKey","coordSysAxesInfo","coordSysMap","coordSysModel","getAxes","getTooltipAxes","triggerAxis","cross","tooltipAxes","baseAxes","otherAxes","tooltipAxisPointerModel","volatileOption","field","labelOption","label","show","crossStyle","lineStyle","collectSeriesInfo","seriesTooltipTrigger","seriesTooltipShow","getAxis","dim","seriesDataCount","axisModel","linkOption","checkPropInLink","linkPropValue","axisPropValue","collect","fixValue","getAxisInfo","reverse","isBlank","getAxisPointerModel","setting","_setting","_extent","_interval","scaleProto","getSetting","unionExtent","unionExtentFromData","getDataExtent","start","end","thisExtent","_isBlank","lib","ORIGIN_METHOD","RATE","delay","debounce","lastExec","getTime","timer","scope","currCall","diff","debounceNextCall","lastCall","thisDelay","thisDebounce","clearTimeout","setTimeout","debounceDelay","createOrUpdate","fnAttr","rate","throttleType","originFn","lastThrottleType","config","debugMode","Element","_children","__storage","children","childOfName","childCount","_doAdd","addBefore","nextSibling","addToStorage","addChildrenToStorage","delFromStorage","delChildrenFromStorage","removeAll","includeChildren","tmpRect","tmpMat","invisible","childRect","curve","bbox","CMD","Q","Z","min2","max2","mathCos","mathSin","mathAbs","hasTypedArray","notSaveData","_saveData","_xi","_yi","_x0","_y0","_ux","_uy","_len","_lineDash","_dashOffset","_dashIdx","_dashSum","moveTo","addData","lineTo","exceedUnit","_needsDash","_dashedLineTo","bezierCurveTo","_dashedBezierTo","quadraticCurveTo","_dashedQuadraticTo","arc","startAngle","endAngle","anticlockwise","arcTo","radius","closePath","toStatic","lineDashSum","offset","setData","appendPath","appendSize","appendPathData","cmd","_expandData","_prevCmd","newData","dash","dashSum","nDash","bezierLen","tmpLen","MAX_VALUE","xi","yi","fromLine","fromCubic","fromQuadratic","rx","ry","fromArc","ux","uy","dTheta","psi","fs","scaleX","scaleY","isEllipse","$defineProperty","createDesc","object","isArrayIter","toLength","createProperty","getIterFn","arrayLike","mapfn","mapping","iterFn","_coordinateSystems","coordinateSystemCreators","coordinateSystems","creater","coordinateSystemCreator","retrieveRaw","updateRangeUse","dataZoomModel","rawOption","rangePropMode","_rangePropMode","AxisProxy","eachAxisDim","DataZoomModel","xAxisIndex","yAxisIndex","filterMode","startValue","endValue","minSpan","maxSpan","minValueSpan","maxValueSpan","_dataIntervalByAxis","_dataInfo","_axisProxies","_autoThrottle","doInit","thisOption","realtime","_setDefaultThrottle","_resetTarget","_giveAxisProxies","axisProxies","eachTargetAxis","dimNames","axisIndex","axisProxy","__dzAxisProxy","autoMode","_judgeAutoMode","axisIndexName","_autoSetAxisIndex","_autoSetOrient","hasIndexSpecified","autoAxisIndex","singleAxis","singleAxisModel","singleAxisIndex","axisIndices","axisModels","_isSeriesHasAllAxesTypeOf","axisId","is","seriesAxisIndex","globalOption","animationDurationUpdate","getFirstTargetAxisModel","firstAxisModel","indices","callback","getAxisProxy","getAxisModel","setRawRange","ignoreUpdateRangeUsg","getPercentRange","findRepresentativeAxisProxy","getDataPercentWindow","getValueRange","axisDimName","getDataValueWindow","hostedBy","getRangePropMode","getTargetCoordInfo","save","coordModel","store","coordIndex","coordSysLists","getCoordSysModel","AXIS_DIMS","COORDS","isCoordSupported","coordType","createNameEach","attrs","capitalNames","capitalAttrs","nameObj","capital","createLinkedNodesFinder","forEachNode","forEachEdgeType","edgeIdGetter","isNodeAbsorded","nodes","isLinked","hasLink","edgeType","edgeId","records","absorb","sourceNode","processSingleNode","existsLink","excludes","includes","propName","roundNumber","_intervalPrecision","getInterval","_niceExtent","getIntervalPrecision","intervalScaleGetTicks","niceTicks","intervalScaleNiceTicks","intervalPrecision","niceTickExtent","expandSize","random","subTypeDefaulters","registerSubTypeDefaulter","defaulter","determineSubType","componentTypeMain","dependencyGetter","makeDepndencyGraph","fullNameList","graph","noEntryList","thisItem","createDependencyGraphItem","originalDeps","availableDeps","getAvailableDependencies","entryCount","dependentName","predecessor","thatItem","successor","dep","topologicalTravel","targetNameList","removeEdge","succComponentType","removeEdgeAndAdd","targetNameSet","currComponentType","currVertex","isInTargetNameSet","minRunLength","DEFAULT_MIN_MERGE","makeAscendingRun","lo","hi","compare","runHi","reverseRun","binaryInsertionSort","mid","pivot","gallopLeft","hint","lastOffset","maxOffset","gallopRight","TimSort","pushRun","_runStart","_runLength","runStart","stackSize","runLength","mergeRuns","mergeAt","forceMergeRuns","start1","length1","start2","length2","mergeLow","mergeHigh","cursor1","cursor2","dest","count1","count2","exit","_minGallop","minGallop","DEFAULT_MIN_GALLOPING","customCursor","customDest","remaining","ts","minRun","force","Style","__clipPaths","RectText","draggable","dragging","culling","cursor","rectHover","beforeBrush","afterBrush","rectContain","coord","animateStyle","useStyle","Gradient","addColorStop","Triangle","Diamond","Pin","angle","asin","tanX","tanY","cpLen","cpLen2","Arrow","symbolCtors","line","roundRect","square","circle","diamond","pin","arrow","triangle","symbolShapeMakers","size","symbolBuildProxies","symbolType","textVerticalAlign","proxySymbol","symbolPathSetColor","symbolStyle","symbolShape","__isEmptyBrush","symbolUtil","createSymbol","symbolPath","setColor","defer","channel","port","invoke","html","cel","setTask","setImmediate","clearTask","clearImmediate","MessageChannel","counter","queue","run","listener","nextTick","port2","port1","onmessage","postMessage","importScripts","appendChild","removeChild","getSymbolSize","symbolSize","getScale","seriesScope","updateData","driftSymbol","drift","labelHelper","symbolProto","_createSymbol","hostModel","_symbolType","stopSymbolAnimation","toLastFrame","getSymbolPath","highlight","downplay","setZ","setDraggable","_updateCommon","_seriesModel","normalStyleAccessPath","emphasisStyleAccessPath","normalLabelAccessPath","emphasisLabelAccessPath","itemStyle","hoverItemStyle","symbolRotate","symbolOffset","hoverLabelModel","hoverAnimation","cursorStyle","hasItemOption","getItemStyle","elStyle","opacity","valueDim","findLabelValueDim","setTextToStyle","onEmphasis","ratio","onNormal","fadeOut","firstDataNotNull","ifNeedCompleteOrdinalData","sampleItem","createListFromArray","coordSysName","creators","registeredCoordSys","completeDimOpt","encodeDef","dimsDef","completeDimensions","categoryIndex","nameList","createNameList","categories","dimValueGetter","categoryAxesModels","initData","isStackable","getDimTypeByAxis","categoryAxisModel","categoryDim","dataLen","cartesian2d","axesModels","xAxisModel","yAxisModel","xAxisType","yAxisType","stackable","isXAxisCateogry","isYAxisCategory","singleAxisType","isCategory","single","polar","polarModel","angleAxisModel","findAxisModel","radiusAxisModel","radiusAxisType","angleAxisType","isAngleAxisCateogry","isRadiusAxisCateogry","geo","makeAxisEventDataBase","endTextLayout","textRotate","rotationDiff","inverse","onLeft","tooltipOpt","fixMinMaxLabelShow","textEls","showMinLabel","showMaxLabel","firstLabel","nextLabel","lastLabel","prevLabel","isTwoLabelOverlapped","current","labelLayout","firstRect","nextRect","mRotationBack","AxisBuilder","nameDirection","tickDirection","labelDirection","dumbGroup","updateTransform","_transform","_dumbGroup","hasBuilder","builders","getGroup","axisLine","pt1","pt2","lineCap","getLineStyle","axisTick","tickModel","lineStyleModel","tickLen","tickInterval","labelInterval","ticksCoords","getTicksCoords","ifIgnoreOnTick","axisLabel","axisLabelShow","labelMargin","labelRotation","labelRotate","innerTextLayout","categoryData","triggerEvent","tickVal","itemTextStyleModel","textColor","dataToCoord","pos","labelStr","textEl","targetType","decomposeTransform","axisName","nameLocation","gapSignal","nameRotation","axisNameAvailableWidth","truncateOpt","nameTruncateMaxWidth","truncatedText","formatterParams","__fullText","__truncatedText","tooltip","content","axisRotation","textRotation","rawTick","updateAxisPointer","axisView","forceRender","AxisView","getAxisPointerClass","axisPointerClass","axisPointerModelHelper","_axisPointer","disposeAxisPointer","axisPointer","axisPointerClazz","registerAxisPointerClass","gridModel","getZero","theAxis","grid","toGlobalCoord","rawAxisPosition","axisPosition","onZero","axisDim","getRect","rectBound","axisOffset","posMap","dirMap","labelInside","getLabelInterval","getItemGraphicEl","getTooltipPosition","dataToPoint","getValues","initGlobalListeners","useHandler","dis","makeDispatchAction","record","dispatchTooltipFinally","pendings","initialized","doEnter","onLeave","actuallyPayload","showLen","showTip","hideLen","hideTip","currTrigger","pendingList","globalListener","unregister","confineInContainer","viewWidth","viewHeight","buildElStyle","axisPointerType","styleModel","getAreaStyle","buildLabelElOption","elOption","labelPos","getValueLabel","paddings","align","verticalAlign","bgColor","shadowBlur","shadowColor","shadowOffsetX","shadowOffsetY","seriesDataIndices","seriesData","idxItem","dataParams","getTransformedPosition","layoutInfo","buildCartesianSingleLabelElOption","textLayout","makeLineShape","xDimIndex","makeRectShape","xy","wh","makeSectorShape","r0","clockwise","getSpanSign","handleEnds","handleIndex","sign","restrict","extentSpan","originalDistSign","extentMinSpan","realExtent","currDistSign","fixExtentWithBands","nTick","normalizedExtent","onBand","_labelInterval","containData","coordToData","pointToData","alignWithLabel","bands","getBands","coords","getLabelsCoords","getBandWidth","axisExtent","isHorizontal","origin","rangeStart","rangeEnd","setRange","resetRange","getAxisType","axisModelCreator","AxisModel","gridIndex","gridId","extraOption","transferProperties","TRANSFERABLE_PROPERTIES","__wrappedMethods","DefaultDataProvider","dataArray","_array","normalizeDimensions","cloneListForMapAndSample","original","excludeDimensions","allDimensions","_storage","originalStorage","dimStore","globalObj","Float64Array","Int32Array","dataCtors","float","int","ordinal","time","DataDiffer","pure","getItem","dimensionInfos","dimensionNames","dimensionName","dimensionInfo","_dimensionInfos","_nameList","_idList","_optionModels","_visual","_layout","_itemVisuals","_itemLayouts","_graphicEls","_rawData","listProto","isDataArray","nameDimIdx","dimensionInfoMap","idList","nameRepeatCount","itemName","DataCtor","stackedValue","dimData","dimExtent","getSum","rawIndex","indicesOfNearest","maxDistance","nearestIndices","minDist","minDiff","rawIdx","getId","dims","dimSize","filterSelf","newIndices","keep","mapArray","tmpRetValue","retValue","downSample","dimension","sampleValue","sampleIndex","targetStorage","originalIndices","frameValues","frameIndices","frameSize","otherList","otherIdList","setVisual","setLayout","getLayout","getItemLayout","setItemLayout","clearItemLayouts","itemVisual","setItemVisual","setItemDataAndSeriesIndex","setItemGraphicEl","eachItemGraphicEl","cloneShallow","dimensionInfoList","wrapMethod","injectFunction","originalMethod","res","TRANSFERABLE_METHODS","CHANGABLE_METHODS","sysDims","applyDim","resultItem","OTHER_DIMS","coordDimNameMap","genName","fromZero","dataDimNameMap","dimCount","value0","retrieveValue","sysDimItem","sysDimItemDimsDef","dimDefItem","userDimName","tooltipName","dataDims","resultDimIdx","availDimIdx","sysDimIndex","sysDimItemOtherDims","extra","extraPrefix","extraFromZero","isExtraCoord","guessOrdinal","classUtil","colorPaletteMixin","legendDataProvider","visualColorAccessPath","getInitialData","fillDataTextStyle","newSeriesOption","getLinkedData","getRawData","getBaseAxis","multipleSeries","formattedValue","setEachItem","dimIdx","valStr","vertially","tooltipDims","colorEl","animationEnabled","getColorFromPalette","getAxisTooltipData","colorIdx","colorNameMap","colorPalette","fixExtent","Chart","elSetState","state","toggleHighlight","dataIdx","chartProto","componentProto","percentTwenties","formatters","RFC1738","RFC3986","hexTable","arrayToObject","plainObjects","allowPrototypes","mergeTarget","decode","decodeURIComponent","string","compact","references","refs","lookup","compacted","isRegExp","isBuffer","guid","Animatable","clipPath","beforeUpdate","afterUpdate","hide","setClipPath","addSelfToZr","removeClipPath","removeSelfFromZr","animators","addAnimator","removeAnimator","defaultGetter","defaultSetter","interpolateNumber","interpolateString","interpolateArray","arrDim","len2","fillArr","arr0","arr1","arr0Len","arr1Len","arraySlice","isArraySame","catmullRomInterpolateArray","catmullRomInterpolate","v0","cloneValue","rgba2String","getArrayDim","keyframes","lastValue","createTrackClip","animator","easing","oneTrackDone","getter","_getter","setter","_setter","useSpline","trackLen","trackMaxTime","firstVal","isValueArray","isValueColor","isValueString","kfPercents","kfValues","prevValue","isAllValueEqual","colorArray","_target","lastFrame","lastFramePercent","onframe","frame","clip","Clip","life","_loop","_delay","ondestroy","Animator","_tracks","_clipCount","_doneList","_onframeList","_clipList","when","tracks","during","pause","_paused","resume","isPaused","_doneCallback","doneList","lastClip","clipCount","addClip","oldOnFrame","forwardToLast","clipList","removeClip","getClips","requestAnimationFrame","msRequestAnimationFrame","mozRequestAnimationFrame","webkitRequestAnimationFrame","PI2","normalizeRadian","LinkedList","head","tail","linkedListProto","insert","entry","Entry","insertEntry","maxSize","_list","_map","_maxSize","_lastRemovedEntry","LRUProto","removed","leastUsedEntry","idStart","ZImage","globalImageCache","src","_image","cachedImgObj","onload","pending","sWidth","sHeight","drawImage","repeat","createPattern","createLinearGradient","createRadialGradient","STYLE_COMMON_PROPS","textStroke","textPositionRect","textShadowBlur","textShadowOffsetX","textShadowOffsetY","textTransform","blend","prevStyle","firstDraw","styleName","globalAlpha","globalCompositeOperation","otherStyle","newStyle","canvasGradient","styleProto","smoothSpline","smoothBezier","smooth","controlPoints","smoothConstraint","cp1","cp2","mIdentity","transformableProto","parentHasTransform","invTransform","tmpTransform","atan2","transformCoordToGlobal","formats","__webpack_exports__","defineProperty","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_toConsumableArray__","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_toConsumableArray___default","__WEBPACK_IMPORTED_MODULE_1_echarts_lib_echarts__","__WEBPACK_IMPORTED_MODULE_1_echarts_lib_echarts___default","__WEBPACK_IMPORTED_MODULE_2_lodash_debounce__","__WEBPACK_IMPORTED_MODULE_2_lodash_debounce___default","__WEBPACK_IMPORTED_MODULE_3_vue__","__WEBPACK_IMPORTED_MODULE_3_vue___default","ACTION_EVENTS","MOUSE_EVENTS","initOptions","autoResize","Boolean","computed","cache","_delegateGet","computedOptions","watch","_init","deep","methods","mergeOptions","_delegateMethod","_chart","_key","_this","$el","$emit","__resizeHanlder","leading","mounted","beforeDestroy","registerMap","getDaysInOneMonth","year","month","getDate","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_promise__","_from","_from2","arr2","Promise","Constructor","forbiddenField","TypeError","BREAK","RETURN","iterable","that","un","macrotask","Observer","MutationObserver","WebKitMutationObserver","isNode","last","notify","enter","toggle","createTextNode","observe","characterData","resolve","promise","then","task","core","dP","DESCRIPTORS","SPECIES","KEY","configurable","aFunction","D","Internal","GenericPromiseCapability","Wrapper","LIBRARY","anInstance","forOf","speciesConstructor","microtask","$Promise","empty","USE_NATIVE","FakePromise","PromiseRejectionEvent","sameConstructor","isThenable","newPromiseCapability","PromiseCapability","reject","$$resolve","$$reject","perform","error","isReject","_n","chain","_c","_v","ok","_s","reaction","fail","onHandleUnhandled","onUnhandled","abrupt","isUnhandled","emit","onunhandledrejection","reason","_a","onrejectionhandled","$reject","_d","_w","$resolve","wrapper","executor","err","onFulfilled","onRejected","catch","W","capability","$index","alreadyCalled","race","sources","mappings","file","sourcesContent","sourceRoot","chartInstance","echartsAPIList","SymbolDraw","symbolCtor","_symbolCtor","symbolNeedsDraw","isIgnore","symbolDrawProto","oldData","_data","SymbolCtor","newIdx","symbolEl","oldIdx","execute","enableAnimation","labelDims","legendHoverLink","clipOverflow","smoothMonotone","symbol","showSymbol","showAllSymbol","connectNulls","sampling","hoverLayerThreshold","isPointsSame","points1","points2","getSmooth","getAxisExtentWithGap","getGlobalExtent","halfBandWidth","dir","getStackedOnPoints","baseAxis","valueAxis","getOtherAxis","valueStart","baseDataOffset","stackedOnSameSign","stackedData","createGridClipShape","cartesian","hasAnimation","xExtent","yExtent","createPolarClipShape","angleAxis","getAngleAxis","radiusAxis","getRadiusAxis","radiusExtent","angleExtent","RADIAN","createClipShape","turnPointsIntoStep","stepTurnAt","baseIndex","stepPoints","nextPt","pt","stepPt","middle","stepPt2","getVisualGradient","visualMetaList","visualMeta","stops","stopLen","outerColors","minCoord","maxCoord","coordSpan","unshift","gradient","lineAnimationDiff","polyHelper","lineGroup","symbolDraw","_symbolDraw","_lineGroup","areaStyleModel","isCoordSysPolar","prevCoordSys","_coordSys","polyline","_polyline","polygon","_polygon","isAreaChart","stackedOnPoints","isSymbolIgnore","_getSymbolIgnoreFunc","__temp","_step","_newPolygon","_stackedOnPoints","_points","_updateAnimation","_newPolyline","visualColor","lineJoin","stackedOnSmooth","categoryAxis","getAxesByScale","isLabelIgnored","stackedOnCurrent","stackedOnNext","__points","updatedDataInfo","diffStatus","idx1","ptIdx","getStackedOnPoint","diffData","diffResult","oldStackedOnPoints","newStackedOnPoints","oldCoordSys","newCoordSys","currPoints","nextPoints","currStackedPoints","nextStackedPoints","sortedIndices","rawIndices","diffItem","pointAdded","currentPt","sortedCurrPoints","sortedNextPoints","sortedCurrStackedPoints","sortedNextStackedPoints","sortedStatus","isPointNull","drawSegment","segLen","allLen","smoothMin","smoothMax","prevIdx","v2Copy","cp0","nextIdx","nextP","ratioNextSeg","prevP","lenPrevSeg","lenNextSeg","vec2Min","vec2Max","getBoundingBox","ptMin","ptMax","stackedOnBBox","cartesianAxisHelper","axisBuilderAttrs","selfBuilderAttrs","CartesianAxisView","oldAxisGroup","_axisGroup","axisBuilder","_splitLine","splitLineModel","lineColors","lineInterval","gridRect","lineCount","colorIndex","_splitArea","splitAreaModel","areaColors","prevX","prevY","areaInterval","areaStyle","axisTrigger","link","AxisPointerModel","triggerOn","shadowStyle","padding","borderColor","borderWidth","handle","icon","AxisPonterView","disopse","BaseAxisPointer","animationModel","moveAnimation","propsEqual","lastProp","lastProps","newProps","equals","updateLabelShowHide","labelEl","getHandleTransProps","trans","createIcon","handleModel","handlers","iconStr","updateMandatoryProps","eventTool","_group","_lastGraphicKey","_handle","_dragging","_lastValue","_lastStatus","_payloadInfo","animationThreshold","_axisModel","_axisPointerModel","makeElOption","graphicKey","_moveAnimation","determineAnimation","doUpdateProps","updatePointerEl","updateLabelEl","createPointerEl","createLabelEl","_renderHandle","isCategoryAxis","useSnap","pointerOption","pointer","pointerEl","updateHandleTransform","onmousemove","onmousedown","_onHandleDragMove","ondragend","_onHandleDragEnd","includeStyles","handleSize","_moveHandleToValue","getHandleTransform","_doDispatchAxisPointer","payloadInfo","cursorPoint","tooltipOption","doClear","buildLabel","getCartesian","getAxisDimIndex","viewHelper","CartesianAxisPointer","otherExtent","pixelValue","pointerShapeBuilder","currPosition","cursorOtherValue","tooltipOptions","targetShape","shadow","bandWidth","illegalPoint","findPointFromSeries","isIllegalPoint","inputAxesInfo","shouldHide","outputFinder","showValueMap","dataByCoordSys","updaters","showPointer","showTooltip","coordSysContainsPoint","inputAxisInfo","findInputAxisInfo","processOnAxis","linkTriggers","tarAxisInfo","tarKey","srcAxisInfo","srcKey","srcValItem","makeMapperParam","updateModelActually","dispatchTooltipActually","dispatchHighDownActually","newValue","dontSnap","buildPayloadsBySeries","payloadBatch","snapToValue","seriesNestestValue","nestestValue","modelHelper","coordSysItem","coordSysId","coordSysIndex","coordSysType","coordSysMainType","dataByAxis","valueLabelOpt","outputAxesInfo","valItem","lastHighlights","newHighlights","toHighlight","toDownplay","calculateDataExtent","seriesExtent","fixExtentByAxis","setAxisModel","isRestore","percentWindow","_percentWindow","valueWindow","_valueWindow","useOrigin","setMinMaxSpan","minMaxSpan","_minMaxSpan","_dataZoomModel","minMax","valueSpan","_dataExtent","_dimName","_axisIndex","getTargetSeriesModels","getOtherAxisModel","otherAxisDim","coordSysIndexName","isCartesian","foundOtherAxisModel","otherAxisModel","getMinMaxSpan","calculateDataWindow","percentExtent","boundValue","boundPercent","reset","dataWindow","restore","filterData","isInWindow","leftOut","rightOut","thisHasValue","thisLeftOut","thisRightOut","disabled","zoomLock","zoomOnMouseWheel","moveOnMouseMove","preventDefaultMouseMove","DataZoomView","sliderMove","roams","InsideZoomView","_range","shouldRecordRange","coordInfoList","allCoordIds","coordInfo","generateCoordId","dataZoomOption","coordId","containsPoint","dataZoomId","throttleRate","panGetRange","_onPan","zoomGetRange","_onZoom","roamControllerOpt","controller","oldX","oldY","newX","newY","directionInfo","getDirectionInfo","percentDelta","signal","pixel","pixelLength","mouseX","mouseY","percentPoint","pixelStart","oldPoint","newPoint","pointToCoord","SliderZoomModel","dataBackground","fillerColor","handleIcon","handleStyle","labelPrecision","showDetail","showDataShadow","getOtherDim","thisDim","HORIZONTAL","LABEL_GAP","SHOW_DATA_SHADOW_SERIES_TYPE","SliderZoomView","_displayables","_orient","_handleEnds","_size","_handleWidth","_handleHeight","_location","_dataShadowInfo","_buildView","_updateView","thisGroup","_resetLocation","_resetInterval","barGroup","_renderBackground","_renderDataShadow","_positionGroup","coordRect","_findCoordRect","ecSize","layoutParams","layoutRect","location","targetAxisModel","otherAxisInverse","_getViewExtent","onclick","_onClickPanelClick","info","_prepareDataShadowInfo","getShadowDim","otherDataExtent","otherOffset","lastIsEmpty","otherShadowExtent","thisShadowExtent","areaPoints","linePoints","thisCoord","stride","otherCoord","thisAxis","displaybles","handles","handleLabels","filler","_onDragMove","ondragstart","_showDataInfo","_onDragEnd","onmouseover","onmouseout","iconOpt","iconStyle","bRect","handleColor","viewExtent","_updateInterval","viewExtend","nonRealtime","handleInterval","handleHeight","_updateDataInfo","setLabel","barTransform","textPoint","orderedHandleEnds","labelTexts","dataInterval","_formatLabel","valueStr","showOrHide","_dispatchZoomAction","localPoint","center","linkedNodesFinder","effectedModels","resetSingleAxis","filterSingleAxis","percentRange","valueRange","giveStore","ATTR","createController","newRecord","RoamController","onPan","onZoom","cleanStore","wrapAndDispatch","getRange","dataZoomInfos","mergeControllerParams","controlType","typePriority","true","move","false","dataZoomInfo","oneType","theDataZoomId","theCoordId","controllerParams","enable","setPointerChecker","xAxis","yAxis","pointerChecker","_opt","mousedownHandler","mousedown","mousemoveHandler","mousemove","mouseupHandler","mouseup","mousewheelHandler","mousewheel","pinchHandler","pinch","disable","isDragging","isPinching","_pinching","_x","_y","checkKeyBinding","gestureEvent","interactionMutex","isTaken","zoomDelta","zoom","pinchScale","pinchX","pinchY","zoomX","zoomY","roamController","getStore","take","resourceKey","userKey","release","assembleTransition","transitionText","vendors","vendorPrefix","assembleFont","cssText","assembleCssText","tooltipModel","transitionDuration","zrColor","borderName","camelCase","TooltipContent","_container","_show","_hideTimeout","onmouseenter","_enterable","_inContent","eventUtil","dispatch","onmouseleave","hideLater","_hideDelay","stl","currentStyle","defaultView","getComputedStyle","domStyle","display","innerHTML","setContent","setEnterable","enterable","getSize","viewportRoot","getViewportRoot","offsetLeft","offsetTop","isShow","showContent","alwaysShowContent","displayMode","confine","showDelay","hideDelay","borderRadius","animationEasingUpdate","buildTooltipModel","modelCascade","resultModel","refixTooltipPosition","gapH","gapV","confineTooltipPosition","calcTooltipPosition","contentSize","domWidth","domHeight","rectWidth","rectHeight","isCenterAlign","layoutUtil","axisPointerViewHelper","proxyRect","tooltipContent","_tooltipContent","_tooltipModel","_ecModel","_lastDataByCoordSys","_alwaysShowContent","_initGlobalListener","_keepShow","_tryShow","_hide","_lastX","_lastY","_refreshUpdateTimeout","manuallyShowTip","_ticket","_manuallyAxisShowTip","pointInfo","findHover","manuallyHideTip","_showAxisTooltip","_showSeriesItemTooltip","_showComponentItemTooltip","_showOrMove","_showTimout","singleDefaultHTML","singleParamsList","singleTooltipModel","itemCoordSys","axisValue","seriesDefaultHTML","valueLabel","axisValueLabel","firstLine","positionExpr","_updateContentNotChangedOnAxis","_updatePosition","_showTooltipContent","tooltipTrigger","defaultHtml","asyncTicket","subTooltipModel","cbTicket","vAlign","viewSize","lastCoordSys","contentNotChanged","lastItemCoordSys","indexCoordSys","lastDataByAxis","thisItemCoordSys","thisDataByAxis","lastItem","indexAxis","lastIndices","lastIdxItem","newIdxItem","nameRotate","nameTruncate","nameTextStyle","nameGap","inside","splitLine","splitArea","timeAxis","logAxis","logBase","axisDefault","AXIS_TYPES","BaseAxisModelClass","axisTypeDefaulter","extraDefaultOption","Axis2D","coordExtent","toLocalCoord","dimAxisMapper","_axes","Cartesian","_dimList","addAxis","_dataCoordConvert","input","dimList","output","Cartesian2D","axisX","axisY","dataToPoints","isAxisUsedInTheGrid","getLabelUnionRect","labelCount","singleRect","Grid","_coordsMap","_coordsList","_axesMap","_axesList","_initCartesian","updateAxisTransfrom","coordBase","axisExtentSum","findAxesModels","axesTypes","isCartesian2D","gridProto","ifAxisCanNotOnZero","axes","axesMap","_updateScale","ignoreContainLabel","adjustAxes","axesList","getBoxLayoutParams","labelUnionRect","axesMapOnDim","coordList","getCartesians","_findConvertTarget","coordsList","createAxisCreator","axisPositionUsed","axesCount","otherAxis","grids","containLabel","defaultKeyGetter","oldArr","newArr","oldKeyGetter","newKeyGetter","_old","_new","_oldKeyGetter","_newKeyGetter","initIndexMap","keyArr","keyGetter","existence","_add","_update","_remove","oldDataIndexMap","newDataIndexMap","oldDataKeyArr","newDataKeyArr","axisModelCommonMixin","createList","createScale","mixinAxisModelCommonMethods","eachSeriesByType","coordDims","maskColor","mask","labelRect","mergeTheme","themeItem","initBase","baseOption","OPTION_INNER_KEY","_seriesIndices","globalDefault","getComponentsByTypes","componentsMap","existComponent","createSeriesIndices","filterBySubType","components","cpt","assertSeriesInitialized","_optionManager","mountOption","timelineOption","getTimelineOption","mediaOptions","getMediaOption","mediaOption","visitComponent","newCptOptionList","ComponentModelClass","newCptTypes","componentOption","cpts","isIdArray","isNameArray","findComponents","queryCond","q","indexAttr","idAttr","nameAttr","queryResult","getSeriesByName","oneSeries","getSeriesByType","getSeries","rawSeriesIndex","eachRawSeries","eachRawSeriesByType","isSeriesFiltered","getCurrentSeriesIndices","filterSeries","filteredSeries","componentTypes","_timelineOptions","_mediaList","_mediaDefault","_currentMediaIndices","_optionBackup","_newBaseOption","parseRawOption","isNew","mediaDefault","timelineOptions","mediaList","timelineOpt","timeline","media","singleMedia","preProcess","applyMediaQuery","ecWidth","ecHeight","realMap","aspectratio","applicatable","matched","QUERY_REG","operator","realAttr","real","expect","indicesEquals","indices1","indices2","oldOption","newCptOpt","oldCptOpt","oldOptionBackup","newParsedOption","isRecreate","optionBackup","timelineModel","getCurrentIndex","platform","animationDuration","progressiveThreshold","useUTC","getBorderLineDash","lineType","getLineDash","dotSize","dashSize","graphicUtil","compatLayoutProperties","LAYOUT_PROPERTIES","compatStyle","COMPATITABLE_COMPONENTS","COMPATITABLE_SERIES","seriesOpt","clockWise","pointerColor","dataRange","visualMap","componentName","compatItemStyle","itemStyleOpt","POSSIBLE_STYLES","normalItemStyleOpt","emphasisItemStyleOpt","markPoint","markLine","mpData","mlData","samplers","average","nearest","indexSampler","sampler","fixRoundingError","originalVal","roundingErrorFix","intervalScaleProto","mathFloor","mathCeil","mathLog","LogScale","_originalScale","originalScale","powVal","__fixMin","__fixMax","approxTickNum","rank","scaleHelper","bisect","TimeScale","stepLvl","_stepLvl","ONE_HOUR","getFullYear","getMonth","approxInterval","scaleLevelsLen","scaleLevels","yearSpan","ONE_SECOND","ONE_MINUTE","ONE_DAY","encodeColor","colorAccessPath","defaultSymbolType","legendSymbol","itemSymbolType","itemSymbolSize","locals","wait","invokeFunc","lastArgs","thisArg","lastThis","lastInvokeTime","leadingEdge","timerId","timerExpired","remainingWait","timeSinceLastCall","lastCallTime","timeSinceLastInvoke","maxing","nativeMin","maxWait","shouldInvoke","now","trailingEdge","trailing","cancel","debounced","isInvoking","FUNC_ERROR_TEXT","toNumber","nativeMax","isObjectLike","isSymbol","objectToString","symbolTag","NAN","valueOf","reTrim","isBinary","reIsBinary","reIsOctal","freeParseInt","reIsBadHex","freeGlobal","freeSelf","root","objectProto","utils","allowDots","arrayLimit","decoder","delimiter","depth","parameterLimit","strictNullHandling","parseValues","parts","part","parseObject","cleanRoot","parseArrays","parseKeys","givenKey","brackets","segment","tempObj","newObj","arrayPrefixGenerators","prefix","toISO","toISOString","encoder","encodeValuesOnly","serializeDate","skipNulls","generateArrayPrefix","objKeys","arrayFormat","_vm","$createElement","_self","staticClass","staticRenderFns","makeEventPacket","eveType","targetInfo","topTarget","EmptyProxy","isHover","displayable","SILENT","Draggable","handlerNames","Handler","proxy","painterRoot","_hovered","_lastTouchMoment","lastHovered","hovered","hoveredTarget","lastHoveredTarget","setCursor","dispatchToElement","mouseout","innerDom","element","toElement","relatedTarget","parentNode","eventArgs","setCursorStyle","eventHandler","eventPacket","eachOtherLayer","layer","exclude","hoverCheckResult","_downel","_upel","returnFalse","createDom","newDom","newDomStyle","Layer","onselectstart","domBack","ctxBack","motionBlur","lastFrameAlpha","initContext","createBackBuffer","clearAll","haveMotionBLur","clearRect","clearColorGradientOrPattern","__canvasGradient","fillRect","parseInt10","isLayerValid","__builtin__","preProcessLayer","__unusedCount","postProcessLayer","isDisplayableCulled","viewRect","isClipPathChanged","clipPaths","prevClipPaths","doClip","createRoot","domRoot","Painter","singleCanvas","_opts","_singleCanvas","rootStyle","zlevelList","_zlevelList","layers","_layers","_layerConfig","_width","_height","mainLayer","_domRoot","_getSize","_progressiveLayers","_hoverlayer","_hoverElements","paintAll","_paintList","refreshHover","_startProgessive","__hoverMir","elMirror","__from","hoverElements","clearHover","hoverLayer","displayableSortFunc","getLayer","originalEl","_doPaintEl","token","_progressiveToken","_doPaintList","_furtherProgressive","_progress","_clearProgressive","_updateLayerStatus","eachBuiltinLayer","flushProgressiveLayer","currentLayer","currentZLevel","currentProgressiveLayer","layerProgress","progressiveLayerIdx","elZLevel","elFrame","__frame","MAX_PROGRESSIVE_LAYER_NUMBER","renderScope","__progress","__maxProgress","__nextIdxNotProg","forcePaint","prevClipLayer","prevElClipPaths","insertLayer","layersMap","prevLayer","virtual","prevDom","insertBefore","firstChild","eachLayer","getLayers","progressiveLayers","elCountsLastFrame","progressiveElCountsLastFrame","lastProgressiveKey","progressiveLayerCount","frameCount","elProgress","_clearLayer","layerConfig","delLayer","clearLayer","findAndDrawOtherLayer","smaller","larger","intermediateLayer","renderToCanvas","imageLayer","displayList","whIdx","cwh","plt","prb","pathToImage","shadowBlurSize","leftMargin","rightMargin","topMargin","bottomMargin","pathTransform","ImageShape","imgShape","shapeCompareFunc","Storage","_roots","_displayList","_displayListLen","includeIgnore","updateDisplayList","_updateAndAddDisplayable","userSetClipPath","currentClipPath","parentClipPath","addRoot","delRoot","_renderList","Animation","stage","_clips","_running","_time","_pausedTime","_pauseStart","clips","deferredEvents","deferredClips","_needsRemove","fire","_startLoop","_life","_initialized","onrestart","easingFuncs","globalTime","deltaTime","_startTime","easingFunc","schedule","restart","arg","linear","quadraticIn","quadraticOut","quadraticInOut","cubicIn","cubicOut","cubicInOut","quarticIn","quarticOut","quarticInOut","quinticIn","quinticOut","quinticInOut","sinusoidalIn","sinusoidalOut","sinusoidalInOut","exponentialIn","exponentialOut","exponentialInOut","circularIn","circularOut","circularInOut","elasticIn","elasticOut","elasticInOut","backIn","backOut","backInOut","bounceIn","bounceOut","bounceInOut","_l","_b","isAroundEqual","swapExtrema","windingCubic","nRoots","y0_","y1_","nExtrema","unit","windingQuadratic","y_","x_","windingArc","containPath","isStroke","windingLine","cubic","quadratic","pointPair","GestureMgr","_track","recognize","_doTrack","_recognize","touches","trackItem","recognizers","gestureInfo","track","pinchEnd","pinchPre","pinchCenter","extremity","fromPoints","xDim","yDim","tx","ty","eventNameFix","processGesture","gestureMgr","_gestureMgr","setTouchTimer","instance","_touching","_touchTimer","isPointerFromTouch","pointerType","initDomHandler","makeMouseHandler","touchHandlerNames","_handlers","domHandlers","pointerHandlerNames","mouseHandlerNames","HandlerDomProxy","mountHandlers","pointerEventNames","pointerdown","pointerup","pointermove","pointerout","nm","touchstart","touchmove","touchend","click","handlerDomProxyProto","paths","_updatePathDirty","globalCoord","strokeText","fillText","r1","r2","r3","r4","total","v2Min","v2Max","v2Scale","v2Distance","v2Add","isLoop","constraint","prevPoint","nextPoint","cps","d0","interpolate","segs","w2","w3","maxValue","lastIndexOf","baseline","textShadowColor","unitX","unitY","someVectorAt","isTangent","cpx2","cpy2","cpx1","cpy1","curveTool","pointAt","tangentAt","roundRectHelper","shadowTemp","modified","animatingShape","pathSplitted","_animateToShallow","objShallow","propertyCount","_dragStart","_drag","_dragEnd","draggingTarget","_draggingTarget","dropTarget","lastDropTarget","_dropTarget","processArc","fa","psiDeg","xp","yp","lambda","cxp","cyp","vAngle","u","vRatio","createPathProxyFromString","cs","cc","RegExp","prevCmd","cpx","cpy","ctlPtx","ctlPty","createPathOptions","pathProxy","transformPath","vMag","pathEls","pathList","pathEl","pathBundle","nPoint","mathAtan2","delInstance","HandlerProxy","useVML","painterCtors","ZRender","getInstance","registerPainter","rendererType","vml","handerProxy","_needsRefresh","oldDelFromStorage","oldAddToStorage","zLevel","_needsRefreshHover","refreshHoverImmediately","clearAnimation","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_assign__","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_assign___default","__WEBPACK_IMPORTED_MODULE_1__plugins_tool__","__WEBPACK_IMPORTED_MODULE_2_qs__","timeData","visibleList","styles","searchInfo","beginTime","endTime","pageType","mediaName","pageName","adType","投放地区","投放车型","投放品牌","投放关键字","skuPrice","pSize","dutyUserName","adOrderCode","adCustomerName","singleClick","singleDisplay","tableList","days","initDate","$set","arry","dataYear","dataMoth","totalDays","$nextTick","times","day","timeName","over","_this2","dateIndexs","dateIndex","$http","post","curDate","adPlaceId","errorCode","sessionStorage","sk","adStateList","dayStatus","skuDatas","JSON","adStateLists","$Modal","title","errorMsg","onOk","href","_skuDatas","_attr","nextElementSibling","__WEBPACK_IMPORTED_MODULE_0_vue__","__WEBPACK_IMPORTED_MODULE_0_vue___default","__WEBPACK_IMPORTED_MODULE_1_vue_echarts_components_ECharts_vue__","__WEBPACK_IMPORTED_MODULE_1_vue_echarts_components_ECharts_vue___default","__WEBPACK_IMPORTED_MODULE_2_echarts_lib_chart_line__","__WEBPACK_IMPORTED_MODULE_3_echarts_lib_component_tooltip__","__WEBPACK_IMPORTED_MODULE_4_echarts_lib_component_dataZoom__","ploar","mouseover","class","hasSel","data-index","directives","rawName","expression","dialog-right","slot","statusName","staticStyle","text-indent","ref","__WEBPACK_IMPORTED_MODULE_2_component_DailogRow__","__WEBPACK_IMPORTED_MODULE_2_component_DailogRow___default","__WEBPACK_IMPORTED_MODULE_3_component_LineChart__","__WEBPACK_IMPORTED_MODULE_3_component_LineChart___default","DailogRow","LineChart","adName","pageData","first","second","columns","exposureList","displayAmount","clickAmountDay","displayAmountMount","displayClickMonth","clickAmountMount","localStorage","setItem","$router","currentRoute","viewTime","search","currentYear","currenMonth","datas","initResult","rspMsg","amountMonth","amoutClick","amountDisplay","rateTime","clickAmount","legend","dataZoom","getElementById","monthList","adList","monthData","dayStates","skuIdList","skuStatus","skuId","kprice","_j","border","cellspacing","tag","text-align","_e"],"mappings":"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C,QAAAuU,G7M+usCM,SAAUxU,EAAQ6kF,EAAqB3kF,GAE7C,YACA+G,QAAO69E,eAAeD,EAAqB,cAAgBniF,OAAO,GAC7C,IAAI8iI,GAAoEtlI,EAAoB,KACxFulI,EAA4EvlI,EAAoBktC,EAAEo4F,GAClGE,EAA8CxlI,EAAoB,KAClEylI,EAAmCzlI,EAAoB,IACZA,GAAoBktC,EAAEu4F,E8M/ntC1F9gD,GAAA,S9MsotCI16E,OACIm+F,MACI7sE,QAAS,WACL,WAGRmqG,UACInqG,QAAS,WACL,WAGR61C,MACI71C,QAAS,WACL,M8MpotChB,M9MwotCIp4B,KAAM,WACF,OACIwiI,eACAv0D,K8MpotCZ,G9MqotCYw0D,QACIvkH,I8MnotChB,Q9MqotCYgkC,M8MpotCZ,K9MqotCYwgF,YACIC,U8MlotChB,G9MootCgBC,Q8MlotChB,G9MootCgBC,S8MlotChB,G9MootCgBC,U8MlotChB,G9MootCgBC,S8MlotChB,G9MootCgBC,O8MlotChB,G9MootCgBC,O8MlotChB,G9MootCgBC,O8MlotChB,G9MootCgBC,O8MlotChB,G9MootCgBC,Q8MlotChB,I9MootCYxY,OACIyY,S8MnotChB,G9MootCgBC,M8MnotChB,G9MootCgBC,a8MnotChB,G9MootCgBC,Y8MnotChB,G9MootCgBttD,M8MnotChB,G9MootCgButD,e8MnotChB,G9MootCgBC,Y8MnotChB,G9MootCgBC,c8MlotChB,I9MootCYC,WACIC,WAKZlhD,OACI4/C,UACIryH,QAAS,WACL3O,KAAKuiI,SAASviI,K8MnotC9B0sE,M9MootCgBtrB,WAAW,iBAIvB6gC,QAAS,WACL,IAAK,GAAInmF,GAAI,EAAGA,EAAI,GAAIA,IACpBkE,KAAKwiI,KAAKxiI,KAAKihI,YAAanlI,G8MjotCxC,E9MmotCYkE,MAAK0sE,MACL1sE,KAAKuiI,SAASviI,K8MjotC1B0sE,O9MqotCI6U,SACIghD,SAAU,SAAkB71D,G8MhotCpC,GAAAkV,GAAA5hF,K9MmotCgByiI,EAAOziI,KAAK0sE,KAAKl5D,M8MlotCjC,K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tN6huCWr8C,MAAM,SAAUH,GACf51E,QAAQsJ,IsN3huCpBssE,KtN8huCQvmC,WAAW,WACP,GAAI6c,IACAimE,OACI5xG,KsNzhuCpB,ItN4huCgB+wC,SACIzuD,QsN3huCpB,OtN4huCoBuvD,aACIhkE,KsN3huCxB,QtN4huCwBgR,WsN3huCxB,EtN4huCwB+sC,OACIpiC,gBsNxhuC5B,atN4huCgBisH,QACItpI,MAAO,MsN3huC3B,OtN4huCoBwK,EsN1huCpB,QtN4huCgB++H,WACI7pF,MsN1huCpB,EtN2huCoBgM,UsN1huCpB,EtN2huCoBnK,MsN1huCpB,GtN2huCoBC,IsNzhuCpB,KtN2huCoB9/C,KsNzhuCpB,StN0huCoBgqD,UsNzhuCpB,EtN0huCoBnK,MsNzhuCpB,GtN0huCoBC,IsNvhuCpB,KtNyhuCgBsoD,OACI9pG,KsNvhuCpBipI,GtNyhuCgBl/B,QACI7kG,KsNvhuCpB,StNwhuCoBxD,KsNvhuCpB,QtNwhuCoB2G,IsNthuCpB,MtNwhuCoBnD,KsNthuCpB,MtNuhuCoBxD,KsNthuCpB,QtNuhuCoB2G,IsNphuCpB,MtNshuCgBqQ,SACIxT,KsNphuCpB,MtNqhuCoBxD,KsNphuCpB,OtNqhuCoBgR,WsNphuCpB,EtNqhuCoBktC,WACIr5B,QACIjiB,MsNlhuC5B,StNqhuCoBq2D,WsNphuCpB,GtNqhuCoB36D,KsNnhuCpBmpI,ItNqhuCoBjkI,KsNnhuCpB,MtNohuCoB0lD,WsNnhuCpB,EtNohuCoBlpD,KsNnhuCpB,OtNohuCoBgR,WsNnhuCpB,EtNohuCoBktC,WACIr5B,QACIjiB,MsNjhuC5B,StNohuCoBq2D,WsNnhuCpB,GtNohuCoB36D,KsNhhuCpBkpI,ItNmhuC0BrnD,GAA0DnxE,EAAEU,KAAKtS,SAAS0qI,esNlhuCpG,ctNmhuCoBntH,UsNlhuCpBmjD,IACA,MtNqhuCIsjB,SACIimD,WAAY,SAAoB/oI,GAC5B,GAAImlI,MACAt4G,KACA48G,KACAC,EAAS1pI,EsNlhuCzBmlI,YtNohuCgBjlI,EAAMkiI,OsNnhuCtBsH,EtNohuCY,KAAK,GAAIhiI,KAAQxH,GsNnhuC7B,CtNohuCgBupI,EAAUhpI,KsNnhuC1BiH,EtNohuCgB,IAAIqmC,GAAK7tC,EsNnhuCzBwH,GtNohuCoBiiI,KACAC,KACAC,KACAxN,EsNnhuCpB,CtNohuCgBsN,GAAU17D,KsNnhuC1BvmE,EtNohuCgBiiI,EAAUvE,UAAYllI,EsNjhuCtCwH,EtNmhuCgB,KAAK,GAAIqiB,GAAI,EAAGA,EAAIgkB,EAAGxwC,OAAQwsB,IAC3B6/G,EAAU77F,EAAGhkB,GAAGu6G,IAAM,GAAKv2F,EAAGhkB,GsNjhuClD+/G,UtNkhuCoBD,EAAU97F,EAAGhkB,GAAGu6G,IAAM,GAAKv2F,EAAGhkB,GsNjhuClDggH,MtNkhuCoB1N,GAAS7vG,WAAWuhB,EAAGhkB,GsNjhuC3Cs5G,StNohuCgB,KAAK,GAAI9rG,GAAI,EAAGA,EAAI,GAAIA,IACA,qBAAhBqyG,EAAUryG,IAA6C,oBAAhBqyG,EAAUryG,IAA4C,sBAAhBqyG,EAAUryG,KACvFqyG,EAAUryG,GsNjhuClC,KtNmhuCwC,mBAAhBqyG,EAAUryG,IAA2C,qBAAhBqyG,EAAUryG,IAA6C,mBAAhBqyG,EAAUryG,KACtFqyG,EAAUryG,GsNjhuClC,KtNmhuCyBqyG,EAAUryG,KACXqyG,EAAUryG,GsNjhuClC,ItNohuCgBoyG,GAAUK,QAAU3N,EAAQtuF,EAAGxwC,QAAQovB,QsNjhuCvD,GtNkhuCgBg9G,EAAUzzD,MAAQ0zD,EAAUj8H,KsNjhuC5C,KtNkhuCgBg8H,EAAUE,UsNjhuC1BA,EtNkhuCgBh9G,EAAIpsB,KsNjhuCpBkpI,GtNohuCYF,EsNhhuCZ38G,MtNihuCY,KAAK,GAAIzvB,GAAI,EAAGA,EAAIosI,EAAUlsI,OAAQF,IAClC,IAAK,GAAI4sI,GAAK,EAAGA,EAAKp9G,EAAItvB,OAAQ0sI,IAC1Bp9G,EAAIo9G,GAAIh8D,MAAQw7D,EAAUpsI,IAC1B8nI,EAAY1kI,KAAKosB,EsNhhuCzCo9G,GtNohuCY,OsNhhuCZ9E,OtNshuCS,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CAEH,SAAUxoI,EAAQC,EAASC,GuNt5uCjCD,EAAAD,EAAAC,QAAAC,EAAA,SAKAD,EAAA6D,MAAA9D,EAAAU,EAAA,6xBAAozB,IAAQ4kB,QAAA,EAAA0nE,SAAA,4EAAAlmD,SAAAmmD,SAAA,yeAAAC,KAAA,aAAAC,gBAAA,ulCAA0tDC,WAAA,OvN85uC7gF,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CAEH,SAAUptF,EAAQC,EAASC,GwNh9uCjC,GAAAgoE,GAAAhoE,EAAA,IACA,iBAAAgoE,SAAAloE,EAAAU,EAAAwnE,EAAA,MACAA,EAAAg/C,SAAAlnH,EAAAC,QAAAioE,EAAAg/C,OAEAhnH,GAAA,gBAAAgoE,GAAA,IxNw9uCS,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CAEH,SAAUloE,EAAQC,GyNvhvCxBD,EAAAC,SAAgB2c,OAAA,WAAmB,GAAAgvG,GAAAhnH,KAAaitC,EAAA+5E,EAAAC,eAA0B3gC,EAAA0gC,EAAAE,MAAA5gC,IAAAr5C,CAC1E,OAAAq5C,GAAA,OACA6gC,YAAA,WACG7gC,EAAA,OACH6gC,YAAA,SACG7gC,EAAA,KACH6gC,YAAA,UACGH,EAAAzgC,GAAA,UAA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","file":"static/js/1.990537f872d621f6ad76.js","sourcesContent":["webpackJsonp([1],Array(451).concat([\n/* 451 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n/* styles */\n__webpack_require__(824)\n\nvar Component = __webpack_require__(176)(\n  /* script */\n  __webpack_require__(748),\n  /* template */\n  __webpack_require__(880),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n/* 452 */,\n/* 453 */\n/***/ (function(module, exports) {\n\n/**\n * @module zrender/core/util\n */\n\n\n    // 用于处理merge时无法遍历Date等对象的问题\n    var BUILTIN_OBJECT = {\n        '[object Function]': 1,\n        '[object RegExp]': 1,\n        '[object Date]': 1,\n        '[object Error]': 1,\n        '[object CanvasGradient]': 1,\n        '[object CanvasPattern]': 1,\n        // For node-canvas\n        '[object Image]': 1,\n        '[object Canvas]': 1\n    };\n\n    var TYPED_ARRAY = {\n        '[object Int8Array]': 1,\n        '[object Uint8Array]': 1,\n        '[object Uint8ClampedArray]': 1,\n        '[object Int16Array]': 1,\n        '[object Uint16Array]': 1,\n        '[object Int32Array]': 1,\n        '[object Uint32Array]': 1,\n        '[object Float32Array]': 1,\n        '[object Float64Array]': 1\n    };\n\n    var objToString = Object.prototype.toString;\n\n    var arrayProto = Array.prototype;\n    var nativeForEach = arrayProto.forEach;\n    var nativeFilter = arrayProto.filter;\n    var nativeSlice = arrayProto.slice;\n    var nativeMap = arrayProto.map;\n    var nativeReduce = arrayProto.reduce;\n\n    /**\n     * Those data types can be cloned:\n     *     Plain object, Array, TypedArray, number, string, null, undefined.\n     * Those data types will be assgined using the orginal data:\n     *     BUILTIN_OBJECT\n     * Instance of user defined class will be cloned to a plain object, without\n     * properties in prototype.\n     * Other data types is not supported (not sure what will happen).\n     *\n     * Caution: do not support clone Date, for performance consideration.\n     * (There might be a large number of date in `series.data`).\n     * So date should not be modified in and out of echarts.\n     *\n     * @param {*} source\n     * @return {*} new\n     */\n    function clone(source) {\n        if (source == null || typeof source != 'object') {\n            return source;\n        }\n\n        var result = source;\n        var typeStr = objToString.call(source);\n\n        if (typeStr === '[object Array]') {\n            result = [];\n            for (var i = 0, len = source.length; i < len; i++) {\n                result[i] = clone(source[i]);\n            }\n        }\n        else if (TYPED_ARRAY[typeStr]) {\n            result = source.constructor.from(source);\n        }\n        else if (!BUILTIN_OBJECT[typeStr] && !isPrimitive(source) && !isDom(source)) {\n            result = {};\n            for (var key in source) {\n                if (source.hasOwnProperty(key)) {\n                    result[key] = clone(source[key]);\n                }\n            }\n        }\n\n        return result;\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} target\n     * @param {*} source\n     * @param {boolean} [overwrite=false]\n     */\n    function merge(target, source, overwrite) {\n        // We should escapse that source is string\n        // and enter for ... in ...\n        if (!isObject(source) || !isObject(target)) {\n            return overwrite ? clone(source) : target;\n        }\n\n        for (var key in source) {\n            if (source.hasOwnProperty(key)) {\n                var targetProp = target[key];\n                var sourceProp = source[key];\n\n                if (isObject(sourceProp)\n                    && isObject(targetProp)\n                    && !isArray(sourceProp)\n                    && !isArray(targetProp)\n                    && !isDom(sourceProp)\n                    && !isDom(targetProp)\n                    && !isBuiltInObject(sourceProp)\n                    && !isBuiltInObject(targetProp)\n                    && !isPrimitive(sourceProp)\n                    && !isPrimitive(targetProp)\n                ) {\n                    // 如果需要递归覆盖，就递归调用merge\n                    merge(targetProp, sourceProp, overwrite);\n                }\n                else if (overwrite || !(key in target)) {\n                    // 否则只处理overwrite为true，或者在目标对象中没有此属性的情况\n                    // NOTE，在 target[key] 不存在的时候也是直接覆盖\n                    target[key] = clone(source[key], true);\n                }\n            }\n        }\n\n        return target;\n    }\n\n    /**\n     * @param {Array} targetAndSources The first item is target, and the rests are source.\n     * @param {boolean} [overwrite=false]\n     * @return {*} target\n     */\n    function mergeAll(targetAndSources, overwrite) {\n        var result = targetAndSources[0];\n        for (var i = 1, len = targetAndSources.length; i < len; i++) {\n            result = merge(result, targetAndSources[i], overwrite);\n        }\n        return result;\n    }\n\n    /**\n     * @param {*} target\n     * @param {*} source\n     * @memberOf module:zrender/core/util\n     */\n    function extend(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n        return target;\n    }\n\n    /**\n     * @param {*} target\n     * @param {*} source\n     * @param {boolen} [overlay=false]\n     * @memberOf module:zrender/core/util\n     */\n    function defaults(target, source, overlay) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key)\n                && (overlay ? source[key] != null : target[key] == null)\n            ) {\n                target[key] = source[key];\n            }\n        }\n        return target;\n    }\n\n    function createCanvas() {\n        return document.createElement('canvas');\n    }\n    // FIXME\n    var _ctx;\n    function getContext() {\n        if (!_ctx) {\n            // Use util.createCanvas instead of createCanvas\n            // because createCanvas may be overwritten in different environment\n            _ctx = util.createCanvas().getContext('2d');\n        }\n        return _ctx;\n    }\n\n    /**\n     * 查询数组中元素的index\n     * @memberOf module:zrender/core/util\n     */\n    function indexOf(array, value) {\n        if (array) {\n            if (array.indexOf) {\n                return array.indexOf(value);\n            }\n            for (var i = 0, len = array.length; i < len; i++) {\n                if (array[i] === value) {\n                    return i;\n                }\n            }\n        }\n        return -1;\n    }\n\n    /**\n     * 构造类继承关系\n     *\n     * @memberOf module:zrender/core/util\n     * @param {Function} clazz 源类\n     * @param {Function} baseClazz 基类\n     */\n    function inherits(clazz, baseClazz) {\n        var clazzPrototype = clazz.prototype;\n        function F() {}\n        F.prototype = baseClazz.prototype;\n        clazz.prototype = new F();\n\n        for (var prop in clazzPrototype) {\n            clazz.prototype[prop] = clazzPrototype[prop];\n        }\n        clazz.prototype.constructor = clazz;\n        clazz.superClass = baseClazz;\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Object|Function} target\n     * @param {Object|Function} sorce\n     * @param {boolean} overlay\n     */\n    function mixin(target, source, overlay) {\n        target = 'prototype' in target ? target.prototype : target;\n        source = 'prototype' in source ? source.prototype : source;\n\n        defaults(target, source, overlay);\n    }\n\n    /**\n     * Consider typed array.\n     * @param {Array|TypedArray} data\n     */\n    function isArrayLike(data) {\n        if (! data) {\n            return;\n        }\n        if (typeof data == 'string') {\n            return false;\n        }\n        return typeof data.length == 'number';\n    }\n\n    /**\n     * 数组或对象遍历\n     * @memberOf module:zrender/core/util\n     * @param {Object|Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     */\n    function each(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.forEach && obj.forEach === nativeForEach) {\n            obj.forEach(cb, context);\n        }\n        else if (obj.length === +obj.length) {\n            for (var i = 0, len = obj.length; i < len; i++) {\n                cb.call(context, obj[i], i, obj);\n            }\n        }\n        else {\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    cb.call(context, obj[key], key, obj);\n                }\n            }\n        }\n    }\n\n    /**\n     * 数组映射\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function map(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.map && obj.map === nativeMap) {\n            return obj.map(cb, context);\n        }\n        else {\n            var result = [];\n            for (var i = 0, len = obj.length; i < len; i++) {\n                result.push(cb.call(context, obj[i], i, obj));\n            }\n            return result;\n        }\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {Object} [memo]\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function reduce(obj, cb, memo, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.reduce && obj.reduce === nativeReduce) {\n            return obj.reduce(cb, memo, context);\n        }\n        else {\n            for (var i = 0, len = obj.length; i < len; i++) {\n                memo = cb.call(context, memo, obj[i], i, obj);\n            }\n            return memo;\n        }\n    }\n\n    /**\n     * 数组过滤\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function filter(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.filter && obj.filter === nativeFilter) {\n            return obj.filter(cb, context);\n        }\n        else {\n            var result = [];\n            for (var i = 0, len = obj.length; i < len; i++) {\n                if (cb.call(context, obj[i], i, obj)) {\n                    result.push(obj[i]);\n                }\n            }\n            return result;\n        }\n    }\n\n    /**\n     * 数组项查找\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function find(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        for (var i = 0, len = obj.length; i < len; i++) {\n            if (cb.call(context, obj[i], i, obj)) {\n                return obj[i];\n            }\n        }\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Function} func\n     * @param {*} context\n     * @return {Function}\n     */\n    function bind(func, context) {\n        var args = nativeSlice.call(arguments, 2);\n        return function () {\n            return func.apply(context, args.concat(nativeSlice.call(arguments)));\n        };\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Function} func\n     * @return {Function}\n     */\n    function curry(func) {\n        var args = nativeSlice.call(arguments, 1);\n        return function () {\n            return func.apply(this, args.concat(nativeSlice.call(arguments)));\n        };\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isArray(value) {\n        return objToString.call(value) === '[object Array]';\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isFunction(value) {\n        return typeof value === 'function';\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isString(value) {\n        return objToString.call(value) === '[object String]';\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isObject(value) {\n        // Avoid a V8 JIT bug in Chrome 19-20.\n        // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n        var type = typeof value;\n        return type === 'function' || (!!value && type == 'object');\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isBuiltInObject(value) {\n        return !!BUILTIN_OBJECT[objToString.call(value)];\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isDom(value) {\n        return typeof value === 'object'\n            && typeof value.nodeType === 'number'\n            && typeof value.ownerDocument === 'object';\n    }\n\n    /**\n     * Whether is exactly NaN. Notice isNaN('a') returns true.\n     * @param {*} value\n     * @return {boolean}\n     */\n    function eqNaN(value) {\n        return value !== value;\n    }\n\n    /**\n     * If value1 is not null, then return value1, otherwise judget rest of values.\n     * @memberOf module:zrender/core/util\n     * @return {*} Final value\n     */\n    function retrieve(values) {\n        for (var i = 0, len = arguments.length; i < len; i++) {\n            if (arguments[i] != null) {\n                return arguments[i];\n            }\n        }\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Array} arr\n     * @param {number} startIndex\n     * @param {number} endIndex\n     * @return {Array}\n     */\n    function slice() {\n        return Function.call.apply(nativeSlice, arguments);\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {boolean} condition\n     * @param {string} message\n     */\n    function assert(condition, message) {\n        if (!condition) {\n            throw new Error(message);\n        }\n    }\n\n    var primitiveKey = '__ec_primitive__';\n    /**\n     * Set an object as primitive to be ignored traversing children in clone or merge\n     */\n    function setAsPrimitive(obj) {\n        obj[primitiveKey] = true;\n    }\n\n    function isPrimitive(obj) {\n        return obj[primitiveKey];\n    }\n\n    /**\n     * @constructor\n     * @param {Object} obj Only apply `ownProperty`.\n     */\n    function HashMap(obj) {\n        obj && each(obj, function (value, key) {\n            this.set(key, value);\n        }, this);\n    }\n\n    // Add prefix to avoid conflict with Object.prototype.\n    var HASH_MAP_PREFIX = '_ec_';\n    var HASH_MAP_PREFIX_LENGTH = 4;\n\n    HashMap.prototype = {\n        constructor: HashMap,\n        // Do not provide `has` method to avoid defining what is `has`.\n        // (We usually treat `null` and `undefined` as the same, different\n        // from ES6 Map).\n        get: function (key) {\n            return this[HASH_MAP_PREFIX + key];\n        },\n        set: function (key, value) {\n            this[HASH_MAP_PREFIX + key] = value;\n            // Comparing with invocation chaining, `return value` is more commonly\n            // used in this case: `var someVal = map.set('a', genVal());`\n            return value;\n        },\n        // Although util.each can be performed on this hashMap directly, user\n        // should not use the exposed keys, who are prefixed.\n        each: function (cb, context) {\n            context !== void 0 && (cb = bind(cb, context));\n            for (var prefixedKey in this) {\n                this.hasOwnProperty(prefixedKey)\n                    && cb(this[prefixedKey], prefixedKey.slice(HASH_MAP_PREFIX_LENGTH));\n            }\n        },\n        // Do not use this method if performance sensitive.\n        removeKey: function (key) {\n            delete this[key];\n        }\n    };\n\n    function createHashMap(obj) {\n        return new HashMap(obj);\n    }\n\n    var util = {\n        inherits: inherits,\n        mixin: mixin,\n        clone: clone,\n        merge: merge,\n        mergeAll: mergeAll,\n        extend: extend,\n        defaults: defaults,\n        getContext: getContext,\n        createCanvas: createCanvas,\n        indexOf: indexOf,\n        slice: slice,\n        find: find,\n        isArrayLike: isArrayLike,\n        each: each,\n        map: map,\n        reduce: reduce,\n        filter: filter,\n        bind: bind,\n        curry: curry,\n        isArray: isArray,\n        isString: isString,\n        isObject: isObject,\n        isFunction: isFunction,\n        isBuiltInObject: isBuiltInObject,\n        isDom: isDom,\n        eqNaN: eqNaN,\n        retrieve: retrieve,\n        assert: assert,\n        setAsPrimitive: setAsPrimitive,\n        createHashMap: createHashMap,\n        noop: function () {}\n    };\n    module.exports = util;\n\n\n\n/***/ }),\n/* 454 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(453);\n\n    var pathTool = __webpack_require__(683);\n    var Path = __webpack_require__(459);\n    var colorTool = __webpack_require__(477);\n    var matrix = __webpack_require__(475);\n    var vector = __webpack_require__(458);\n    var Transformable = __webpack_require__(550);\n    var BoundingRect = __webpack_require__(468);\n\n    var round = Math.round;\n    var mathMax = Math.max;\n    var mathMin = Math.min;\n\n    var graphic = {};\n\n    graphic.Group = __webpack_require__(487);\n\n    graphic.Image = __webpack_require__(546);\n\n    graphic.Text = __webpack_require__(667);\n\n    graphic.Circle = __webpack_require__(674);\n\n    graphic.Sector = __webpack_require__(680);\n\n    graphic.Ring = __webpack_require__(679);\n\n    graphic.Polygon = __webpack_require__(676);\n\n    graphic.Polyline = __webpack_require__(677);\n\n    graphic.Rect = __webpack_require__(678);\n\n    graphic.Line = __webpack_require__(675);\n\n    graphic.BezierCurve = __webpack_require__(673);\n\n    graphic.Arc = __webpack_require__(672);\n\n    graphic.CompoundPath = __webpack_require__(664);\n\n    graphic.LinearGradient = __webpack_require__(665);\n\n    graphic.RadialGradient = __webpack_require__(666);\n\n    graphic.BoundingRect = BoundingRect;\n\n    /**\n     * Extend shape with parameters\n     */\n    graphic.extendShape = function (opts) {\n        return Path.extend(opts);\n    };\n\n    /**\n     * Extend path\n     */\n    graphic.extendPath = function (pathData, opts) {\n        return pathTool.extendFromString(pathData, opts);\n    };\n\n    /**\n     * Create a path element from path data string\n     * @param {string} pathData\n     * @param {Object} opts\n     * @param {module:zrender/core/BoundingRect} rect\n     * @param {string} [layout=cover] 'center' or 'cover'\n     */\n    graphic.makePath = function (pathData, opts, rect, layout) {\n        var path = pathTool.createFromString(pathData, opts);\n        var boundingRect = path.getBoundingRect();\n        if (rect) {\n            var aspect = boundingRect.width / boundingRect.height;\n\n            if (layout === 'center') {\n                // Set rect to center, keep width / height ratio.\n                var width = rect.height * aspect;\n                var height;\n                if (width <= rect.width) {\n                    height = rect.height;\n                }\n                else {\n                    width = rect.width;\n                    height = width / aspect;\n                }\n                var cx = rect.x + rect.width / 2;\n                var cy = rect.y + rect.height / 2;\n\n                rect.x = cx - width / 2;\n                rect.y = cy - height / 2;\n                rect.width = width;\n                rect.height = height;\n            }\n\n            graphic.resizePath(path, rect);\n        }\n        return path;\n    };\n\n    graphic.mergePath = pathTool.mergePath,\n\n    /**\n     * Resize a path to fit the rect\n     * @param {module:zrender/graphic/Path} path\n     * @param {Object} rect\n     */\n    graphic.resizePath = function (path, rect) {\n        if (!path.applyTransform) {\n            return;\n        }\n\n        var pathRect = path.getBoundingRect();\n\n        var m = pathRect.calculateTransform(rect);\n\n        path.applyTransform(m);\n    };\n\n    /**\n     * Sub pixel optimize line for canvas\n     *\n     * @param {Object} param\n     * @param {Object} [param.shape]\n     * @param {number} [param.shape.x1]\n     * @param {number} [param.shape.y1]\n     * @param {number} [param.shape.x2]\n     * @param {number} [param.shape.y2]\n     * @param {Object} [param.style]\n     * @param {number} [param.style.lineWidth]\n     * @return {Object} Modified param\n     */\n    graphic.subPixelOptimizeLine = function (param) {\n        var subPixelOptimize = graphic.subPixelOptimize;\n        var shape = param.shape;\n        var lineWidth = param.style.lineWidth;\n\n        if (round(shape.x1 * 2) === round(shape.x2 * 2)) {\n            shape.x1 = shape.x2 = subPixelOptimize(shape.x1, lineWidth, true);\n        }\n        if (round(shape.y1 * 2) === round(shape.y2 * 2)) {\n            shape.y1 = shape.y2 = subPixelOptimize(shape.y1, lineWidth, true);\n        }\n        return param;\n    };\n\n    /**\n     * Sub pixel optimize rect for canvas\n     *\n     * @param {Object} param\n     * @param {Object} [param.shape]\n     * @param {number} [param.shape.x]\n     * @param {number} [param.shape.y]\n     * @param {number} [param.shape.width]\n     * @param {number} [param.shape.height]\n     * @param {Object} [param.style]\n     * @param {number} [param.style.lineWidth]\n     * @return {Object} Modified param\n     */\n    graphic.subPixelOptimizeRect = function (param) {\n        var subPixelOptimize = graphic.subPixelOptimize;\n        var shape = param.shape;\n        var lineWidth = param.style.lineWidth;\n        var originX = shape.x;\n        var originY = shape.y;\n        var originWidth = shape.width;\n        var originHeight = shape.height;\n        shape.x = subPixelOptimize(shape.x, lineWidth, true);\n        shape.y = subPixelOptimize(shape.y, lineWidth, true);\n        shape.width = Math.max(\n            subPixelOptimize(originX + originWidth, lineWidth, false) - shape.x,\n            originWidth === 0 ? 0 : 1\n        );\n        shape.height = Math.max(\n            subPixelOptimize(originY + originHeight, lineWidth, false) - shape.y,\n            originHeight === 0 ? 0 : 1\n        );\n        return param;\n    };\n\n    /**\n     * Sub pixel optimize for canvas\n     *\n     * @param {number} position Coordinate, such as x, y\n     * @param {number} lineWidth Should be nonnegative integer.\n     * @param {boolean=} positiveOrNegative Default false (negative).\n     * @return {number} Optimized position.\n     */\n    graphic.subPixelOptimize = function (position, lineWidth, positiveOrNegative) {\n        // Assure that (position + lineWidth / 2) is near integer edge,\n        // otherwise line will be fuzzy in canvas.\n        var doubledPosition = round(position * 2);\n        return (doubledPosition + round(lineWidth)) % 2 === 0\n            ? doubledPosition / 2\n            : (doubledPosition + (positiveOrNegative ? 1 : -1)) / 2;\n    };\n\n    function hasFillOrStroke(fillOrStroke) {\n        return fillOrStroke != null && fillOrStroke != 'none';\n    }\n\n    function liftColor(color) {\n        return typeof color === 'string' ? colorTool.lift(color, -0.1) : color;\n    }\n\n    /**\n     * @private\n     */\n    function cacheElementStl(el) {\n        if (el.__hoverStlDirty) {\n            var stroke = el.style.stroke;\n            var fill = el.style.fill;\n\n            // Create hoverStyle on mouseover\n            var hoverStyle = el.__hoverStl;\n            hoverStyle.fill = hoverStyle.fill\n                || (hasFillOrStroke(fill) ? liftColor(fill) : null);\n            hoverStyle.stroke = hoverStyle.stroke\n                || (hasFillOrStroke(stroke) ? liftColor(stroke) : null);\n\n            var normalStyle = {};\n            for (var name in hoverStyle) {\n                if (hoverStyle.hasOwnProperty(name)) {\n                    normalStyle[name] = el.style[name];\n                }\n            }\n\n            el.__normalStl = normalStyle;\n\n            el.__hoverStlDirty = false;\n        }\n    }\n\n    /**\n     * @private\n     */\n    function doSingleEnterHover(el) {\n        if (el.__isHover) {\n            return;\n        }\n\n        cacheElementStl(el);\n\n        if (el.useHoverLayer) {\n            el.__zr && el.__zr.addHover(el, el.__hoverStl);\n        }\n        else {\n            el.setStyle(el.__hoverStl);\n            el.z2 += 1;\n        }\n\n        el.__isHover = true;\n    }\n\n    /**\n     * @inner\n     */\n    function doSingleLeaveHover(el) {\n        if (!el.__isHover) {\n            return;\n        }\n\n        var normalStl = el.__normalStl;\n        if (el.useHoverLayer) {\n            el.__zr && el.__zr.removeHover(el);\n        }\n        else {\n            normalStl && el.setStyle(normalStl);\n            el.z2 -= 1;\n        }\n\n        el.__isHover = false;\n    }\n\n    /**\n     * @inner\n     */\n    function doEnterHover(el) {\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    doSingleEnterHover(child);\n                }\n            })\n            : doSingleEnterHover(el);\n    }\n\n    function doLeaveHover(el) {\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    doSingleLeaveHover(child);\n                }\n            })\n            : doSingleLeaveHover(el);\n    }\n\n    /**\n     * @inner\n     */\n    function setElementHoverStl(el, hoverStl) {\n        // If element has sepcified hoverStyle, then use it instead of given hoverStyle\n        // Often used when item group has a label element and it's hoverStyle is different\n        el.__hoverStl = el.hoverStyle || hoverStl || {};\n        el.__hoverStlDirty = true;\n\n        if (el.__isHover) {\n            cacheElementStl(el);\n        }\n    }\n\n    /**\n     * @inner\n     */\n    function onElementMouseOver(e) {\n        if (this.__hoverSilentOnTouch && e.zrByTouch) {\n            return;\n        }\n\n        // Only if element is not in emphasis status\n        !this.__isEmphasis && doEnterHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function onElementMouseOut(e) {\n        if (this.__hoverSilentOnTouch && e.zrByTouch) {\n            return;\n        }\n\n        // Only if element is not in emphasis status\n        !this.__isEmphasis && doLeaveHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function enterEmphasis() {\n        this.__isEmphasis = true;\n        doEnterHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function leaveEmphasis() {\n        this.__isEmphasis = false;\n        doLeaveHover(this);\n    }\n\n    /**\n     * Set hover style of element.\n     * This method can be called repeatly without side-effects.\n     * @param {module:zrender/Element} el\n     * @param {Object} [hoverStyle]\n     * @param {Object} [opt]\n     * @param {boolean} [opt.hoverSilentOnTouch=false]\n     *        In touch device, mouseover event will be trigger on touchstart event\n     *        (see module:zrender/dom/HandlerProxy). By this mechanism, we can\n     *        conviniently use hoverStyle when tap on touch screen without additional\n     *        code for compatibility.\n     *        But if the chart/component has select feature, which usually also use\n     *        hoverStyle, there might be conflict between 'select-highlight' and\n     *        'hover-highlight' especially when roam is enabled (see geo for example).\n     *        In this case, hoverSilentOnTouch should be used to disable hover-highlight\n     *        on touch device.\n     */\n    graphic.setHoverStyle = function (el, hoverStyle, opt) {\n        el.__hoverSilentOnTouch = opt && opt.hoverSilentOnTouch;\n\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    setElementHoverStl(child, hoverStyle);\n                }\n            })\n            : setElementHoverStl(el, hoverStyle);\n\n        // Duplicated function will be auto-ignored, see Eventful.js.\n        el.on('mouseover', onElementMouseOver)\n          .on('mouseout', onElementMouseOut);\n\n        // Emphasis, normal can be triggered manually\n        el.on('emphasis', enterEmphasis)\n          .on('normal', leaveEmphasis);\n    };\n\n    /**\n     * Set text option in the style\n     * @param {Object} textStyle\n     * @param {module:echarts/model/Model} labelModel\n     * @param {string} color\n     */\n    graphic.setText = function (textStyle, labelModel, color) {\n        var labelPosition = labelModel.getShallow('position') || 'inside';\n        var labelOffset = labelModel.getShallow('offset');\n        var labelColor = labelPosition.indexOf('inside') >= 0 ? 'white' : color;\n        var textStyleModel = labelModel.getModel('textStyle');\n        zrUtil.extend(textStyle, {\n            textDistance: labelModel.getShallow('distance') || 5,\n            textFont: textStyleModel.getFont(),\n            textPosition: labelPosition,\n            textOffset: labelOffset,\n            textFill: textStyleModel.getTextColor() || labelColor\n        });\n    };\n\n    graphic.getFont = function (opt, ecModel) {\n        var gTextStyleModel = ecModel && ecModel.getModel('textStyle');\n        return [\n            // FIXME in node-canvas fontWeight is before fontStyle\n            opt.fontStyle || gTextStyleModel && gTextStyleModel.getShallow('fontStyle') || '',\n            opt.fontWeight || gTextStyleModel && gTextStyleModel.getShallow('fontWeight') || '',\n            (opt.fontSize || gTextStyleModel && gTextStyleModel.getShallow('fontSize') || 12) + 'px',\n            opt.fontFamily || gTextStyleModel && gTextStyleModel.getShallow('fontFamily') || 'sans-serif'\n        ].join(' ');\n    };\n\n    function animateOrSetProps(isUpdate, el, props, animatableModel, dataIndex, cb) {\n        if (typeof dataIndex === 'function') {\n            cb = dataIndex;\n            dataIndex = null;\n        }\n        // Do not check 'animation' property directly here. Consider this case:\n        // animation model is an `itemModel`, whose does not have `isAnimationEnabled`\n        // but its parent model (`seriesModel`) does.\n        var animationEnabled = animatableModel && animatableModel.isAnimationEnabled();\n\n        if (animationEnabled) {\n            var postfix = isUpdate ? 'Update' : '';\n            var duration = animatableModel.getShallow('animationDuration' + postfix);\n            var animationEasing = animatableModel.getShallow('animationEasing' + postfix);\n            var animationDelay = animatableModel.getShallow('animationDelay' + postfix);\n            if (typeof animationDelay === 'function') {\n                animationDelay = animationDelay(\n                    dataIndex,\n                    animatableModel.getAnimationDelayParams\n                        ? animatableModel.getAnimationDelayParams(el, dataIndex)\n                        : null\n                );\n            }\n            if (typeof duration === 'function') {\n                duration = duration(dataIndex);\n            }\n\n            duration > 0\n                ? el.animateTo(props, duration, animationDelay || 0, animationEasing, cb)\n                : (el.stopAnimation(), el.attr(props), cb && cb());\n        }\n        else {\n            el.stopAnimation();\n            el.attr(props);\n            cb && cb();\n        }\n    }\n\n    /**\n     * Update graphic element properties with or without animation according to the configuration in series\n     * @param {module:zrender/Element} el\n     * @param {Object} props\n     * @param {module:echarts/model/Model} [animatableModel]\n     * @param {number} [dataIndex]\n     * @param {Function} [cb]\n     * @example\n     *     graphic.updateProps(el, {\n     *         position: [100, 100]\n     *     }, seriesModel, dataIndex, function () { console.log('Animation done!'); });\n     *     // Or\n     *     graphic.updateProps(el, {\n     *         position: [100, 100]\n     *     }, seriesModel, function () { console.log('Animation done!'); });\n     */\n    graphic.updateProps = function (el, props, animatableModel, dataIndex, cb) {\n        animateOrSetProps(true, el, props, animatableModel, dataIndex, cb);\n    };\n\n    /**\n     * Init graphic element properties with or without animation according to the configuration in series\n     * @param {module:zrender/Element} el\n     * @param {Object} props\n     * @param {module:echarts/model/Model} [animatableModel]\n     * @param {number} [dataIndex]\n     * @param {Function} cb\n     */\n    graphic.initProps = function (el, props, animatableModel, dataIndex, cb) {\n        animateOrSetProps(false, el, props, animatableModel, dataIndex, cb);\n    };\n\n    /**\n     * Get transform matrix of target (param target),\n     * in coordinate of its ancestor (param ancestor)\n     *\n     * @param {module:zrender/mixin/Transformable} target\n     * @param {module:zrender/mixin/Transformable} [ancestor]\n     */\n    graphic.getTransform = function (target, ancestor) {\n        var mat = matrix.identity([]);\n\n        while (target && target !== ancestor) {\n            matrix.mul(mat, target.getLocalTransform(), mat);\n            target = target.parent;\n        }\n\n        return mat;\n    };\n\n    /**\n     * Apply transform to an vertex.\n     * @param {Array.<number>} target [x, y]\n     * @param {Array.<number>|TypedArray.<number>|Object} transform Can be:\n     *      + Transform matrix: like [1, 0, 0, 1, 0, 0]\n     *      + {position, rotation, scale}, the same as `zrender/Transformable`.\n     * @param {boolean=} invert Whether use invert matrix.\n     * @return {Array.<number>} [x, y]\n     */\n    graphic.applyTransform = function (target, transform, invert) {\n        if (transform && !zrUtil.isArrayLike(transform)) {\n            transform = Transformable.getLocalTransform(transform);\n        }\n\n        if (invert) {\n            transform = matrix.invert([], transform);\n        }\n        return vector.applyTransform([], target, transform);\n    };\n\n    /**\n     * @param {string} direction 'left' 'right' 'top' 'bottom'\n     * @param {Array.<number>} transform Transform matrix: like [1, 0, 0, 1, 0, 0]\n     * @param {boolean=} invert Whether use invert matrix.\n     * @return {string} Transformed direction. 'left' 'right' 'top' 'bottom'\n     */\n    graphic.transformDirection = function (direction, transform, invert) {\n\n        // Pick a base, ensure that transform result will not be (0, 0).\n        var hBase = (transform[4] === 0 || transform[5] === 0 || transform[0] === 0)\n            ? 1 : Math.abs(2 * transform[4] / transform[0]);\n        var vBase = (transform[4] === 0 || transform[5] === 0 || transform[2] === 0)\n            ? 1 : Math.abs(2 * transform[4] / transform[2]);\n\n        var vertex = [\n            direction === 'left' ? -hBase : direction === 'right' ? hBase : 0,\n            direction === 'top' ? -vBase : direction === 'bottom' ? vBase : 0\n        ];\n\n        vertex = graphic.applyTransform(vertex, transform, invert);\n\n        return Math.abs(vertex[0]) > Math.abs(vertex[1])\n            ? (vertex[0] > 0 ? 'right' : 'left')\n            : (vertex[1] > 0 ? 'bottom' : 'top');\n    };\n\n    /**\n     * Apply group transition animation from g1 to g2.\n     * If no animatableModel, no animation.\n     */\n    graphic.groupTransition = function (g1, g2, animatableModel, cb) {\n        if (!g1 || !g2) {\n            return;\n        }\n\n        function getElMap(g) {\n            var elMap = {};\n            g.traverse(function (el) {\n                if (!el.isGroup && el.anid) {\n                    elMap[el.anid] = el;\n                }\n            });\n            return elMap;\n        }\n        function getAnimatableProps(el) {\n            var obj = {\n                position: vector.clone(el.position),\n                rotation: el.rotation\n            };\n            if (el.shape) {\n                obj.shape = zrUtil.extend({}, el.shape);\n            }\n            return obj;\n        }\n        var elMap1 = getElMap(g1);\n\n        g2.traverse(function (el) {\n            if (!el.isGroup && el.anid) {\n                var oldEl = elMap1[el.anid];\n                if (oldEl) {\n                    var newProp = getAnimatableProps(el);\n                    el.attr(getAnimatableProps(oldEl));\n                    graphic.updateProps(el, newProp, animatableModel, el.dataIndex);\n                }\n                // else {\n                //     if (el.previousProps) {\n                //         graphic.updateProps\n                //     }\n                // }\n            }\n        });\n    };\n\n    /**\n     * @param {Array.<Array.<number>>} points Like: [[23, 44], [53, 66], ...]\n     * @param {Object} rect {x, y, width, height}\n     * @return {Array.<Array.<number>>} A new clipped points.\n     */\n    graphic.clipPointsByRect = function (points, rect) {\n        return zrUtil.map(points, function (point) {\n            var x = point[0];\n            x = mathMax(x, rect.x);\n            x = mathMin(x, rect.x + rect.width);\n            var y = point[1];\n            y = mathMax(y, rect.y);\n            y = mathMin(y, rect.y + rect.height);\n            return [x, y];\n        });\n    };\n\n    /**\n     * @param {Object} targetRect {x, y, width, height}\n     * @param {Object} rect {x, y, width, height}\n     * @return {Object} A new clipped rect. If rect size are negative, return undefined.\n     */\n    graphic.clipRectByRect = function (targetRect, rect) {\n        var x = mathMax(targetRect.x, rect.x);\n        var x2 = mathMin(targetRect.x + targetRect.width, rect.x + rect.width);\n        var y = mathMax(targetRect.y, rect.y);\n        var y2 = mathMin(targetRect.y + targetRect.height, rect.y + rect.height);\n\n        if (x2 >= x && y2 >= y) {\n            return {\n                x: x,\n                y: y,\n                width: x2 - x,\n                height: y2 - y\n            };\n        }\n    };\n\n    module.exports = graphic;\n\n\n\n/***/ }),\n/* 455 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {// Enable DEV mode when using source code without build. which has no __DEV__ variable\n// In build process 'typeof __DEV__' will be replace with 'boolean'\n// So this code will be removed or disabled anyway after built.\nif (typeof __DEV__ === 'undefined') {\n    // In browser\n    if (typeof window !== 'undefined') {\n        window.__DEV__ = true;\n    }\n    // In node\n    else if (typeof global !== 'undefined') {\n        global.__DEV__ = true;\n    }\n}\n\n/*!\n * ECharts, a javascript interactive chart library.\n *\n * Copyright (c) 2015, Baidu Inc.\n * All rights reserved.\n *\n * LICENSE\n * https://github.com/ecomfe/echarts/blob/master/LICENSE.txt\n */\n\n/**\n * @module echarts\n */\n\n\n    var env = __webpack_require__(460);\n\n    var GlobalModel = __webpack_require__(623);\n    var ExtensionAPI = __webpack_require__(579);\n    var CoordinateSystemManager = __webpack_require__(495);\n    var OptionManager = __webpack_require__(624);\n\n    var ComponentModel = __webpack_require__(469);\n    var SeriesModel = __webpack_require__(532);\n\n    var ComponentView = __webpack_require__(536);\n    var ChartView = __webpack_require__(535);\n    var graphic = __webpack_require__(454);\n    var modelUtil = __webpack_require__(456);\n    var throttle = __webpack_require__(485);\n\n    var zrender = __webpack_require__(685);\n    var zrUtil = __webpack_require__(453);\n    var colorTool = __webpack_require__(477);\n    var Eventful = __webpack_require__(476);\n    var timsort = __webpack_require__(505);\n\n    var each = zrUtil.each;\n    var parseClassType = ComponentModel.parseClassType;\n\n    var PRIORITY_PROCESSOR_FILTER = 1000;\n    var PRIORITY_PROCESSOR_STATISTIC = 5000;\n\n\n    var PRIORITY_VISUAL_LAYOUT = 1000;\n    var PRIORITY_VISUAL_GLOBAL = 2000;\n    var PRIORITY_VISUAL_CHART = 3000;\n    var PRIORITY_VISUAL_COMPONENT = 4000;\n    // FIXME\n    // necessary?\n    var PRIORITY_VISUAL_BRUSH = 5000;\n\n    // Main process have three entries: `setOption`, `dispatchAction` and `resize`,\n    // where they must not be invoked nestedly, except the only case: invoke\n    // dispatchAction with updateMethod \"none\" in main process.\n    // This flag is used to carry out this rule.\n    // All events will be triggered out side main process (i.e. when !this[IN_MAIN_PROCESS]).\n    var IN_MAIN_PROCESS = '__flagInMainProcess';\n    var HAS_GRADIENT_OR_PATTERN_BG = '__hasGradientOrPatternBg';\n    var OPTION_UPDATED = '__optionUpdated';\n    var ACTION_REG = /^[a-zA-Z0-9_]+$/;\n\n    function createRegisterEventWithLowercaseName(method) {\n        return function (eventName, handler, context) {\n            // Event name is all lowercase\n            eventName = eventName && eventName.toLowerCase();\n            Eventful.prototype[method].call(this, eventName, handler, context);\n        };\n    }\n\n    /**\n     * @module echarts~MessageCenter\n     */\n    function MessageCenter() {\n        Eventful.call(this);\n    }\n    MessageCenter.prototype.on = createRegisterEventWithLowercaseName('on');\n    MessageCenter.prototype.off = createRegisterEventWithLowercaseName('off');\n    MessageCenter.prototype.one = createRegisterEventWithLowercaseName('one');\n    zrUtil.mixin(MessageCenter, Eventful);\n\n    /**\n     * @module echarts~ECharts\n     */\n    function ECharts(dom, theme, opts) {\n        opts = opts || {};\n\n        // Get theme by name\n        if (typeof theme === 'string') {\n            theme = themeStorage[theme];\n        }\n\n        /**\n         * @type {string}\n         */\n        this.id;\n        /**\n         * Group id\n         * @type {string}\n         */\n        this.group;\n        /**\n         * @type {HTMLDomElement}\n         * @private\n         */\n        this._dom = dom;\n        /**\n         * @type {module:zrender/ZRender}\n         * @private\n         */\n        var zr = this._zr = zrender.init(dom, {\n            renderer: opts.renderer || 'canvas',\n            devicePixelRatio: opts.devicePixelRatio,\n            width: opts.width,\n            height: opts.height\n        });\n\n        /**\n         * Expect 60 pfs.\n         * @type {Function}\n         * @private\n         */\n        this._throttledZrFlush = throttle.throttle(zrUtil.bind(zr.flush, zr), 17);\n\n        /**\n         * @type {Object}\n         * @private\n         */\n        this._theme = zrUtil.clone(theme);\n\n        /**\n         * @type {Array.<module:echarts/view/Chart>}\n         * @private\n         */\n        this._chartsViews = [];\n\n        /**\n         * @type {Object.<string, module:echarts/view/Chart>}\n         * @private\n         */\n        this._chartsMap = {};\n\n        /**\n         * @type {Array.<module:echarts/view/Component>}\n         * @private\n         */\n        this._componentsViews = [];\n\n        /**\n         * @type {Object.<string, module:echarts/view/Component>}\n         * @private\n         */\n        this._componentsMap = {};\n\n        /**\n         * @type {module:echarts/CoordinateSystem}\n         * @private\n         */\n        this._coordSysMgr = new CoordinateSystemManager();\n\n        /**\n         * @type {module:echarts/ExtensionAPI}\n         * @private\n         */\n        this._api = createExtensionAPI(this);\n\n        Eventful.call(this);\n\n        /**\n         * @type {module:echarts~MessageCenter}\n         * @private\n         */\n        this._messageCenter = new MessageCenter();\n\n        // Init mouse events\n        this._initEvents();\n\n        // In case some people write `window.onresize = chart.resize`\n        this.resize = zrUtil.bind(this.resize, this);\n\n        // Can't dispatch action during rendering procedure\n        this._pendingActions = [];\n        // Sort on demand\n        function prioritySortFunc(a, b) {\n            return a.prio - b.prio;\n        }\n        timsort(visualFuncs, prioritySortFunc);\n        timsort(dataProcessorFuncs, prioritySortFunc);\n\n        zr.animation.on('frame', this._onframe, this);\n\n        // ECharts instance can be used as value.\n        zrUtil.setAsPrimitive(this);\n    }\n\n    var echartsProto = ECharts.prototype;\n\n    echartsProto._onframe = function () {\n        // Lazy update\n        if (this[OPTION_UPDATED]) {\n            var silent = this[OPTION_UPDATED].silent;\n\n            this[IN_MAIN_PROCESS] = true;\n\n            updateMethods.prepareAndUpdate.call(this);\n\n            this[IN_MAIN_PROCESS] = false;\n\n            this[OPTION_UPDATED] = false;\n\n            flushPendingActions.call(this, silent);\n\n            triggerUpdatedEvent.call(this, silent);\n        }\n    };\n    /**\n     * @return {HTMLDomElement}\n     */\n    echartsProto.getDom = function () {\n        return this._dom;\n    };\n\n    /**\n     * @return {module:zrender~ZRender}\n     */\n    echartsProto.getZr = function () {\n        return this._zr;\n    };\n\n    /**\n     * Usage:\n     * chart.setOption(option, notMerge, lazyUpdate);\n     * chart.setOption(option, {\n     *     notMerge: ...,\n     *     lazyUpdate: ...,\n     *     silent: ...\n     * });\n     *\n     * @param {Object} option\n     * @param {Object|boolean} [opts] opts or notMerge.\n     * @param {boolean} [opts.notMerge=false]\n     * @param {boolean} [opts.lazyUpdate=false] Useful when setOption frequently.\n     */\n    echartsProto.setOption = function (option, notMerge, lazyUpdate) {\n        if (__DEV__) {\n            zrUtil.assert(!this[IN_MAIN_PROCESS], '`setOption` should not be called during main process.');\n        }\n\n        var silent;\n        if (zrUtil.isObject(notMerge)) {\n            lazyUpdate = notMerge.lazyUpdate;\n            silent = notMerge.silent;\n            notMerge = notMerge.notMerge;\n        }\n\n        this[IN_MAIN_PROCESS] = true;\n\n        if (!this._model || notMerge) {\n            var optionManager = new OptionManager(this._api);\n            var theme = this._theme;\n            var ecModel = this._model = new GlobalModel(null, null, theme, optionManager);\n            ecModel.init(null, null, theme, optionManager);\n        }\n\n        this._model.setOption(option, optionPreprocessorFuncs);\n\n        if (lazyUpdate) {\n            this[OPTION_UPDATED] = {silent: silent};\n            this[IN_MAIN_PROCESS] = false;\n        }\n        else {\n            updateMethods.prepareAndUpdate.call(this);\n            // Ensure zr refresh sychronously, and then pixel in canvas can be\n            // fetched after `setOption`.\n            this._zr.flush();\n\n            this[OPTION_UPDATED] = false;\n            this[IN_MAIN_PROCESS] = false;\n\n            flushPendingActions.call(this, silent);\n            triggerUpdatedEvent.call(this, silent);\n        }\n    };\n\n    /**\n     * @DEPRECATED\n     */\n    echartsProto.setTheme = function () {\n        console.log('ECharts#setTheme() is DEPRECATED in ECharts 3.0');\n    };\n\n    /**\n     * @return {module:echarts/model/Global}\n     */\n    echartsProto.getModel = function () {\n        return this._model;\n    };\n\n    /**\n     * @return {Object}\n     */\n    echartsProto.getOption = function () {\n        return this._model && this._model.getOption();\n    };\n\n    /**\n     * @return {number}\n     */\n    echartsProto.getWidth = function () {\n        return this._zr.getWidth();\n    };\n\n    /**\n     * @return {number}\n     */\n    echartsProto.getHeight = function () {\n        return this._zr.getHeight();\n    };\n\n    /**\n     * @return {number}\n     */\n    echartsProto.getDevicePixelRatio = function () {\n        return this._zr.painter.dpr || window.devicePixelRatio || 1;\n    };\n\n    /**\n     * Get canvas which has all thing rendered\n     * @param {Object} opts\n     * @param {string} [opts.backgroundColor]\n     */\n    echartsProto.getRenderedCanvas = function (opts) {\n        if (!env.canvasSupported) {\n            return;\n        }\n        opts = opts || {};\n        opts.pixelRatio = opts.pixelRatio || 1;\n        opts.backgroundColor = opts.backgroundColor\n            || this._model.get('backgroundColor');\n        var zr = this._zr;\n        var list = zr.storage.getDisplayList();\n        // Stop animations\n        zrUtil.each(list, function (el) {\n            el.stopAnimation(true);\n        });\n        return zr.painter.getRenderedCanvas(opts);\n    };\n    /**\n     * @return {string}\n     * @param {Object} opts\n     * @param {string} [opts.type='png']\n     * @param {string} [opts.pixelRatio=1]\n     * @param {string} [opts.backgroundColor]\n     * @param {string} [opts.excludeComponents]\n     */\n    echartsProto.getDataURL = function (opts) {\n        opts = opts || {};\n        var excludeComponents = opts.excludeComponents;\n        var ecModel = this._model;\n        var excludesComponentViews = [];\n        var self = this;\n\n        each(excludeComponents, function (componentType) {\n            ecModel.eachComponent({\n                mainType: componentType\n            }, function (component) {\n                var view = self._componentsMap[component.__viewId];\n                if (!view.group.ignore) {\n                    excludesComponentViews.push(view);\n                    view.group.ignore = true;\n                }\n            });\n        });\n\n        var url = this.getRenderedCanvas(opts).toDataURL(\n            'image/' + (opts && opts.type || 'png')\n        );\n\n        each(excludesComponentViews, function (view) {\n            view.group.ignore = false;\n        });\n        return url;\n    };\n\n\n    /**\n     * @return {string}\n     * @param {Object} opts\n     * @param {string} [opts.type='png']\n     * @param {string} [opts.pixelRatio=1]\n     * @param {string} [opts.backgroundColor]\n     */\n    echartsProto.getConnectedDataURL = function (opts) {\n        if (!env.canvasSupported) {\n            return;\n        }\n        var groupId = this.group;\n        var mathMin = Math.min;\n        var mathMax = Math.max;\n        var MAX_NUMBER = Infinity;\n        if (connectedGroups[groupId]) {\n            var left = MAX_NUMBER;\n            var top = MAX_NUMBER;\n            var right = -MAX_NUMBER;\n            var bottom = -MAX_NUMBER;\n            var canvasList = [];\n            var dpr = (opts && opts.pixelRatio) || 1;\n\n            zrUtil.each(instances, function (chart, id) {\n                if (chart.group === groupId) {\n                    var canvas = chart.getRenderedCanvas(\n                        zrUtil.clone(opts)\n                    );\n                    var boundingRect = chart.getDom().getBoundingClientRect();\n                    left = mathMin(boundingRect.left, left);\n                    top = mathMin(boundingRect.top, top);\n                    right = mathMax(boundingRect.right, right);\n                    bottom = mathMax(boundingRect.bottom, bottom);\n                    canvasList.push({\n                        dom: canvas,\n                        left: boundingRect.left,\n                        top: boundingRect.top\n                    });\n                }\n            });\n\n            left *= dpr;\n            top *= dpr;\n            right *= dpr;\n            bottom *= dpr;\n            var width = right - left;\n            var height = bottom - top;\n            var targetCanvas = zrUtil.createCanvas();\n            targetCanvas.width = width;\n            targetCanvas.height = height;\n            var zr = zrender.init(targetCanvas);\n\n            each(canvasList, function (item) {\n                var img = new graphic.Image({\n                    style: {\n                        x: item.left * dpr - left,\n                        y: item.top * dpr - top,\n                        image: item.dom\n                    }\n                });\n                zr.add(img);\n            });\n            zr.refreshImmediately();\n\n            return targetCanvas.toDataURL('image/' + (opts && opts.type || 'png'));\n        }\n        else {\n            return this.getDataURL(opts);\n        }\n    };\n\n    /**\n     * Convert from logical coordinate system to pixel coordinate system.\n     * See CoordinateSystem#convertToPixel.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId, geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName,\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {Array|number} result\n     */\n    echartsProto.convertToPixel = zrUtil.curry(doConvertPixel, 'convertToPixel');\n\n    /**\n     * Convert from pixel coordinate system to logical coordinate system.\n     * See CoordinateSystem#convertFromPixel.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId / geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {Array|number} result\n     */\n    echartsProto.convertFromPixel = zrUtil.curry(doConvertPixel, 'convertFromPixel');\n\n    function doConvertPixel(methodName, finder, value) {\n        var ecModel = this._model;\n        var coordSysList = this._coordSysMgr.getCoordinateSystems();\n        var result;\n\n        finder = modelUtil.parseFinder(ecModel, finder);\n\n        for (var i = 0; i < coordSysList.length; i++) {\n            var coordSys = coordSysList[i];\n            if (coordSys[methodName]\n                && (result = coordSys[methodName](ecModel, finder, value)) != null\n            ) {\n                return result;\n            }\n        }\n\n        if (__DEV__) {\n            console.warn(\n                'No coordinate system that supports ' + methodName + ' found by the given finder.'\n            );\n        }\n    }\n\n    /**\n     * Is the specified coordinate systems or components contain the given pixel point.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId / geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName,\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {boolean} result\n     */\n    echartsProto.containPixel = function (finder, value) {\n        var ecModel = this._model;\n        var result;\n\n        finder = modelUtil.parseFinder(ecModel, finder);\n\n        zrUtil.each(finder, function (models, key) {\n            key.indexOf('Models') >= 0 && zrUtil.each(models, function (model) {\n                var coordSys = model.coordinateSystem;\n                if (coordSys && coordSys.containPoint) {\n                    result |= !!coordSys.containPoint(value);\n                }\n                else if (key === 'seriesModels') {\n                    var view = this._chartsMap[model.__viewId];\n                    if (view && view.containPoint) {\n                        result |= view.containPoint(value, model);\n                    }\n                    else {\n                        if (__DEV__) {\n                            console.warn(key + ': ' + (view\n                                ? 'The found component do not support containPoint.'\n                                : 'No view mapping to the found component.'\n                            ));\n                        }\n                    }\n                }\n                else {\n                    if (__DEV__) {\n                        console.warn(key + ': containPoint is not supported');\n                    }\n                }\n            }, this);\n        }, this);\n\n        return !!result;\n    };\n\n    /**\n     * Get visual from series or data.\n     * @param {string|Object} finder\n     *        If string, e.g., 'series', means {seriesIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            dataIndex / dataIndexInside\n     *        }\n     *        If dataIndex is not specified, series visual will be fetched,\n     *        but not data item visual.\n     *        If all of seriesIndex, seriesId, seriesName are not specified,\n     *        visual will be fetched from first series.\n     * @param {string} visualType 'color', 'symbol', 'symbolSize'\n     */\n    echartsProto.getVisual = function (finder, visualType) {\n        var ecModel = this._model;\n\n        finder = modelUtil.parseFinder(ecModel, finder, {defaultMainType: 'series'});\n\n        var seriesModel = finder.seriesModel;\n\n        if (__DEV__) {\n            if (!seriesModel) {\n                console.warn('There is no specified seires model');\n            }\n        }\n\n        var data = seriesModel.getData();\n\n        var dataIndexInside = finder.hasOwnProperty('dataIndexInside')\n            ? finder.dataIndexInside\n            : finder.hasOwnProperty('dataIndex')\n            ? data.indexOfRawIndex(finder.dataIndex)\n            : null;\n\n        return dataIndexInside != null\n            ? data.getItemVisual(dataIndexInside, visualType)\n            : data.getVisual(visualType);\n    };\n\n    /**\n     * Get view of corresponding component model\n     * @param  {module:echarts/model/Component} componentModel\n     * @return {module:echarts/view/Component}\n     */\n    echartsProto.getViewOfComponentModel = function (componentModel) {\n        return this._componentsMap[componentModel.__viewId];\n    };\n\n    /**\n     * Get view of corresponding series model\n     * @param  {module:echarts/model/Series} seriesModel\n     * @return {module:echarts/view/Chart}\n     */\n    echartsProto.getViewOfSeriesModel = function (seriesModel) {\n        return this._chartsMap[seriesModel.__viewId];\n    };\n\n\n    var updateMethods = {\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        update: function (payload) {\n            // console.profile && console.profile('update');\n\n            var ecModel = this._model;\n            var api = this._api;\n            var coordSysMgr = this._coordSysMgr;\n            var zr = this._zr;\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            // Fixme First time update ?\n            ecModel.restoreData();\n\n            // TODO\n            // Save total ecModel here for undo/redo (after restoring data and before processing data).\n            // Undo (restoration of total ecModel) can be carried out in 'action' or outside API call.\n\n            // Create new coordinate system each update\n            // In LineView may save the old coordinate system and use it to get the orignal point\n            coordSysMgr.create(this._model, this._api);\n\n            processData.call(this, ecModel, api);\n\n            stackSeriesData.call(this, ecModel);\n\n            coordSysMgr.update(ecModel, api);\n\n            doVisualEncoding.call(this, ecModel, payload);\n\n            doRender.call(this, ecModel, payload);\n\n            // Set background\n            var backgroundColor = ecModel.get('backgroundColor') || 'transparent';\n\n            var painter = zr.painter;\n            // TODO all use clearColor ?\n            if (painter.isSingleCanvas && painter.isSingleCanvas()) {\n                zr.configLayer(0, {\n                    clearColor: backgroundColor\n                });\n            }\n            else {\n                // In IE8\n                if (!env.canvasSupported) {\n                    var colorArr = colorTool.parse(backgroundColor);\n                    backgroundColor = colorTool.stringify(colorArr, 'rgb');\n                    if (colorArr[3] === 0) {\n                        backgroundColor = 'transparent';\n                    }\n                }\n                if (backgroundColor.colorStops || backgroundColor.image) {\n                    // Gradient background\n                    // FIXME Fixed layer？\n                    zr.configLayer(0, {\n                        clearColor: backgroundColor\n                    });\n                    this[HAS_GRADIENT_OR_PATTERN_BG] = true;\n\n                    this._dom.style.background = 'transparent';\n                }\n                else {\n                    if (this[HAS_GRADIENT_OR_PATTERN_BG]) {\n                        zr.configLayer(0, {\n                            clearColor: null\n                        });\n                    }\n                    this[HAS_GRADIENT_OR_PATTERN_BG] = false;\n\n                    this._dom.style.background = backgroundColor;\n                }\n            }\n\n            each(postUpdateFuncs, function (func) {\n                func(ecModel, api);\n            });\n\n            // console.profile && console.profileEnd('update');\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateView: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            ecModel.eachSeries(function (seriesModel) {\n                seriesModel.getData().clearAllVisual();\n            });\n\n            doVisualEncoding.call(this, ecModel, payload);\n\n            invokeUpdateMethod.call(this, 'updateView', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateVisual: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            ecModel.eachSeries(function (seriesModel) {\n                seriesModel.getData().clearAllVisual();\n            });\n\n            doVisualEncoding.call(this, ecModel, payload, true);\n\n            invokeUpdateMethod.call(this, 'updateVisual', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateLayout: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            doLayout.call(this, ecModel, payload);\n\n            invokeUpdateMethod.call(this, 'updateLayout', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        prepareAndUpdate: function (payload) {\n            var ecModel = this._model;\n\n            prepareView.call(this, 'component', ecModel);\n\n            prepareView.call(this, 'chart', ecModel);\n\n            updateMethods.update.call(this, payload);\n        }\n    };\n\n    /**\n     * @private\n     */\n    function updateDirectly(ecIns, method, payload, mainType, subType) {\n        var ecModel = ecIns._model;\n\n        // broadcast\n        if (!mainType) {\n            each(ecIns._componentsViews.concat(ecIns._chartsViews), callView);\n            return;\n        }\n\n        var query = {};\n        query[mainType + 'Id'] = payload[mainType + 'Id'];\n        query[mainType + 'Index'] = payload[mainType + 'Index'];\n        query[mainType + 'Name'] = payload[mainType + 'Name'];\n\n        var condition = {mainType: mainType, query: query};\n        subType && (condition.subType = subType); // subType may be '' by parseClassType;\n\n        // If dispatchAction before setOption, do nothing.\n        ecModel && ecModel.eachComponent(condition, function (model, index) {\n            callView(ecIns[\n                mainType === 'series' ? '_chartsMap' : '_componentsMap'\n            ][model.__viewId]);\n        }, ecIns);\n\n        function callView(view) {\n            view && view.__alive && view[method] && view[method](\n                view.__model, ecModel, ecIns._api, payload\n            );\n        }\n    }\n\n    /**\n     * Resize the chart\n     * @param {Object} opts\n     * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n     * @param {boolean} [opts.silent=false]\n     */\n    echartsProto.resize = function (opts) {\n        if (__DEV__) {\n            zrUtil.assert(!this[IN_MAIN_PROCESS], '`resize` should not be called during main process.');\n        }\n\n        this[IN_MAIN_PROCESS] = true;\n\n        this._zr.resize(opts);\n\n        var optionChanged = this._model && this._model.resetOption('media');\n        var updateMethod = optionChanged ? 'prepareAndUpdate' : 'update';\n\n        updateMethods[updateMethod].call(this);\n\n        // Resize loading effect\n        this._loadingFX && this._loadingFX.resize();\n\n        this[IN_MAIN_PROCESS] = false;\n\n        var silent = opts && opts.silent;\n\n        flushPendingActions.call(this, silent);\n\n        triggerUpdatedEvent.call(this, silent);\n    };\n\n    /**\n     * Show loading effect\n     * @param  {string} [name='default']\n     * @param  {Object} [cfg]\n     */\n    echartsProto.showLoading = function (name, cfg) {\n        if (zrUtil.isObject(name)) {\n            cfg = name;\n            name = '';\n        }\n        name = name || 'default';\n\n        this.hideLoading();\n        if (!loadingEffects[name]) {\n            if (__DEV__) {\n                console.warn('Loading effects ' + name + ' not exists.');\n            }\n            return;\n        }\n        var el = loadingEffects[name](this._api, cfg);\n        var zr = this._zr;\n        this._loadingFX = el;\n\n        zr.add(el);\n    };\n\n    /**\n     * Hide loading effect\n     */\n    echartsProto.hideLoading = function () {\n        this._loadingFX && this._zr.remove(this._loadingFX);\n        this._loadingFX = null;\n    };\n\n    /**\n     * @param {Object} eventObj\n     * @return {Object}\n     */\n    echartsProto.makeActionFromEvent = function (eventObj) {\n        var payload = zrUtil.extend({}, eventObj);\n        payload.type = eventActionMap[eventObj.type];\n        return payload;\n    };\n\n    /**\n     * @pubilc\n     * @param {Object} payload\n     * @param {string} [payload.type] Action type\n     * @param {Object|boolean} [opt] If pass boolean, means opt.silent\n     * @param {boolean} [opt.silent=false] Whether trigger events.\n     * @param {boolean} [opt.flush=undefined]\n     *                  true: Flush immediately, and then pixel in canvas can be fetched\n     *                      immediately. Caution: it might affect performance.\n     *                  false: Not not flush.\n     *                  undefined: Auto decide whether perform flush.\n     */\n    echartsProto.dispatchAction = function (payload, opt) {\n        if (!zrUtil.isObject(opt)) {\n            opt = {silent: !!opt};\n        }\n\n        if (!actions[payload.type]) {\n            return;\n        }\n\n        // May dispatchAction in rendering procedure\n        if (this[IN_MAIN_PROCESS]) {\n            this._pendingActions.push(payload);\n            return;\n        }\n\n        doDispatchAction.call(this, payload, opt.silent);\n\n        if (opt.flush) {\n            this._zr.flush(true);\n        }\n        else if (opt.flush !== false && env.browser.weChat) {\n            // In WeChat embeded browser, `requestAnimationFrame` and `setInterval`\n            // hang when sliding page (on touch event), which cause that zr does not\n            // refresh util user interaction finished, which is not expected.\n            // But `dispatchAction` may be called too frequently when pan on touch\n            // screen, which impacts performance if do not throttle them.\n            this._throttledZrFlush();\n        }\n\n        flushPendingActions.call(this, opt.silent);\n\n        triggerUpdatedEvent.call(this, opt.silent);\n    };\n\n    function doDispatchAction(payload, silent) {\n        var payloadType = payload.type;\n        var escapeConnect = payload.escapeConnect;\n        var actionWrap = actions[payloadType];\n        var actionInfo = actionWrap.actionInfo;\n\n        var cptType = (actionInfo.update || 'update').split(':');\n        var updateMethod = cptType.pop();\n        cptType = cptType[0] != null && parseClassType(cptType[0]);\n\n        this[IN_MAIN_PROCESS] = true;\n\n        var payloads = [payload];\n        var batched = false;\n        // Batch action\n        if (payload.batch) {\n            batched = true;\n            payloads = zrUtil.map(payload.batch, function (item) {\n                item = zrUtil.defaults(zrUtil.extend({}, item), payload);\n                item.batch = null;\n                return item;\n            });\n        }\n\n        var eventObjBatch = [];\n        var eventObj;\n        var isHighDown = payloadType === 'highlight' || payloadType === 'downplay';\n\n        each(payloads, function (batchItem) {\n            // Action can specify the event by return it.\n            eventObj = actionWrap.action(batchItem, this._model, this._api);\n            // Emit event outside\n            eventObj = eventObj || zrUtil.extend({}, batchItem);\n            // Convert type to eventType\n            eventObj.type = actionInfo.event || eventObj.type;\n            eventObjBatch.push(eventObj);\n\n            // light update does not perform data process, layout and visual.\n            if (isHighDown) {\n                // method, payload, mainType, subType\n                updateDirectly(this, updateMethod, batchItem, 'series');\n            }\n            else if (cptType) {\n                updateDirectly(this, updateMethod, batchItem, cptType.main, cptType.sub);\n            }\n        }, this);\n\n        if (updateMethod !== 'none' && !isHighDown && !cptType) {\n            // Still dirty\n            if (this[OPTION_UPDATED]) {\n                // FIXME Pass payload ?\n                updateMethods.prepareAndUpdate.call(this, payload);\n                this[OPTION_UPDATED] = false;\n            }\n            else {\n                updateMethods[updateMethod].call(this, payload);\n            }\n        }\n\n        // Follow the rule of action batch\n        if (batched) {\n            eventObj = {\n                type: actionInfo.event || payloadType,\n                escapeConnect: escapeConnect,\n                batch: eventObjBatch\n            };\n        }\n        else {\n            eventObj = eventObjBatch[0];\n        }\n\n        this[IN_MAIN_PROCESS] = false;\n\n        !silent && this._messageCenter.trigger(eventObj.type, eventObj);\n    }\n\n    function flushPendingActions(silent) {\n        var pendingActions = this._pendingActions;\n        while (pendingActions.length) {\n            var payload = pendingActions.shift();\n            doDispatchAction.call(this, payload, silent);\n        }\n    }\n\n    function triggerUpdatedEvent(silent) {\n        !silent && this.trigger('updated');\n    }\n\n    /**\n     * Register event\n     * @method\n     */\n    echartsProto.on = createRegisterEventWithLowercaseName('on');\n    echartsProto.off = createRegisterEventWithLowercaseName('off');\n    echartsProto.one = createRegisterEventWithLowercaseName('one');\n\n    /**\n     * @param {string} methodName\n     * @private\n     */\n    function invokeUpdateMethod(methodName, ecModel, payload) {\n        var api = this._api;\n\n        // Update all components\n        each(this._componentsViews, function (component) {\n            var componentModel = component.__model;\n            component[methodName](componentModel, ecModel, api, payload);\n\n            updateZ(componentModel, component);\n        }, this);\n\n        // Upate all charts\n        ecModel.eachSeries(function (seriesModel, idx) {\n            var chart = this._chartsMap[seriesModel.__viewId];\n            chart[methodName](seriesModel, ecModel, api, payload);\n\n            updateZ(seriesModel, chart);\n\n            updateProgressiveAndBlend(seriesModel, chart);\n        }, this);\n\n        // If use hover layer\n        updateHoverLayerStatus(this._zr, ecModel);\n\n        // Post render\n        each(postUpdateFuncs, function (func) {\n            func(ecModel, api);\n        });\n    }\n\n    /**\n     * Prepare view instances of charts and components\n     * @param  {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function prepareView(type, ecModel) {\n        var isComponent = type === 'component';\n        var viewList = isComponent ? this._componentsViews : this._chartsViews;\n        var viewMap = isComponent ? this._componentsMap : this._chartsMap;\n        var zr = this._zr;\n\n        for (var i = 0; i < viewList.length; i++) {\n            viewList[i].__alive = false;\n        }\n\n        ecModel[isComponent ? 'eachComponent' : 'eachSeries'](function (componentType, model) {\n            if (isComponent) {\n                if (componentType === 'series') {\n                    return;\n                }\n            }\n            else {\n                model = componentType;\n            }\n\n            // Consider: id same and type changed.\n            var viewId = '_ec_' + model.id + '_' + model.type;\n            var view = viewMap[viewId];\n            if (!view) {\n                var classType = parseClassType(model.type);\n                var Clazz = isComponent\n                    ? ComponentView.getClass(classType.main, classType.sub)\n                    : ChartView.getClass(classType.sub);\n                if (Clazz) {\n                    view = new Clazz();\n                    view.init(ecModel, this._api);\n                    viewMap[viewId] = view;\n                    viewList.push(view);\n                    zr.add(view.group);\n                }\n                else {\n                    // Error\n                    return;\n                }\n            }\n\n            model.__viewId = view.__id = viewId;\n            view.__alive = true;\n            view.__model = model;\n            view.group.__ecComponentInfo = {\n                mainType: model.mainType,\n                index: model.componentIndex\n            };\n        }, this);\n\n        for (var i = 0; i < viewList.length;) {\n            var view = viewList[i];\n            if (!view.__alive) {\n                zr.remove(view.group);\n                view.dispose(ecModel, this._api);\n                viewList.splice(i, 1);\n                delete viewMap[view.__id];\n                view.__id = view.group.__ecComponentInfo = null;\n            }\n            else {\n                i++;\n            }\n        }\n    }\n\n    /**\n     * Processor data in each series\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function processData(ecModel, api) {\n        each(dataProcessorFuncs, function (process) {\n            process.func(ecModel, api);\n        });\n    }\n\n    /**\n     * @private\n     */\n    function stackSeriesData(ecModel) {\n        var stackedDataMap = {};\n        ecModel.eachSeries(function (series) {\n            var stack = series.get('stack');\n            var data = series.getData();\n            if (stack && data.type === 'list') {\n                var previousStack = stackedDataMap[stack];\n                // Avoid conflict with Object.prototype\n                if (stackedDataMap.hasOwnProperty(stack) && previousStack) {\n                    data.stackedOn = previousStack;\n                }\n                stackedDataMap[stack] = data;\n            }\n        });\n    }\n\n    /**\n     * Layout before each chart render there series, special visual encoding stage\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function doLayout(ecModel, payload) {\n        var api = this._api;\n        each(visualFuncs, function (visual) {\n            if (visual.isLayout) {\n                visual.func(ecModel, api, payload);\n            }\n        });\n    }\n\n    /**\n     * Encode visual infomation from data after data processing\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @param {object} layout\n     * @param {boolean} [excludesLayout]\n     * @private\n     */\n    function doVisualEncoding(ecModel, payload, excludesLayout) {\n        var api = this._api;\n        ecModel.clearColorPalette();\n        ecModel.eachSeries(function (seriesModel) {\n            seriesModel.clearColorPalette();\n        });\n        each(visualFuncs, function (visual) {\n            (!excludesLayout || !visual.isLayout)\n                && visual.func(ecModel, api, payload);\n        });\n    }\n\n    /**\n     * Render each chart and component\n     * @private\n     */\n    function doRender(ecModel, payload) {\n        var api = this._api;\n        // Render all components\n        each(this._componentsViews, function (componentView) {\n            var componentModel = componentView.__model;\n            componentView.render(componentModel, ecModel, api, payload);\n\n            updateZ(componentModel, componentView);\n        }, this);\n\n        each(this._chartsViews, function (chart) {\n            chart.__alive = false;\n        }, this);\n\n        // Render all charts\n        ecModel.eachSeries(function (seriesModel, idx) {\n            var chartView = this._chartsMap[seriesModel.__viewId];\n            chartView.__alive = true;\n            chartView.render(seriesModel, ecModel, api, payload);\n\n            chartView.group.silent = !!seriesModel.get('silent');\n\n            updateZ(seriesModel, chartView);\n\n            updateProgressiveAndBlend(seriesModel, chartView);\n\n        }, this);\n\n        // If use hover layer\n        updateHoverLayerStatus(this._zr, ecModel);\n\n        // Remove groups of unrendered charts\n        each(this._chartsViews, function (chart) {\n            if (!chart.__alive) {\n                chart.remove(ecModel, api);\n            }\n        }, this);\n    }\n\n    var MOUSE_EVENT_NAMES = [\n        'click', 'dblclick', 'mouseover', 'mouseout', 'mousemove',\n        'mousedown', 'mouseup', 'globalout', 'contextmenu'\n    ];\n    /**\n     * @private\n     */\n    echartsProto._initEvents = function () {\n        each(MOUSE_EVENT_NAMES, function (eveName) {\n            this._zr.on(eveName, function (e) {\n                var ecModel = this.getModel();\n                var el = e.target;\n                var params;\n\n                // no e.target when 'globalout'.\n                if (eveName === 'globalout') {\n                    params = {};\n                }\n                else if (el && el.dataIndex != null) {\n                    var dataModel = el.dataModel || ecModel.getSeriesByIndex(el.seriesIndex);\n                    params = dataModel && dataModel.getDataParams(el.dataIndex, el.dataType) || {};\n                }\n                // If element has custom eventData of components\n                else if (el && el.eventData) {\n                    params = zrUtil.extend({}, el.eventData);\n                }\n\n                if (params) {\n                    params.event = e;\n                    params.type = eveName;\n                    this.trigger(eveName, params);\n                }\n\n            }, this);\n        }, this);\n\n        each(eventActionMap, function (actionType, eventType) {\n            this._messageCenter.on(eventType, function (event) {\n                this.trigger(eventType, event);\n            }, this);\n        }, this);\n    };\n\n    /**\n     * @return {boolean}\n     */\n    echartsProto.isDisposed = function () {\n        return this._disposed;\n    };\n\n    /**\n     * Clear\n     */\n    echartsProto.clear = function () {\n        this.setOption({ series: [] }, true);\n    };\n\n    /**\n     * Dispose instance\n     */\n    echartsProto.dispose = function () {\n        if (this._disposed) {\n            if (__DEV__) {\n                console.warn('Instance ' + this.id + ' has been disposed');\n            }\n            return;\n        }\n        this._disposed = true;\n\n        var api = this._api;\n        var ecModel = this._model;\n\n        each(this._componentsViews, function (component) {\n            component.dispose(ecModel, api);\n        });\n        each(this._chartsViews, function (chart) {\n            chart.dispose(ecModel, api);\n        });\n\n        // Dispose after all views disposed\n        this._zr.dispose();\n\n        delete instances[this.id];\n    };\n\n    zrUtil.mixin(ECharts, Eventful);\n\n    function updateHoverLayerStatus(zr, ecModel) {\n        var storage = zr.storage;\n        var elCount = 0;\n        storage.traverse(function (el) {\n            if (!el.isGroup) {\n                elCount++;\n            }\n        });\n        if (elCount > ecModel.get('hoverLayerThreshold') && !env.node) {\n            storage.traverse(function (el) {\n                if (!el.isGroup) {\n                    el.useHoverLayer = true;\n                }\n            });\n        }\n    }\n\n    /**\n     * Update chart progressive and blend.\n     * @param {module:echarts/model/Series|module:echarts/model/Component} model\n     * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n     */\n    function updateProgressiveAndBlend(seriesModel, chartView) {\n        // Progressive configuration\n        var elCount = 0;\n        chartView.group.traverse(function (el) {\n            if (el.type !== 'group' && !el.ignore) {\n                elCount++;\n            }\n        });\n        var frameDrawNum = +seriesModel.get('progressive');\n        var needProgressive = elCount > seriesModel.get('progressiveThreshold') && frameDrawNum && !env.node;\n        if (needProgressive) {\n            chartView.group.traverse(function (el) {\n                // FIXME marker and other components\n                if (!el.isGroup) {\n                    el.progressive = needProgressive ?\n                        Math.floor(elCount++ / frameDrawNum) : -1;\n                    if (needProgressive) {\n                        el.stopAnimation(true);\n                    }\n                }\n            });\n        }\n\n        // Blend configration\n        var blendMode = seriesModel.get('blendMode') || null;\n        if (__DEV__) {\n            if (!env.canvasSupported && blendMode && blendMode !== 'source-over') {\n                console.warn('Only canvas support blendMode');\n            }\n        }\n        chartView.group.traverse(function (el) {\n            // FIXME marker and other components\n            if (!el.isGroup) {\n                el.setStyle('blend', blendMode);\n            }\n        });\n    }\n\n    /**\n     * @param {module:echarts/model/Series|module:echarts/model/Component} model\n     * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n     */\n    function updateZ(model, view) {\n        var z = model.get('z');\n        var zlevel = model.get('zlevel');\n        // Set z and zlevel\n        view.group.traverse(function (el) {\n            if (el.type !== 'group') {\n                z != null && (el.z = z);\n                zlevel != null && (el.zlevel = zlevel);\n            }\n        });\n    }\n\n    function createExtensionAPI(ecInstance) {\n        var coordSysMgr = ecInstance._coordSysMgr;\n        return zrUtil.extend(new ExtensionAPI(ecInstance), {\n            // Inject methods\n            getCoordinateSystems: zrUtil.bind(\n                coordSysMgr.getCoordinateSystems, coordSysMgr\n            ),\n            getComponentByElement: function (el) {\n                while (el) {\n                    var modelInfo = el.__ecComponentInfo;\n                    if (modelInfo != null) {\n                        return ecInstance._model.getComponent(modelInfo.mainType, modelInfo.index);\n                    }\n                    el = el.parent;\n                }\n            }\n        });\n    }\n\n    /**\n     * @type {Object} key: actionType.\n     * @inner\n     */\n    var actions = {};\n\n    /**\n     * Map eventType to actionType\n     * @type {Object}\n     */\n    var eventActionMap = {};\n\n    /**\n     * Data processor functions of each stage\n     * @type {Array.<Object.<string, Function>>}\n     * @inner\n     */\n    var dataProcessorFuncs = [];\n\n    /**\n     * @type {Array.<Function>}\n     * @inner\n     */\n    var optionPreprocessorFuncs = [];\n\n    /**\n     * @type {Array.<Function>}\n     * @inner\n     */\n    var postUpdateFuncs = [];\n\n    /**\n     * Visual encoding functions of each stage\n     * @type {Array.<Object.<string, Function>>}\n     * @inner\n     */\n    var visualFuncs = [];\n    /**\n     * Theme storage\n     * @type {Object.<key, Object>}\n     */\n    var themeStorage = {};\n    /**\n     * Loading effects\n     */\n    var loadingEffects = {};\n\n\n    var instances = {};\n    var connectedGroups = {};\n\n    var idBase = new Date() - 0;\n    var groupIdBase = new Date() - 0;\n    var DOM_ATTRIBUTE_KEY = '_echarts_instance_';\n\n    /**\n     * @alias module:echarts\n     */\n    var echarts = {\n        /**\n         * @type {number}\n         */\n        version: '3.6.2',\n        dependencies: {\n            zrender: '3.5.2'\n        }\n    };\n\n    function enableConnect(chart) {\n        var STATUS_PENDING = 0;\n        var STATUS_UPDATING = 1;\n        var STATUS_UPDATED = 2;\n        var STATUS_KEY = '__connectUpdateStatus';\n\n        function updateConnectedChartsStatus(charts, status) {\n            for (var i = 0; i < charts.length; i++) {\n                var otherChart = charts[i];\n                otherChart[STATUS_KEY] = status;\n            }\n        }\n\n        zrUtil.each(eventActionMap, function (actionType, eventType) {\n            chart._messageCenter.on(eventType, function (event) {\n                if (connectedGroups[chart.group] && chart[STATUS_KEY] !== STATUS_PENDING) {\n                    if (event && event.escapeConnect) {\n                        return;\n                    }\n\n                    var action = chart.makeActionFromEvent(event);\n                    var otherCharts = [];\n\n                    zrUtil.each(instances, function (otherChart) {\n                        if (otherChart !== chart && otherChart.group === chart.group) {\n                            otherCharts.push(otherChart);\n                        }\n                    });\n\n                    updateConnectedChartsStatus(otherCharts, STATUS_PENDING);\n                    each(otherCharts, function (otherChart) {\n                        if (otherChart[STATUS_KEY] !== STATUS_UPDATING) {\n                            otherChart.dispatchAction(action);\n                        }\n                    });\n                    updateConnectedChartsStatus(otherCharts, STATUS_UPDATED);\n                }\n            });\n        });\n    }\n\n    /**\n     * @param {HTMLDomElement} dom\n     * @param {Object} [theme]\n     * @param {Object} opts\n     * @param {number} [opts.devicePixelRatio] Use window.devicePixelRatio by default\n     * @param {string} [opts.renderer] Currently only 'canvas' is supported.\n     * @param {number} [opts.width] Use clientWidth of the input `dom` by default.\n     *                              Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Use clientHeight of the input `dom` by default.\n     *                               Can be 'auto' (the same as null/undefined)\n     */\n    echarts.init = function (dom, theme, opts) {\n        if (__DEV__) {\n            // Check version\n            if ((zrender.version.replace('.', '') - 0) < (echarts.dependencies.zrender.replace('.', '') - 0)) {\n                throw new Error(\n                    'ZRender ' + zrender.version\n                    + ' is too old for ECharts ' + echarts.version\n                    + '. Current version need ZRender '\n                    + echarts.dependencies.zrender + '+'\n                );\n            }\n\n            if (!dom) {\n                throw new Error('Initialize failed: invalid dom.');\n            }\n        }\n\n        var existInstance = echarts.getInstanceByDom(dom);\n        if (existInstance) {\n            if (__DEV__) {\n                console.warn('There is a chart instance already initialized on the dom.');\n            }\n            return existInstance;\n        }\n\n        if (__DEV__) {\n            if (zrUtil.isDom(dom)\n                && dom.nodeName.toUpperCase() !== 'CANVAS'\n                && (\n                    (!dom.clientWidth && (!opts || opts.width == null))\n                    || (!dom.clientHeight && (!opts || opts.height == null))\n                )\n            ) {\n                console.warn('Can\\'t get dom width or height');\n            }\n        }\n\n        var chart = new ECharts(dom, theme, opts);\n        chart.id = 'ec_' + idBase++;\n        instances[chart.id] = chart;\n\n        if (dom.setAttribute) {\n            dom.setAttribute(DOM_ATTRIBUTE_KEY, chart.id);\n        }\n        else {\n            dom[DOM_ATTRIBUTE_KEY] = chart.id;\n        }\n\n        enableConnect(chart);\n\n        return chart;\n    };\n\n    /**\n     * @return {string|Array.<module:echarts~ECharts>} groupId\n     */\n    echarts.connect = function (groupId) {\n        // Is array of charts\n        if (zrUtil.isArray(groupId)) {\n            var charts = groupId;\n            groupId = null;\n            // If any chart has group\n            zrUtil.each(charts, function (chart) {\n                if (chart.group != null) {\n                    groupId = chart.group;\n                }\n            });\n            groupId = groupId || ('g_' + groupIdBase++);\n            zrUtil.each(charts, function (chart) {\n                chart.group = groupId;\n            });\n        }\n        connectedGroups[groupId] = true;\n        return groupId;\n    };\n\n    /**\n     * @DEPRECATED\n     * @return {string} groupId\n     */\n    echarts.disConnect = function (groupId) {\n        connectedGroups[groupId] = false;\n    };\n\n    /**\n     * @return {string} groupId\n     */\n    echarts.disconnect = echarts.disConnect;\n\n    /**\n     * Dispose a chart instance\n     * @param  {module:echarts~ECharts|HTMLDomElement|string} chart\n     */\n    echarts.dispose = function (chart) {\n        if (typeof chart === 'string') {\n            chart = instances[chart];\n        }\n        else if (!(chart instanceof ECharts)){\n            // Try to treat as dom\n            chart = echarts.getInstanceByDom(chart);\n        }\n        if ((chart instanceof ECharts) && !chart.isDisposed()) {\n            chart.dispose();\n        }\n    };\n\n    /**\n     * @param  {HTMLDomElement} dom\n     * @return {echarts~ECharts}\n     */\n    echarts.getInstanceByDom = function (dom) {\n        var key;\n        if (dom.getAttribute) {\n            key = dom.getAttribute(DOM_ATTRIBUTE_KEY);\n        }\n        else {\n            key = dom[DOM_ATTRIBUTE_KEY];\n        }\n        return instances[key];\n    };\n\n    /**\n     * @param {string} key\n     * @return {echarts~ECharts}\n     */\n    echarts.getInstanceById = function (key) {\n        return instances[key];\n    };\n\n    /**\n     * Register theme\n     */\n    echarts.registerTheme = function (name, theme) {\n        themeStorage[name] = theme;\n    };\n\n    /**\n     * Register option preprocessor\n     * @param {Function} preprocessorFunc\n     */\n    echarts.registerPreprocessor = function (preprocessorFunc) {\n        optionPreprocessorFuncs.push(preprocessorFunc);\n    };\n\n    /**\n     * @param {number} [priority=1000]\n     * @param {Function} processorFunc\n     */\n    echarts.registerProcessor = function (priority, processorFunc) {\n        if (typeof priority === 'function') {\n            processorFunc = priority;\n            priority = PRIORITY_PROCESSOR_FILTER;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown processor priority');\n            }\n        }\n        dataProcessorFuncs.push({\n            prio: priority,\n            func: processorFunc\n        });\n    };\n\n    /**\n     * Register postUpdater\n     * @param {Function} postUpdateFunc\n     */\n    echarts.registerPostUpdate = function (postUpdateFunc) {\n        postUpdateFuncs.push(postUpdateFunc);\n    };\n\n    /**\n     * Usage:\n     * registerAction('someAction', 'someEvent', function () { ... });\n     * registerAction('someAction', function () { ... });\n     * registerAction(\n     *     {type: 'someAction', event: 'someEvent', update: 'updateView'},\n     *     function () { ... }\n     * );\n     *\n     * @param {(string|Object)} actionInfo\n     * @param {string} actionInfo.type\n     * @param {string} [actionInfo.event]\n     * @param {string} [actionInfo.update]\n     * @param {string} [eventName]\n     * @param {Function} action\n     */\n    echarts.registerAction = function (actionInfo, eventName, action) {\n        if (typeof eventName === 'function') {\n            action = eventName;\n            eventName = '';\n        }\n        var actionType = zrUtil.isObject(actionInfo)\n            ? actionInfo.type\n            : ([actionInfo, actionInfo = {\n                event: eventName\n            }][0]);\n\n        // Event name is all lowercase\n        actionInfo.event = (actionInfo.event || actionType).toLowerCase();\n        eventName = actionInfo.event;\n\n        // Validate action type and event name.\n        zrUtil.assert(ACTION_REG.test(actionType) && ACTION_REG.test(eventName));\n\n        if (!actions[actionType]) {\n            actions[actionType] = {action: action, actionInfo: actionInfo};\n        }\n        eventActionMap[eventName] = actionType;\n    };\n\n    /**\n     * @param {string} type\n     * @param {*} CoordinateSystem\n     */\n    echarts.registerCoordinateSystem = function (type, CoordinateSystem) {\n        CoordinateSystemManager.register(type, CoordinateSystem);\n    };\n\n    /**\n     * Get dimensions of specified coordinate system.\n     * @param {string} type\n     * @return {Array.<string|Object>}\n     */\n    echarts.getCoordinateSystemDimensions = function (type) {\n        var coordSysCreator = CoordinateSystemManager.get(type);\n        if (coordSysCreator) {\n            return coordSysCreator.getDimensionsInfo\n                    ? coordSysCreator.getDimensionsInfo()\n                    : coordSysCreator.dimensions.slice();\n        }\n    };\n\n    /**\n     * Layout is a special stage of visual encoding\n     * Most visual encoding like color are common for different chart\n     * But each chart has it's own layout algorithm\n     *\n     * @param {number} [priority=1000]\n     * @param {Function} layoutFunc\n     */\n    echarts.registerLayout = function (priority, layoutFunc) {\n        if (typeof priority === 'function') {\n            layoutFunc = priority;\n            priority = PRIORITY_VISUAL_LAYOUT;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown layout priority');\n            }\n        }\n        visualFuncs.push({\n            prio: priority,\n            func: layoutFunc,\n            isLayout: true\n        });\n    };\n\n    /**\n     * @param {number} [priority=3000]\n     * @param {Function} visualFunc\n     */\n    echarts.registerVisual = function (priority, visualFunc) {\n        if (typeof priority === 'function') {\n            visualFunc = priority;\n            priority = PRIORITY_VISUAL_CHART;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown visual priority');\n            }\n        }\n        visualFuncs.push({\n            prio: priority,\n            func: visualFunc\n        });\n    };\n\n    /**\n     * @param {string} name\n     */\n    echarts.registerLoading = function (name, loadingFx) {\n        loadingEffects[name] = loadingFx;\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendComponentModel = function (opts/*, superClass*/) {\n        // var Clazz = ComponentModel;\n        // if (superClass) {\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n        // }\n        return ComponentModel.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendComponentView = function (opts/*, superClass*/) {\n        // var Clazz = ComponentView;\n        // if (superClass) {\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentView.getClass(classType.main, classType.sub, true);\n        // }\n        return ComponentView.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendSeriesModel = function (opts/*, superClass*/) {\n        // var Clazz = SeriesModel;\n        // if (superClass) {\n        //     superClass = 'series.' + superClass.replace('series.', '');\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n        // }\n        return SeriesModel.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendChartView = function (opts/*, superClass*/) {\n        // var Clazz = ChartView;\n        // if (superClass) {\n        //     superClass = superClass.replace('series.', '');\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ChartView.getClass(classType.main, true);\n        // }\n        return ChartView.extend(opts);\n    };\n\n    /**\n     * ZRender need a canvas context to do measureText.\n     * But in node environment canvas may be created by node-canvas.\n     * So we need to specify how to create a canvas instead of using document.createElement('canvas')\n     *\n     * Be careful of using it in the browser.\n     *\n     * @param {Function} creator\n     * @example\n     *     var Canvas = require('canvas');\n     *     var echarts = require('echarts');\n     *     echarts.setCanvasCreator(function () {\n     *         // Small size is enough.\n     *         return new Canvas(32, 32);\n     *     });\n     */\n    echarts.setCanvasCreator = function (creator) {\n        zrUtil.createCanvas = creator;\n    };\n\n    echarts.registerVisual(PRIORITY_VISUAL_GLOBAL, __webpack_require__(637));\n    echarts.registerPreprocessor(__webpack_require__(631));\n    echarts.registerLoading('default', __webpack_require__(622));\n\n    // Default action\n    echarts.registerAction({\n        type: 'highlight',\n        event: 'highlight',\n        update: 'highlight'\n    }, zrUtil.noop);\n    echarts.registerAction({\n        type: 'downplay',\n        event: 'downplay',\n        update: 'downplay'\n    }, zrUtil.noop);\n\n\n    // --------\n    // Exports\n    // --------\n    echarts.zrender = zrender;\n\n    echarts.List = __webpack_require__(530);\n    echarts.Model = __webpack_require__(463);\n\n    echarts.Axis = __webpack_require__(527);\n\n    echarts.graphic = __webpack_require__(454);\n    echarts.number = __webpack_require__(457);\n    echarts.format = __webpack_require__(461);\n    echarts.throttle = throttle.throttle;\n    echarts.matrix = __webpack_require__(475);\n    echarts.vector = __webpack_require__(458);\n    echarts.color = __webpack_require__(477);\n\n    echarts.util = {};\n    each([\n            'map', 'each', 'filter', 'indexOf', 'inherits', 'reduce', 'filter',\n            'bind', 'curry', 'isArray', 'isString', 'isObject', 'isFunction',\n            'extend', 'defaults', 'clone', 'merge'\n        ],\n        function (name) {\n            echarts.util[name] = zrUtil[name];\n        }\n    );\n\n    echarts.helper = __webpack_require__(620);\n\n\n    // PRIORITY\n    echarts.PRIORITY = {\n        PROCESSOR: {\n            FILTER: PRIORITY_PROCESSOR_FILTER,\n            STATISTIC: PRIORITY_PROCESSOR_STATISTIC\n        },\n        VISUAL: {\n            LAYOUT: PRIORITY_VISUAL_LAYOUT,\n            GLOBAL: PRIORITY_VISUAL_GLOBAL,\n            CHART: PRIORITY_VISUAL_CHART,\n            COMPONENT: PRIORITY_VISUAL_COMPONENT,\n            BRUSH: PRIORITY_VISUAL_BRUSH\n        }\n    };\n\n    module.exports = echarts;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(78)))\n\n/***/ }),\n/* 456 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var formatUtil = __webpack_require__(461);\n    var nubmerUtil = __webpack_require__(457);\n    var Model = __webpack_require__(463);\n    var zrUtil = __webpack_require__(453);\n    var each = zrUtil.each;\n    var isObject = zrUtil.isObject;\n\n    var modelUtil = {};\n\n    /**\n     * If value is not array, then translate it to array.\n     * @param  {*} value\n     * @return {Array} [value] or value\n     */\n    modelUtil.normalizeToArray = function (value) {\n        return value instanceof Array\n            ? value\n            : value == null\n            ? []\n            : [value];\n    };\n\n    /**\n     * Sync default option between normal and emphasis like `position` and `show`\n     * In case some one will write code like\n     *     label: {\n     *         normal: {\n     *             show: false,\n     *             position: 'outside',\n     *             textStyle: {\n     *                 fontSize: 18\n     *             }\n     *         },\n     *         emphasis: {\n     *             show: true\n     *         }\n     *     }\n     * @param {Object} opt\n     * @param {Array.<string>} subOpts\n     */\n     modelUtil.defaultEmphasis = function (opt, subOpts) {\n        if (opt) {\n            var emphasisOpt = opt.emphasis = opt.emphasis || {};\n            var normalOpt = opt.normal = opt.normal || {};\n\n            // Default emphasis option from normal\n            each(subOpts, function (subOptName) {\n                var val = zrUtil.retrieve(emphasisOpt[subOptName], normalOpt[subOptName]);\n                if (val != null) {\n                    emphasisOpt[subOptName] = val;\n                }\n            });\n        }\n    };\n\n    modelUtil.LABEL_OPTIONS = ['position', 'offset', 'show', 'textStyle', 'distance', 'formatter'];\n\n    /**\n     * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n     * This helper method retieves value from data.\n     * @param {string|number|Date|Array|Object} dataItem\n     * @return {number|string|Date|Array.<number|string|Date>}\n     */\n    modelUtil.getDataItemValue = function (dataItem) {\n        // Performance sensitive.\n        return dataItem && (dataItem.value == null ? dataItem : dataItem.value);\n    };\n\n    /**\n     * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n     * This helper method determine if dataItem has extra option besides value\n     * @param {string|number|Date|Array|Object} dataItem\n     */\n    modelUtil.isDataItemOption = function (dataItem) {\n        return isObject(dataItem)\n            && !(dataItem instanceof Array);\n            // // markLine data can be array\n            // && !(dataItem[0] && isObject(dataItem[0]) && !(dataItem[0] instanceof Array));\n    };\n\n    /**\n     * This helper method convert value in data.\n     * @param {string|number|Date} value\n     * @param {Object|string} [dimInfo] If string (like 'x'), dimType defaults 'number'.\n     */\n    modelUtil.converDataValue = function (value, dimInfo) {\n        // Performance sensitive.\n        var dimType = dimInfo && dimInfo.type;\n        if (dimType === 'ordinal') {\n            return value;\n        }\n\n        if (dimType === 'time'\n            // spead up when using timestamp\n            && typeof value !== 'number'\n            && value != null\n            && value !== '-'\n        ) {\n            value = +nubmerUtil.parseDate(value);\n        }\n\n        // dimType defaults 'number'.\n        // If dimType is not ordinal and value is null or undefined or NaN or '-',\n        // parse to NaN.\n        return (value == null || value === '')\n            ? NaN : +value; // If string (like '-'), using '+' parse to NaN\n    };\n\n    /**\n     * Create a model proxy to be used in tooltip for edge data, markLine data, markPoint data.\n     * @param {module:echarts/data/List} data\n     * @param {Object} opt\n     * @param {string} [opt.seriesIndex]\n     * @param {Object} [opt.name]\n     * @param {Object} [opt.mainType]\n     * @param {Object} [opt.subType]\n     */\n    modelUtil.createDataFormatModel = function (data, opt) {\n        var model = new Model();\n        zrUtil.mixin(model, modelUtil.dataFormatMixin);\n        model.seriesIndex = opt.seriesIndex;\n        model.name = opt.name || '';\n        model.mainType = opt.mainType;\n        model.subType = opt.subType;\n\n        model.getData = function () {\n            return data;\n        };\n        return model;\n    };\n\n    // PENDING A little ugly\n    modelUtil.dataFormatMixin = {\n        /**\n         * Get params for formatter\n         * @param {number} dataIndex\n         * @param {string} [dataType]\n         * @return {Object}\n         */\n        getDataParams: function (dataIndex, dataType) {\n            var data = this.getData(dataType);\n            var rawValue = this.getRawValue(dataIndex, dataType);\n            var rawDataIndex = data.getRawIndex(dataIndex);\n            var name = data.getName(dataIndex, true);\n            var itemOpt = data.getRawDataItem(dataIndex);\n            var color = data.getItemVisual(dataIndex, 'color');\n\n            return {\n                componentType: this.mainType,\n                componentSubType: this.subType,\n                seriesType: this.mainType === 'series' ? this.subType : null,\n                seriesIndex: this.seriesIndex,\n                seriesId: this.id,\n                seriesName: this.name,\n                name: name,\n                dataIndex: rawDataIndex,\n                data: itemOpt,\n                dataType: dataType,\n                value: rawValue,\n                color: color,\n                marker: formatUtil.getTooltipMarker(color),\n\n                // Param name list for mapping `a`, `b`, `c`, `d`, `e`\n                $vars: ['seriesName', 'name', 'value']\n            };\n        },\n\n        /**\n         * Format label\n         * @param {number} dataIndex\n         * @param {string} [status='normal'] 'normal' or 'emphasis'\n         * @param {string} [dataType]\n         * @param {number} [dimIndex]\n         * @param {string} [labelProp='label']\n         * @return {string}\n         */\n        getFormattedLabel: function (dataIndex, status, dataType, dimIndex, labelProp) {\n            status = status || 'normal';\n            var data = this.getData(dataType);\n            var itemModel = data.getItemModel(dataIndex);\n\n            var params = this.getDataParams(dataIndex, dataType);\n            if (dimIndex != null && (params.value instanceof Array)) {\n                params.value = params.value[dimIndex];\n            }\n\n            var formatter = itemModel.get([labelProp || 'label', status, 'formatter']);\n\n            if (typeof formatter === 'function') {\n                params.status = status;\n                return formatter(params);\n            }\n            else if (typeof formatter === 'string') {\n                return formatUtil.formatTpl(formatter, params);\n            }\n        },\n\n        /**\n         * Get raw value in option\n         * @param {number} idx\n         * @param {string} [dataType]\n         * @return {Object}\n         */\n        getRawValue: function (idx, dataType) {\n            var data = this.getData(dataType);\n            var dataItem = data.getRawDataItem(idx);\n            if (dataItem != null) {\n                return (isObject(dataItem) && !(dataItem instanceof Array))\n                    ? dataItem.value : dataItem;\n            }\n        },\n\n        /**\n         * Should be implemented.\n         * @param {number} dataIndex\n         * @param {boolean} [multipleSeries=false]\n         * @param {number} [dataType]\n         * @return {string} tooltip string\n         */\n        formatTooltip: zrUtil.noop\n    };\n\n    /**\n     * Mapping to exists for merge.\n     *\n     * @public\n     * @param {Array.<Object>|Array.<module:echarts/model/Component>} exists\n     * @param {Object|Array.<Object>} newCptOptions\n     * @return {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n     *                          index of which is the same as exists.\n     */\n    modelUtil.mappingToExists = function (exists, newCptOptions) {\n        // Mapping by the order by original option (but not order of\n        // new option) in merge mode. Because we should ensure\n        // some specified index (like xAxisIndex) is consistent with\n        // original option, which is easy to understand, espatially in\n        // media query. And in most case, merge option is used to\n        // update partial option but not be expected to change order.\n        newCptOptions = (newCptOptions || []).slice();\n\n        var result = zrUtil.map(exists || [], function (obj, index) {\n            return {exist: obj};\n        });\n\n        // Mapping by id or name if specified.\n        each(newCptOptions, function (cptOption, index) {\n            if (!isObject(cptOption)) {\n                return;\n            }\n\n            // id has highest priority.\n            for (var i = 0; i < result.length; i++) {\n                if (!result[i].option // Consider name: two map to one.\n                    && cptOption.id != null\n                    && result[i].exist.id === cptOption.id + ''\n                ) {\n                    result[i].option = cptOption;\n                    newCptOptions[index] = null;\n                    return;\n                }\n            }\n\n            for (var i = 0; i < result.length; i++) {\n                var exist = result[i].exist;\n                if (!result[i].option // Consider name: two map to one.\n                    // Can not match when both ids exist but different.\n                    && (exist.id == null || cptOption.id == null)\n                    && cptOption.name != null\n                    && !modelUtil.isIdInner(cptOption)\n                    && !modelUtil.isIdInner(exist)\n                    && exist.name === cptOption.name + ''\n                ) {\n                    result[i].option = cptOption;\n                    newCptOptions[index] = null;\n                    return;\n                }\n            }\n        });\n\n        // Otherwise mapping by index.\n        each(newCptOptions, function (cptOption, index) {\n            if (!isObject(cptOption)) {\n                return;\n            }\n\n            var i = 0;\n            for (; i < result.length; i++) {\n                var exist = result[i].exist;\n                if (!result[i].option\n                    // Existing model that already has id should be able to\n                    // mapped to (because after mapping performed model may\n                    // be assigned with a id, whish should not affect next\n                    // mapping), except those has inner id.\n                    && !modelUtil.isIdInner(exist)\n                    // Caution:\n                    // Do not overwrite id. But name can be overwritten,\n                    // because axis use name as 'show label text'.\n                    // 'exist' always has id and name and we dont\n                    // need to check it.\n                    && cptOption.id == null\n                ) {\n                    result[i].option = cptOption;\n                    break;\n                }\n            }\n\n            if (i >= result.length) {\n                result.push({option: cptOption});\n            }\n        });\n\n        return result;\n    };\n\n    /**\n     * Make id and name for mapping result (result of mappingToExists)\n     * into `keyInfo` field.\n     *\n     * @public\n     * @param {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n     *                          which order is the same as exists.\n     * @return {Array.<Object>} The input.\n     */\n    modelUtil.makeIdAndName = function (mapResult) {\n        // We use this id to hash component models and view instances\n        // in echarts. id can be specified by user, or auto generated.\n\n        // The id generation rule ensures new view instance are able\n        // to mapped to old instance when setOption are called in\n        // no-merge mode. So we generate model id by name and plus\n        // type in view id.\n\n        // name can be duplicated among components, which is convenient\n        // to specify multi components (like series) by one name.\n\n        // Ensure that each id is distinct.\n        var idMap = zrUtil.createHashMap();\n\n        each(mapResult, function (item, index) {\n            var existCpt = item.exist;\n            existCpt && idMap.set(existCpt.id, item);\n        });\n\n        each(mapResult, function (item, index) {\n            var opt = item.option;\n\n            zrUtil.assert(\n                !opt || opt.id == null || !idMap.get(opt.id) || idMap.get(opt.id) === item,\n                'id duplicates: ' + (opt && opt.id)\n            );\n\n            opt && opt.id != null && idMap.set(opt.id, item);\n            !item.keyInfo && (item.keyInfo = {});\n        });\n\n        // Make name and id.\n        each(mapResult, function (item, index) {\n            var existCpt = item.exist;\n            var opt = item.option;\n            var keyInfo = item.keyInfo;\n\n            if (!isObject(opt)) {\n                return;\n            }\n\n            // name can be overwitten. Consider case: axis.name = '20km'.\n            // But id generated by name will not be changed, which affect\n            // only in that case: setOption with 'not merge mode' and view\n            // instance will be recreated, which can be accepted.\n            keyInfo.name = opt.name != null\n                ? opt.name + ''\n                : existCpt\n                ? existCpt.name\n                : '\\0-'; // name may be displayed on screen, so use '-'.\n\n            if (existCpt) {\n                keyInfo.id = existCpt.id;\n            }\n            else if (opt.id != null) {\n                keyInfo.id = opt.id + '';\n            }\n            else {\n                // Consider this situatoin:\n                //  optionA: [{name: 'a'}, {name: 'a'}, {..}]\n                //  optionB [{..}, {name: 'a'}, {name: 'a'}]\n                // Series with the same name between optionA and optionB\n                // should be mapped.\n                var idNum = 0;\n                do {\n                    keyInfo.id = '\\0' + keyInfo.name + '\\0' + idNum++;\n                }\n                while (idMap.get(keyInfo.id));\n            }\n\n            idMap.set(keyInfo.id, item);\n        });\n    };\n\n    /**\n     * @public\n     * @param {Object} cptOption\n     * @return {boolean}\n     */\n    modelUtil.isIdInner = function (cptOption) {\n        return isObject(cptOption)\n            && cptOption.id\n            && (cptOption.id + '').indexOf('\\0_ec_\\0') === 0;\n    };\n\n    /**\n     * A helper for removing duplicate items between batchA and batchB,\n     * and in themselves, and categorize by series.\n     *\n     * @param {Array.<Object>} batchA Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n     * @param {Array.<Object>} batchB Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n     * @return {Array.<Array.<Object>, Array.<Object>>} result: [resultBatchA, resultBatchB]\n     */\n    modelUtil.compressBatches = function (batchA, batchB) {\n        var mapA = {};\n        var mapB = {};\n\n        makeMap(batchA || [], mapA);\n        makeMap(batchB || [], mapB, mapA);\n\n        return [mapToArray(mapA), mapToArray(mapB)];\n\n        function makeMap(sourceBatch, map, otherMap) {\n            for (var i = 0, len = sourceBatch.length; i < len; i++) {\n                var seriesId = sourceBatch[i].seriesId;\n                var dataIndices = modelUtil.normalizeToArray(sourceBatch[i].dataIndex);\n                var otherDataIndices = otherMap && otherMap[seriesId];\n\n                for (var j = 0, lenj = dataIndices.length; j < lenj; j++) {\n                    var dataIndex = dataIndices[j];\n\n                    if (otherDataIndices && otherDataIndices[dataIndex]) {\n                        otherDataIndices[dataIndex] = null;\n                    }\n                    else {\n                        (map[seriesId] || (map[seriesId] = {}))[dataIndex] = 1;\n                    }\n                }\n            }\n        }\n\n        function mapToArray(map, isData) {\n            var result = [];\n            for (var i in map) {\n                if (map.hasOwnProperty(i) && map[i] != null) {\n                    if (isData) {\n                        result.push(+i);\n                    }\n                    else {\n                        var dataIndices = mapToArray(map[i], true);\n                        dataIndices.length && result.push({seriesId: i, dataIndex: dataIndices});\n                    }\n                }\n            }\n            return result;\n        }\n    };\n\n    /**\n     * @param {module:echarts/data/List} data\n     * @param {Object} payload Contains dataIndex (means rawIndex) / dataIndexInside / name\n     *                         each of which can be Array or primary type.\n     * @return {number|Array.<number>} dataIndex If not found, return undefined/null.\n     */\n    modelUtil.queryDataIndex = function (data, payload) {\n        if (payload.dataIndexInside != null) {\n            return payload.dataIndexInside;\n        }\n        else if (payload.dataIndex != null) {\n            return zrUtil.isArray(payload.dataIndex)\n                ? zrUtil.map(payload.dataIndex, function (value) {\n                    return data.indexOfRawIndex(value);\n                })\n                : data.indexOfRawIndex(payload.dataIndex);\n        }\n        else if (payload.name != null) {\n            return zrUtil.isArray(payload.name)\n                ? zrUtil.map(payload.name, function (value) {\n                    return data.indexOfName(value);\n                })\n                : data.indexOfName(payload.name);\n        }\n    };\n\n    /**\n     * Enable property storage to any host object.\n     * Notice: Serialization is not supported.\n     *\n     * For example:\n     * var get = modelUitl.makeGetter();\n     *\n     * function some(hostObj) {\n     *      get(hostObj)._someProperty = 1212;\n     *      ...\n     * }\n     *\n     * @return {Function}\n     */\n    modelUtil.makeGetter = (function () {\n        var index = 0;\n        return function () {\n            var key = '\\0__ec_prop_getter_' + index++;\n            return function (hostObj) {\n                return hostObj[key] || (hostObj[key] = {});\n            };\n        };\n    })();\n\n    /**\n     * @param {module:echarts/model/Global} ecModel\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex, seriesId, seriesName,\n     *            geoIndex, geoId, geoName,\n     *            bmapIndex, bmapId, bmapName,\n     *            xAxisIndex, xAxisId, xAxisName,\n     *            yAxisIndex, yAxisId, yAxisName,\n     *            gridIndex, gridId, gridName,\n     *            ... (can be extended)\n     *        }\n     *        Each properties can be number|string|Array.<number>|Array.<string>\n     *        For example, a finder could be\n     *        {\n     *            seriesIndex: 3,\n     *            geoId: ['aa', 'cc'],\n     *            gridName: ['xx', 'rr']\n     *        }\n     *        xxxIndex can be set as 'all' (means all xxx) or 'none' (means not specify)\n     *        If nothing or null/undefined specified, return nothing.\n     * @param {Object} [opt]\n     * @param {string} [opt.defaultMainType]\n     * @param {Array.<string>} [opt.includeMainTypes]\n     * @return {Object} result like:\n     *        {\n     *            seriesModels: [seriesModel1, seriesModel2],\n     *            seriesModel: seriesModel1, // The first model\n     *            geoModels: [geoModel1, geoModel2],\n     *            geoModel: geoModel1, // The first model\n     *            ...\n     *        }\n     */\n    modelUtil.parseFinder = function (ecModel, finder, opt) {\n        if (zrUtil.isString(finder)) {\n            var obj = {};\n            obj[finder + 'Index'] = 0;\n            finder = obj;\n        }\n\n        var defaultMainType = opt && opt.defaultMainType;\n        if (defaultMainType\n            && !has(finder, defaultMainType + 'Index')\n            && !has(finder, defaultMainType + 'Id')\n            && !has(finder, defaultMainType + 'Name')\n        ) {\n            finder[defaultMainType + 'Index'] = 0;\n        }\n\n        var result = {};\n\n        each(finder, function (value, key) {\n            var value = finder[key];\n\n            // Exclude 'dataIndex' and other illgal keys.\n            if (key === 'dataIndex' || key === 'dataIndexInside') {\n                result[key] = value;\n                return;\n            }\n\n            var parsedKey = key.match(/^(\\w+)(Index|Id|Name)$/) || [];\n            var mainType = parsedKey[1];\n            var queryType = (parsedKey[2] || '').toLowerCase();\n\n            if (!mainType\n                || !queryType\n                || value == null\n                || (queryType === 'index' && value === 'none')\n                || (opt && opt.includeMainTypes && zrUtil.indexOf(opt.includeMainTypes, mainType) < 0)\n            ) {\n                return;\n            }\n\n            var queryParam = {mainType: mainType};\n            if (queryType !== 'index' || value !== 'all') {\n                queryParam[queryType] = value;\n            }\n\n            var models = ecModel.queryComponents(queryParam);\n            result[mainType + 'Models'] = models;\n            result[mainType + 'Model'] = models[0];\n        });\n\n        return result;\n    };\n\n    /**\n     * @see {module:echarts/data/helper/completeDimensions}\n     * @param {module:echarts/data/List} data\n     * @param {string|number} dataDim\n     * @return {string}\n     */\n    modelUtil.dataDimToCoordDim = function (data, dataDim) {\n        var dimensions = data.dimensions;\n        dataDim = data.getDimension(dataDim);\n        for (var i = 0; i < dimensions.length; i++) {\n            var dimItem = data.getDimensionInfo(dimensions[i]);\n            if (dimItem.name === dataDim) {\n                return dimItem.coordDim;\n            }\n        }\n    };\n\n    /**\n     * @see {module:echarts/data/helper/completeDimensions}\n     * @param {module:echarts/data/List} data\n     * @param {string} coordDim\n     * @return {Array.<string>} data dimensions on the coordDim.\n     */\n    modelUtil.coordDimToDataDim = function (data, coordDim) {\n        var dataDim = [];\n        each(data.dimensions, function (dimName) {\n            var dimItem = data.getDimensionInfo(dimName);\n            if (dimItem.coordDim === coordDim) {\n                dataDim[dimItem.coordDimIndex] = dimItem.name;\n            }\n        });\n        return dataDim;\n    };\n\n    /**\n     * @see {module:echarts/data/helper/completeDimensions}\n     * @param {module:echarts/data/List} data\n     * @param {string} otherDim Can be `otherDims`\n     *                        like 'label' or 'tooltip'.\n     * @return {Array.<string>} data dimensions on the otherDim.\n     */\n    modelUtil.otherDimToDataDim = function (data, otherDim) {\n        var dataDim = [];\n        each(data.dimensions, function (dimName) {\n            var dimItem = data.getDimensionInfo(dimName);\n            var otherDims = dimItem.otherDims;\n            var dimIndex = otherDims[otherDim];\n            if (dimIndex != null && dimIndex !== false) {\n                dataDim[dimIndex] = dimItem.name;\n            }\n        });\n        return dataDim;\n    };\n\n    function has(obj, prop) {\n        return obj && obj.hasOwnProperty(prop);\n    }\n\n    module.exports = modelUtil;\n\n\n\n/***/ }),\n/* 457 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 数值处理模块\n * @module echarts/util/number\n */\n\n\n\n    var zrUtil = __webpack_require__(453);\n\n    var number = {};\n\n    var RADIAN_EPSILON = 1e-4;\n\n    function _trim(str) {\n        return str.replace(/^\\s+/, '').replace(/\\s+$/, '');\n    }\n\n    /**\n     * Linear mapping a value from domain to range\n     * @memberOf module:echarts/util/number\n     * @param  {(number|Array.<number>)} val\n     * @param  {Array.<number>} domain Domain extent domain[0] can be bigger than domain[1]\n     * @param  {Array.<number>} range  Range extent range[0] can be bigger than range[1]\n     * @param  {boolean} clamp\n     * @return {(number|Array.<number>}\n     */\n    number.linearMap = function (val, domain, range, clamp) {\n        var subDomain = domain[1] - domain[0];\n        var subRange = range[1] - range[0];\n\n        if (subDomain === 0) {\n            return subRange === 0\n                ? range[0]\n                : (range[0] + range[1]) / 2;\n        }\n\n        // Avoid accuracy problem in edge, such as\n        // 146.39 - 62.83 === 83.55999999999999.\n        // See echarts/test/ut/spec/util/number.js#linearMap#accuracyError\n        // It is a little verbose for efficiency considering this method\n        // is a hotspot.\n        if (clamp) {\n            if (subDomain > 0) {\n                if (val <= domain[0]) {\n                    return range[0];\n                }\n                else if (val >= domain[1]) {\n                    return range[1];\n                }\n            }\n            else {\n                if (val >= domain[0]) {\n                    return range[0];\n                }\n                else if (val <= domain[1]) {\n                    return range[1];\n                }\n            }\n        }\n        else {\n            if (val === domain[0]) {\n                return range[0];\n            }\n            if (val === domain[1]) {\n                return range[1];\n            }\n        }\n\n        return (val - domain[0]) / subDomain * subRange + range[0];\n    };\n\n    /**\n     * Convert a percent string to absolute number.\n     * Returns NaN if percent is not a valid string or number\n     * @memberOf module:echarts/util/number\n     * @param {string|number} percent\n     * @param {number} all\n     * @return {number}\n     */\n    number.parsePercent = function(percent, all) {\n        switch (percent) {\n            case 'center':\n            case 'middle':\n                percent = '50%';\n                break;\n            case 'left':\n            case 'top':\n                percent = '0%';\n                break;\n            case 'right':\n            case 'bottom':\n                percent = '100%';\n                break;\n        }\n        if (typeof percent === 'string') {\n            if (_trim(percent).match(/%$/)) {\n                return parseFloat(percent) / 100 * all;\n            }\n\n            return parseFloat(percent);\n        }\n\n        return percent == null ? NaN : +percent;\n    };\n\n    /**\n     * (1) Fix rounding error of float numbers.\n     * (2) Support return string to avoid scientific notation like '3.5e-7'.\n     *\n     * @param {number} x\n     * @param {number} [precision]\n     * @param {boolean} [returnStr]\n     * @return {number|string}\n     */\n    number.round = function (x, precision, returnStr) {\n        if (precision == null) {\n            precision = 10;\n        }\n        // Avoid range error\n        precision = Math.min(Math.max(0, precision), 20);\n        x = (+x).toFixed(precision);\n        return returnStr ? x : +x;\n    };\n\n    number.asc = function (arr) {\n        arr.sort(function (a, b) {\n            return a - b;\n        });\n        return arr;\n    };\n\n    /**\n     * Get precision\n     * @param {number} val\n     */\n    number.getPrecision = function (val) {\n        val = +val;\n        if (isNaN(val)) {\n            return 0;\n        }\n        // It is much faster than methods converting number to string as follows\n        //      var tmp = val.toString();\n        //      return tmp.length - 1 - tmp.indexOf('.');\n        // especially when precision is low\n        var e = 1;\n        var count = 0;\n        while (Math.round(val * e) / e !== val) {\n            e *= 10;\n            count++;\n        }\n        return count;\n    };\n\n    /**\n     * @param {string|number} val\n     * @return {number}\n     */\n    number.getPrecisionSafe = function (val) {\n        var str = val.toString();\n\n        // Consider scientific notation: '3.4e-12' '3.4e+12'\n        var eIndex = str.indexOf('e');\n        if (eIndex > 0) {\n            var precision = +str.slice(eIndex + 1);\n            return precision < 0 ? -precision : 0;\n        }\n        else {\n            var dotIndex = str.indexOf('.');\n            return dotIndex < 0 ? 0 : str.length - 1 - dotIndex;\n        }\n    };\n\n    /**\n     * Minimal dicernible data precisioin according to a single pixel.\n     *\n     * @param {Array.<number>} dataExtent\n     * @param {Array.<number>} pixelExtent\n     * @return {number} precision\n     */\n    number.getPixelPrecision = function (dataExtent, pixelExtent) {\n        var log = Math.log;\n        var LN10 = Math.LN10;\n        var dataQuantity = Math.floor(log(dataExtent[1] - dataExtent[0]) / LN10);\n        var sizeQuantity = Math.round(log(Math.abs(pixelExtent[1] - pixelExtent[0])) / LN10);\n        // toFixed() digits argument must be between 0 and 20.\n        var precision = Math.min(Math.max(-dataQuantity + sizeQuantity, 0), 20);\n        return !isFinite(precision) ? 20 : precision;\n    };\n\n    /**\n     * Get a data of given precision, assuring the sum of percentages\n     * in valueList is 1.\n     * The largest remainer method is used.\n     * https://en.wikipedia.org/wiki/Largest_remainder_method\n     *\n     * @param {Array.<number>} valueList a list of all data\n     * @param {number} idx index of the data to be processed in valueList\n     * @param {number} precision integer number showing digits of precision\n     * @return {number} percent ranging from 0 to 100\n     */\n    number.getPercentWithPrecision = function (valueList, idx, precision) {\n        if (!valueList[idx]) {\n            return 0;\n        }\n\n        var sum = zrUtil.reduce(valueList, function (acc, val) {\n            return acc + (isNaN(val) ? 0 : val);\n        }, 0);\n        if (sum === 0) {\n            return 0;\n        }\n\n        var digits = Math.pow(10, precision);\n        var votesPerQuota = zrUtil.map(valueList, function (val) {\n            return (isNaN(val) ? 0 : val) / sum * digits * 100;\n        });\n        var targetSeats = digits * 100;\n\n        var seats = zrUtil.map(votesPerQuota, function (votes) {\n            // Assign automatic seats.\n            return Math.floor(votes);\n        });\n        var currentSum = zrUtil.reduce(seats, function (acc, val) {\n            return acc + val;\n        }, 0);\n\n        var remainder = zrUtil.map(votesPerQuota, function (votes, idx) {\n            return votes - seats[idx];\n        });\n\n        // Has remainding votes.\n        while (currentSum < targetSeats) {\n            // Find next largest remainder.\n            var max = Number.NEGATIVE_INFINITY;\n            var maxId = null;\n            for (var i = 0, len = remainder.length; i < len; ++i) {\n                if (remainder[i] > max) {\n                    max = remainder[i];\n                    maxId = i;\n                }\n            }\n\n            // Add a vote to max remainder.\n            ++seats[maxId];\n            remainder[maxId] = 0;\n            ++currentSum;\n        }\n\n        return seats[idx] / digits;\n    };\n\n    // Number.MAX_SAFE_INTEGER, ie do not support.\n    number.MAX_SAFE_INTEGER = 9007199254740991;\n\n    /**\n     * To 0 - 2 * PI, considering negative radian.\n     * @param {number} radian\n     * @return {number}\n     */\n    number.remRadian = function (radian) {\n        var pi2 = Math.PI * 2;\n        return (radian % pi2 + pi2) % pi2;\n    };\n\n    /**\n     * @param {type} radian\n     * @return {boolean}\n     */\n    number.isRadianAroundZero = function (val) {\n        return val > -RADIAN_EPSILON && val < RADIAN_EPSILON;\n    };\n\n    var TIME_REG = /^(?:(\\d{4})(?:[-\\/](\\d{1,2})(?:[-\\/](\\d{1,2})(?:[T ](\\d{1,2})(?::(\\d\\d)(?::(\\d\\d)(?:[.,](\\d+))?)?)?(Z|[\\+\\-]\\d\\d:?\\d\\d)?)?)?)?)?$/; // jshint ignore:line\n\n    /**\n     * @return {number} in minutes\n     */\n    number.getTimezoneOffset = function () {\n        return (new Date()).getTimezoneOffset();\n    };\n\n    /**\n     * @param {string|Date|number} value These values can be accepted:\n     *   + An instance of Date, represent a time in its own time zone.\n     *   + Or string in a subset of ISO 8601, only including:\n     *     + only year, month, date: '2012-03', '2012-03-01', '2012-03-01 05', '2012-03-01 05:06',\n     *     + separated with T or space: '2012-03-01T12:22:33.123', '2012-03-01 12:22:33.123',\n     *     + time zone: '2012-03-01T12:22:33Z', '2012-03-01T12:22:33+8000', '2012-03-01T12:22:33-05:00',\n     *     all of which will be treated as local time if time zone is not specified\n     *     (see <https://momentjs.com/>).\n     *   + Or other string format, including (all of which will be treated as loacal time):\n     *     '2012', '2012-3-1', '2012/3/1', '2012/03/01',\n     *     '2009/6/12 2:00', '2009/6/12 2:05:08', '2009/6/12 2:05:08.123'\n     *   + a timestamp, which represent a time in UTC.\n     * @return {Date} date\n     */\n    number.parseDate = function (value) {\n        if (value instanceof Date) {\n            return value;\n        }\n        else if (typeof value === 'string') {\n            // Different browsers parse date in different way, so we parse it manually.\n            // Some other issues:\n            // new Date('1970-01-01') is UTC,\n            // new Date('1970/01/01') and new Date('1970-1-01') is local.\n            // See issue #3623\n            var match = TIME_REG.exec(value);\n\n            if (!match) {\n                // return Invalid Date.\n                return new Date(NaN);\n            }\n\n            var timezoneOffset = number.getTimezoneOffset();\n            var timeOffset = !match[8]\n                ? 0\n                : match[8].toUpperCase() === 'Z'\n                ? timezoneOffset\n                : +match[8].slice(0, 3) * 60 + timezoneOffset;\n\n            // match[n] can only be string or undefined.\n            // But take care of '12' + 1 => '121'.\n            return new Date(\n                +match[1],\n                +(match[2] || 1) - 1,\n                +match[3] || 1,\n                +match[4] || 0,\n                +(match[5] || 0) - timeOffset,\n                +match[6] || 0,\n                +match[7] || 0\n            );\n        }\n        else if (value == null) {\n            return new Date(NaN);\n        }\n\n        return new Date(Math.round(value));\n    };\n\n    /**\n     * Quantity of a number. e.g. 0.1, 1, 10, 100\n     *\n     * @param  {number} val\n     * @return {number}\n     */\n    number.quantity = function (val) {\n        return Math.pow(10, quantityExponent(val));\n    };\n\n    function quantityExponent(val) {\n        return Math.floor(Math.log(val) / Math.LN10);\n    }\n\n    /**\n     * find a “nice” number approximately equal to x. Round the number if round = true,\n     * take ceiling if round = false. The primary observation is that the “nicest”\n     * numbers in decimal are 1, 2, and 5, and all power-of-ten multiples of these numbers.\n     *\n     * See \"Nice Numbers for Graph Labels\" of Graphic Gems.\n     *\n     * @param  {number} val Non-negative value.\n     * @param  {boolean} round\n     * @return {number}\n     */\n    number.nice = function (val, round) {\n        var exponent = quantityExponent(val);\n        var exp10 = Math.pow(10, exponent);\n        var f = val / exp10; // 1 <= f < 10\n        var nf;\n        if (round) {\n            if (f < 1.5) { nf = 1; }\n            else if (f < 2.5) { nf = 2; }\n            else if (f < 4) { nf = 3; }\n            else if (f < 7) { nf = 5; }\n            else { nf = 10; }\n        }\n        else {\n            if (f < 1) { nf = 1; }\n            else if (f < 2) { nf = 2; }\n            else if (f < 3) { nf = 3; }\n            else if (f < 5) { nf = 5; }\n            else { nf = 10; }\n        }\n        val = nf * exp10;\n\n        // Fix 3 * 0.1 === 0.30000000000000004 issue (see IEEE 754).\n        // 20 is the uppper bound of toFixed.\n        return exponent >= -20 ? +val.toFixed(exponent < 0 ? -exponent : 0) : val;\n    };\n\n    /**\n     * Order intervals asc, and split them when overlap.\n     * expect(numberUtil.reformIntervals([\n     *     {interval: [18, 62], close: [1, 1]},\n     *     {interval: [-Infinity, -70], close: [0, 0]},\n     *     {interval: [-70, -26], close: [1, 1]},\n     *     {interval: [-26, 18], close: [1, 1]},\n     *     {interval: [62, 150], close: [1, 1]},\n     *     {interval: [106, 150], close: [1, 1]},\n     *     {interval: [150, Infinity], close: [0, 0]}\n     * ])).toEqual([\n     *     {interval: [-Infinity, -70], close: [0, 0]},\n     *     {interval: [-70, -26], close: [1, 1]},\n     *     {interval: [-26, 18], close: [0, 1]},\n     *     {interval: [18, 62], close: [0, 1]},\n     *     {interval: [62, 150], close: [0, 1]},\n     *     {interval: [150, Infinity], close: [0, 0]}\n     * ]);\n     * @param {Array.<Object>} list, where `close` mean open or close\n     *        of the interval, and Infinity can be used.\n     * @return {Array.<Object>} The origin list, which has been reformed.\n     */\n    number.reformIntervals = function (list) {\n        list.sort(function (a, b) {\n            return littleThan(a, b, 0) ? -1 : 1;\n        });\n\n        var curr = -Infinity;\n        var currClose = 1;\n        for (var i = 0; i < list.length;) {\n            var interval = list[i].interval;\n            var close = list[i].close;\n\n            for (var lg = 0; lg < 2; lg++) {\n                if (interval[lg] <= curr) {\n                    interval[lg] = curr;\n                    close[lg] = !lg ? 1 - currClose : 1;\n                }\n                curr = interval[lg];\n                currClose = close[lg];\n            }\n\n            if (interval[0] === interval[1] && close[0] * close[1] !== 1) {\n                list.splice(i, 1);\n            }\n            else {\n                i++;\n            }\n        }\n\n        return list;\n\n        function littleThan(a, b, lg) {\n            return a.interval[lg] < b.interval[lg]\n                || (\n                    a.interval[lg] === b.interval[lg]\n                    && (\n                        (a.close[lg] - b.close[lg] === (!lg ? 1 : -1))\n                        || (!lg && littleThan(a, b, 1))\n                    )\n                );\n        }\n    };\n\n    /**\n     * parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n     * ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n     * subtraction forces infinities to NaN\n     *\n     * @param {*} v\n     * @return {boolean}\n     */\n    number.isNumeric = function (v) {\n        return v - parseFloat(v) >= 0;\n    };\n\n    module.exports = number;\n\n\n/***/ }),\n/* 458 */\n/***/ (function(module, exports) {\n\n\n    var ArrayCtor = typeof Float32Array === 'undefined'\n        ? Array\n        : Float32Array;\n\n    /**\n     * @typedef {Float32Array|Array.<number>} Vector2\n     */\n    /**\n     * 二维向量类\n     * @exports zrender/tool/vector\n     */\n    var vector = {\n        /**\n         * 创建一个向量\n         * @param {number} [x=0]\n         * @param {number} [y=0]\n         * @return {Vector2}\n         */\n        create: function (x, y) {\n            var out = new ArrayCtor(2);\n            if (x == null) {\n                x = 0;\n            }\n            if (y == null) {\n                y = 0;\n            }\n            out[0] = x;\n            out[1] = y;\n            return out;\n        },\n\n        /**\n         * 复制向量数据\n         * @param {Vector2} out\n         * @param {Vector2} v\n         * @return {Vector2}\n         */\n        copy: function (out, v) {\n            out[0] = v[0];\n            out[1] = v[1];\n            return out;\n        },\n\n        /**\n         * 克隆一个向量\n         * @param {Vector2} v\n         * @return {Vector2}\n         */\n        clone: function (v) {\n            var out = new ArrayCtor(2);\n            out[0] = v[0];\n            out[1] = v[1];\n            return out;\n        },\n\n        /**\n         * 设置向量的两个项\n         * @param {Vector2} out\n         * @param {number} a\n         * @param {number} b\n         * @return {Vector2} 结果\n         */\n        set: function (out, a, b) {\n            out[0] = a;\n            out[1] = b;\n            return out;\n        },\n\n        /**\n         * 向量相加\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        add: function (out, v1, v2) {\n            out[0] = v1[0] + v2[0];\n            out[1] = v1[1] + v2[1];\n            return out;\n        },\n\n        /**\n         * 向量缩放后相加\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @param {number} a\n         */\n        scaleAndAdd: function (out, v1, v2, a) {\n            out[0] = v1[0] + v2[0] * a;\n            out[1] = v1[1] + v2[1] * a;\n            return out;\n        },\n\n        /**\n         * 向量相减\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        sub: function (out, v1, v2) {\n            out[0] = v1[0] - v2[0];\n            out[1] = v1[1] - v2[1];\n            return out;\n        },\n\n        /**\n         * 向量长度\n         * @param {Vector2} v\n         * @return {number}\n         */\n        len: function (v) {\n            return Math.sqrt(this.lenSquare(v));\n        },\n\n        /**\n         * 向量长度平方\n         * @param {Vector2} v\n         * @return {number}\n         */\n        lenSquare: function (v) {\n            return v[0] * v[0] + v[1] * v[1];\n        },\n\n        /**\n         * 向量乘法\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        mul: function (out, v1, v2) {\n            out[0] = v1[0] * v2[0];\n            out[1] = v1[1] * v2[1];\n            return out;\n        },\n\n        /**\n         * 向量除法\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        div: function (out, v1, v2) {\n            out[0] = v1[0] / v2[0];\n            out[1] = v1[1] / v2[1];\n            return out;\n        },\n\n        /**\n         * 向量点乘\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @return {number}\n         */\n        dot: function (v1, v2) {\n            return v1[0] * v2[0] + v1[1] * v2[1];\n        },\n\n        /**\n         * 向量缩放\n         * @param {Vector2} out\n         * @param {Vector2} v\n         * @param {number} s\n         */\n        scale: function (out, v, s) {\n            out[0] = v[0] * s;\n            out[1] = v[1] * s;\n            return out;\n        },\n\n        /**\n         * 向量归一化\n         * @param {Vector2} out\n         * @param {Vector2} v\n         */\n        normalize: function (out, v) {\n            var d = vector.len(v);\n            if (d === 0) {\n                out[0] = 0;\n                out[1] = 0;\n            }\n            else {\n                out[0] = v[0] / d;\n                out[1] = v[1] / d;\n            }\n            return out;\n        },\n\n        /**\n         * 计算向量间距离\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @return {number}\n         */\n        distance: function (v1, v2) {\n            return Math.sqrt(\n                (v1[0] - v2[0]) * (v1[0] - v2[0])\n                + (v1[1] - v2[1]) * (v1[1] - v2[1])\n            );\n        },\n\n        /**\n         * 向量距离平方\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @return {number}\n         */\n        distanceSquare: function (v1, v2) {\n            return (v1[0] - v2[0]) * (v1[0] - v2[0])\n                + (v1[1] - v2[1]) * (v1[1] - v2[1]);\n        },\n\n        /**\n         * 求负向量\n         * @param {Vector2} out\n         * @param {Vector2} v\n         */\n        negate: function (out, v) {\n            out[0] = -v[0];\n            out[1] = -v[1];\n            return out;\n        },\n\n        /**\n         * 插值两个点\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @param {number} t\n         */\n        lerp: function (out, v1, v2, t) {\n            out[0] = v1[0] + t * (v2[0] - v1[0]);\n            out[1] = v1[1] + t * (v2[1] - v1[1]);\n            return out;\n        },\n\n        /**\n         * 矩阵左乘向量\n         * @param {Vector2} out\n         * @param {Vector2} v\n         * @param {Vector2} m\n         */\n        applyTransform: function (out, v, m) {\n            var x = v[0];\n            var y = v[1];\n            out[0] = m[0] * x + m[2] * y + m[4];\n            out[1] = m[1] * x + m[3] * y + m[5];\n            return out;\n        },\n        /**\n         * 求两个向量最小值\n         * @param  {Vector2} out\n         * @param  {Vector2} v1\n         * @param  {Vector2} v2\n         */\n        min: function (out, v1, v2) {\n            out[0] = Math.min(v1[0], v2[0]);\n            out[1] = Math.min(v1[1], v2[1]);\n            return out;\n        },\n        /**\n         * 求两个向量最大值\n         * @param  {Vector2} out\n         * @param  {Vector2} v1\n         * @param  {Vector2} v2\n         */\n        max: function (out, v1, v2) {\n            out[0] = Math.max(v1[0], v2[0]);\n            out[1] = Math.max(v1[1], v2[1]);\n            return out;\n        }\n    };\n\n    vector.length = vector.len;\n    vector.lengthSquare = vector.lenSquare;\n    vector.dist = vector.distance;\n    vector.distSquare = vector.distanceSquare;\n\n    module.exports = vector;\n\n\n\n/***/ }),\n/* 459 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Path element\n * @module zrender/graphic/Path\n */\n\n\n\n    var Displayable = __webpack_require__(506);\n    var zrUtil = __webpack_require__(453);\n    var PathProxy = __webpack_require__(488);\n    var pathContain = __webpack_require__(658);\n\n    var Pattern = __webpack_require__(547);\n    var getCanvasPattern = Pattern.prototype.getCanvasPattern;\n\n    var abs = Math.abs;\n\n    var pathProxyForDraw = new PathProxy(true);\n    /**\n     * @alias module:zrender/graphic/Path\n     * @extends module:zrender/graphic/Displayable\n     * @constructor\n     * @param {Object} opts\n     */\n    function Path(opts) {\n        Displayable.call(this, opts);\n\n        /**\n         * @type {module:zrender/core/PathProxy}\n         * @readOnly\n         */\n        this.path = null;\n    }\n\n    Path.prototype = {\n\n        constructor: Path,\n\n        type: 'path',\n\n        __dirtyPath: true,\n\n        strokeContainThreshold: 5,\n\n        brush: function (ctx, prevEl) {\n            var style = this.style;\n            var path = this.path || pathProxyForDraw;\n            var hasStroke = style.hasStroke();\n            var hasFill = style.hasFill();\n            var fill = style.fill;\n            var stroke = style.stroke;\n            var hasFillGradient = hasFill && !!(fill.colorStops);\n            var hasStrokeGradient = hasStroke && !!(stroke.colorStops);\n            var hasFillPattern = hasFill && !!(fill.image);\n            var hasStrokePattern = hasStroke && !!(stroke.image);\n\n            style.bind(ctx, this, prevEl);\n            this.setTransform(ctx);\n\n            if (this.__dirty) {\n                var rect;\n                // Update gradient because bounding rect may changed\n                if (hasFillGradient) {\n                    rect = rect || this.getBoundingRect();\n                    this._fillGradient = style.getGradient(ctx, fill, rect);\n                }\n                if (hasStrokeGradient) {\n                    rect = rect || this.getBoundingRect();\n                    this._strokeGradient = style.getGradient(ctx, stroke, rect);\n                }\n            }\n            // Use the gradient or pattern\n            if (hasFillGradient) {\n                // PENDING If may have affect the state\n                ctx.fillStyle = this._fillGradient;\n            }\n            else if (hasFillPattern) {\n                ctx.fillStyle = getCanvasPattern.call(fill, ctx);\n            }\n            if (hasStrokeGradient) {\n                ctx.strokeStyle = this._strokeGradient;\n            }\n            else if (hasStrokePattern) {\n                ctx.strokeStyle = getCanvasPattern.call(stroke, ctx);\n            }\n\n            var lineDash = style.lineDash;\n            var lineDashOffset = style.lineDashOffset;\n\n            var ctxLineDash = !!ctx.setLineDash;\n\n            // Update path sx, sy\n            var scale = this.getGlobalScale();\n            path.setScale(scale[0], scale[1]);\n\n            // Proxy context\n            // Rebuild path in following 2 cases\n            // 1. Path is dirty\n            // 2. Path needs javascript implemented lineDash stroking.\n            //    In this case, lineDash information will not be saved in PathProxy\n            if (this.__dirtyPath\n                || (lineDash && !ctxLineDash && hasStroke)\n            ) {\n                path.beginPath(ctx);\n\n                // Setting line dash before build path\n                if (lineDash && !ctxLineDash) {\n                    path.setLineDash(lineDash);\n                    path.setLineDashOffset(lineDashOffset);\n                }\n\n                this.buildPath(path, this.shape, false);\n\n                // Clear path dirty flag\n                if (this.path) {\n                    this.__dirtyPath = false;\n                }\n            }\n            else {\n                // Replay path building\n                ctx.beginPath();\n                this.path.rebuildPath(ctx);\n            }\n\n            hasFill && path.fill(ctx);\n\n            if (lineDash && ctxLineDash) {\n                ctx.setLineDash(lineDash);\n                ctx.lineDashOffset = lineDashOffset;\n            }\n\n            hasStroke && path.stroke(ctx);\n\n            if (lineDash && ctxLineDash) {\n                // PENDING\n                // Remove lineDash\n                ctx.setLineDash([]);\n            }\n\n\n            this.restoreTransform(ctx);\n\n            // Draw rect text\n            if (style.text != null) {\n                this.drawRectText(ctx, this.getBoundingRect());\n            }\n        },\n\n        // When bundling path, some shape may decide if use moveTo to begin a new subpath or closePath\n        // Like in circle\n        buildPath: function (ctx, shapeCfg, inBundle) {},\n\n        createPathProxy: function () {\n            this.path = new PathProxy();\n        },\n\n        getBoundingRect: function () {\n            var rect = this._rect;\n            var style = this.style;\n            var needsUpdateRect = !rect;\n            if (needsUpdateRect) {\n                var path = this.path;\n                if (!path) {\n                    // Create path on demand.\n                    path = this.path = new PathProxy();\n                }\n                if (this.__dirtyPath) {\n                    path.beginPath();\n                    this.buildPath(path, this.shape, false);\n                }\n                rect = path.getBoundingRect();\n            }\n            this._rect = rect;\n\n            if (style.hasStroke()) {\n                // Needs update rect with stroke lineWidth when\n                // 1. Element changes scale or lineWidth\n                // 2. Shape is changed\n                var rectWithStroke = this._rectWithStroke || (this._rectWithStroke = rect.clone());\n                if (this.__dirty || needsUpdateRect) {\n                    rectWithStroke.copy(rect);\n                    // FIXME Must after updateTransform\n                    var w = style.lineWidth;\n                    // PENDING, Min line width is needed when line is horizontal or vertical\n                    var lineScale = style.strokeNoScale ? this.getLineScale() : 1;\n\n                    // Only add extra hover lineWidth when there are no fill\n                    if (!style.hasFill()) {\n                        w = Math.max(w, this.strokeContainThreshold || 4);\n                    }\n                    // Consider line width\n                    // Line scale can't be 0;\n                    if (lineScale > 1e-10) {\n                        rectWithStroke.width += w / lineScale;\n                        rectWithStroke.height += w / lineScale;\n                        rectWithStroke.x -= w / lineScale / 2;\n                        rectWithStroke.y -= w / lineScale / 2;\n                    }\n                }\n\n                // Return rect with stroke\n                return rectWithStroke;\n            }\n\n            return rect;\n        },\n\n        contain: function (x, y) {\n            var localPos = this.transformCoordToLocal(x, y);\n            var rect = this.getBoundingRect();\n            var style = this.style;\n            x = localPos[0];\n            y = localPos[1];\n\n            if (rect.contain(x, y)) {\n                var pathData = this.path.data;\n                if (style.hasStroke()) {\n                    var lineWidth = style.lineWidth;\n                    var lineScale = style.strokeNoScale ? this.getLineScale() : 1;\n                    // Line scale can't be 0;\n                    if (lineScale > 1e-10) {\n                        // Only add extra hover lineWidth when there are no fill\n                        if (!style.hasFill()) {\n                            lineWidth = Math.max(lineWidth, this.strokeContainThreshold);\n                        }\n                        if (pathContain.containStroke(\n                            pathData, lineWidth / lineScale, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                }\n                if (style.hasFill()) {\n                    return pathContain.contain(pathData, x, y);\n                }\n            }\n            return false;\n        },\n\n        /**\n         * @param  {boolean} dirtyPath\n         */\n        dirty: function (dirtyPath) {\n            if (dirtyPath == null) {\n                dirtyPath = true;\n            }\n            // Only mark dirty, not mark clean\n            if (dirtyPath) {\n                this.__dirtyPath = dirtyPath;\n                this._rect = null;\n            }\n\n            this.__dirty = true;\n\n            this.__zr && this.__zr.refresh();\n\n            // Used as a clipping path\n            if (this.__clipTarget) {\n                this.__clipTarget.dirty();\n            }\n        },\n\n        /**\n         * Alias for animate('shape')\n         * @param {boolean} loop\n         */\n        animateShape: function (loop) {\n            return this.animate('shape', loop);\n        },\n\n        // Overwrite attrKV\n        attrKV: function (key, value) {\n            // FIXME\n            if (key === 'shape') {\n                this.setShape(value);\n                this.__dirtyPath = true;\n                this._rect = null;\n            }\n            else {\n                Displayable.prototype.attrKV.call(this, key, value);\n            }\n        },\n\n        /**\n         * @param {Object|string} key\n         * @param {*} value\n         */\n        setShape: function (key, value) {\n            var shape = this.shape;\n            // Path from string may not have shape\n            if (shape) {\n                if (zrUtil.isObject(key)) {\n                    for (var name in key) {\n                        if (key.hasOwnProperty(name)) {\n                            shape[name] = key[name];\n                        }\n                    }\n                }\n                else {\n                    shape[key] = value;\n                }\n                this.dirty(true);\n            }\n            return this;\n        },\n\n        getLineScale: function () {\n            var m = this.transform;\n            // Get the line scale.\n            // Determinant of `m` means how much the area is enlarged by the\n            // transformation. So its square root can be used as a scale factor\n            // for width.\n            return m && abs(m[0] - 1) > 1e-10 && abs(m[3] - 1) > 1e-10\n                ? Math.sqrt(abs(m[0] * m[3] - m[2] * m[1]))\n                : 1;\n        }\n    };\n\n    /**\n     * 扩展一个 Path element, 比如星形，圆等。\n     * Extend a path element\n     * @param {Object} props\n     * @param {string} props.type Path type\n     * @param {Function} props.init Initialize\n     * @param {Function} props.buildPath Overwrite buildPath method\n     * @param {Object} [props.style] Extended default style config\n     * @param {Object} [props.shape] Extended default shape config\n     */\n    Path.extend = function (defaults) {\n        var Sub = function (opts) {\n            Path.call(this, opts);\n\n            if (defaults.style) {\n                // Extend default style\n                this.style.extendFrom(defaults.style, false);\n            }\n\n            // Extend default shape\n            var defaultShape = defaults.shape;\n            if (defaultShape) {\n                this.shape = this.shape || {};\n                var thisShape = this.shape;\n                for (var name in defaultShape) {\n                    if (\n                        ! thisShape.hasOwnProperty(name)\n                        && defaultShape.hasOwnProperty(name)\n                    ) {\n                        thisShape[name] = defaultShape[name];\n                    }\n                }\n            }\n\n            defaults.init && defaults.init.call(this, opts);\n        };\n\n        zrUtil.inherits(Sub, Path);\n\n        // FIXME 不能 extend position, rotation 等引用对象\n        for (var name in defaults) {\n            // Extending prototype values and methods\n            if (name !== 'style' && name !== 'shape') {\n                Sub.prototype[name] = defaults[name];\n            }\n        }\n\n        return Sub;\n    };\n\n    zrUtil.inherits(Path, Displayable);\n\n    module.exports = Path;\n\n\n/***/ }),\n/* 460 */\n/***/ (function(module, exports) {\n\n/**\n * echarts设备环境识别\n *\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\n * @author firede[firede@firede.us]\n * @desc thanks zepto.\n */\n\n    var env = {};\n    if (typeof navigator === 'undefined') {\n        // In node\n        env = {\n            browser: {},\n            os: {},\n            node: true,\n            // Assume canvas is supported\n            canvasSupported: true\n        };\n    }\n    else {\n        env = detect(navigator.userAgent);\n    }\n\n    module.exports = env;\n\n    // Zepto.js\n    // (c) 2010-2013 Thomas Fuchs\n    // Zepto.js may be freely distributed under the MIT license.\n\n    function detect(ua) {\n        var os = {};\n        var browser = {};\n        // var webkit = ua.match(/Web[kK]it[\\/]{0,1}([\\d.]+)/);\n        // var android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/);\n        // var ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n        // var ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n        // var iphone = !ipad && ua.match(/(iPhone\\sOS)\\s([\\d_]+)/);\n        // var webos = ua.match(/(webOS|hpwOS)[\\s\\/]([\\d.]+)/);\n        // var touchpad = webos && ua.match(/TouchPad/);\n        // var kindle = ua.match(/Kindle\\/([\\d.]+)/);\n        // var silk = ua.match(/Silk\\/([\\d._]+)/);\n        // var blackberry = ua.match(/(BlackBerry).*Version\\/([\\d.]+)/);\n        // var bb10 = ua.match(/(BB10).*Version\\/([\\d.]+)/);\n        // var rimtabletos = ua.match(/(RIM\\sTablet\\sOS)\\s([\\d.]+)/);\n        // var playbook = ua.match(/PlayBook/);\n        // var chrome = ua.match(/Chrome\\/([\\d.]+)/) || ua.match(/CriOS\\/([\\d.]+)/);\n        var firefox = ua.match(/Firefox\\/([\\d.]+)/);\n        // var safari = webkit && ua.match(/Mobile\\//) && !chrome;\n        // var webview = ua.match(/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/) && !chrome;\n        var ie = ua.match(/MSIE\\s([\\d.]+)/)\n            // IE 11 Trident/7.0; rv:11.0\n            || ua.match(/Trident\\/.+?rv:(([\\d.]+))/);\n        var edge = ua.match(/Edge\\/([\\d.]+)/); // IE 12 and 12+\n\n        var weChat = (/micromessenger/i).test(ua);\n\n        // Todo: clean this up with a better OS/browser seperation:\n        // - discern (more) between multiple browsers on android\n        // - decide if kindle fire in silk mode is android or not\n        // - Firefox on Android doesn't specify the Android version\n        // - possibly devide in os, device and browser hashes\n\n        // if (browser.webkit = !!webkit) browser.version = webkit[1];\n\n        // if (android) os.android = true, os.version = android[2];\n        // if (iphone && !ipod) os.ios = os.iphone = true, os.version = iphone[2].replace(/_/g, '.');\n        // if (ipad) os.ios = os.ipad = true, os.version = ipad[2].replace(/_/g, '.');\n        // if (ipod) os.ios = os.ipod = true, os.version = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n        // if (webos) os.webos = true, os.version = webos[2];\n        // if (touchpad) os.touchpad = true;\n        // if (blackberry) os.blackberry = true, os.version = blackberry[2];\n        // if (bb10) os.bb10 = true, os.version = bb10[2];\n        // if (rimtabletos) os.rimtabletos = true, os.version = rimtabletos[2];\n        // if (playbook) browser.playbook = true;\n        // if (kindle) os.kindle = true, os.version = kindle[1];\n        // if (silk) browser.silk = true, browser.version = silk[1];\n        // if (!silk && os.android && ua.match(/Kindle Fire/)) browser.silk = true;\n        // if (chrome) browser.chrome = true, browser.version = chrome[1];\n        if (firefox) {\n            browser.firefox = true;\n            browser.version = firefox[1];\n        }\n        // if (safari && (ua.match(/Safari/) || !!os.ios)) browser.safari = true;\n        // if (webview) browser.webview = true;\n\n        if (ie) {\n            browser.ie = true;\n            browser.version = ie[1];\n        }\n\n        if (edge) {\n            browser.edge = true;\n            browser.version = edge[1];\n        }\n\n        // It is difficult to detect WeChat in Win Phone precisely, because ua can\n        // not be set on win phone. So we do not consider Win Phone.\n        if (weChat) {\n            browser.weChat = true;\n        }\n\n        // os.tablet = !!(ipad || playbook || (android && !ua.match(/Mobile/)) ||\n        //     (firefox && ua.match(/Tablet/)) || (ie && !ua.match(/Phone/) && ua.match(/Touch/)));\n        // os.phone  = !!(!os.tablet && !os.ipod && (android || iphone || webos ||\n        //     (chrome && ua.match(/Android/)) || (chrome && ua.match(/CriOS\\/([\\d.]+)/)) ||\n        //     (firefox && ua.match(/Mobile/)) || (ie && ua.match(/Touch/))));\n\n        return {\n            browser: browser,\n            os: os,\n            node: false,\n            // 原生canvas支持，改极端点了\n            // canvasSupported : !(browser.ie && parseFloat(browser.version) < 9)\n            canvasSupported : document.createElement('canvas').getContext ? true : false,\n            // @see <http://stackoverflow.com/questions/4817029/whats-the-best-way-to-detect-a-touch-screen-device-using-javascript>\n            // works on most browsers\n            // IE10/11 does not support touch event, and MS Edge supports them but not by\n            // default, so we dont check navigator.maxTouchPoints for them here.\n            touchEventsSupported: 'ontouchstart' in window && !browser.ie && !browser.edge,\n            // <http://caniuse.com/#search=pointer%20event>.\n            pointerEventsSupported: 'onpointerdown' in window\n                // Firefox supports pointer but not by default, only MS browsers are reliable on pointer\n                // events currently. So we dont use that on other browsers unless tested sufficiently.\n                // Although IE 10 supports pointer event, it use old style and is different from the\n                // standard. So we exclude that. (IE 10 is hardly used on touch device)\n                && (browser.edge || (browser.ie && browser.version >= 11))\n        };\n    }\n\n\n/***/ }),\n/* 461 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(453);\n    var numberUtil = __webpack_require__(457);\n    var textContain = __webpack_require__(473);\n\n    var formatUtil = {};\n\n    /**\n     * 每三位默认加,格式化\n     * @param {string|number} x\n     * @return {string}\n     */\n    formatUtil.addCommas = function (x) {\n        if (isNaN(x)) {\n            return '-';\n        }\n        x = (x + '').split('.');\n        return x[0].replace(/(\\d{1,3})(?=(?:\\d{3})+(?!\\d))/g,'$1,')\n               + (x.length > 1 ? ('.' + x[1]) : '');\n    };\n\n    /**\n     * @param {string} str\n     * @param {boolean} [upperCaseFirst=false]\n     * @return {string} str\n     */\n    formatUtil.toCamelCase = function (str, upperCaseFirst) {\n        str = (str || '').toLowerCase().replace(/-(.)/g, function(match, group1) {\n            return group1.toUpperCase();\n        });\n\n        if (upperCaseFirst && str) {\n            str = str.charAt(0).toUpperCase() + str.slice(1);\n        }\n\n        return str;\n    };\n\n    /**\n     * Normalize css liked array configuration\n     * e.g.\n     *  3 => [3, 3, 3, 3]\n     *  [4, 2] => [4, 2, 4, 2]\n     *  [4, 3, 2] => [4, 3, 2, 3]\n     * @param {number|Array.<number>} val\n     */\n    formatUtil.normalizeCssArray = function (val) {\n        var len = val.length;\n        if (typeof (val) === 'number') {\n            return [val, val, val, val];\n        }\n        else if (len === 2) {\n            // vertical | horizontal\n            return [val[0], val[1], val[0], val[1]];\n        }\n        else if (len === 3) {\n            // top | horizontal | bottom\n            return [val[0], val[1], val[2], val[1]];\n        }\n        return val;\n    };\n\n    var encodeHTML = formatUtil.encodeHTML = function (source) {\n        return String(source)\n            .replace(/&/g, '&amp;')\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;')\n            .replace(/\"/g, '&quot;')\n            .replace(/'/g, '&#39;');\n    };\n\n    var TPL_VAR_ALIAS = ['a', 'b', 'c', 'd', 'e', 'f', 'g'];\n\n    var wrapVar = function (varName, seriesIdx) {\n        return '{' + varName + (seriesIdx == null ? '' : seriesIdx) + '}';\n    };\n\n    /**\n     * Template formatter\n     * @param {string} tpl\n     * @param {Array.<Object>|Object} paramsList\n     * @param {boolean} [encode=false]\n     * @return {string}\n     */\n    formatUtil.formatTpl = function (tpl, paramsList, encode) {\n        if (!zrUtil.isArray(paramsList)) {\n            paramsList = [paramsList];\n        }\n        var seriesLen = paramsList.length;\n        if (!seriesLen) {\n            return '';\n        }\n\n        var $vars = paramsList[0].$vars || [];\n        for (var i = 0; i < $vars.length; i++) {\n            var alias = TPL_VAR_ALIAS[i];\n            var val = wrapVar(alias, 0);\n            tpl = tpl.replace(wrapVar(alias), encode ? encodeHTML(val) : val);\n        }\n        for (var seriesIdx = 0; seriesIdx < seriesLen; seriesIdx++) {\n            for (var k = 0; k < $vars.length; k++) {\n                var val = paramsList[seriesIdx][$vars[k]];\n                tpl = tpl.replace(\n                    wrapVar(TPL_VAR_ALIAS[k], seriesIdx),\n                    encode ? encodeHTML(val) : val\n                );\n            }\n        }\n\n        return tpl;\n    };\n\n    /**\n     * simple Template formatter\n     *\n     * @param {string} tpl\n     * @param {Object} param\n     * @param {boolean} [encode=false]\n     * @return {string}\n     */\n    formatUtil.formatTplSimple = function (tpl, param, encode) {\n        zrUtil.each(param, function (value, key) {\n            tpl = tpl.replace(\n                '{' + key + '}',\n                encode ? encodeHTML(value) : value\n            );\n        });\n        return tpl;\n    };\n\n    /**\n     * @param {string} color\n     * @param {string} [extraCssText]\n     * @return {string}\n     */\n    formatUtil.getTooltipMarker = function (color, extraCssText) {\n        return color\n            ? '<span style=\"display:inline-block;margin-right:5px;'\n                + 'border-radius:10px;width:9px;height:9px;background-color:'\n                + formatUtil.encodeHTML(color) + ';' + (extraCssText || '') + '\"></span>'\n            : '';\n    };\n\n    /**\n     * @param {string} str\n     * @return {string}\n     * @inner\n     */\n    var s2d = function (str) {\n        return str < 10 ? ('0' + str) : str;\n    };\n\n    /**\n     * ISO Date format\n     * @param {string} tpl\n     * @param {number} value\n     * @param {boolean} [isUTC=false] Default in local time.\n     *           see `module:echarts/scale/Time`\n     *           and `module:echarts/util/number#parseDate`.\n     * @inner\n     */\n    formatUtil.formatTime = function (tpl, value, isUTC) {\n        if (tpl === 'week'\n            || tpl === 'month'\n            || tpl === 'quarter'\n            || tpl === 'half-year'\n            || tpl === 'year'\n        ) {\n            tpl = 'MM-dd\\nyyyy';\n        }\n\n        var date = numberUtil.parseDate(value);\n        var utc = isUTC ? 'UTC' : '';\n        var y = date['get' + utc + 'FullYear']();\n        var M = date['get' + utc + 'Month']() + 1;\n        var d = date['get' + utc + 'Date']();\n        var h = date['get' + utc + 'Hours']();\n        var m = date['get' + utc + 'Minutes']();\n        var s = date['get' + utc + 'Seconds']();\n\n        tpl = tpl.replace('MM', s2d(M))\n            .toLowerCase()\n            .replace('yyyy', y)\n            .replace('yy', y % 100)\n            .replace('dd', s2d(d))\n            .replace('d', d)\n            .replace('hh', s2d(h))\n            .replace('h', h)\n            .replace('mm', s2d(m))\n            .replace('m', m)\n            .replace('ss', s2d(s))\n            .replace('s', s);\n\n        return tpl;\n    };\n\n    /**\n     * Capital first\n     * @param {string} str\n     * @return {string}\n     */\n    formatUtil.capitalFirst = function (str) {\n        return str ? str.charAt(0).toUpperCase() + str.substr(1) : str;\n    };\n\n    formatUtil.truncateText = textContain.truncateText;\n\n    module.exports = formatUtil;\n\n\n\n/***/ }),\n/* 462 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = { \"default\": __webpack_require__(464), __esModule: true };\n\n/***/ }),\n/* 463 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module echarts/model/Model\n */\n\n\n    var zrUtil = __webpack_require__(453);\n    var clazzUtil = __webpack_require__(467);\n    var env = __webpack_require__(460);\n\n    /**\n     * @alias module:echarts/model/Model\n     * @constructor\n     * @param {Object} option\n     * @param {module:echarts/model/Model} [parentModel]\n     * @param {module:echarts/model/Global} [ecModel]\n     */\n    function Model(option, parentModel, ecModel) {\n        /**\n         * @type {module:echarts/model/Model}\n         * @readOnly\n         */\n        this.parentModel = parentModel;\n\n        /**\n         * @type {module:echarts/model/Global}\n         * @readOnly\n         */\n        this.ecModel = ecModel;\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        this.option = option;\n\n        // Simple optimization\n        // if (this.init) {\n        //     if (arguments.length <= 4) {\n        //         this.init(option, parentModel, ecModel, extraOpt);\n        //     }\n        //     else {\n        //         this.init.apply(this, arguments);\n        //     }\n        // }\n    }\n\n    Model.prototype = {\n\n        constructor: Model,\n\n        /**\n         * Model 的初始化函数\n         * @param {Object} option\n         */\n        init: null,\n\n        /**\n         * 从新的 Option merge\n         */\n        mergeOption: function (option) {\n            zrUtil.merge(this.option, option, true);\n        },\n\n        /**\n         * @param {string|Array.<string>} path\n         * @param {boolean} [ignoreParent=false]\n         * @return {*}\n         */\n        get: function (path, ignoreParent) {\n            if (path == null) {\n                return this.option;\n            }\n\n            return doGet(\n                this.option,\n                this.parsePath(path),\n                !ignoreParent && getParent(this, path)\n            );\n        },\n\n        /**\n         * @param {string} key\n         * @param {boolean} [ignoreParent=false]\n         * @return {*}\n         */\n        getShallow: function (key, ignoreParent) {\n            var option = this.option;\n\n            var val = option == null ? option : option[key];\n            var parentModel = !ignoreParent && getParent(this, key);\n            if (val == null && parentModel) {\n                val = parentModel.getShallow(key);\n            }\n            return val;\n        },\n\n        /**\n         * @param {string|Array.<string>} [path]\n         * @param {module:echarts/model/Model} [parentModel]\n         * @return {module:echarts/model/Model}\n         */\n        getModel: function (path, parentModel) {\n            var obj = path == null\n                ? this.option\n                : doGet(this.option, path = this.parsePath(path));\n\n            var thisParentModel;\n            parentModel = parentModel || (\n                (thisParentModel = getParent(this, path))\n                    && thisParentModel.getModel(path)\n            );\n\n            return new Model(obj, parentModel, this.ecModel);\n        },\n\n        /**\n         * If model has option\n         */\n        isEmpty: function () {\n            return this.option == null;\n        },\n\n        restoreData: function () {},\n\n        // Pending\n        clone: function () {\n            var Ctor = this.constructor;\n            return new Ctor(zrUtil.clone(this.option));\n        },\n\n        setReadOnly: function (properties) {\n            clazzUtil.setReadOnly(this, properties);\n        },\n\n        // If path is null/undefined, return null/undefined.\n        parsePath: function(path) {\n            if (typeof path === 'string') {\n                path = path.split('.');\n            }\n            return path;\n        },\n\n        /**\n         * @param {Function} getParentMethod\n         *        param {Array.<string>|string} path\n         *        return {module:echarts/model/Model}\n         */\n        customizeGetParent: function (getParentMethod) {\n            clazzUtil.set(this, 'getParent', getParentMethod);\n        },\n\n        isAnimationEnabled: function () {\n            if (!env.node) {\n                if (this.option.animation != null) {\n                    return !!this.option.animation;\n                }\n                else if (this.parentModel) {\n                    return this.parentModel.isAnimationEnabled();\n                }\n            }\n        }\n    };\n\n    function doGet(obj, pathArr, parentModel) {\n        for (var i = 0; i < pathArr.length; i++) {\n            // Ignore empty\n            if (!pathArr[i]) {\n                continue;\n            }\n            // obj could be number/string/... (like 0)\n            obj = (obj && typeof obj === 'object') ? obj[pathArr[i]] : null;\n            if (obj == null) {\n                break;\n            }\n        }\n        if (obj == null && parentModel) {\n            obj = parentModel.get(pathArr);\n        }\n        return obj;\n    }\n\n    // `path` can be null/undefined\n    function getParent(model, path) {\n        var getParentMethod = clazzUtil.get(model, 'getParent');\n        return getParentMethod ? getParentMethod.call(model, path) : model.parentModel;\n    }\n\n    // Enable Model.extend.\n    clazzUtil.enableClassExtend(Model);\n\n    var mixin = zrUtil.mixin;\n    mixin(Model, __webpack_require__(629));\n    mixin(Model, __webpack_require__(626));\n    mixin(Model, __webpack_require__(630));\n    mixin(Model, __webpack_require__(628));\n\n    module.exports = Model;\n\n\n/***/ }),\n/* 464 */\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(466);\nmodule.exports = __webpack_require__(46).Object.assign;\n\n/***/ }),\n/* 465 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// 19.1.2.1 Object.assign(target, source, ...)\nvar getKeys  = __webpack_require__(59)\n  , gOPS     = __webpack_require__(119)\n  , pIE      = __webpack_require__(76)\n  , toObject = __webpack_require__(118)\n  , IObject  = __webpack_require__(178)\n  , $assign  = Object.assign;\n\n// should work with symbols and should have deterministic property order (V8 bug)\nmodule.exports = !$assign || __webpack_require__(54)(function(){\n  var A = {}\n    , B = {}\n    , S = Symbol()\n    , K = 'abcdefghijklmnopqrst';\n  A[S] = 7;\n  K.split('').forEach(function(k){ B[k] = k; });\n  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;\n}) ? function assign(target, source){ // eslint-disable-line no-unused-vars\n  var T     = toObject(target)\n    , aLen  = arguments.length\n    , index = 1\n    , getSymbols = gOPS.f\n    , isEnum     = pIE.f;\n  while(aLen > index){\n    var S      = IObject(arguments[index++])\n      , keys   = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S)\n      , length = keys.length\n      , j      = 0\n      , key;\n    while(length > j)if(isEnum.call(S, key = keys[j++]))T[key] = S[key];\n  } return T;\n} : $assign;\n\n/***/ }),\n/* 466 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// 19.1.3.1 Object.assign(target, source)\nvar $export = __webpack_require__(58);\n\n$export($export.S + $export.F, 'Object', {assign: __webpack_require__(465)});\n\n/***/ }),\n/* 467 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(453);\n\n    var clazz = {};\n\n    var TYPE_DELIMITER = '.';\n    var IS_CONTAINER = '___EC__COMPONENT__CONTAINER___';\n    var MEMBER_PRIFIX = '\\0ec_\\0';\n\n    /**\n     * Hide private class member.\n     * The same behavior as `host[name] = value;` (can be right-value)\n     * @public\n     */\n    clazz.set = function (host, name, value) {\n        return (host[MEMBER_PRIFIX + name] = value);\n    };\n\n    /**\n     * Hide private class member.\n     * The same behavior as `host[name];`\n     * @public\n     */\n    clazz.get = function (host, name) {\n        return host[MEMBER_PRIFIX + name];\n    };\n\n    /**\n     * For hidden private class member.\n     * The same behavior as `host.hasOwnProperty(name);`\n     * @public\n     */\n    clazz.hasOwn = function (host, name) {\n        return host.hasOwnProperty(MEMBER_PRIFIX + name);\n    };\n\n    /**\n     * Notice, parseClassType('') should returns {main: '', sub: ''}\n     * @public\n     */\n    var parseClassType = clazz.parseClassType = function (componentType) {\n        var ret = {main: '', sub: ''};\n        if (componentType) {\n            componentType = componentType.split(TYPE_DELIMITER);\n            ret.main = componentType[0] || '';\n            ret.sub = componentType[1] || '';\n        }\n        return ret;\n    };\n\n    /**\n     * @public\n     */\n    function checkClassType(componentType) {\n        zrUtil.assert(\n            /^[a-zA-Z0-9_]+([.][a-zA-Z0-9_]+)?$/.test(componentType),\n            'componentType \"' + componentType + '\" illegal'\n        );\n    }\n\n    /**\n     * @public\n     */\n    clazz.enableClassExtend = function (RootClass, mandatoryMethods) {\n\n        RootClass.$constructor = RootClass;\n        RootClass.extend = function (proto) {\n\n            if (__DEV__) {\n                zrUtil.each(mandatoryMethods, function (method) {\n                    if (!proto[method]) {\n                        console.warn(\n                            'Method `' + method + '` should be implemented'\n                            + (proto.type ? ' in ' + proto.type : '') + '.'\n                        );\n                    }\n                });\n            }\n\n            var superClass = this;\n            var ExtendedClass = function () {\n                if (!proto.$constructor) {\n                    superClass.apply(this, arguments);\n                }\n                else {\n                    proto.$constructor.apply(this, arguments);\n                }\n            };\n\n            zrUtil.extend(ExtendedClass.prototype, proto);\n\n            ExtendedClass.extend = this.extend;\n            ExtendedClass.superCall = superCall;\n            ExtendedClass.superApply = superApply;\n            zrUtil.inherits(ExtendedClass, this);\n            ExtendedClass.superClass = superClass;\n\n            return ExtendedClass;\n        };\n    };\n\n    // superCall should have class info, which can not be fetch from 'this'.\n    // Consider this case:\n    // class A has method f,\n    // class B inherits class A, overrides method f, f call superApply('f'),\n    // class C inherits class B, do not overrides method f,\n    // then when method of class C is called, dead loop occured.\n    function superCall(context, methodName) {\n        var args = zrUtil.slice(arguments, 2);\n        return this.superClass.prototype[methodName].apply(context, args);\n    }\n\n    function superApply(context, methodName, args) {\n        return this.superClass.prototype[methodName].apply(context, args);\n    }\n\n    /**\n     * @param {Object} entity\n     * @param {Object} options\n     * @param {boolean} [options.registerWhenExtend]\n     * @public\n     */\n    clazz.enableClassManagement = function (entity, options) {\n        options = options || {};\n\n        /**\n         * Component model classes\n         * key: componentType,\n         * value:\n         *     componentClass, when componentType is 'xxx'\n         *     or Object.<subKey, componentClass>, when componentType is 'xxx.yy'\n         * @type {Object}\n         */\n        var storage = {};\n\n        entity.registerClass = function (Clazz, componentType) {\n            if (componentType) {\n                checkClassType(componentType);\n                componentType = parseClassType(componentType);\n\n                if (!componentType.sub) {\n                    if (__DEV__) {\n                        if (storage[componentType.main]) {\n                            console.warn(componentType.main + ' exists.');\n                        }\n                    }\n                    storage[componentType.main] = Clazz;\n                }\n                else if (componentType.sub !== IS_CONTAINER) {\n                    var container = makeContainer(componentType);\n                    container[componentType.sub] = Clazz;\n                }\n            }\n            return Clazz;\n        };\n\n        entity.getClass = function (componentMainType, subType, throwWhenNotFound) {\n            var Clazz = storage[componentMainType];\n\n            if (Clazz && Clazz[IS_CONTAINER]) {\n                Clazz = subType ? Clazz[subType] : null;\n            }\n\n            if (throwWhenNotFound && !Clazz) {\n                throw new Error(\n                    !subType\n                        ? componentMainType + '.' + 'type should be specified.'\n                        : 'Component ' + componentMainType + '.' + (subType || '') + ' not exists. Load it first.'\n                );\n            }\n\n            return Clazz;\n        };\n\n        entity.getClassesByMainType = function (componentType) {\n            componentType = parseClassType(componentType);\n\n            var result = [];\n            var obj = storage[componentType.main];\n\n            if (obj && obj[IS_CONTAINER]) {\n                zrUtil.each(obj, function (o, type) {\n                    type !== IS_CONTAINER && result.push(o);\n                });\n            }\n            else {\n                result.push(obj);\n            }\n\n            return result;\n        };\n\n        entity.hasClass = function (componentType) {\n            // Just consider componentType.main.\n            componentType = parseClassType(componentType);\n            return !!storage[componentType.main];\n        };\n\n        /**\n         * @return {Array.<string>} Like ['aa', 'bb'], but can not be ['aa.xx']\n         */\n        entity.getAllClassMainTypes = function () {\n            var types = [];\n            zrUtil.each(storage, function (obj, type) {\n                types.push(type);\n            });\n            return types;\n        };\n\n        /**\n         * If a main type is container and has sub types\n         * @param  {string}  mainType\n         * @return {boolean}\n         */\n        entity.hasSubTypes = function (componentType) {\n            componentType = parseClassType(componentType);\n            var obj = storage[componentType.main];\n            return obj && obj[IS_CONTAINER];\n        };\n\n        entity.parseClassType = parseClassType;\n\n        function makeContainer(componentType) {\n            var container = storage[componentType.main];\n            if (!container || !container[IS_CONTAINER]) {\n                container = storage[componentType.main] = {};\n                container[IS_CONTAINER] = true;\n            }\n            return container;\n        }\n\n        if (options.registerWhenExtend) {\n            var originalExtend = entity.extend;\n            if (originalExtend) {\n                entity.extend = function (proto) {\n                    var ExtendedClass = originalExtend.call(this, proto);\n                    return entity.registerClass(ExtendedClass, proto.type);\n                };\n            }\n        }\n\n        return entity;\n    };\n\n    /**\n     * @param {string|Array.<string>} properties\n     */\n    clazz.setReadOnly = function (obj, properties) {\n        // FIXME It seems broken in IE8 simulation of IE11\n        // if (!zrUtil.isArray(properties)) {\n        //     properties = properties != null ? [properties] : [];\n        // }\n        // zrUtil.each(properties, function (prop) {\n        //     var value = obj[prop];\n\n        //     Object.defineProperty\n        //         && Object.defineProperty(obj, prop, {\n        //             value: value, writable: false\n        //         });\n        //     zrUtil.isArray(obj[prop])\n        //         && Object.freeze\n        //         && Object.freeze(obj[prop]);\n        // });\n    };\n\n    module.exports = clazz;\n\n\n/***/ }),\n/* 468 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * @module echarts/core/BoundingRect\n */\n\n\n    var vec2 = __webpack_require__(458);\n    var matrix = __webpack_require__(475);\n\n    var v2ApplyTransform = vec2.applyTransform;\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    /**\n     * @alias module:echarts/core/BoundingRect\n     */\n    function BoundingRect(x, y, width, height) {\n\n        if (width < 0) {\n            x = x + width;\n            width = -width;\n        }\n        if (height < 0) {\n            y = y + height;\n            height = -height;\n        }\n\n        /**\n         * @type {number}\n         */\n        this.x = x;\n        /**\n         * @type {number}\n         */\n        this.y = y;\n        /**\n         * @type {number}\n         */\n        this.width = width;\n        /**\n         * @type {number}\n         */\n        this.height = height;\n    }\n\n    BoundingRect.prototype = {\n\n        constructor: BoundingRect,\n\n        /**\n         * @param {module:echarts/core/BoundingRect} other\n         */\n        union: function (other) {\n            var x = mathMin(other.x, this.x);\n            var y = mathMin(other.y, this.y);\n\n            this.width = mathMax(\n                    other.x + other.width,\n                    this.x + this.width\n                ) - x;\n            this.height = mathMax(\n                    other.y + other.height,\n                    this.y + this.height\n                ) - y;\n            this.x = x;\n            this.y = y;\n        },\n\n        /**\n         * @param {Array.<number>} m\n         * @methods\n         */\n        applyTransform: (function () {\n            var lt = [];\n            var rb = [];\n            var lb = [];\n            var rt = [];\n            return function (m) {\n                // In case usage like this\n                // el.getBoundingRect().applyTransform(el.transform)\n                // And element has no transform\n                if (!m) {\n                    return;\n                }\n                lt[0] = lb[0] = this.x;\n                lt[1] = rt[1] = this.y;\n                rb[0] = rt[0] = this.x + this.width;\n                rb[1] = lb[1] = this.y + this.height;\n\n                v2ApplyTransform(lt, lt, m);\n                v2ApplyTransform(rb, rb, m);\n                v2ApplyTransform(lb, lb, m);\n                v2ApplyTransform(rt, rt, m);\n\n                this.x = mathMin(lt[0], rb[0], lb[0], rt[0]);\n                this.y = mathMin(lt[1], rb[1], lb[1], rt[1]);\n                var maxX = mathMax(lt[0], rb[0], lb[0], rt[0]);\n                var maxY = mathMax(lt[1], rb[1], lb[1], rt[1]);\n                this.width = maxX - this.x;\n                this.height = maxY - this.y;\n            };\n        })(),\n\n        /**\n         * Calculate matrix of transforming from self to target rect\n         * @param  {module:zrender/core/BoundingRect} b\n         * @return {Array.<number>}\n         */\n        calculateTransform: function (b) {\n            var a = this;\n            var sx = b.width / a.width;\n            var sy = b.height / a.height;\n\n            var m = matrix.create();\n\n            // 矩阵右乘\n            matrix.translate(m, m, [-a.x, -a.y]);\n            matrix.scale(m, m, [sx, sy]);\n            matrix.translate(m, m, [b.x, b.y]);\n\n            return m;\n        },\n\n        /**\n         * @param {(module:echarts/core/BoundingRect|Object)} b\n         * @return {boolean}\n         */\n        intersect: function (b) {\n            if (!b) {\n                return false;\n            }\n\n            if (!(b instanceof BoundingRect)) {\n                // Normalize negative width/height.\n                b = BoundingRect.create(b);\n            }\n\n            var a = this;\n            var ax0 = a.x;\n            var ax1 = a.x + a.width;\n            var ay0 = a.y;\n            var ay1 = a.y + a.height;\n\n            var bx0 = b.x;\n            var bx1 = b.x + b.width;\n            var by0 = b.y;\n            var by1 = b.y + b.height;\n\n            return ! (ax1 < bx0 || bx1 < ax0 || ay1 < by0 || by1 < ay0);\n        },\n\n        contain: function (x, y) {\n            var rect = this;\n            return x >= rect.x\n                && x <= (rect.x + rect.width)\n                && y >= rect.y\n                && y <= (rect.y + rect.height);\n        },\n\n        /**\n         * @return {module:echarts/core/BoundingRect}\n         */\n        clone: function () {\n            return new BoundingRect(this.x, this.y, this.width, this.height);\n        },\n\n        /**\n         * Copy from another rect\n         */\n        copy: function (other) {\n            this.x = other.x;\n            this.y = other.y;\n            this.width = other.width;\n            this.height = other.height;\n        },\n\n        plain: function () {\n            return {\n                x: this.x,\n                y: this.y,\n                width: this.width,\n                height: this.height\n            };\n        }\n    };\n\n    /**\n     * @param {Object|module:zrender/core/BoundingRect} rect\n     * @param {number} rect.x\n     * @param {number} rect.y\n     * @param {number} rect.width\n     * @param {number} rect.height\n     * @return {module:zrender/core/BoundingRect}\n     */\n    BoundingRect.create = function (rect) {\n        return new BoundingRect(rect.x, rect.y, rect.width, rect.height);\n    };\n\n    module.exports = BoundingRect;\n\n\n/***/ }),\n/* 469 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Component model\n *\n * @module echarts/model/Component\n */\n\n\n    var Model = __webpack_require__(463);\n    var zrUtil = __webpack_require__(453);\n    var arrayPush = Array.prototype.push;\n    var componentUtil = __webpack_require__(501);\n    var clazzUtil = __webpack_require__(467);\n    var layout = __webpack_require__(471);\n\n    /**\n     * @alias module:echarts/model/Component\n     * @constructor\n     * @param {Object} option\n     * @param {module:echarts/model/Model} parentModel\n     * @param {module:echarts/model/Model} ecModel\n     */\n    var ComponentModel = Model.extend({\n\n        type: 'component',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        id: '',\n\n        /**\n         * @readOnly\n         */\n        name: '',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        mainType: '',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        subType: '',\n\n        /**\n         * @readOnly\n         * @type {number}\n         */\n        componentIndex: 0,\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        defaultOption: null,\n\n        /**\n         * @type {module:echarts/model/Global}\n         * @readOnly\n         */\n        ecModel: null,\n\n        /**\n         * key: componentType\n         * value:  Component model list, can not be null.\n         * @type {Object.<string, Array.<module:echarts/model/Model>>}\n         * @readOnly\n         */\n        dependentModels: [],\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        uid: null,\n\n        /**\n         * Support merge layout params.\n         * Only support 'box' now (left/right/top/bottom/width/height).\n         * @type {string|Object} Object can be {ignoreSize: true}\n         * @readOnly\n         */\n        layoutMode: null,\n\n        $constructor: function (option, parentModel, ecModel, extraOpt) {\n            Model.call(this, option, parentModel, ecModel, extraOpt);\n\n            this.uid = componentUtil.getUID('componentModel');\n        },\n\n\n        init: function (option, parentModel, ecModel, extraOpt) {\n            this.mergeDefaultAndTheme(option, ecModel);\n        },\n\n        mergeDefaultAndTheme: function (option, ecModel) {\n            var layoutMode = this.layoutMode;\n            var inputPositionParams = layoutMode\n                ? layout.getLayoutParams(option) : {};\n\n            var themeModel = ecModel.getTheme();\n            zrUtil.merge(option, themeModel.get(this.mainType));\n            zrUtil.merge(option, this.getDefaultOption());\n\n            if (layoutMode) {\n                layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n            }\n        },\n\n        mergeOption: function (option, extraOpt) {\n            zrUtil.merge(this.option, option, true);\n\n            var layoutMode = this.layoutMode;\n            if (layoutMode) {\n                layout.mergeLayoutParam(this.option, option, layoutMode);\n            }\n        },\n\n        // Hooker after init or mergeOption\n        optionUpdated: function (newCptOption, isInit) {},\n\n        getDefaultOption: function () {\n            if (!clazzUtil.hasOwn(this, '__defaultOption')) {\n                var optList = [];\n                var Class = this.constructor;\n                while (Class) {\n                    var opt = Class.prototype.defaultOption;\n                    opt && optList.push(opt);\n                    Class = Class.superClass;\n                }\n\n                var defaultOption = {};\n                for (var i = optList.length - 1; i >= 0; i--) {\n                    defaultOption = zrUtil.merge(defaultOption, optList[i], true);\n                }\n                clazzUtil.set(this, '__defaultOption', defaultOption);\n            }\n            return clazzUtil.get(this, '__defaultOption');\n        },\n\n        getReferringComponents: function (mainType) {\n            return this.ecModel.queryComponents({\n                mainType: mainType,\n                index: this.get(mainType + 'Index', true),\n                id: this.get(mainType + 'Id', true)\n            });\n        }\n\n    });\n\n    // Reset ComponentModel.extend, add preConstruct.\n    // clazzUtil.enableClassExtend(\n    //     ComponentModel,\n    //     function (option, parentModel, ecModel, extraOpt) {\n    //         // Set dependentModels, componentIndex, name, id, mainType, subType.\n    //         zrUtil.extend(this, extraOpt);\n\n    //         this.uid = componentUtil.getUID('componentModel');\n\n    //         // this.setReadOnly([\n    //         //     'type', 'id', 'uid', 'name', 'mainType', 'subType',\n    //         //     'dependentModels', 'componentIndex'\n    //         // ]);\n    //     }\n    // );\n\n    // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(\n        ComponentModel, {registerWhenExtend: true}\n    );\n    componentUtil.enableSubTypeDefaulter(ComponentModel);\n\n    // Add capability of ComponentModel.topologicalTravel.\n    componentUtil.enableTopologicalTravel(ComponentModel, getDependencies);\n\n    function getDependencies(componentType) {\n        var deps = [];\n        zrUtil.each(ComponentModel.getClassesByMainType(componentType), function (Clazz) {\n            arrayPush.apply(deps, Clazz.prototype.dependencies || []);\n        });\n        // Ensure main type\n        return zrUtil.map(deps, function (type) {\n            return clazzUtil.parseClassType(type).main;\n        });\n    }\n\n    zrUtil.mixin(ComponentModel, __webpack_require__(627));\n\n    module.exports = ComponentModel;\n\n\n/***/ }),\n/* 470 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * 事件辅助类\n * @module zrender/core/event\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n */\n\n\n    var Eventful = __webpack_require__(476);\n    var env = __webpack_require__(460);\n\n    var isDomLevel2 = (typeof window !== 'undefined') && !!window.addEventListener;\n\n    function getBoundingClientRect(el) {\n        // BlackBerry 5, iOS 3 (original iPhone) don't have getBoundingRect\n        return el.getBoundingClientRect ? el.getBoundingClientRect() : {left: 0, top: 0};\n    }\n\n    // `calculate` is optional, default false\n    function clientToLocal(el, e, out, calculate) {\n        out = out || {};\n\n        // According to the W3C Working Draft, offsetX and offsetY should be relative\n        // to the padding edge of the target element. The only browser using this convention\n        // is IE. Webkit uses the border edge, Opera uses the content edge, and FireFox does\n        // not support the properties.\n        // (see http://www.jacklmoore.com/notes/mouse-position/)\n        // In zr painter.dom, padding edge equals to border edge.\n\n        // FIXME\n        // When mousemove event triggered on ec tooltip, target is not zr painter.dom, and\n        // offsetX/Y is relative to e.target, where the calculation of zrX/Y via offsetX/Y\n        // is too complex. So css-transfrom dont support in this case temporarily.\n        if (calculate || !env.canvasSupported) {\n            defaultGetZrXY(el, e, out);\n        }\n        // Caution: In FireFox, layerX/layerY Mouse position relative to the closest positioned\n        // ancestor element, so we should make sure el is positioned (e.g., not position:static).\n        // BTW1, Webkit don't return the same results as FF in non-simple cases (like add\n        // zoom-factor, overflow / opacity layers, transforms ...)\n        // BTW2, (ev.offsetY || ev.pageY - $(ev.target).offset().top) is not correct in preserve-3d.\n        // <https://bugs.jquery.com/ticket/8523#comment:14>\n        // BTW3, In ff, offsetX/offsetY is always 0.\n        else if (env.browser.firefox && e.layerX != null && e.layerX !== e.offsetX) {\n            out.zrX = e.layerX;\n            out.zrY = e.layerY;\n        }\n        // For IE6+, chrome, safari, opera. (When will ff support offsetX?)\n        else if (e.offsetX != null) {\n            out.zrX = e.offsetX;\n            out.zrY = e.offsetY;\n        }\n        // For some other device, e.g., IOS safari.\n        else {\n            defaultGetZrXY(el, e, out);\n        }\n\n        return out;\n    }\n\n    function defaultGetZrXY(el, e, out) {\n        // This well-known method below does not support css transform.\n        var box = getBoundingClientRect(el);\n        out.zrX = e.clientX - box.left;\n        out.zrY = e.clientY - box.top;\n    }\n\n    /**\n     * 如果存在第三方嵌入的一些dom触发的事件，或touch事件，需要转换一下事件坐标.\n     * `calculate` is optional, default false.\n     */\n    function normalizeEvent(el, e, calculate) {\n\n        e = e || window.event;\n\n        if (e.zrX != null) {\n            return e;\n        }\n\n        var eventType = e.type;\n        var isTouch = eventType && eventType.indexOf('touch') >= 0;\n\n        if (!isTouch) {\n            clientToLocal(el, e, e, calculate);\n            e.zrDelta = (e.wheelDelta) ? e.wheelDelta / 120 : -(e.detail || 0) / 3;\n        }\n        else {\n            var touch = eventType != 'touchend'\n                ? e.targetTouches[0]\n                : e.changedTouches[0];\n            touch && clientToLocal(el, touch, e, calculate);\n        }\n\n        return e;\n    }\n\n    function addEventListener(el, name, handler) {\n        if (isDomLevel2) {\n            el.addEventListener(name, handler);\n        }\n        else {\n            el.attachEvent('on' + name, handler);\n        }\n    }\n\n    function removeEventListener(el, name, handler) {\n        if (isDomLevel2) {\n            el.removeEventListener(name, handler);\n        }\n        else {\n            el.detachEvent('on' + name, handler);\n        }\n    }\n\n    /**\n     * preventDefault and stopPropagation.\n     * Notice: do not do that in zrender. Upper application\n     * do that if necessary.\n     *\n     * @memberOf module:zrender/core/event\n     * @method\n     * @param {Event} e : event对象\n     */\n    var stop = isDomLevel2\n        ? function (e) {\n            e.preventDefault();\n            e.stopPropagation();\n            e.cancelBubble = true;\n        }\n        : function (e) {\n            e.returnValue = false;\n            e.cancelBubble = true;\n        };\n\n    module.exports = {\n        clientToLocal: clientToLocal,\n        normalizeEvent: normalizeEvent,\n        addEventListener: addEventListener,\n        removeEventListener: removeEventListener,\n\n        stop: stop,\n        // 做向上兼容\n        Dispatcher: Eventful\n    };\n\n\n\n/***/ }),\n/* 471 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// Layout helpers for each component positioning\n\n\n    var zrUtil = __webpack_require__(453);\n    var BoundingRect = __webpack_require__(468);\n    var numberUtil = __webpack_require__(457);\n    var formatUtil = __webpack_require__(461);\n    var parsePercent = numberUtil.parsePercent;\n    var each = zrUtil.each;\n\n    var layout = {};\n\n    /**\n     * @public\n     */\n    var LOCATION_PARAMS = layout.LOCATION_PARAMS = [\n        'left', 'right', 'top', 'bottom', 'width', 'height'\n    ];\n\n    /**\n     * @public\n     */\n    var HV_NAMES = layout.HV_NAMES = [\n        ['width', 'left', 'right'],\n        ['height', 'top', 'bottom']\n    ];\n\n    function boxLayout(orient, group, gap, maxWidth, maxHeight) {\n        var x = 0;\n        var y = 0;\n        if (maxWidth == null) {\n            maxWidth = Infinity;\n        }\n        if (maxHeight == null) {\n            maxHeight = Infinity;\n        }\n        var currentLineMaxSize = 0;\n        group.eachChild(function (child, idx) {\n            var position = child.position;\n            var rect = child.getBoundingRect();\n            var nextChild = group.childAt(idx + 1);\n            var nextChildRect = nextChild && nextChild.getBoundingRect();\n            var nextX;\n            var nextY;\n            if (orient === 'horizontal') {\n                var moveX = rect.width + (nextChildRect ? (-nextChildRect.x + rect.x) : 0);\n                nextX = x + moveX;\n                // Wrap when width exceeds maxWidth or meet a `newline` group\n                if (nextX > maxWidth || child.newline) {\n                    x = 0;\n                    nextX = moveX;\n                    y += currentLineMaxSize + gap;\n                    currentLineMaxSize = rect.height;\n                }\n                else {\n                    currentLineMaxSize = Math.max(currentLineMaxSize, rect.height);\n                }\n            }\n            else {\n                var moveY = rect.height + (nextChildRect ? (-nextChildRect.y + rect.y) : 0);\n                nextY = y + moveY;\n                // Wrap when width exceeds maxHeight or meet a `newline` group\n                if (nextY > maxHeight || child.newline) {\n                    x += currentLineMaxSize + gap;\n                    y = 0;\n                    nextY = moveY;\n                    currentLineMaxSize = rect.width;\n                }\n                else {\n                    currentLineMaxSize = Math.max(currentLineMaxSize, rect.width);\n                }\n            }\n\n            if (child.newline) {\n                return;\n            }\n\n            position[0] = x;\n            position[1] = y;\n\n            orient === 'horizontal'\n                ? (x = nextX + gap)\n                : (y = nextY + gap);\n        });\n    }\n\n    /**\n     * VBox or HBox layouting\n     * @param {string} orient\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.box = boxLayout;\n\n    /**\n     * VBox layouting\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.vbox = zrUtil.curry(boxLayout, 'vertical');\n\n    /**\n     * HBox layouting\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.hbox = zrUtil.curry(boxLayout, 'horizontal');\n\n    /**\n     * If x or x2 is not specified or 'center' 'left' 'right',\n     * the width would be as long as possible.\n     * If y or y2 is not specified or 'middle' 'top' 'bottom',\n     * the height would be as long as possible.\n     *\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.x]\n     * @param {number|string} [positionInfo.y]\n     * @param {number|string} [positionInfo.x2]\n     * @param {number|string} [positionInfo.y2]\n     * @param {Object} containerRect\n     * @param {string|number} margin\n     * @return {Object} {width, height}\n     */\n    layout.getAvailableSize = function (positionInfo, containerRect, margin) {\n        var containerWidth = containerRect.width;\n        var containerHeight = containerRect.height;\n\n        var x = parsePercent(positionInfo.x, containerWidth);\n        var y = parsePercent(positionInfo.y, containerHeight);\n        var x2 = parsePercent(positionInfo.x2, containerWidth);\n        var y2 = parsePercent(positionInfo.y2, containerHeight);\n\n        (isNaN(x) || isNaN(parseFloat(positionInfo.x))) && (x = 0);\n        (isNaN(x2) || isNaN(parseFloat(positionInfo.x2))) && (x2 = containerWidth);\n        (isNaN(y) || isNaN(parseFloat(positionInfo.y))) && (y = 0);\n        (isNaN(y2) || isNaN(parseFloat(positionInfo.y2))) && (y2 = containerHeight);\n\n        margin = formatUtil.normalizeCssArray(margin || 0);\n\n        return {\n            width: Math.max(x2 - x - margin[1] - margin[3], 0),\n            height: Math.max(y2 - y - margin[0] - margin[2], 0)\n        };\n    };\n\n    /**\n     * Parse position info.\n     *\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.left]\n     * @param {number|string} [positionInfo.top]\n     * @param {number|string} [positionInfo.right]\n     * @param {number|string} [positionInfo.bottom]\n     * @param {number|string} [positionInfo.width]\n     * @param {number|string} [positionInfo.height]\n     * @param {number|string} [positionInfo.aspect] Aspect is width / height\n     * @param {Object} containerRect\n     * @param {string|number} [margin]\n     *\n     * @return {module:zrender/core/BoundingRect}\n     */\n    layout.getLayoutRect = function (\n        positionInfo, containerRect, margin\n    ) {\n        margin = formatUtil.normalizeCssArray(margin || 0);\n\n        var containerWidth = containerRect.width;\n        var containerHeight = containerRect.height;\n\n        var left = parsePercent(positionInfo.left, containerWidth);\n        var top = parsePercent(positionInfo.top, containerHeight);\n        var right = parsePercent(positionInfo.right, containerWidth);\n        var bottom = parsePercent(positionInfo.bottom, containerHeight);\n        var width = parsePercent(positionInfo.width, containerWidth);\n        var height = parsePercent(positionInfo.height, containerHeight);\n\n        var verticalMargin = margin[2] + margin[0];\n        var horizontalMargin = margin[1] + margin[3];\n        var aspect = positionInfo.aspect;\n\n        // If width is not specified, calculate width from left and right\n        if (isNaN(width)) {\n            width = containerWidth - right - horizontalMargin - left;\n        }\n        if (isNaN(height)) {\n            height = containerHeight - bottom - verticalMargin - top;\n        }\n\n        // If width and height are not given\n        // 1. Graph should not exceeds the container\n        // 2. Aspect must be keeped\n        // 3. Graph should take the space as more as possible\n        if (isNaN(width) && isNaN(height)) {\n            if (aspect > containerWidth / containerHeight) {\n                width = containerWidth * 0.8;\n            }\n            else {\n                height = containerHeight * 0.8;\n            }\n        }\n\n        if (aspect != null) {\n            // Calculate width or height with given aspect\n            if (isNaN(width)) {\n                width = aspect * height;\n            }\n            if (isNaN(height)) {\n                height = width / aspect;\n            }\n        }\n\n        // If left is not specified, calculate left from right and width\n        if (isNaN(left)) {\n            left = containerWidth - right - width - horizontalMargin;\n        }\n        if (isNaN(top)) {\n            top = containerHeight - bottom - height - verticalMargin;\n        }\n\n        // Align left and top\n        switch (positionInfo.left || positionInfo.right) {\n            case 'center':\n                left = containerWidth / 2 - width / 2 - margin[3];\n                break;\n            case 'right':\n                left = containerWidth - width - horizontalMargin;\n                break;\n        }\n        switch (positionInfo.top || positionInfo.bottom) {\n            case 'middle':\n            case 'center':\n                top = containerHeight / 2 - height / 2 - margin[0];\n                break;\n            case 'bottom':\n                top = containerHeight - height - verticalMargin;\n                break;\n        }\n        // If something is wrong and left, top, width, height are calculated as NaN\n        left = left || 0;\n        top = top || 0;\n        if (isNaN(width)) {\n            // Width may be NaN if only one value is given except width\n            width = containerWidth - left - (right || 0);\n        }\n        if (isNaN(height)) {\n            // Height may be NaN if only one value is given except height\n            height = containerHeight - top - (bottom || 0);\n        }\n\n        var rect = new BoundingRect(left + margin[3], top + margin[0], width, height);\n        rect.margin = margin;\n        return rect;\n    };\n\n\n    /**\n     * Position a zr element in viewport\n     *  Group position is specified by either\n     *  {left, top}, {right, bottom}\n     *  If all properties exists, right and bottom will be igonred.\n     *\n     * Logic:\n     *     1. Scale (against origin point in parent coord)\n     *     2. Rotate (against origin point in parent coord)\n     *     3. Traslate (with el.position by this method)\n     * So this method only fixes the last step 'Traslate', which does not affect\n     * scaling and rotating.\n     *\n     * If be called repeatly with the same input el, the same result will be gotten.\n     *\n     * @param {module:zrender/Element} el Should have `getBoundingRect` method.\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.left]\n     * @param {number|string} [positionInfo.top]\n     * @param {number|string} [positionInfo.right]\n     * @param {number|string} [positionInfo.bottom]\n     * @param {Object} containerRect\n     * @param {string|number} margin\n     * @param {Object} [opt]\n     * @param {Array.<number>} [opt.hv=[1,1]] Only horizontal or only vertical.\n     * @param {Array.<number>} [opt.boundingMode='all']\n     *        Specify how to calculate boundingRect when locating.\n     *        'all': Position the boundingRect that is transformed and uioned\n     *               both itself and its descendants.\n     *               This mode simplies confine the elements in the bounding\n     *               of their container (e.g., using 'right: 0').\n     *        'raw': Position the boundingRect that is not transformed and only itself.\n     *               This mode is useful when you want a element can overflow its\n     *               container. (Consider a rotated circle needs to be located in a corner.)\n     *               In this mode positionInfo.width/height can only be number.\n     */\n    layout.positionElement = function (el, positionInfo, containerRect, margin, opt) {\n        var h = !opt || !opt.hv || opt.hv[0];\n        var v = !opt || !opt.hv || opt.hv[1];\n        var boundingMode = opt && opt.boundingMode || 'all';\n\n        if (!h && !v) {\n            return;\n        }\n\n        var rect;\n        if (boundingMode === 'raw') {\n            rect = el.type === 'group'\n                ? new BoundingRect(0, 0, +positionInfo.width || 0, +positionInfo.height || 0)\n                : el.getBoundingRect();\n        }\n        else {\n            rect = el.getBoundingRect();\n            if (el.needLocalTransform()) {\n                var transform = el.getLocalTransform();\n                // Notice: raw rect may be inner object of el,\n                // which should not be modified.\n                rect = rect.clone();\n                rect.applyTransform(transform);\n            }\n        }\n\n        positionInfo = layout.getLayoutRect(\n            zrUtil.defaults(\n                {width: rect.width, height: rect.height},\n                positionInfo\n            ),\n            containerRect,\n            margin\n        );\n\n        // Because 'tranlate' is the last step in transform\n        // (see zrender/core/Transformable#getLocalTransfrom),\n        // we can just only modify el.position to get final result.\n        var elPos = el.position;\n        var dx = h ? positionInfo.x - rect.x : 0;\n        var dy = v ? positionInfo.y - rect.y : 0;\n\n        el.attr('position', boundingMode === 'raw' ? [dx, dy] : [elPos[0] + dx, elPos[1] + dy]);\n    };\n\n    /**\n     * @param {Object} option Contains some of the properties in HV_NAMES.\n     * @param {number} hvIdx 0: horizontal; 1: vertical.\n     */\n    layout.sizeCalculable = function (option, hvIdx) {\n        return option[HV_NAMES[hvIdx][0]] != null\n            || (option[HV_NAMES[hvIdx][1]] != null && option[HV_NAMES[hvIdx][2]] != null);\n    };\n\n    /**\n     * Consider Case:\n     * When defulat option has {left: 0, width: 100}, and we set {right: 0}\n     * through setOption or media query, using normal zrUtil.merge will cause\n     * {right: 0} does not take effect.\n     *\n     * @example\n     * ComponentModel.extend({\n     *     init: function () {\n     *         ...\n     *         var inputPositionParams = layout.getLayoutParams(option);\n     *         this.mergeOption(inputPositionParams);\n     *     },\n     *     mergeOption: function (newOption) {\n     *         newOption && zrUtil.merge(thisOption, newOption, true);\n     *         layout.mergeLayoutParam(thisOption, newOption);\n     *     }\n     * });\n     *\n     * @param {Object} targetOption\n     * @param {Object} newOption\n     * @param {Object|string} [opt]\n     * @param {boolean|Array.<boolean>} [opt.ignoreSize=false] Some component must has width and height.\n     */\n    layout.mergeLayoutParam = function (targetOption, newOption, opt) {\n        !zrUtil.isObject(opt) && (opt = {});\n\n        var ignoreSize = opt.ignoreSize;\n        !zrUtil.isArray(ignoreSize) && (ignoreSize = [ignoreSize, ignoreSize]);\n\n        var hResult = merge(HV_NAMES[0], 0);\n        var vResult = merge(HV_NAMES[1], 1);\n\n        copy(HV_NAMES[0], targetOption, hResult);\n        copy(HV_NAMES[1], targetOption, vResult);\n\n        function merge(names, hvIdx) {\n            var newParams = {};\n            var newValueCount = 0;\n            var merged = {};\n            var mergedValueCount = 0;\n            var enoughParamNumber = 2;\n\n            each(names, function (name) {\n                merged[name] = targetOption[name];\n            });\n            each(names, function (name) {\n                // Consider case: newOption.width is null, which is\n                // set by user for removing width setting.\n                hasProp(newOption, name) && (newParams[name] = merged[name] = newOption[name]);\n                hasValue(newParams, name) && newValueCount++;\n                hasValue(merged, name) && mergedValueCount++;\n            });\n\n            if (ignoreSize[hvIdx]) {\n                // Only one of left/right is premitted to exist.\n                if (hasValue(newOption, names[1])) {\n                    merged[names[2]] = null;\n                }\n                else if (hasValue(newOption, names[2])) {\n                    merged[names[1]] = null;\n                }\n                return merged;\n            }\n\n            // Case: newOption: {width: ..., right: ...},\n            // or targetOption: {right: ...} and newOption: {width: ...},\n            // There is no conflict when merged only has params count\n            // little than enoughParamNumber.\n            if (mergedValueCount === enoughParamNumber || !newValueCount) {\n                return merged;\n            }\n            // Case: newOption: {width: ..., right: ...},\n            // Than we can make sure user only want those two, and ignore\n            // all origin params in targetOption.\n            else if (newValueCount >= enoughParamNumber) {\n                return newParams;\n            }\n            else {\n                // Chose another param from targetOption by priority.\n                for (var i = 0; i < names.length; i++) {\n                    var name = names[i];\n                    if (!hasProp(newParams, name) && hasProp(targetOption, name)) {\n                        newParams[name] = targetOption[name];\n                        break;\n                    }\n                }\n                return newParams;\n            }\n        }\n\n        function hasProp(obj, name) {\n            return obj.hasOwnProperty(name);\n        }\n\n        function hasValue(obj, name) {\n            return obj[name] != null && obj[name] !== 'auto';\n        }\n\n        function copy(names, target, source) {\n            each(names, function (name) {\n                target[name] = source[name];\n            });\n        }\n    };\n\n    /**\n     * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n     * @param {Object} source\n     * @return {Object} Result contains those props.\n     */\n    layout.getLayoutParams = function (source) {\n        return layout.copyLayoutParams({}, source);\n    };\n\n    /**\n     * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n     * @param {Object} source\n     * @return {Object} Result contains those props.\n     */\n    layout.copyLayoutParams = function (target, source) {\n        source && target && each(LOCATION_PARAMS, function (name) {\n            source.hasOwnProperty(name) && (target[name] = source[name]);\n        });\n        return target;\n    };\n\n    module.exports = layout;\n\n\n\n/***/ }),\n/* 472 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var OrdinalScale = __webpack_require__(635);\n    var IntervalScale = __webpack_require__(500);\n    __webpack_require__(636);\n    __webpack_require__(634);\n    var Scale = __webpack_require__(484);\n\n    var numberUtil = __webpack_require__(457);\n    var zrUtil = __webpack_require__(453);\n    var textContain = __webpack_require__(473);\n    var axisHelper = {};\n\n    /**\n     * Get axis scale extent before niced.\n     * Item of returned array can only be number (including Infinity and NaN).\n     */\n    axisHelper.getScaleExtent = function (scale, model) {\n        var scaleType = scale.type;\n\n        var min = model.getMin();\n        var max = model.getMax();\n        var fixMin = min != null;\n        var fixMax = max != null;\n        var originalExtent = scale.getExtent();\n\n        var axisDataLen;\n        var boundaryGap;\n        var span;\n        if (scaleType === 'ordinal') {\n            axisDataLen = (model.get('data') || []).length;\n        }\n        else {\n            boundaryGap = model.get('boundaryGap');\n            if (!zrUtil.isArray(boundaryGap)) {\n                boundaryGap = [boundaryGap || 0, boundaryGap || 0];\n            }\n            if (typeof boundaryGap[0] === 'boolean') {\n                if (__DEV__) {\n                    console.warn('Boolean type for boundaryGap is only '\n                        + 'allowed for ordinal axis. Please use string in '\n                        + 'percentage instead, e.g., \"20%\". Currently, '\n                        + 'boundaryGap is set to be 0.');\n                }\n                boundaryGap = [0, 0];\n            }\n            boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], 1);\n            boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], 1);\n            span = (originalExtent[1] - originalExtent[0])\n                || Math.abs(originalExtent[0]);\n        }\n\n        // Notice: When min/max is not set (that is, when there are null/undefined,\n        // which is the most common case), these cases should be ensured:\n        // (1) For 'ordinal', show all axis.data.\n        // (2) For others:\n        //      + `boundaryGap` is applied (if min/max set, boundaryGap is\n        //      disabled).\n        //      + If `needCrossZero`, min/max should be zero, otherwise, min/max should\n        //      be the result that originalExtent enlarged by boundaryGap.\n        // (3) If no data, it should be ensured that `scale.setBlank` is set.\n\n        // FIXME\n        // (1) When min/max is 'dataMin' or 'dataMax', should boundaryGap be able to used?\n        // (2) When `needCrossZero` and all data is positive/negative, should it be ensured\n        // that the results processed by boundaryGap are positive/negative?\n\n        if (min == null) {\n            min = scaleType === 'ordinal'\n                ? (axisDataLen ? 0 : NaN)\n                : originalExtent[0] - boundaryGap[0] * span;\n        }\n        if (max == null) {\n            max = scaleType === 'ordinal'\n                ? (axisDataLen ? axisDataLen - 1 : NaN)\n                : originalExtent[1] + boundaryGap[1] * span;\n        }\n\n        if (min === 'dataMin') {\n            min = originalExtent[0];\n        }\n        if (max === 'dataMax') {\n            max = originalExtent[1];\n        }\n\n        (min == null || !isFinite(min)) && (min = NaN);\n        (max == null || !isFinite(max)) && (max = NaN);\n\n        scale.setBlank(zrUtil.eqNaN(min) || zrUtil.eqNaN(max));\n\n        // Evaluate if axis needs cross zero\n        if (model.getNeedCrossZero()) {\n            // Axis is over zero and min is not set\n            if (min > 0 && max > 0 && !fixMin) {\n                min = 0;\n            }\n            // Axis is under zero and max is not set\n            if (min < 0 && max < 0 && !fixMax) {\n                max = 0;\n            }\n        }\n\n        return [min, max];\n    };\n\n    axisHelper.niceScaleExtent = function (scale, model) {\n        var extent = axisHelper.getScaleExtent(scale, model);\n        var fixMin = model.getMin() != null;\n        var fixMax = model.getMax() != null;\n        var splitNumber = model.get('splitNumber');\n\n        if (scale.type === 'log') {\n            scale.base = model.get('logBase');\n        }\n\n        scale.setExtent(extent[0], extent[1]);\n        scale.niceExtent({\n            splitNumber: splitNumber,\n            fixMin: fixMin,\n            fixMax: fixMax,\n            minInterval: scale.type === 'interval' ? model.get('minInterval') : null\n        });\n\n        // If some one specified the min, max. And the default calculated interval\n        // is not good enough. He can specify the interval. It is often appeared\n        // in angle axis with angle 0 - 360. Interval calculated in interval scale is hard\n        // to be 60.\n        // FIXME\n        var interval = model.get('interval');\n        if (interval != null) {\n            scale.setInterval && scale.setInterval(interval);\n        }\n    };\n\n    /**\n     * @param {module:echarts/model/Model} model\n     * @param {string} [axisType] Default retrieve from model.type\n     * @return {module:echarts/scale/*}\n     */\n    axisHelper.createScaleByModel = function(model, axisType) {\n        axisType = axisType || model.get('type');\n        if (axisType) {\n            switch (axisType) {\n                // Buildin scale\n                case 'category':\n                    return new OrdinalScale(\n                        model.getCategories(), [Infinity, -Infinity]\n                    );\n                case 'value':\n                    return new IntervalScale();\n                // Extended scale, like time and log\n                default:\n                    return (Scale.getClass(axisType) || IntervalScale).create(model);\n            }\n        }\n    };\n\n    /**\n     * Check if the axis corss 0\n     */\n    axisHelper.ifAxisCrossZero = function (axis) {\n        var dataExtent = axis.scale.getExtent();\n        var min = dataExtent[0];\n        var max = dataExtent[1];\n        return !((min > 0 && max > 0) || (min < 0 && max < 0));\n    };\n\n    /**\n     * @param {Array.<number>} tickCoords In axis self coordinate.\n     * @param {Array.<string>} labels\n     * @param {string} font\n     * @param {boolean} isAxisHorizontal\n     * @return {number}\n     */\n    axisHelper.getAxisLabelInterval = function (tickCoords, labels, font, isAxisHorizontal) {\n        // FIXME\n        // 不同角的axis和label，不只是horizontal和vertical.\n\n        var textSpaceTakenRect;\n        var autoLabelInterval = 0;\n        var accumulatedLabelInterval = 0;\n\n        var step = 1;\n        if (labels.length > 40) {\n            // Simple optimization for large amount of labels\n            step = Math.floor(labels.length / 40);\n        }\n\n        for (var i = 0; i < tickCoords.length; i += step) {\n            var tickCoord = tickCoords[i];\n            var rect = textContain.getBoundingRect(\n                labels[i], font, 'center', 'top'\n            );\n            rect[isAxisHorizontal ? 'x' : 'y'] += tickCoord;\n            // FIXME Magic number 1.5\n            rect[isAxisHorizontal ? 'width' : 'height'] *= 1.3;\n            if (!textSpaceTakenRect) {\n                textSpaceTakenRect = rect.clone();\n            }\n            // There is no space for current label;\n            else if (textSpaceTakenRect.intersect(rect)) {\n                accumulatedLabelInterval++;\n                autoLabelInterval = Math.max(autoLabelInterval, accumulatedLabelInterval);\n            }\n            else {\n                textSpaceTakenRect.union(rect);\n                // Reset\n                accumulatedLabelInterval = 0;\n            }\n        }\n        if (autoLabelInterval === 0 && step > 1) {\n            return step;\n        }\n        return (autoLabelInterval + 1) * step - 1;\n    };\n\n    /**\n     * @param {Object} axis\n     * @param {Function} labelFormatter\n     * @return {Array.<string>}\n     */\n    axisHelper.getFormattedLabels = function (axis, labelFormatter) {\n        var scale = axis.scale;\n        var labels = scale.getTicksLabels();\n        var ticks = scale.getTicks();\n        if (typeof labelFormatter === 'string') {\n            labelFormatter = (function (tpl) {\n                return function (val) {\n                    return tpl.replace('{value}', val != null ? val : '');\n                };\n            })(labelFormatter);\n            // Consider empty array\n            return zrUtil.map(labels, labelFormatter);\n        }\n        else if (typeof labelFormatter === 'function') {\n            return zrUtil.map(ticks, function (tick, idx) {\n                return labelFormatter(\n                    axisHelper.getAxisRawValue(axis, tick),\n                    idx\n                );\n            }, this);\n        }\n        else {\n            return labels;\n        }\n    };\n\n    axisHelper.getAxisRawValue = function (axis, value) {\n        // In category axis with data zoom, tick is not the original\n        // index of axis.data. So tick should not be exposed to user\n        // in category axis.\n        return axis.type === 'category' ? axis.scale.getLabel(value) : value;\n    };\n\n    module.exports = axisHelper;\n\n\n/***/ }),\n/* 473 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var textWidthCache = {};\n    var textWidthCacheCounter = 0;\n    var TEXT_CACHE_MAX = 5000;\n\n    var util = __webpack_require__(453);\n    var BoundingRect = __webpack_require__(468);\n    var retrieve = util.retrieve;\n\n    function getTextWidth(text, textFont) {\n        var key = text + ':' + textFont;\n        if (textWidthCache[key]) {\n            return textWidthCache[key];\n        }\n\n        var textLines = (text + '').split('\\n');\n        var width = 0;\n\n        for (var i = 0, l = textLines.length; i < l; i++) {\n            // measureText 可以被覆盖以兼容不支持 Canvas 的环境\n            width = Math.max(textContain.measureText(textLines[i], textFont).width, width);\n        }\n\n        if (textWidthCacheCounter > TEXT_CACHE_MAX) {\n            textWidthCacheCounter = 0;\n            textWidthCache = {};\n        }\n        textWidthCacheCounter++;\n        textWidthCache[key] = width;\n\n        return width;\n    }\n\n    function getTextRect(text, textFont, textAlign, textBaseline) {\n        var textLineLen = ((text || '') + '').split('\\n').length;\n\n        var width = getTextWidth(text, textFont);\n        // FIXME 高度计算比较粗暴\n        var lineHeight = getTextWidth('国', textFont);\n        var height = textLineLen * lineHeight;\n\n        var rect = new BoundingRect(0, 0, width, height);\n        // Text has a special line height property\n        rect.lineHeight = lineHeight;\n\n        switch (textBaseline) {\n            case 'bottom':\n            case 'alphabetic':\n                rect.y -= lineHeight;\n                break;\n            case 'middle':\n                rect.y -= lineHeight / 2;\n                break;\n            // case 'hanging':\n            // case 'top':\n        }\n\n        // FIXME Right to left language\n        switch (textAlign) {\n            case 'end':\n            case 'right':\n                rect.x -= rect.width;\n                break;\n            case 'center':\n                rect.x -= rect.width / 2;\n                break;\n            // case 'start':\n            // case 'left':\n        }\n\n        return rect;\n    }\n\n    function adjustTextPositionOnRect(textPosition, rect, textRect, distance) {\n\n        var x = rect.x;\n        var y = rect.y;\n\n        var height = rect.height;\n        var width = rect.width;\n\n        var textHeight = textRect.height;\n\n        var lineHeight = textRect.lineHeight;\n        var halfHeight = height / 2 - textHeight / 2 + lineHeight;\n\n        var textAlign = 'left';\n\n        switch (textPosition) {\n            case 'left':\n                x -= distance;\n                y += halfHeight;\n                textAlign = 'right';\n                break;\n            case 'right':\n                x += distance + width;\n                y += halfHeight;\n                textAlign = 'left';\n                break;\n            case 'top':\n                x += width / 2;\n                y -= distance + textHeight - lineHeight;\n                textAlign = 'center';\n                break;\n            case 'bottom':\n                x += width / 2;\n                y += height + distance + lineHeight;\n                textAlign = 'center';\n                break;\n            case 'inside':\n                x += width / 2;\n                y += halfHeight;\n                textAlign = 'center';\n                break;\n            case 'insideLeft':\n                x += distance;\n                y += halfHeight;\n                textAlign = 'left';\n                break;\n            case 'insideRight':\n                x += width - distance;\n                y += halfHeight;\n                textAlign = 'right';\n                break;\n            case 'insideTop':\n                x += width / 2;\n                y += distance + lineHeight;\n                textAlign = 'center';\n                break;\n            case 'insideBottom':\n                x += width / 2;\n                y += height - textHeight - distance + lineHeight;\n                textAlign = 'center';\n                break;\n            case 'insideTopLeft':\n                x += distance;\n                y += distance + lineHeight;\n                textAlign = 'left';\n                break;\n            case 'insideTopRight':\n                x += width - distance;\n                y += distance + lineHeight;\n                textAlign = 'right';\n                break;\n            case 'insideBottomLeft':\n                x += distance;\n                y += height - textHeight - distance + lineHeight;\n                break;\n            case 'insideBottomRight':\n                x += width - distance;\n                y += height - textHeight - distance + lineHeight;\n                textAlign = 'right';\n                break;\n        }\n\n        return {\n            x: x,\n            y: y,\n            textAlign: textAlign,\n            textBaseline: 'alphabetic'\n        };\n    }\n\n    /**\n     * Show ellipsis if overflow.\n     *\n     * @param  {string} text\n     * @param  {string} containerWidth\n     * @param  {string} textFont\n     * @param  {number} [ellipsis='...']\n     * @param  {Object} [options]\n     * @param  {number} [options.maxIterations=3]\n     * @param  {number} [options.minChar=0] If truncate result are less\n     *                  then minChar, ellipsis will not show, which is\n     *                  better for user hint in some cases.\n     * @param  {number} [options.placeholder=''] When all truncated, use the placeholder.\n     * @return {string}\n     */\n    function truncateText(text, containerWidth, textFont, ellipsis, options) {\n        if (!containerWidth) {\n            return '';\n        }\n\n        options = options || {};\n\n        ellipsis = retrieve(ellipsis, '...');\n        var maxIterations = retrieve(options.maxIterations, 2);\n        var minChar = retrieve(options.minChar, 0);\n        // FIXME\n        // Other languages?\n        var cnCharWidth = getTextWidth('国', textFont);\n        // FIXME\n        // Consider proportional font?\n        var ascCharWidth = getTextWidth('a', textFont);\n        var placeholder = retrieve(options.placeholder, '');\n\n        // Example 1: minChar: 3, text: 'asdfzxcv', truncate result: 'asdf', but not: 'a...'.\n        // Example 2: minChar: 3, text: '维度', truncate result: '维', but not: '...'.\n        var contentWidth = containerWidth = Math.max(0, containerWidth - 1); // Reserve some gap.\n        for (var i = 0; i < minChar && contentWidth >= ascCharWidth; i++) {\n            contentWidth -= ascCharWidth;\n        }\n\n        var ellipsisWidth = getTextWidth(ellipsis);\n        if (ellipsisWidth > contentWidth) {\n            ellipsis = '';\n            ellipsisWidth = 0;\n        }\n\n        contentWidth = containerWidth - ellipsisWidth;\n\n        var textLines = (text + '').split('\\n');\n\n        for (var i = 0, len = textLines.length; i < len; i++) {\n            var textLine = textLines[i];\n            var lineWidth = getTextWidth(textLine, textFont);\n\n            if (lineWidth <= containerWidth) {\n                continue;\n            }\n\n            for (var j = 0;; j++) {\n                if (lineWidth <= contentWidth || j >= maxIterations) {\n                    textLine += ellipsis;\n                    break;\n                }\n\n                var subLength = j === 0\n                    ? estimateLength(textLine, contentWidth, ascCharWidth, cnCharWidth)\n                    : lineWidth > 0\n                    ? Math.floor(textLine.length * contentWidth / lineWidth)\n                    : 0;\n\n                textLine = textLine.substr(0, subLength);\n                lineWidth = getTextWidth(textLine, textFont);\n            }\n\n            if (textLine === '') {\n                textLine = placeholder;\n            }\n\n            textLines[i] = textLine;\n        }\n\n        return textLines.join('\\n');\n    }\n\n    function estimateLength(text, contentWidth, ascCharWidth, cnCharWidth) {\n        var width = 0;\n        var i = 0;\n        for (var len = text.length; i < len && width < contentWidth; i++) {\n            var charCode = text.charCodeAt(i);\n            width += (0 <= charCode && charCode <= 127) ? ascCharWidth : cnCharWidth;\n        }\n        return i;\n    }\n\n    var textContain = {\n\n        getWidth: getTextWidth,\n\n        getBoundingRect: getTextRect,\n\n        adjustTextPositionOnRect: adjustTextPositionOnRect,\n\n        truncateText: truncateText,\n\n        measureText: function (text, textFont) {\n            var ctx = util.getContext();\n            ctx.font = textFont || '12px sans-serif';\n            return ctx.measureText(text);\n        }\n    };\n\n    module.exports = textContain;\n\n\n/***/ }),\n/* 474 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * 曲线辅助模块\n * @module zrender/core/curve\n * @author pissang(https://www.github.com/pissang)\n */\n\n\n    var vec2 = __webpack_require__(458);\n    var v2Create = vec2.create;\n    var v2DistSquare = vec2.distSquare;\n    var mathPow = Math.pow;\n    var mathSqrt = Math.sqrt;\n\n    var EPSILON = 1e-8;\n    var EPSILON_NUMERIC = 1e-4;\n\n    var THREE_SQRT = mathSqrt(3);\n    var ONE_THIRD = 1 / 3;\n\n    // 临时变量\n    var _v0 = v2Create();\n    var _v1 = v2Create();\n    var _v2 = v2Create();\n    // var _v3 = vec2.create();\n\n    function isAroundZero(val) {\n        return val > -EPSILON && val < EPSILON;\n    }\n    function isNotAroundZero(val) {\n        return val > EPSILON || val < -EPSILON;\n    }\n    /**\n     * 计算三次贝塞尔值\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @return {number}\n     */\n    function cubicAt(p0, p1, p2, p3, t) {\n        var onet = 1 - t;\n        return onet * onet * (onet * p0 + 3 * t * p1)\n             + t * t * (t * p3 + 3 * onet * p2);\n    }\n\n    /**\n     * 计算三次贝塞尔导数值\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @return {number}\n     */\n    function cubicDerivativeAt(p0, p1, p2, p3, t) {\n        var onet = 1 - t;\n        return 3 * (\n            ((p1 - p0) * onet + 2 * (p2 - p1) * t) * onet\n            + (p3 - p2) * t * t\n        );\n    }\n\n    /**\n     * 计算三次贝塞尔方程根，使用盛金公式\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} val\n     * @param  {Array.<number>} roots\n     * @return {number} 有效根数目\n     */\n    function cubicRootAt(p0, p1, p2, p3, val, roots) {\n        // Evaluate roots of cubic functions\n        var a = p3 + 3 * (p1 - p2) - p0;\n        var b = 3 * (p2 - p1 * 2 + p0);\n        var c = 3 * (p1  - p0);\n        var d = p0 - val;\n\n        var A = b * b - 3 * a * c;\n        var B = b * c - 9 * a * d;\n        var C = c * c - 3 * b * d;\n\n        var n = 0;\n\n        if (isAroundZero(A) && isAroundZero(B)) {\n            if (isAroundZero(b)) {\n                roots[0] = 0;\n            }\n            else {\n                var t1 = -c / b;  //t1, t2, t3, b is not zero\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = B * B - 4 * A * C;\n\n            if (isAroundZero(disc)) {\n                var K = B / A;\n                var t1 = -b / a + K;  // t1, a is not zero\n                var t2 = -K / 2;  // t2, t3\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n            }\n            else if (disc > 0) {\n                var discSqrt = mathSqrt(disc);\n                var Y1 = A * b + 1.5 * a * (-B + discSqrt);\n                var Y2 = A * b + 1.5 * a * (-B - discSqrt);\n                if (Y1 < 0) {\n                    Y1 = -mathPow(-Y1, ONE_THIRD);\n                }\n                else {\n                    Y1 = mathPow(Y1, ONE_THIRD);\n                }\n                if (Y2 < 0) {\n                    Y2 = -mathPow(-Y2, ONE_THIRD);\n                }\n                else {\n                    Y2 = mathPow(Y2, ONE_THIRD);\n                }\n                var t1 = (-b - (Y1 + Y2)) / (3 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n            else {\n                var T = (2 * A * b - 3 * a * B) / (2 * mathSqrt(A * A * A));\n                var theta = Math.acos(T) / 3;\n                var ASqrt = mathSqrt(A);\n                var tmp = Math.cos(theta);\n\n                var t1 = (-b - 2 * ASqrt * tmp) / (3 * a);\n                var t2 = (-b + ASqrt * (tmp + THREE_SQRT * Math.sin(theta))) / (3 * a);\n                var t3 = (-b + ASqrt * (tmp - THREE_SQRT * Math.sin(theta))) / (3 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n                if (t3 >= 0 && t3 <= 1) {\n                    roots[n++] = t3;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 计算三次贝塞尔方程极限值的位置\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {Array.<number>} extrema\n     * @return {number} 有效数目\n     */\n    function cubicExtrema(p0, p1, p2, p3, extrema) {\n        var b = 6 * p2 - 12 * p1 + 6 * p0;\n        var a = 9 * p1 + 3 * p3 - 3 * p0 - 9 * p2;\n        var c = 3 * p1 - 3 * p0;\n\n        var n = 0;\n        if (isAroundZero(a)) {\n            if (isNotAroundZero(b)) {\n                var t1 = -c / b;\n                if (t1 >= 0 && t1 <=1) {\n                    extrema[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = b * b - 4 * a * c;\n            if (isAroundZero(disc)) {\n                extrema[0] = -b / (2 * a);\n            }\n            else if (disc > 0) {\n                var discSqrt = mathSqrt(disc);\n                var t1 = (-b + discSqrt) / (2 * a);\n                var t2 = (-b - discSqrt) / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    extrema[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    extrema[n++] = t2;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 细分三次贝塞尔曲线\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @param  {Array.<number>} out\n     */\n    function cubicSubdivide(p0, p1, p2, p3, t, out) {\n        var p01 = (p1 - p0) * t + p0;\n        var p12 = (p2 - p1) * t + p1;\n        var p23 = (p3 - p2) * t + p2;\n\n        var p012 = (p12 - p01) * t + p01;\n        var p123 = (p23 - p12) * t + p12;\n\n        var p0123 = (p123 - p012) * t + p012;\n        // Seg0\n        out[0] = p0;\n        out[1] = p01;\n        out[2] = p012;\n        out[3] = p0123;\n        // Seg1\n        out[4] = p0123;\n        out[5] = p123;\n        out[6] = p23;\n        out[7] = p3;\n    }\n\n    /**\n     * 投射点到三次贝塞尔曲线上，返回投射距离。\n     * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x3\n     * @param {number} y3\n     * @param {number} x\n     * @param {number} y\n     * @param {Array.<number>} [out] 投射点\n     * @return {number}\n     */\n    function cubicProjectPoint(\n        x0, y0, x1, y1, x2, y2, x3, y3,\n        x, y, out\n    ) {\n        // http://pomax.github.io/bezierinfo/#projections\n        var t;\n        var interval = 0.005;\n        var d = Infinity;\n        var prev;\n        var next;\n        var d1;\n        var d2;\n\n        _v0[0] = x;\n        _v0[1] = y;\n\n        // 先粗略估计一下可能的最小距离的 t 值\n        // PENDING\n        for (var _t = 0; _t < 1; _t += 0.05) {\n            _v1[0] = cubicAt(x0, x1, x2, x3, _t);\n            _v1[1] = cubicAt(y0, y1, y2, y3, _t);\n            d1 = v2DistSquare(_v0, _v1);\n            if (d1 < d) {\n                t = _t;\n                d = d1;\n            }\n        }\n        d = Infinity;\n\n        // At most 32 iteration\n        for (var i = 0; i < 32; i++) {\n            if (interval < EPSILON_NUMERIC) {\n                break;\n            }\n            prev = t - interval;\n            next = t + interval;\n            // t - interval\n            _v1[0] = cubicAt(x0, x1, x2, x3, prev);\n            _v1[1] = cubicAt(y0, y1, y2, y3, prev);\n\n            d1 = v2DistSquare(_v1, _v0);\n\n            if (prev >= 0 && d1 < d) {\n                t = prev;\n                d = d1;\n            }\n            else {\n                // t + interval\n                _v2[0] = cubicAt(x0, x1, x2, x3, next);\n                _v2[1] = cubicAt(y0, y1, y2, y3, next);\n                d2 = v2DistSquare(_v2, _v0);\n\n                if (next <= 1 && d2 < d) {\n                    t = next;\n                    d = d2;\n                }\n                else {\n                    interval *= 0.5;\n                }\n            }\n        }\n        // t\n        if (out) {\n            out[0] = cubicAt(x0, x1, x2, x3, t);\n            out[1] = cubicAt(y0, y1, y2, y3, t);\n        }\n        // console.log(interval, i);\n        return mathSqrt(d);\n    }\n\n    /**\n     * 计算二次方贝塞尔值\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @return {number}\n     */\n    function quadraticAt(p0, p1, p2, t) {\n        var onet = 1 - t;\n        return onet * (onet * p0 + 2 * t * p1) + t * t * p2;\n    }\n\n    /**\n     * 计算二次方贝塞尔导数值\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @return {number}\n     */\n    function quadraticDerivativeAt(p0, p1, p2, t) {\n        return 2 * ((1 - t) * (p1 - p0) + t * (p2 - p1));\n    }\n\n    /**\n     * 计算二次方贝塞尔方程根\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @param  {Array.<number>} roots\n     * @return {number} 有效根数目\n     */\n    function quadraticRootAt(p0, p1, p2, val, roots) {\n        var a = p0 - 2 * p1 + p2;\n        var b = 2 * (p1 - p0);\n        var c = p0 - val;\n\n        var n = 0;\n        if (isAroundZero(a)) {\n            if (isNotAroundZero(b)) {\n                var t1 = -c / b;\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = b * b - 4 * a * c;\n            if (isAroundZero(disc)) {\n                var t1 = -b / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n            else if (disc > 0) {\n                var discSqrt = mathSqrt(disc);\n                var t1 = (-b + discSqrt) / (2 * a);\n                var t2 = (-b - discSqrt) / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 计算二次贝塞尔方程极限值\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @return {number}\n     */\n    function quadraticExtremum(p0, p1, p2) {\n        var divider = p0 + p2 - 2 * p1;\n        if (divider === 0) {\n            // p1 is center of p0 and p2\n            return 0.5;\n        }\n        else {\n            return (p0 - p1) / divider;\n        }\n    }\n\n    /**\n     * 细分二次贝塞尔曲线\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @param  {Array.<number>} out\n     */\n    function quadraticSubdivide(p0, p1, p2, t, out) {\n        var p01 = (p1 - p0) * t + p0;\n        var p12 = (p2 - p1) * t + p1;\n        var p012 = (p12 - p01) * t + p01;\n\n        // Seg0\n        out[0] = p0;\n        out[1] = p01;\n        out[2] = p012;\n\n        // Seg1\n        out[3] = p012;\n        out[4] = p12;\n        out[5] = p2;\n    }\n\n    /**\n     * 投射点到二次贝塞尔曲线上，返回投射距离。\n     * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x\n     * @param {number} y\n     * @param {Array.<number>} out 投射点\n     * @return {number}\n     */\n    function quadraticProjectPoint(\n        x0, y0, x1, y1, x2, y2,\n        x, y, out\n    ) {\n        // http://pomax.github.io/bezierinfo/#projections\n        var t;\n        var interval = 0.005;\n        var d = Infinity;\n\n        _v0[0] = x;\n        _v0[1] = y;\n\n        // 先粗略估计一下可能的最小距离的 t 值\n        // PENDING\n        for (var _t = 0; _t < 1; _t += 0.05) {\n            _v1[0] = quadraticAt(x0, x1, x2, _t);\n            _v1[1] = quadraticAt(y0, y1, y2, _t);\n            var d1 = v2DistSquare(_v0, _v1);\n            if (d1 < d) {\n                t = _t;\n                d = d1;\n            }\n        }\n        d = Infinity;\n\n        // At most 32 iteration\n        for (var i = 0; i < 32; i++) {\n            if (interval < EPSILON_NUMERIC) {\n                break;\n            }\n            var prev = t - interval;\n            var next = t + interval;\n            // t - interval\n            _v1[0] = quadraticAt(x0, x1, x2, prev);\n            _v1[1] = quadraticAt(y0, y1, y2, prev);\n\n            var d1 = v2DistSquare(_v1, _v0);\n\n            if (prev >= 0 && d1 < d) {\n                t = prev;\n                d = d1;\n            }\n            else {\n                // t + interval\n                _v2[0] = quadraticAt(x0, x1, x2, next);\n                _v2[1] = quadraticAt(y0, y1, y2, next);\n                var d2 = v2DistSquare(_v2, _v0);\n                if (next <= 1 && d2 < d) {\n                    t = next;\n                    d = d2;\n                }\n                else {\n                    interval *= 0.5;\n                }\n            }\n        }\n        // t\n        if (out) {\n            out[0] = quadraticAt(x0, x1, x2, t);\n            out[1] = quadraticAt(y0, y1, y2, t);\n        }\n        // console.log(interval, i);\n        return mathSqrt(d);\n    }\n\n    module.exports = {\n\n        cubicAt: cubicAt,\n\n        cubicDerivativeAt: cubicDerivativeAt,\n\n        cubicRootAt: cubicRootAt,\n\n        cubicExtrema: cubicExtrema,\n\n        cubicSubdivide: cubicSubdivide,\n\n        cubicProjectPoint: cubicProjectPoint,\n\n        quadraticAt: quadraticAt,\n\n        quadraticDerivativeAt: quadraticDerivativeAt,\n\n        quadraticRootAt: quadraticRootAt,\n\n        quadraticExtremum: quadraticExtremum,\n\n        quadraticSubdivide: quadraticSubdivide,\n\n        quadraticProjectPoint: quadraticProjectPoint\n    };\n\n\n/***/ }),\n/* 475 */\n/***/ (function(module, exports) {\n\n\n    var ArrayCtor = typeof Float32Array === 'undefined'\n        ? Array\n        : Float32Array;\n    /**\n     * 3x2矩阵操作类\n     * @exports zrender/tool/matrix\n     */\n    var matrix = {\n        /**\n         * 创建一个单位矩阵\n         * @return {Float32Array|Array.<number>}\n         */\n        create : function() {\n            var out = new ArrayCtor(6);\n            matrix.identity(out);\n\n            return out;\n        },\n        /**\n         * 设置矩阵为单位矩阵\n         * @param {Float32Array|Array.<number>} out\n         */\n        identity : function(out) {\n            out[0] = 1;\n            out[1] = 0;\n            out[2] = 0;\n            out[3] = 1;\n            out[4] = 0;\n            out[5] = 0;\n            return out;\n        },\n        /**\n         * 复制矩阵\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} m\n         */\n        copy: function(out, m) {\n            out[0] = m[0];\n            out[1] = m[1];\n            out[2] = m[2];\n            out[3] = m[3];\n            out[4] = m[4];\n            out[5] = m[5];\n            return out;\n        },\n        /**\n         * 矩阵相乘\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} m1\n         * @param {Float32Array|Array.<number>} m2\n         */\n        mul : function (out, m1, m2) {\n            // Consider matrix.mul(m, m2, m);\n            // where out is the same as m2.\n            // So use temp variable to escape error.\n            var out0 = m1[0] * m2[0] + m1[2] * m2[1];\n            var out1 = m1[1] * m2[0] + m1[3] * m2[1];\n            var out2 = m1[0] * m2[2] + m1[2] * m2[3];\n            var out3 = m1[1] * m2[2] + m1[3] * m2[3];\n            var out4 = m1[0] * m2[4] + m1[2] * m2[5] + m1[4];\n            var out5 = m1[1] * m2[4] + m1[3] * m2[5] + m1[5];\n            out[0] = out0;\n            out[1] = out1;\n            out[2] = out2;\n            out[3] = out3;\n            out[4] = out4;\n            out[5] = out5;\n            return out;\n        },\n        /**\n         * 平移变换\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         * @param {Float32Array|Array.<number>} v\n         */\n        translate : function(out, a, v) {\n            out[0] = a[0];\n            out[1] = a[1];\n            out[2] = a[2];\n            out[3] = a[3];\n            out[4] = a[4] + v[0];\n            out[5] = a[5] + v[1];\n            return out;\n        },\n        /**\n         * 旋转变换\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         * @param {number} rad\n         */\n        rotate : function(out, a, rad) {\n            var aa = a[0];\n            var ac = a[2];\n            var atx = a[4];\n            var ab = a[1];\n            var ad = a[3];\n            var aty = a[5];\n            var st = Math.sin(rad);\n            var ct = Math.cos(rad);\n\n            out[0] = aa * ct + ab * st;\n            out[1] = -aa * st + ab * ct;\n            out[2] = ac * ct + ad * st;\n            out[3] = -ac * st + ct * ad;\n            out[4] = ct * atx + st * aty;\n            out[5] = ct * aty - st * atx;\n            return out;\n        },\n        /**\n         * 缩放变换\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         * @param {Float32Array|Array.<number>} v\n         */\n        scale : function(out, a, v) {\n            var vx = v[0];\n            var vy = v[1];\n            out[0] = a[0] * vx;\n            out[1] = a[1] * vy;\n            out[2] = a[2] * vx;\n            out[3] = a[3] * vy;\n            out[4] = a[4] * vx;\n            out[5] = a[5] * vy;\n            return out;\n        },\n        /**\n         * 求逆矩阵\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         */\n        invert : function(out, a) {\n\n            var aa = a[0];\n            var ac = a[2];\n            var atx = a[4];\n            var ab = a[1];\n            var ad = a[3];\n            var aty = a[5];\n\n            var det = aa * ad - ab * ac;\n            if (!det) {\n                return null;\n            }\n            det = 1.0 / det;\n\n            out[0] = ad * det;\n            out[1] = -ab * det;\n            out[2] = -ac * det;\n            out[3] = aa * det;\n            out[4] = (ac * aty - ad * atx) * det;\n            out[5] = (ab * atx - aa * aty) * det;\n            return out;\n        }\n    };\n\n    module.exports = matrix;\n\n\n\n/***/ }),\n/* 476 */\n/***/ (function(module, exports) {\n\n/**\n * 事件扩展\n * @module zrender/mixin/Eventful\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\n\n\n    var arrySlice = Array.prototype.slice;\n\n    /**\n     * 事件分发器\n     * @alias module:zrender/mixin/Eventful\n     * @constructor\n     */\n    var Eventful = function () {\n        this._$handlers = {};\n    };\n\n    Eventful.prototype = {\n\n        constructor: Eventful,\n\n        /**\n         * 单次触发绑定，trigger后销毁\n         *\n         * @param {string} event 事件名\n         * @param {Function} handler 响应函数\n         * @param {Object} context\n         */\n        one: function (event, handler, context) {\n            var _h = this._$handlers;\n\n            if (!handler || !event) {\n                return this;\n            }\n\n            if (!_h[event]) {\n                _h[event] = [];\n            }\n\n            for (var i = 0; i < _h[event].length; i++) {\n                if (_h[event][i].h === handler) {\n                    return this;\n                }\n            }\n\n            _h[event].push({\n                h: handler,\n                one: true,\n                ctx: context || this\n            });\n\n            return this;\n        },\n\n        /**\n         * 绑定事件\n         * @param {string} event 事件名\n         * @param {Function} handler 事件处理函数\n         * @param {Object} [context]\n         */\n        on: function (event, handler, context) {\n            var _h = this._$handlers;\n\n            if (!handler || !event) {\n                return this;\n            }\n\n            if (!_h[event]) {\n                _h[event] = [];\n            }\n\n            for (var i = 0; i < _h[event].length; i++) {\n                if (_h[event][i].h === handler) {\n                    return this;\n                }\n            }\n\n            _h[event].push({\n                h: handler,\n                one: false,\n                ctx: context || this\n            });\n\n            return this;\n        },\n\n        /**\n         * 是否绑定了事件\n         * @param  {string}  event\n         * @return {boolean}\n         */\n        isSilent: function (event) {\n            var _h = this._$handlers;\n            return _h[event] && _h[event].length;\n        },\n\n        /**\n         * 解绑事件\n         * @param {string} event 事件名\n         * @param {Function} [handler] 事件处理函数\n         */\n        off: function (event, handler) {\n            var _h = this._$handlers;\n\n            if (!event) {\n                this._$handlers = {};\n                return this;\n            }\n\n            if (handler) {\n                if (_h[event]) {\n                    var newList = [];\n                    for (var i = 0, l = _h[event].length; i < l; i++) {\n                        if (_h[event][i]['h'] != handler) {\n                            newList.push(_h[event][i]);\n                        }\n                    }\n                    _h[event] = newList;\n                }\n\n                if (_h[event] && _h[event].length === 0) {\n                    delete _h[event];\n                }\n            }\n            else {\n                delete _h[event];\n            }\n\n            return this;\n        },\n\n        /**\n         * 事件分发\n         *\n         * @param {string} type 事件类型\n         */\n        trigger: function (type) {\n            if (this._$handlers[type]) {\n                var args = arguments;\n                var argLen = args.length;\n\n                if (argLen > 3) {\n                    args = arrySlice.call(args, 1);\n                }\n\n                var _h = this._$handlers[type];\n                var len = _h.length;\n                for (var i = 0; i < len;) {\n                    // Optimize advise from backbone\n                    switch (argLen) {\n                        case 1:\n                            _h[i]['h'].call(_h[i]['ctx']);\n                            break;\n                        case 2:\n                            _h[i]['h'].call(_h[i]['ctx'], args[1]);\n                            break;\n                        case 3:\n                            _h[i]['h'].call(_h[i]['ctx'], args[1], args[2]);\n                            break;\n                        default:\n                            // have more than 2 given arguments\n                            _h[i]['h'].apply(_h[i]['ctx'], args);\n                            break;\n                    }\n\n                    if (_h[i]['one']) {\n                        _h.splice(i, 1);\n                        len--;\n                    }\n                    else {\n                        i++;\n                    }\n                }\n            }\n\n            return this;\n        },\n\n        /**\n         * 带有context的事件分发, 最后一个参数是事件回调的context\n         * @param {string} type 事件类型\n         */\n        triggerWithContext: function (type) {\n            if (this._$handlers[type]) {\n                var args = arguments;\n                var argLen = args.length;\n\n                if (argLen > 4) {\n                    args = arrySlice.call(args, 1, args.length - 1);\n                }\n                var ctx = args[args.length - 1];\n\n                var _h = this._$handlers[type];\n                var len = _h.length;\n                for (var i = 0; i < len;) {\n                    // Optimize advise from backbone\n                    switch (argLen) {\n                        case 1:\n                            _h[i]['h'].call(ctx);\n                            break;\n                        case 2:\n                            _h[i]['h'].call(ctx, args[1]);\n                            break;\n                        case 3:\n                            _h[i]['h'].call(ctx, args[1], args[2]);\n                            break;\n                        default:\n                            // have more than 2 given arguments\n                            _h[i]['h'].apply(ctx, args);\n                            break;\n                    }\n\n                    if (_h[i]['one']) {\n                        _h.splice(i, 1);\n                        len--;\n                    }\n                    else {\n                        i++;\n                    }\n                }\n            }\n\n            return this;\n        }\n    };\n\n    // 对象可以通过 onxxxx 绑定事件\n    /**\n     * @event module:zrender/mixin/Eventful#onclick\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseover\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseout\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousemove\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousewheel\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousedown\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseup\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondrag\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragstart\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragend\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragenter\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragleave\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragover\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondrop\n     * @type {Function}\n     * @default null\n     */\n\n    module.exports = Eventful;\n\n\n\n/***/ }),\n/* 477 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module zrender/tool/color\n */\n\n\n    var LRU = __webpack_require__(543);\n\n    var kCSSColorTable = {\n        'transparent': [0,0,0,0], 'aliceblue': [240,248,255,1],\n        'antiquewhite': [250,235,215,1], 'aqua': [0,255,255,1],\n        'aquamarine': [127,255,212,1], 'azure': [240,255,255,1],\n        'beige': [245,245,220,1], 'bisque': [255,228,196,1],\n        'black': [0,0,0,1], 'blanchedalmond': [255,235,205,1],\n        'blue': [0,0,255,1], 'blueviolet': [138,43,226,1],\n        'brown': [165,42,42,1], 'burlywood': [222,184,135,1],\n        'cadetblue': [95,158,160,1], 'chartreuse': [127,255,0,1],\n        'chocolate': [210,105,30,1], 'coral': [255,127,80,1],\n        'cornflowerblue': [100,149,237,1], 'cornsilk': [255,248,220,1],\n        'crimson': [220,20,60,1], 'cyan': [0,255,255,1],\n        'darkblue': [0,0,139,1], 'darkcyan': [0,139,139,1],\n        'darkgoldenrod': [184,134,11,1], 'darkgray': [169,169,169,1],\n        'darkgreen': [0,100,0,1], 'darkgrey': [169,169,169,1],\n        'darkkhaki': [189,183,107,1], 'darkmagenta': [139,0,139,1],\n        'darkolivegreen': [85,107,47,1], 'darkorange': [255,140,0,1],\n        'darkorchid': [153,50,204,1], 'darkred': [139,0,0,1],\n        'darksalmon': [233,150,122,1], 'darkseagreen': [143,188,143,1],\n        'darkslateblue': [72,61,139,1], 'darkslategray': [47,79,79,1],\n        'darkslategrey': [47,79,79,1], 'darkturquoise': [0,206,209,1],\n        'darkviolet': [148,0,211,1], 'deeppink': [255,20,147,1],\n        'deepskyblue': [0,191,255,1], 'dimgray': [105,105,105,1],\n        'dimgrey': [105,105,105,1], 'dodgerblue': [30,144,255,1],\n        'firebrick': [178,34,34,1], 'floralwhite': [255,250,240,1],\n        'forestgreen': [34,139,34,1], 'fuchsia': [255,0,255,1],\n        'gainsboro': [220,220,220,1], 'ghostwhite': [248,248,255,1],\n        'gold': [255,215,0,1], 'goldenrod': [218,165,32,1],\n        'gray': [128,128,128,1], 'green': [0,128,0,1],\n        'greenyellow': [173,255,47,1], 'grey': [128,128,128,1],\n        'honeydew': [240,255,240,1], 'hotpink': [255,105,180,1],\n        'indianred': [205,92,92,1], 'indigo': [75,0,130,1],\n        'ivory': [255,255,240,1], 'khaki': [240,230,140,1],\n        'lavender': [230,230,250,1], 'lavenderblush': [255,240,245,1],\n        'lawngreen': [124,252,0,1], 'lemonchiffon': [255,250,205,1],\n        'lightblue': [173,216,230,1], 'lightcoral': [240,128,128,1],\n        'lightcyan': [224,255,255,1], 'lightgoldenrodyellow': [250,250,210,1],\n        'lightgray': [211,211,211,1], 'lightgreen': [144,238,144,1],\n        'lightgrey': [211,211,211,1], 'lightpink': [255,182,193,1],\n        'lightsalmon': [255,160,122,1], 'lightseagreen': [32,178,170,1],\n        'lightskyblue': [135,206,250,1], 'lightslategray': [119,136,153,1],\n        'lightslategrey': [119,136,153,1], 'lightsteelblue': [176,196,222,1],\n        'lightyellow': [255,255,224,1], 'lime': [0,255,0,1],\n        'limegreen': [50,205,50,1], 'linen': [250,240,230,1],\n        'magenta': [255,0,255,1], 'maroon': [128,0,0,1],\n        'mediumaquamarine': [102,205,170,1], 'mediumblue': [0,0,205,1],\n        'mediumorchid': [186,85,211,1], 'mediumpurple': [147,112,219,1],\n        'mediumseagreen': [60,179,113,1], 'mediumslateblue': [123,104,238,1],\n        'mediumspringgreen': [0,250,154,1], 'mediumturquoise': [72,209,204,1],\n        'mediumvioletred': [199,21,133,1], 'midnightblue': [25,25,112,1],\n        'mintcream': [245,255,250,1], 'mistyrose': [255,228,225,1],\n        'moccasin': [255,228,181,1], 'navajowhite': [255,222,173,1],\n        'navy': [0,0,128,1], 'oldlace': [253,245,230,1],\n        'olive': [128,128,0,1], 'olivedrab': [107,142,35,1],\n        'orange': [255,165,0,1], 'orangered': [255,69,0,1],\n        'orchid': [218,112,214,1], 'palegoldenrod': [238,232,170,1],\n        'palegreen': [152,251,152,1], 'paleturquoise': [175,238,238,1],\n        'palevioletred': [219,112,147,1], 'papayawhip': [255,239,213,1],\n        'peachpuff': [255,218,185,1], 'peru': [205,133,63,1],\n        'pink': [255,192,203,1], 'plum': [221,160,221,1],\n        'powderblue': [176,224,230,1], 'purple': [128,0,128,1],\n        'red': [255,0,0,1], 'rosybrown': [188,143,143,1],\n        'royalblue': [65,105,225,1], 'saddlebrown': [139,69,19,1],\n        'salmon': [250,128,114,1], 'sandybrown': [244,164,96,1],\n        'seagreen': [46,139,87,1], 'seashell': [255,245,238,1],\n        'sienna': [160,82,45,1], 'silver': [192,192,192,1],\n        'skyblue': [135,206,235,1], 'slateblue': [106,90,205,1],\n        'slategray': [112,128,144,1], 'slategrey': [112,128,144,1],\n        'snow': [255,250,250,1], 'springgreen': [0,255,127,1],\n        'steelblue': [70,130,180,1], 'tan': [210,180,140,1],\n        'teal': [0,128,128,1], 'thistle': [216,191,216,1],\n        'tomato': [255,99,71,1], 'turquoise': [64,224,208,1],\n        'violet': [238,130,238,1], 'wheat': [245,222,179,1],\n        'white': [255,255,255,1], 'whitesmoke': [245,245,245,1],\n        'yellow': [255,255,0,1], 'yellowgreen': [154,205,50,1]\n    };\n\n    function clampCssByte(i) {  // Clamp to integer 0 .. 255.\n        i = Math.round(i);  // Seems to be what Chrome does (vs truncation).\n        return i < 0 ? 0 : i > 255 ? 255 : i;\n    }\n\n    function clampCssAngle(i) {  // Clamp to integer 0 .. 360.\n        i = Math.round(i);  // Seems to be what Chrome does (vs truncation).\n        return i < 0 ? 0 : i > 360 ? 360 : i;\n    }\n\n    function clampCssFloat(f) {  // Clamp to float 0.0 .. 1.0.\n        return f < 0 ? 0 : f > 1 ? 1 : f;\n    }\n\n    function parseCssInt(str) {  // int or percentage.\n        if (str.length && str.charAt(str.length - 1) === '%') {\n            return clampCssByte(parseFloat(str) / 100 * 255);\n        }\n        return clampCssByte(parseInt(str, 10));\n    }\n\n    function parseCssFloat(str) {  // float or percentage.\n        if (str.length && str.charAt(str.length - 1) === '%') {\n            return clampCssFloat(parseFloat(str) / 100);\n        }\n        return clampCssFloat(parseFloat(str));\n    }\n\n    function cssHueToRgb(m1, m2, h) {\n        if (h < 0) {\n            h += 1;\n        }\n        else if (h > 1) {\n            h -= 1;\n        }\n\n        if (h * 6 < 1) {\n            return m1 + (m2 - m1) * h * 6;\n        }\n        if (h * 2 < 1) {\n            return m2;\n        }\n        if (h * 3 < 2) {\n            return m1 + (m2 - m1) * (2/3 - h) * 6;\n        }\n        return m1;\n    }\n\n    function lerp(a, b, p) {\n        return a + (b - a) * p;\n    }\n\n    function setRgba(out, r, g, b, a) {\n        out[0] = r; out[1] = g; out[2] = b; out[3] = a;\n        return out;\n    }\n    function copyRgba(out, a) {\n        out[0] = a[0]; out[1] = a[1]; out[2] = a[2]; out[3] = a[3];\n        return out;\n    }\n    var colorCache = new LRU(20);\n    var lastRemovedArr = null;\n    function putToCache(colorStr, rgbaArr) {\n        // Reuse removed array\n        if (lastRemovedArr) {\n            copyRgba(lastRemovedArr, rgbaArr);\n        }\n        lastRemovedArr = colorCache.put(colorStr, lastRemovedArr || (rgbaArr.slice()));\n    }\n    /**\n     * @param {string} colorStr\n     * @param {Array.<number>} out\n     * @return {Array.<number>}\n     * @memberOf module:zrender/util/color\n     */\n    function parse(colorStr, rgbaArr) {\n        if (!colorStr) {\n            return;\n        }\n        rgbaArr = rgbaArr || [];\n\n        var cached = colorCache.get(colorStr);\n        if (cached) {\n            return copyRgba(rgbaArr, cached);\n        }\n\n        // colorStr may be not string\n        colorStr = colorStr + '';\n        // Remove all whitespace, not compliant, but should just be more accepting.\n        var str = colorStr.replace(/ /g, '').toLowerCase();\n\n        // Color keywords (and transparent) lookup.\n        if (str in kCSSColorTable) {\n            copyRgba(rgbaArr, kCSSColorTable[str]);\n            putToCache(colorStr, rgbaArr);\n            return rgbaArr;\n        }\n\n        // #abc and #abc123 syntax.\n        if (str.charAt(0) === '#') {\n            if (str.length === 4) {\n                var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n                if (!(iv >= 0 && iv <= 0xfff)) {\n                    setRgba(rgbaArr, 0, 0, 0, 1);\n                    return;  // Covers NaN.\n                }\n                setRgba(rgbaArr,\n                    ((iv & 0xf00) >> 4) | ((iv & 0xf00) >> 8),\n                    (iv & 0xf0) | ((iv & 0xf0) >> 4),\n                    (iv & 0xf) | ((iv & 0xf) << 4),\n                    1\n                );\n                putToCache(colorStr, rgbaArr);\n                return rgbaArr;\n            }\n            else if (str.length === 7) {\n                var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n                if (!(iv >= 0 && iv <= 0xffffff)) {\n                    setRgba(rgbaArr, 0, 0, 0, 1);\n                    return;  // Covers NaN.\n                }\n                setRgba(rgbaArr,\n                    (iv & 0xff0000) >> 16,\n                    (iv & 0xff00) >> 8,\n                    iv & 0xff,\n                    1\n                );\n                putToCache(colorStr, rgbaArr);\n                return rgbaArr;\n            }\n\n            return;\n        }\n        var op = str.indexOf('('), ep = str.indexOf(')');\n        if (op !== -1 && ep + 1 === str.length) {\n            var fname = str.substr(0, op);\n            var params = str.substr(op + 1, ep - (op + 1)).split(',');\n            var alpha = 1;  // To allow case fallthrough.\n            switch (fname) {\n                case 'rgba':\n                    if (params.length !== 4) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    alpha = parseCssFloat(params.pop()); // jshint ignore:line\n                // Fall through.\n                case 'rgb':\n                    if (params.length !== 3) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    setRgba(rgbaArr,\n                        parseCssInt(params[0]),\n                        parseCssInt(params[1]),\n                        parseCssInt(params[2]),\n                        alpha\n                    );\n                    putToCache(colorStr, rgbaArr);\n                    return rgbaArr;\n                case 'hsla':\n                    if (params.length !== 4) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    params[3] = parseCssFloat(params[3]);\n                    hsla2rgba(params, rgbaArr);\n                    putToCache(colorStr, rgbaArr);\n                    return rgbaArr;\n                case 'hsl':\n                    if (params.length !== 3) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    hsla2rgba(params, rgbaArr);\n                    putToCache(colorStr, rgbaArr);\n                    return rgbaArr;\n                default:\n                    return;\n            }\n        }\n\n        setRgba(rgbaArr, 0, 0, 0, 1);\n        return;\n    }\n\n    /**\n     * @param {Array.<number>} hsla\n     * @param {Array.<number>} rgba\n     * @return {Array.<number>} rgba\n     */\n    function hsla2rgba(hsla, rgba) {\n        var h = (((parseFloat(hsla[0]) % 360) + 360) % 360) / 360;  // 0 .. 1\n        // NOTE(deanm): According to the CSS spec s/l should only be\n        // percentages, but we don't bother and let float or percentage.\n        var s = parseCssFloat(hsla[1]);\n        var l = parseCssFloat(hsla[2]);\n        var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n        var m1 = l * 2 - m2;\n\n        rgba = rgba || [];\n        setRgba(rgba,\n            clampCssByte(cssHueToRgb(m1, m2, h + 1 / 3) * 255),\n            clampCssByte(cssHueToRgb(m1, m2, h) * 255),\n            clampCssByte(cssHueToRgb(m1, m2, h - 1 / 3) * 255),\n            1\n        );\n\n        if (hsla.length === 4) {\n            rgba[3] = hsla[3];\n        }\n\n        return rgba;\n    }\n\n    /**\n     * @param {Array.<number>} rgba\n     * @return {Array.<number>} hsla\n     */\n    function rgba2hsla(rgba) {\n        if (!rgba) {\n            return;\n        }\n\n        // RGB from 0 to 255\n        var R = rgba[0] / 255;\n        var G = rgba[1] / 255;\n        var B = rgba[2] / 255;\n\n        var vMin = Math.min(R, G, B); // Min. value of RGB\n        var vMax = Math.max(R, G, B); // Max. value of RGB\n        var delta = vMax - vMin; // Delta RGB value\n\n        var L = (vMax + vMin) / 2;\n        var H;\n        var S;\n        // HSL results from 0 to 1\n        if (delta === 0) {\n            H = 0;\n            S = 0;\n        }\n        else {\n            if (L < 0.5) {\n                S = delta / (vMax + vMin);\n            }\n            else {\n                S = delta / (2 - vMax - vMin);\n            }\n\n            var deltaR = (((vMax - R) / 6) + (delta / 2)) / delta;\n            var deltaG = (((vMax - G) / 6) + (delta / 2)) / delta;\n            var deltaB = (((vMax - B) / 6) + (delta / 2)) / delta;\n\n            if (R === vMax) {\n                H = deltaB - deltaG;\n            }\n            else if (G === vMax) {\n                H = (1 / 3) + deltaR - deltaB;\n            }\n            else if (B === vMax) {\n                H = (2 / 3) + deltaG - deltaR;\n            }\n\n            if (H < 0) {\n                H += 1;\n            }\n\n            if (H > 1) {\n                H -= 1;\n            }\n        }\n\n        var hsla = [H * 360, S, L];\n\n        if (rgba[3] != null) {\n            hsla.push(rgba[3]);\n        }\n\n        return hsla;\n    }\n\n    /**\n     * @param {string} color\n     * @param {number} level\n     * @return {string}\n     * @memberOf module:zrender/util/color\n     */\n    function lift(color, level) {\n        var colorArr = parse(color);\n        if (colorArr) {\n            for (var i = 0; i < 3; i++) {\n                if (level < 0) {\n                    colorArr[i] = colorArr[i] * (1 - level) | 0;\n                }\n                else {\n                    colorArr[i] = ((255 - colorArr[i]) * level + colorArr[i]) | 0;\n                }\n            }\n            return stringify(colorArr, colorArr.length === 4 ? 'rgba' : 'rgb');\n        }\n    }\n\n    /**\n     * @param {string} color\n     * @return {string}\n     * @memberOf module:zrender/util/color\n     */\n    function toHex(color, level) {\n        var colorArr = parse(color);\n        if (colorArr) {\n            return ((1 << 24) + (colorArr[0] << 16) + (colorArr[1] << 8) + (+colorArr[2])).toString(16).slice(1);\n        }\n    }\n\n    /**\n     * Map value to color. Faster than mapToColor methods because color is represented by rgba array.\n     * @param {number} normalizedValue A float between 0 and 1.\n     * @param {Array.<Array.<number>>} colors List of rgba color array\n     * @param {Array.<number>} [out] Mapped gba color array\n     * @return {Array.<number>} will be null/undefined if input illegal.\n     */\n    function fastMapToColor(normalizedValue, colors, out) {\n        if (!(colors && colors.length)\n            || !(normalizedValue >= 0 && normalizedValue <= 1)\n        ) {\n            return;\n        }\n\n        out = out || [];\n\n        var value = normalizedValue * (colors.length - 1);\n        var leftIndex = Math.floor(value);\n        var rightIndex = Math.ceil(value);\n        var leftColor = colors[leftIndex];\n        var rightColor = colors[rightIndex];\n        var dv = value - leftIndex;\n        out[0] = clampCssByte(lerp(leftColor[0], rightColor[0], dv));\n        out[1] = clampCssByte(lerp(leftColor[1], rightColor[1], dv));\n        out[2] = clampCssByte(lerp(leftColor[2], rightColor[2], dv));\n        out[3] = clampCssFloat(lerp(leftColor[3], rightColor[3], dv));\n\n        return out;\n    }\n    /**\n     * @param {number} normalizedValue A float between 0 and 1.\n     * @param {Array.<string>} colors Color list.\n     * @param {boolean=} fullOutput Default false.\n     * @return {(string|Object)} Result color. If fullOutput,\n     *                           return {color: ..., leftIndex: ..., rightIndex: ..., value: ...},\n     * @memberOf module:zrender/util/color\n     */\n    function mapToColor(normalizedValue, colors, fullOutput) {\n        if (!(colors && colors.length)\n            || !(normalizedValue >= 0 && normalizedValue <= 1)\n        ) {\n            return;\n        }\n\n        var value = normalizedValue * (colors.length - 1);\n        var leftIndex = Math.floor(value);\n        var rightIndex = Math.ceil(value);\n        var leftColor = parse(colors[leftIndex]);\n        var rightColor = parse(colors[rightIndex]);\n        var dv = value - leftIndex;\n\n        var color = stringify(\n            [\n                clampCssByte(lerp(leftColor[0], rightColor[0], dv)),\n                clampCssByte(lerp(leftColor[1], rightColor[1], dv)),\n                clampCssByte(lerp(leftColor[2], rightColor[2], dv)),\n                clampCssFloat(lerp(leftColor[3], rightColor[3], dv))\n            ],\n            'rgba'\n        );\n\n        return fullOutput\n            ? {\n                color: color,\n                leftIndex: leftIndex,\n                rightIndex: rightIndex,\n                value: value\n            }\n            : color;\n    }\n\n    /**\n     * @param {string} color\n     * @param {number=} h 0 ~ 360, ignore when null.\n     * @param {number=} s 0 ~ 1, ignore when null.\n     * @param {number=} l 0 ~ 1, ignore when null.\n     * @return {string} Color string in rgba format.\n     * @memberOf module:zrender/util/color\n     */\n    function modifyHSL(color, h, s, l) {\n        color = parse(color);\n\n        if (color) {\n            color = rgba2hsla(color);\n            h != null && (color[0] = clampCssAngle(h));\n            s != null && (color[1] = parseCssFloat(s));\n            l != null && (color[2] = parseCssFloat(l));\n\n            return stringify(hsla2rgba(color), 'rgba');\n        }\n    }\n\n    /**\n     * @param {string} color\n     * @param {number=} alpha 0 ~ 1\n     * @return {string} Color string in rgba format.\n     * @memberOf module:zrender/util/color\n     */\n    function modifyAlpha(color, alpha) {\n        color = parse(color);\n\n        if (color && alpha != null) {\n            color[3] = clampCssFloat(alpha);\n            return stringify(color, 'rgba');\n        }\n    }\n\n    /**\n     * @param {Array.<number>} arrColor like [12,33,44,0.4]\n     * @param {string} type 'rgba', 'hsva', ...\n     * @return {string} Result color. (If input illegal, return undefined).\n     */\n    function stringify(arrColor, type) {\n        if (!arrColor || !arrColor.length) {\n            return;\n        }\n        var colorStr = arrColor[0] + ',' + arrColor[1] + ',' + arrColor[2];\n        if (type === 'rgba' || type === 'hsva' || type === 'hsla') {\n            colorStr += ',' + arrColor[3];\n        }\n        return type + '(' + colorStr + ')';\n    }\n\n    module.exports = {\n        parse: parse,\n        lift: lift,\n        toHex: toHex,\n        fastMapToColor: fastMapToColor,\n        mapToColor: mapToColor,\n        modifyHSL: modifyHSL,\n        modifyAlpha: modifyAlpha,\n        stringify: stringify\n    };\n\n\n\n\n/***/ }),\n/* 478 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// getting tag from 19.1.3.6 Object.prototype.toString()\nvar cof = __webpack_require__(120)\n  , TAG = __webpack_require__(47)('toStringTag')\n  // ES3 wrong here\n  , ARG = cof(function(){ return arguments; }()) == 'Arguments';\n\n// fallback for IE11 Script Access Denied error\nvar tryGet = function(it, key){\n  try {\n    return it[key];\n  } catch(e){ /* empty */ }\n};\n\nmodule.exports = function(it){\n  var O, T, B;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T\n    // builtinTag case\n    : ARG ? cof(O)\n    // ES3 arguments fallback\n    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;\n};\n\n/***/ }),\n/* 479 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// check on default Array iterator\nvar Iterators  = __webpack_require__(77)\n  , ITERATOR   = __webpack_require__(47)('iterator')\n  , ArrayProto = Array.prototype;\n\nmodule.exports = function(it){\n  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);\n};\n\n/***/ }),\n/* 480 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// call something on iterator step with safe closing on error\nvar anObject = __webpack_require__(60);\nmodule.exports = function(iterator, fn, value, entries){\n  try {\n    return entries ? fn(anObject(value)[0], value[1]) : fn(value);\n  // 7.4.6 IteratorClose(iterator, completion)\n  } catch(e){\n    var ret = iterator['return'];\n    if(ret !== undefined)anObject(ret.call(iterator));\n    throw e;\n  }\n};\n\n/***/ }),\n/* 481 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar ITERATOR     = __webpack_require__(47)('iterator')\n  , SAFE_CLOSING = false;\n\ntry {\n  var riter = [7][ITERATOR]();\n  riter['return'] = function(){ SAFE_CLOSING = true; };\n  Array.from(riter, function(){ throw 2; });\n} catch(e){ /* empty */ }\n\nmodule.exports = function(exec, skipClosing){\n  if(!skipClosing && !SAFE_CLOSING)return false;\n  var safe = false;\n  try {\n    var arr  = [7]\n      , iter = arr[ITERATOR]();\n    iter.next = function(){ return {done: safe = true}; };\n    arr[ITERATOR] = function(){ return iter; };\n    exec(arr);\n  } catch(e){ /* empty */ }\n  return safe;\n};\n\n/***/ }),\n/* 482 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar classof   = __webpack_require__(478)\n  , ITERATOR  = __webpack_require__(47)('iterator')\n  , Iterators = __webpack_require__(77);\nmodule.exports = __webpack_require__(46).getIteratorMethod = function(it){\n  if(it != undefined)return it[ITERATOR]\n    || it['@@iterator']\n    || Iterators[classof(it)];\n};\n\n/***/ }),\n/* 483 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(453);\n    var Model = __webpack_require__(463);\n    var each = zrUtil.each;\n    var curry = zrUtil.curry;\n\n    var helper = {};\n\n    // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n    // allAxesInfo should be updated when setOption performed.\n    helper.collect = function (ecModel, api) {\n        var result = {\n            /**\n             * key: makeKey(axis.model)\n             * value: {\n             *      axis,\n             *      coordSys,\n             *      axisPointerModel,\n             *      triggerTooltip,\n             *      involveSeries,\n             *      snap,\n             *      seriesModels,\n             *      seriesDataCount\n             * }\n             */\n            axesInfo: {},\n            seriesInvolved: false,\n            /**\n             * key: makeKey(coordSys.model)\n             * value: Object: key makeKey(axis.model), value: axisInfo\n             */\n            coordSysAxesInfo: {},\n            coordSysMap: {}\n        };\n\n        collectAxesInfo(result, ecModel, api);\n\n        // Check seriesInvolved for performance, in case too many series in some chart.\n        result.seriesInvolved && collectSeriesInfo(result, ecModel);\n\n        return result;\n    };\n\n    function collectAxesInfo(result, ecModel, api) {\n        var globalTooltipModel = ecModel.getComponent('tooltip');\n        var globalAxisPointerModel = ecModel.getComponent('axisPointer');\n        // links can only be set on global.\n        var linksOption = globalAxisPointerModel.get('link', true) || [];\n        var linkGroups = [];\n\n        // Collect axes info.\n        each(api.getCoordinateSystems(), function (coordSys) {\n            // Some coordinate system do not support axes, like geo.\n            if (!coordSys.axisPointerEnabled) {\n                return;\n            }\n\n            var coordSysKey = makeKey(coordSys.model);\n            var axesInfoInCoordSys = result.coordSysAxesInfo[coordSysKey] = {};\n            result.coordSysMap[coordSysKey] = coordSys;\n\n            // Set tooltip (like 'cross') is a convienent way to show axisPointer\n            // for user. So we enable seting tooltip on coordSys model.\n            var coordSysModel = coordSys.model;\n            var baseTooltipModel = coordSysModel.getModel('tooltip', globalTooltipModel);\n\n            each(coordSys.getAxes(), curry(saveTooltipAxisInfo, false, null));\n\n            // If axis tooltip used, choose tooltip axis for each coordSys.\n            // Notice this case: coordSys is `grid` but not `cartesian2D` here.\n            if (coordSys.getTooltipAxes\n                && globalTooltipModel\n                // If tooltip.showContent is set as false, tooltip will not\n                // show but axisPointer will show as normal.\n                && baseTooltipModel.get('show')\n            ) {\n                // Compatible with previous logic. But series.tooltip.trigger: 'axis'\n                // or series.data[n].tooltip.trigger: 'axis' are not support any more.\n                var triggerAxis = baseTooltipModel.get('trigger') === 'axis';\n                var cross = baseTooltipModel.get('axisPointer.type') === 'cross';\n                var tooltipAxes = coordSys.getTooltipAxes(baseTooltipModel.get('axisPointer.axis'));\n                if (triggerAxis || cross) {\n                    each(tooltipAxes.baseAxes, curry(\n                        saveTooltipAxisInfo, cross ? 'cross' : true, triggerAxis\n                    ));\n                }\n                if (cross) {\n                    each(tooltipAxes.otherAxes, curry(saveTooltipAxisInfo, 'cross', false));\n                }\n            }\n\n            // fromTooltip: true | false | 'cross'\n            // triggerTooltip: true | false | null\n            function saveTooltipAxisInfo(fromTooltip, triggerTooltip, axis) {\n                var axisPointerModel = axis.model.getModel('axisPointer', globalAxisPointerModel);\n\n                var axisPointerShow = axisPointerModel.get('show');\n                if (!axisPointerShow || (\n                    axisPointerShow === 'auto'\n                    && !fromTooltip\n                    && !isHandleTrigger(axisPointerModel)\n                )) {\n                    return;\n                }\n\n                if (triggerTooltip == null) {\n                    triggerTooltip = axisPointerModel.get('triggerTooltip');\n                }\n\n                axisPointerModel = fromTooltip\n                    ? makeAxisPointerModel(\n                        axis, baseTooltipModel, globalAxisPointerModel, ecModel,\n                        fromTooltip, triggerTooltip\n                    )\n                    : axisPointerModel;\n\n                var snap = axisPointerModel.get('snap');\n                var key = makeKey(axis.model);\n                var involveSeries = triggerTooltip || snap || axis.type === 'category';\n\n                // If result.axesInfo[key] exist, override it (tooltip has higher priority).\n                var axisInfo = result.axesInfo[key] = {\n                    key: key,\n                    axis: axis,\n                    coordSys: coordSys,\n                    axisPointerModel: axisPointerModel,\n                    triggerTooltip: triggerTooltip,\n                    involveSeries: involveSeries,\n                    snap: snap,\n                    useHandle: isHandleTrigger(axisPointerModel),\n                    seriesModels: []\n                };\n                axesInfoInCoordSys[key] = axisInfo;\n                result.seriesInvolved |= involveSeries;\n\n                var groupIndex = getLinkGroupIndex(linksOption, axis);\n                if (groupIndex != null) {\n                    var linkGroup = linkGroups[groupIndex] || (linkGroups[groupIndex] = {axesInfo: {}});\n                    linkGroup.axesInfo[key] = axisInfo;\n                    linkGroup.mapper = linksOption[groupIndex].mapper;\n                    axisInfo.linkGroup = linkGroup;\n                }\n            }\n        });\n    }\n\n    function makeAxisPointerModel(\n        axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip\n    ) {\n        var tooltipAxisPointerModel = baseTooltipModel.getModel('axisPointer');\n        var volatileOption = {};\n\n        each(\n            [\n                'type', 'snap', 'lineStyle', 'shadowStyle', 'label',\n                'animation', 'animationDurationUpdate', 'animationEasingUpdate', 'z'\n            ],\n            function (field) {\n                volatileOption[field] = zrUtil.clone(tooltipAxisPointerModel.get(field));\n            }\n        );\n\n        // category axis do not auto snap, otherwise some tick that do not\n        // has value can not be hovered. value/time/log axis default snap if\n        // triggered from tooltip and trigger tooltip.\n        volatileOption.snap = axis.type !== 'category' && !!triggerTooltip;\n\n        // Compatibel with previous behavior, tooltip axis do not show label by default.\n        // Only these properties can be overrided from tooltip to axisPointer.\n        if (tooltipAxisPointerModel.get('type') === 'cross') {\n            volatileOption.type = 'line';\n        }\n        var labelOption = volatileOption.label || (volatileOption.label = {});\n        // Follow the convention, do not show label when triggered by tooltip by default.\n        labelOption.show == null && (labelOption.show = false);\n\n        if (fromTooltip === 'cross') {\n            // When 'cross', both axes show labels.\n            labelOption.show = true;\n            // If triggerTooltip, this is a base axis, which should better not use cross style\n            // (cross style is dashed by default)\n            if (!triggerTooltip) {\n                var crossStyle = volatileOption.lineStyle = tooltipAxisPointerModel.get('crossStyle');\n                crossStyle && zrUtil.defaults(\n                    labelOption.textStyle || (labelOption.textStyle = {}),\n                    crossStyle.textStyle\n                );\n            }\n        }\n\n        return axis.model.getModel(\n            'axisPointer',\n            new Model(volatileOption, globalAxisPointerModel, ecModel)\n        );\n    }\n\n    function collectSeriesInfo(result, ecModel) {\n        // Prepare data for axis trigger\n        ecModel.eachSeries(function (seriesModel) {\n\n            // Notice this case: this coordSys is `cartesian2D` but not `grid`.\n            var coordSys = seriesModel.coordinateSystem;\n            var seriesTooltipTrigger = seriesModel.get('tooltip.trigger', true);\n            var seriesTooltipShow = seriesModel.get('tooltip.show', true);\n            if (!coordSys\n                || seriesTooltipTrigger === 'none'\n                || seriesTooltipTrigger === false\n                || seriesTooltipTrigger === 'item'\n                || seriesTooltipShow === false\n                || seriesModel.get('axisPointer.show', true) === false\n            ) {\n                return;\n            }\n\n            each(result.coordSysAxesInfo[makeKey(coordSys.model)], function (axisInfo) {\n                var axis = axisInfo.axis;\n                if (coordSys.getAxis(axis.dim) === axis) {\n                    axisInfo.seriesModels.push(seriesModel);\n                    axisInfo.seriesDataCount == null && (axisInfo.seriesDataCount = 0);\n                    axisInfo.seriesDataCount += seriesModel.getData().count();\n                }\n            });\n\n        }, this);\n    }\n\n    /**\n     * For example:\n     * {\n     *     axisPointer: {\n     *         links: [{\n     *             xAxisIndex: [2, 4],\n     *             yAxisIndex: 'all'\n     *         }, {\n     *             xAxisId: ['a5', 'a7'],\n     *             xAxisName: 'xxx'\n     *         }]\n     *     }\n     * }\n     */\n    function getLinkGroupIndex(linksOption, axis) {\n        var axisModel = axis.model;\n        var dim = axis.dim;\n        for (var i = 0; i < linksOption.length; i++) {\n            var linkOption = linksOption[i] || {};\n            if (checkPropInLink(linkOption[dim + 'AxisId'], axisModel.id)\n                || checkPropInLink(linkOption[dim + 'AxisIndex'], axisModel.componentIndex)\n                || checkPropInLink(linkOption[dim + 'AxisName'], axisModel.name)\n            ) {\n                return i;\n            }\n        }\n    }\n\n    function checkPropInLink(linkPropValue, axisPropValue) {\n        return linkPropValue === 'all'\n            || (zrUtil.isArray(linkPropValue) && zrUtil.indexOf(linkPropValue, axisPropValue) >= 0)\n            || linkPropValue === axisPropValue;\n    }\n\n    helper.fixValue = function (axisModel) {\n        var axisInfo = helper.getAxisInfo(axisModel);\n        if (!axisInfo) {\n            return;\n        }\n\n        var axisPointerModel = axisInfo.axisPointerModel;\n        var scale = axisInfo.axis.scale;\n        var option = axisPointerModel.option;\n        var status = axisPointerModel.get('status');\n        var value = axisPointerModel.get('value');\n\n        // Parse init value for category and time axis.\n        if (value != null) {\n            value = scale.parse(value);\n        }\n\n        var useHandle = isHandleTrigger(axisPointerModel);\n        // If `handle` used, `axisPointer` will always be displayed, so value\n        // and status should be initialized.\n        if (status == null) {\n            option.status = useHandle ? 'show' : 'hide';\n        }\n\n        var extent = scale.getExtent().slice();\n        extent[0] > extent[1] && extent.reverse();\n\n        if (// Pick a value on axis when initializing.\n            value == null\n            // If both `handle` and `dataZoom` are used, value may be out of axis extent,\n            // where we should re-pick a value to keep `handle` displaying normally.\n            || value > extent[1]\n        ) {\n            // Make handle displayed on the end of the axis when init, which looks better.\n            value = extent[1];\n        }\n        if (value < extent[0]) {\n            value = extent[0];\n        }\n\n        option.value = value;\n\n        if (useHandle) {\n            option.status = axisInfo.axis.scale.isBlank() ? 'hide' : 'show';\n        }\n    };\n\n    helper.getAxisInfo = function (axisModel) {\n        var coordSysAxesInfo = (axisModel.ecModel.getComponent('axisPointer') || {}).coordSysAxesInfo;\n        return coordSysAxesInfo && coordSysAxesInfo.axesInfo[makeKey(axisModel)];\n    };\n\n    helper.getAxisPointerModel = function (axisModel) {\n        var axisInfo = helper.getAxisInfo(axisModel);\n        return axisInfo && axisInfo.axisPointerModel;\n    };\n\n    function isHandleTrigger(axisPointerModel) {\n        return !!axisPointerModel.get('handle.show');\n    }\n\n    /**\n     * @param {module:echarts/model/Model} model\n     * @return {string} unique key\n     */\n    var makeKey = helper.makeKey = function (model) {\n        return model.type + '||' + model.id;\n    };\n\n    module.exports = helper;\n\n\n\n/***/ }),\n/* 484 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * // Scale class management\n * @module echarts/scale/Scale\n */\n\n\n    var clazzUtil = __webpack_require__(467);\n\n    /**\n     * @param {Object} [setting]\n     */\n    function Scale(setting) {\n        this._setting = setting || {};\n\n        /**\n         * Extent\n         * @type {Array.<number>}\n         * @protected\n         */\n        this._extent = [Infinity, -Infinity];\n\n        /**\n         * Step is calculated in adjustExtent\n         * @type {Array.<number>}\n         * @protected\n         */\n        this._interval = 0;\n\n        this.init && this.init.apply(this, arguments);\n    }\n\n    var scaleProto = Scale.prototype;\n\n    /**\n     * Parse input val to valid inner number.\n     * @param {*} val\n     * @return {number}\n     */\n    scaleProto.parse = function (val) {\n        // Notice: This would be a trap here, If the implementation\n        // of this method depends on extent, and this method is used\n        // before extent set (like in dataZoom), it would be wrong.\n        // Nevertheless, parse does not depend on extent generally.\n        return val;\n    };\n\n    scaleProto.getSetting = function (name) {\n        return this._setting[name];\n    };\n\n    scaleProto.contain = function (val) {\n        var extent = this._extent;\n        return val >= extent[0] && val <= extent[1];\n    };\n\n    /**\n     * Normalize value to linear [0, 1], return 0.5 if extent span is 0\n     * @param {number} val\n     * @return {number}\n     */\n    scaleProto.normalize = function (val) {\n        var extent = this._extent;\n        if (extent[1] === extent[0]) {\n            return 0.5;\n        }\n        return (val - extent[0]) / (extent[1] - extent[0]);\n    };\n\n    /**\n     * Scale normalized value\n     * @param {number} val\n     * @return {number}\n     */\n    scaleProto.scale = function (val) {\n        var extent = this._extent;\n        return val * (extent[1] - extent[0]) + extent[0];\n    };\n\n    /**\n     * Set extent from data\n     * @param {Array.<number>} other\n     */\n    scaleProto.unionExtent = function (other) {\n        var extent = this._extent;\n        other[0] < extent[0] && (extent[0] = other[0]);\n        other[1] > extent[1] && (extent[1] = other[1]);\n        // not setExtent because in log axis it may transformed to power\n        // this.setExtent(extent[0], extent[1]);\n    };\n\n    /**\n     * Set extent from data\n     * @param {module:echarts/data/List} data\n     * @param {string} dim\n     */\n    scaleProto.unionExtentFromData = function (data, dim) {\n        this.unionExtent(data.getDataExtent(dim, true));\n    };\n\n    /**\n     * Get extent\n     * @return {Array.<number>}\n     */\n    scaleProto.getExtent = function () {\n        return this._extent.slice();\n    };\n\n    /**\n     * Set extent\n     * @param {number} start\n     * @param {number} end\n     */\n    scaleProto.setExtent = function (start, end) {\n        var thisExtent = this._extent;\n        if (!isNaN(start)) {\n            thisExtent[0] = start;\n        }\n        if (!isNaN(end)) {\n            thisExtent[1] = end;\n        }\n    };\n\n    /**\n     * @return {Array.<string>}\n     */\n    scaleProto.getTicksLabels = function () {\n        var labels = [];\n        var ticks = this.getTicks();\n        for (var i = 0; i < ticks.length; i++) {\n            labels.push(this.getLabel(ticks[i]));\n        }\n        return labels;\n    };\n\n    /**\n     * When axis extent depends on data and no data exists,\n     * axis ticks should not be drawn, which is named 'blank'.\n     */\n    scaleProto.isBlank = function () {\n        return this._isBlank;\n    },\n\n    /**\n     * When axis extent depends on data and no data exists,\n     * axis ticks should not be drawn, which is named 'blank'.\n     */\n    scaleProto.setBlank = function (isBlank) {\n        this._isBlank = isBlank;\n    };\n\n\n    clazzUtil.enableClassExtend(Scale);\n    clazzUtil.enableClassManagement(Scale, {\n        registerWhenExtend: true\n    });\n\n    module.exports = Scale;\n\n\n/***/ }),\n/* 485 */\n/***/ (function(module, exports) {\n\n\n\n    var lib = {};\n\n    var ORIGIN_METHOD = '\\0__throttleOriginMethod';\n    var RATE = '\\0__throttleRate';\n    var THROTTLE_TYPE = '\\0__throttleType';\n\n    /**\n     * @public\n     * @param {(Function)} fn\n     * @param {number} [delay=0] Unit: ms.\n     * @param {boolean} [debounce=false]\n     *        true: If call interval less than `delay`, only the last call works.\n     *        false: If call interval less than `delay, call works on fixed rate.\n     * @return {(Function)} throttled fn.\n     */\n    lib.throttle = function (fn, delay, debounce) {\n\n        var currCall;\n        var lastCall = 0;\n        var lastExec = 0;\n        var timer = null;\n        var diff;\n        var scope;\n        var args;\n        var debounceNextCall;\n\n        delay = delay || 0;\n\n        function exec() {\n            lastExec = (new Date()).getTime();\n            timer = null;\n            fn.apply(scope, args || []);\n        }\n\n        var cb = function () {\n            currCall = (new Date()).getTime();\n            scope = this;\n            args = arguments;\n            var thisDelay = debounceNextCall || delay;\n            var thisDebounce = debounceNextCall || debounce;\n            debounceNextCall = null;\n            diff = currCall - (thisDebounce ? lastCall : lastExec) - thisDelay;\n\n            clearTimeout(timer);\n\n            if (thisDebounce) {\n                timer = setTimeout(exec, thisDelay);\n            }\n            else {\n                if (diff >= 0) {\n                    exec();\n                }\n                else {\n                    timer = setTimeout(exec, -diff);\n                }\n            }\n\n            lastCall = currCall;\n        };\n\n        /**\n         * Clear throttle.\n         * @public\n         */\n        cb.clear = function () {\n            if (timer) {\n                clearTimeout(timer);\n                timer = null;\n            }\n        };\n\n        /**\n         * Enable debounce once.\n         */\n        cb.debounceNextCall = function (debounceDelay) {\n            debounceNextCall = debounceDelay;\n        };\n\n        return cb;\n    };\n\n    /**\n     * Create throttle method or update throttle rate.\n     *\n     * @example\n     * ComponentView.prototype.render = function () {\n     *     ...\n     *     throttle.createOrUpdate(\n     *         this,\n     *         '_dispatchAction',\n     *         this.model.get('throttle'),\n     *         'fixRate'\n     *     );\n     * };\n     * ComponentView.prototype.remove = function () {\n     *     throttle.clear(this, '_dispatchAction');\n     * };\n     * ComponentView.prototype.dispose = function () {\n     *     throttle.clear(this, '_dispatchAction');\n     * };\n     *\n     * @public\n     * @param {Object} obj\n     * @param {string} fnAttr\n     * @param {number} [rate]\n     * @param {string} [throttleType='fixRate'] 'fixRate' or 'debounce'\n     * @return {Function} throttled function.\n     */\n    lib.createOrUpdate = function (obj, fnAttr, rate, throttleType) {\n        var fn = obj[fnAttr];\n\n        if (!fn) {\n            return;\n        }\n\n        var originFn = fn[ORIGIN_METHOD] || fn;\n        var lastThrottleType = fn[THROTTLE_TYPE];\n        var lastRate = fn[RATE];\n\n        if (lastRate !== rate || lastThrottleType !== throttleType) {\n            if (rate == null || !throttleType) {\n                return (obj[fnAttr] = originFn);\n            }\n\n            fn = obj[fnAttr] = lib.throttle(\n                originFn, rate, throttleType === 'debounce'\n            );\n            fn[ORIGIN_METHOD] = originFn;\n            fn[THROTTLE_TYPE] = throttleType;\n            fn[RATE] = rate;\n        }\n\n        return fn;\n    };\n\n    /**\n     * Clear throttle. Example see throttle.createOrUpdate.\n     *\n     * @public\n     * @param {Object} obj\n     * @param {string} fnAttr\n     */\n    lib.clear = function (obj, fnAttr) {\n        var fn = obj[fnAttr];\n        if (fn && fn[ORIGIN_METHOD]) {\n            obj[fnAttr] = fn[ORIGIN_METHOD];\n        }\n    };\n\n    module.exports = lib;\n\n\n\n/***/ }),\n/* 486 */\n/***/ (function(module, exports) {\n\n\n    var dpr = 1;\n    // If in browser environment\n    if (typeof window !== 'undefined') {\n        dpr = Math.max(window.devicePixelRatio || 1, 1);\n    }\n    /**\n     * config默认配置项\n     * @exports zrender/config\n     * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n     */\n    var config = {\n        /**\n         * debug日志选项：catchBrushException为true下有效\n         * 0 : 不生成debug数据，发布用\n         * 1 : 异常抛出，调试用\n         * 2 : 控制台输出，调试用\n         */\n        debugMode: 0,\n\n        // retina 屏幕优化\n        devicePixelRatio: dpr\n    };\n    module.exports = config;\n\n\n\n\n/***/ }),\n/* 487 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Group是一个容器，可以插入子节点，Group的变换也会被应用到子节点上\n * @module zrender/graphic/Group\n * @example\n *     var Group = require('zrender/lib/container/Group');\n *     var Circle = require('zrender/lib/graphic/shape/Circle');\n *     var g = new Group();\n *     g.position[0] = 100;\n *     g.position[1] = 100;\n *     g.add(new Circle({\n *         style: {\n *             x: 100,\n *             y: 100,\n *             r: 20,\n *         }\n *     }));\n *     zr.add(g);\n */\n\n\n    var zrUtil = __webpack_require__(453);\n    var Element = __webpack_require__(539);\n    var BoundingRect = __webpack_require__(468);\n\n    /**\n     * @alias module:zrender/graphic/Group\n     * @constructor\n     * @extends module:zrender/mixin/Transformable\n     * @extends module:zrender/mixin/Eventful\n     */\n    var Group = function (opts) {\n\n        opts = opts || {};\n\n        Element.call(this, opts);\n\n        for (var key in opts) {\n            if (opts.hasOwnProperty(key)) {\n                this[key] = opts[key];\n            }\n        }\n\n        this._children = [];\n\n        this.__storage = null;\n\n        this.__dirty = true;\n    };\n\n    Group.prototype = {\n\n        constructor: Group,\n\n        isGroup: true,\n\n        /**\n         * @type {string}\n         */\n        type: 'group',\n\n        /**\n         * 所有子孙元素是否响应鼠标事件\n         * @name module:/zrender/container/Group#silent\n         * @type {boolean}\n         * @default false\n         */\n        silent: false,\n\n        /**\n         * @return {Array.<module:zrender/Element>}\n         */\n        children: function () {\n            return this._children.slice();\n        },\n\n        /**\n         * 获取指定 index 的儿子节点\n         * @param  {number} idx\n         * @return {module:zrender/Element}\n         */\n        childAt: function (idx) {\n            return this._children[idx];\n        },\n\n        /**\n         * 获取指定名字的儿子节点\n         * @param  {string} name\n         * @return {module:zrender/Element}\n         */\n        childOfName: function (name) {\n            var children = this._children;\n            for (var i = 0; i < children.length; i++) {\n                if (children[i].name === name) {\n                    return children[i];\n                }\n             }\n        },\n\n        /**\n         * @return {number}\n         */\n        childCount: function () {\n            return this._children.length;\n        },\n\n        /**\n         * 添加子节点到最后\n         * @param {module:zrender/Element} child\n         */\n        add: function (child) {\n            if (child && child !== this && child.parent !== this) {\n\n                this._children.push(child);\n\n                this._doAdd(child);\n            }\n\n            return this;\n        },\n\n        /**\n         * 添加子节点在 nextSibling 之前\n         * @param {module:zrender/Element} child\n         * @param {module:zrender/Element} nextSibling\n         */\n        addBefore: function (child, nextSibling) {\n            if (child && child !== this && child.parent !== this\n                && nextSibling && nextSibling.parent === this) {\n\n                var children = this._children;\n                var idx = children.indexOf(nextSibling);\n\n                if (idx >= 0) {\n                    children.splice(idx, 0, child);\n                    this._doAdd(child);\n                }\n            }\n\n            return this;\n        },\n\n        _doAdd: function (child) {\n            if (child.parent) {\n                child.parent.remove(child);\n            }\n\n            child.parent = this;\n\n            var storage = this.__storage;\n            var zr = this.__zr;\n            if (storage && storage !== child.__storage) {\n\n                storage.addToStorage(child);\n\n                if (child instanceof Group) {\n                    child.addChildrenToStorage(storage);\n                }\n            }\n\n            zr && zr.refresh();\n        },\n\n        /**\n         * 移除子节点\n         * @param {module:zrender/Element} child\n         */\n        remove: function (child) {\n            var zr = this.__zr;\n            var storage = this.__storage;\n            var children = this._children;\n\n            var idx = zrUtil.indexOf(children, child);\n            if (idx < 0) {\n                return this;\n            }\n            children.splice(idx, 1);\n\n            child.parent = null;\n\n            if (storage) {\n\n                storage.delFromStorage(child);\n\n                if (child instanceof Group) {\n                    child.delChildrenFromStorage(storage);\n                }\n            }\n\n            zr && zr.refresh();\n\n            return this;\n        },\n\n        /**\n         * 移除所有子节点\n         */\n        removeAll: function () {\n            var children = this._children;\n            var storage = this.__storage;\n            var child;\n            var i;\n            for (i = 0; i < children.length; i++) {\n                child = children[i];\n                if (storage) {\n                    storage.delFromStorage(child);\n                    if (child instanceof Group) {\n                        child.delChildrenFromStorage(storage);\n                    }\n                }\n                child.parent = null;\n            }\n            children.length = 0;\n\n            return this;\n        },\n\n        /**\n         * 遍历所有子节点\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        eachChild: function (cb, context) {\n            var children = this._children;\n            for (var i = 0; i < children.length; i++) {\n                var child = children[i];\n                cb.call(context, child, i);\n            }\n            return this;\n        },\n\n        /**\n         * 深度优先遍历所有子孙节点\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        traverse: function (cb, context) {\n            for (var i = 0; i < this._children.length; i++) {\n                var child = this._children[i];\n                cb.call(context, child);\n\n                if (child.type === 'group') {\n                    child.traverse(cb, context);\n                }\n            }\n            return this;\n        },\n\n        addChildrenToStorage: function (storage) {\n            for (var i = 0; i < this._children.length; i++) {\n                var child = this._children[i];\n                storage.addToStorage(child);\n                if (child instanceof Group) {\n                    child.addChildrenToStorage(storage);\n                }\n            }\n        },\n\n        delChildrenFromStorage: function (storage) {\n            for (var i = 0; i < this._children.length; i++) {\n                var child = this._children[i];\n                storage.delFromStorage(child);\n                if (child instanceof Group) {\n                    child.delChildrenFromStorage(storage);\n                }\n            }\n        },\n\n        dirty: function () {\n            this.__dirty = true;\n            this.__zr && this.__zr.refresh();\n            return this;\n        },\n\n        /**\n         * @return {module:zrender/core/BoundingRect}\n         */\n        getBoundingRect: function (includeChildren) {\n            // TODO Caching\n            var rect = null;\n            var tmpRect = new BoundingRect(0, 0, 0, 0);\n            var children = includeChildren || this._children;\n            var tmpMat = [];\n\n            for (var i = 0; i < children.length; i++) {\n                var child = children[i];\n                if (child.ignore || child.invisible) {\n                    continue;\n                }\n\n                var childRect = child.getBoundingRect();\n                var transform = child.getLocalTransform(tmpMat);\n                // TODO\n                // The boundingRect cacluated by transforming original\n                // rect may be bigger than the actual bundingRect when rotation\n                // is used. (Consider a circle rotated aginst its center, where\n                // the actual boundingRect should be the same as that not be\n                // rotated.) But we can not find better approach to calculate\n                // actual boundingRect yet, considering performance.\n                if (transform) {\n                    tmpRect.copy(childRect);\n                    tmpRect.applyTransform(transform);\n                    rect = rect || tmpRect.clone();\n                    rect.union(tmpRect);\n                }\n                else {\n                    rect = rect || childRect.clone();\n                    rect.union(childRect);\n                }\n            }\n            return rect || tmpRect;\n        }\n    };\n\n    zrUtil.inherits(Group, Element);\n\n    module.exports = Group;\n\n\n/***/ }),\n/* 488 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Path 代理，可以在`buildPath`中用于替代`ctx`, 会保存每个path操作的命令到pathCommands属性中\n * 可以用于 isInsidePath 判断以及获取boundingRect\n *\n * @module zrender/core/PathProxy\n * @author Yi Shen (http://www.github.com/pissang)\n */\n\n // TODO getTotalLength, getPointAtLength\n\n\n    var curve = __webpack_require__(474);\n    var vec2 = __webpack_require__(458);\n    var bbox = __webpack_require__(662);\n    var BoundingRect = __webpack_require__(468);\n    var dpr = __webpack_require__(486).devicePixelRatio;\n\n    var CMD = {\n        M: 1,\n        L: 2,\n        C: 3,\n        Q: 4,\n        A: 5,\n        Z: 6,\n        // Rect\n        R: 7\n    };\n\n    // var CMD_MEM_SIZE = {\n    //     M: 3,\n    //     L: 3,\n    //     C: 7,\n    //     Q: 5,\n    //     A: 9,\n    //     R: 5,\n    //     Z: 1\n    // };\n\n    var min = [];\n    var max = [];\n    var min2 = [];\n    var max2 = [];\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    var mathCos = Math.cos;\n    var mathSin = Math.sin;\n    var mathSqrt = Math.sqrt;\n    var mathAbs = Math.abs;\n\n    var hasTypedArray = typeof Float32Array != 'undefined';\n\n    /**\n     * @alias module:zrender/core/PathProxy\n     * @constructor\n     */\n    var PathProxy = function (notSaveData) {\n\n        this._saveData = !(notSaveData || false);\n\n        if (this._saveData) {\n            /**\n             * Path data. Stored as flat array\n             * @type {Array.<Object>}\n             */\n            this.data = [];\n        }\n\n        this._ctx = null;\n    };\n\n    /**\n     * 快速计算Path包围盒（并不是最小包围盒）\n     * @return {Object}\n     */\n    PathProxy.prototype = {\n\n        constructor: PathProxy,\n\n        _xi: 0,\n        _yi: 0,\n\n        _x0: 0,\n        _y0: 0,\n        // Unit x, Unit y. Provide for avoiding drawing that too short line segment\n        _ux: 0,\n        _uy: 0,\n\n        _len: 0,\n\n        _lineDash: null,\n\n        _dashOffset: 0,\n\n        _dashIdx: 0,\n\n        _dashSum: 0,\n\n        /**\n         * @readOnly\n         */\n        setScale: function (sx, sy) {\n            this._ux = mathAbs(1 / dpr / sx) || 0;\n            this._uy = mathAbs(1 / dpr / sy) || 0;\n        },\n\n        getContext: function () {\n            return this._ctx;\n        },\n\n        /**\n         * @param  {CanvasRenderingContext2D} ctx\n         * @return {module:zrender/core/PathProxy}\n         */\n        beginPath: function (ctx) {\n\n            this._ctx = ctx;\n\n            ctx && ctx.beginPath();\n\n            ctx && (this.dpr = ctx.dpr);\n\n            // Reset\n            if (this._saveData) {\n                this._len = 0;\n            }\n\n            if (this._lineDash) {\n                this._lineDash = null;\n\n                this._dashOffset = 0;\n            }\n\n            return this;\n        },\n\n        /**\n         * @param  {number} x\n         * @param  {number} y\n         * @return {module:zrender/core/PathProxy}\n         */\n        moveTo: function (x, y) {\n            this.addData(CMD.M, x, y);\n            this._ctx && this._ctx.moveTo(x, y);\n\n            // x0, y0, xi, yi 是记录在 _dashedXXXXTo 方法中使用\n            // xi, yi 记录当前点, x0, y0 在 closePath 的时候回到起始点。\n            // 有可能在 beginPath 之后直接调用 lineTo，这时候 x0, y0 需要\n            // 在 lineTo 方法中记录，这里先不考虑这种情况，dashed line 也只在 IE10- 中不支持\n            this._x0 = x;\n            this._y0 = y;\n\n            this._xi = x;\n            this._yi = y;\n\n            return this;\n        },\n\n        /**\n         * @param  {number} x\n         * @param  {number} y\n         * @return {module:zrender/core/PathProxy}\n         */\n        lineTo: function (x, y) {\n            var exceedUnit = mathAbs(x - this._xi) > this._ux\n                || mathAbs(y - this._yi) > this._uy\n                // Force draw the first segment\n                || this._len < 5;\n\n            this.addData(CMD.L, x, y);\n\n            if (this._ctx && exceedUnit) {\n                this._needsDash() ? this._dashedLineTo(x, y)\n                    : this._ctx.lineTo(x, y);\n            }\n            if (exceedUnit) {\n                this._xi = x;\n                this._yi = y;\n            }\n\n            return this;\n        },\n\n        /**\n         * @param  {number} x1\n         * @param  {number} y1\n         * @param  {number} x2\n         * @param  {number} y2\n         * @param  {number} x3\n         * @param  {number} y3\n         * @return {module:zrender/core/PathProxy}\n         */\n        bezierCurveTo: function (x1, y1, x2, y2, x3, y3) {\n            this.addData(CMD.C, x1, y1, x2, y2, x3, y3);\n            if (this._ctx) {\n                this._needsDash() ? this._dashedBezierTo(x1, y1, x2, y2, x3, y3)\n                    : this._ctx.bezierCurveTo(x1, y1, x2, y2, x3, y3);\n            }\n            this._xi = x3;\n            this._yi = y3;\n            return this;\n        },\n\n        /**\n         * @param  {number} x1\n         * @param  {number} y1\n         * @param  {number} x2\n         * @param  {number} y2\n         * @return {module:zrender/core/PathProxy}\n         */\n        quadraticCurveTo: function (x1, y1, x2, y2) {\n            this.addData(CMD.Q, x1, y1, x2, y2);\n            if (this._ctx) {\n                this._needsDash() ? this._dashedQuadraticTo(x1, y1, x2, y2)\n                    : this._ctx.quadraticCurveTo(x1, y1, x2, y2);\n            }\n            this._xi = x2;\n            this._yi = y2;\n            return this;\n        },\n\n        /**\n         * @param  {number} cx\n         * @param  {number} cy\n         * @param  {number} r\n         * @param  {number} startAngle\n         * @param  {number} endAngle\n         * @param  {boolean} anticlockwise\n         * @return {module:zrender/core/PathProxy}\n         */\n        arc: function (cx, cy, r, startAngle, endAngle, anticlockwise) {\n            this.addData(\n                CMD.A, cx, cy, r, r, startAngle, endAngle - startAngle, 0, anticlockwise ? 0 : 1\n            );\n            this._ctx && this._ctx.arc(cx, cy, r, startAngle, endAngle, anticlockwise);\n\n            this._xi = mathCos(endAngle) * r + cx;\n            this._yi = mathSin(endAngle) * r + cx;\n            return this;\n        },\n\n        // TODO\n        arcTo: function (x1, y1, x2, y2, radius) {\n            if (this._ctx) {\n                this._ctx.arcTo(x1, y1, x2, y2, radius);\n            }\n            return this;\n        },\n\n        // TODO\n        rect: function (x, y, w, h) {\n            this._ctx && this._ctx.rect(x, y, w, h);\n            this.addData(CMD.R, x, y, w, h);\n            return this;\n        },\n\n        /**\n         * @return {module:zrender/core/PathProxy}\n         */\n        closePath: function () {\n            this.addData(CMD.Z);\n\n            var ctx = this._ctx;\n            var x0 = this._x0;\n            var y0 = this._y0;\n            if (ctx) {\n                this._needsDash() && this._dashedLineTo(x0, y0);\n                ctx.closePath();\n            }\n\n            this._xi = x0;\n            this._yi = y0;\n            return this;\n        },\n\n        /**\n         * Context 从外部传入，因为有可能是 rebuildPath 完之后再 fill。\n         * stroke 同样\n         * @param {CanvasRenderingContext2D} ctx\n         * @return {module:zrender/core/PathProxy}\n         */\n        fill: function (ctx) {\n            ctx && ctx.fill();\n            this.toStatic();\n        },\n\n        /**\n         * @param {CanvasRenderingContext2D} ctx\n         * @return {module:zrender/core/PathProxy}\n         */\n        stroke: function (ctx) {\n            ctx && ctx.stroke();\n            this.toStatic();\n        },\n\n        /**\n         * 必须在其它绘制命令前调用\n         * Must be invoked before all other path drawing methods\n         * @return {module:zrender/core/PathProxy}\n         */\n        setLineDash: function (lineDash) {\n            if (lineDash instanceof Array) {\n                this._lineDash = lineDash;\n\n                this._dashIdx = 0;\n\n                var lineDashSum = 0;\n                for (var i = 0; i < lineDash.length; i++) {\n                    lineDashSum += lineDash[i];\n                }\n                this._dashSum = lineDashSum;\n            }\n            return this;\n        },\n\n        /**\n         * 必须在其它绘制命令前调用\n         * Must be invoked before all other path drawing methods\n         * @return {module:zrender/core/PathProxy}\n         */\n        setLineDashOffset: function (offset) {\n            this._dashOffset = offset;\n            return this;\n        },\n\n        /**\n         *\n         * @return {boolean}\n         */\n        len: function () {\n            return this._len;\n        },\n\n        /**\n         * 直接设置 Path 数据\n         */\n        setData: function (data) {\n\n            var len = data.length;\n\n            if (! (this.data && this.data.length == len) && hasTypedArray) {\n                this.data = new Float32Array(len);\n            }\n\n            for (var i = 0; i < len; i++) {\n                this.data[i] = data[i];\n            }\n\n            this._len = len;\n        },\n\n        /**\n         * 添加子路径\n         * @param {module:zrender/core/PathProxy|Array.<module:zrender/core/PathProxy>} path\n         */\n        appendPath: function (path) {\n            if (!(path instanceof Array)) {\n                path = [path];\n            }\n            var len = path.length;\n            var appendSize = 0;\n            var offset = this._len;\n            for (var i = 0; i < len; i++) {\n                appendSize += path[i].len();\n            }\n            if (hasTypedArray && (this.data instanceof Float32Array)) {\n                this.data = new Float32Array(offset + appendSize);\n            }\n            for (var i = 0; i < len; i++) {\n                var appendPathData = path[i].data;\n                for (var k = 0; k < appendPathData.length; k++) {\n                    this.data[offset++] = appendPathData[k];\n                }\n            }\n            this._len = offset;\n        },\n\n        /**\n         * 填充 Path 数据。\n         * 尽量复用而不申明新的数组。大部分图形重绘的指令数据长度都是不变的。\n         */\n        addData: function (cmd) {\n            if (!this._saveData) {\n                return;\n            }\n\n            var data = this.data;\n            if (this._len + arguments.length > data.length) {\n                // 因为之前的数组已经转换成静态的 Float32Array\n                // 所以不够用时需要扩展一个新的动态数组\n                this._expandData();\n                data = this.data;\n            }\n            for (var i = 0; i < arguments.length; i++) {\n                data[this._len++] = arguments[i];\n            }\n\n            this._prevCmd = cmd;\n        },\n\n        _expandData: function () {\n            // Only if data is Float32Array\n            if (!(this.data instanceof Array)) {\n                var newData = [];\n                for (var i = 0; i < this._len; i++) {\n                    newData[i] = this.data[i];\n                }\n                this.data = newData;\n            }\n        },\n\n        /**\n         * If needs js implemented dashed line\n         * @return {boolean}\n         * @private\n         */\n        _needsDash: function () {\n            return this._lineDash;\n        },\n\n        _dashedLineTo: function (x1, y1) {\n            var dashSum = this._dashSum;\n            var offset = this._dashOffset;\n            var lineDash = this._lineDash;\n            var ctx = this._ctx;\n\n            var x0 = this._xi;\n            var y0 = this._yi;\n            var dx = x1 - x0;\n            var dy = y1 - y0;\n            var dist = mathSqrt(dx * dx + dy * dy);\n            var x = x0;\n            var y = y0;\n            var dash;\n            var nDash = lineDash.length;\n            var idx;\n            dx /= dist;\n            dy /= dist;\n\n            if (offset < 0) {\n                // Convert to positive offset\n                offset = dashSum + offset;\n            }\n            offset %= dashSum;\n            x -= offset * dx;\n            y -= offset * dy;\n\n            while ((dx > 0 && x <= x1) || (dx < 0 && x >= x1)\n            || (dx == 0 && ((dy > 0 && y <= y1) || (dy < 0 && y >= y1)))) {\n                idx = this._dashIdx;\n                dash = lineDash[idx];\n                x += dx * dash;\n                y += dy * dash;\n                this._dashIdx = (idx + 1) % nDash;\n                // Skip positive offset\n                if ((dx > 0 && x < x0) || (dx < 0 && x > x0) || (dy > 0 && y < y0) || (dy < 0 && y > y0)) {\n                    continue;\n                }\n                ctx[idx % 2 ? 'moveTo' : 'lineTo'](\n                    dx >= 0 ? mathMin(x, x1) : mathMax(x, x1),\n                    dy >= 0 ? mathMin(y, y1) : mathMax(y, y1)\n                );\n            }\n            // Offset for next lineTo\n            dx = x - x1;\n            dy = y - y1;\n            this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n        },\n\n        // Not accurate dashed line to\n        _dashedBezierTo: function (x1, y1, x2, y2, x3, y3) {\n            var dashSum = this._dashSum;\n            var offset = this._dashOffset;\n            var lineDash = this._lineDash;\n            var ctx = this._ctx;\n\n            var x0 = this._xi;\n            var y0 = this._yi;\n            var t;\n            var dx;\n            var dy;\n            var cubicAt = curve.cubicAt;\n            var bezierLen = 0;\n            var idx = this._dashIdx;\n            var nDash = lineDash.length;\n\n            var x;\n            var y;\n\n            var tmpLen = 0;\n\n            if (offset < 0) {\n                // Convert to positive offset\n                offset = dashSum + offset;\n            }\n            offset %= dashSum;\n            // Bezier approx length\n            for (t = 0; t < 1; t += 0.1) {\n                dx = cubicAt(x0, x1, x2, x3, t + 0.1)\n                    - cubicAt(x0, x1, x2, x3, t);\n                dy = cubicAt(y0, y1, y2, y3, t + 0.1)\n                    - cubicAt(y0, y1, y2, y3, t);\n                bezierLen += mathSqrt(dx * dx + dy * dy);\n            }\n\n            // Find idx after add offset\n            for (; idx < nDash; idx++) {\n                tmpLen += lineDash[idx];\n                if (tmpLen > offset) {\n                    break;\n                }\n            }\n            t = (tmpLen - offset) / bezierLen;\n\n            while (t <= 1) {\n\n                x = cubicAt(x0, x1, x2, x3, t);\n                y = cubicAt(y0, y1, y2, y3, t);\n\n                // Use line to approximate dashed bezier\n                // Bad result if dash is long\n                idx % 2 ? ctx.moveTo(x, y)\n                    : ctx.lineTo(x, y);\n\n                t += lineDash[idx] / bezierLen;\n\n                idx = (idx + 1) % nDash;\n            }\n\n            // Finish the last segment and calculate the new offset\n            (idx % 2 !== 0) && ctx.lineTo(x3, y3);\n            dx = x3 - x;\n            dy = y3 - y;\n            this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n        },\n\n        _dashedQuadraticTo: function (x1, y1, x2, y2) {\n            // Convert quadratic to cubic using degree elevation\n            var x3 = x2;\n            var y3 = y2;\n            x2 = (x2 + 2 * x1) / 3;\n            y2 = (y2 + 2 * y1) / 3;\n            x1 = (this._xi + 2 * x1) / 3;\n            y1 = (this._yi + 2 * y1) / 3;\n\n            this._dashedBezierTo(x1, y1, x2, y2, x3, y3);\n        },\n\n        /**\n         * 转成静态的 Float32Array 减少堆内存占用\n         * Convert dynamic array to static Float32Array\n         */\n        toStatic: function () {\n            var data = this.data;\n            if (data instanceof Array) {\n                data.length = this._len;\n                if (hasTypedArray) {\n                    this.data = new Float32Array(data);\n                }\n            }\n        },\n\n        /**\n         * @return {module:zrender/core/BoundingRect}\n         */\n        getBoundingRect: function () {\n            min[0] = min[1] = min2[0] = min2[1] = Number.MAX_VALUE;\n            max[0] = max[1] = max2[0] = max2[1] = -Number.MAX_VALUE;\n\n            var data = this.data;\n            var xi = 0;\n            var yi = 0;\n            var x0 = 0;\n            var y0 = 0;\n\n            for (var i = 0; i < data.length;) {\n                var cmd = data[i++];\n\n                if (i == 1) {\n                    // 如果第一个命令是 L, C, Q\n                    // 则 previous point 同绘制命令的第一个 point\n                    //\n                    // 第一个命令为 Arc 的情况下会在后面特殊处理\n                    xi = data[i];\n                    yi = data[i + 1];\n\n                    x0 = xi;\n                    y0 = yi;\n                }\n\n                switch (cmd) {\n                    case CMD.M:\n                        // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n                        // 在 closePath 的时候使用\n                        x0 = data[i++];\n                        y0 = data[i++];\n                        xi = x0;\n                        yi = y0;\n                        min2[0] = x0;\n                        min2[1] = y0;\n                        max2[0] = x0;\n                        max2[1] = y0;\n                        break;\n                    case CMD.L:\n                        bbox.fromLine(xi, yi, data[i], data[i + 1], min2, max2);\n                        xi = data[i++];\n                        yi = data[i++];\n                        break;\n                    case CMD.C:\n                        bbox.fromCubic(\n                            xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n                            min2, max2\n                        );\n                        xi = data[i++];\n                        yi = data[i++];\n                        break;\n                    case CMD.Q:\n                        bbox.fromQuadratic(\n                            xi, yi, data[i++], data[i++], data[i], data[i + 1],\n                            min2, max2\n                        );\n                        xi = data[i++];\n                        yi = data[i++];\n                        break;\n                    case CMD.A:\n                        // TODO Arc 判断的开销比较大\n                        var cx = data[i++];\n                        var cy = data[i++];\n                        var rx = data[i++];\n                        var ry = data[i++];\n                        var startAngle = data[i++];\n                        var endAngle = data[i++] + startAngle;\n                        // TODO Arc 旋转\n                        var psi = data[i++];\n                        var anticlockwise = 1 - data[i++];\n\n                        if (i == 1) {\n                            // 直接使用 arc 命令\n                            // 第一个命令起点还未定义\n                            x0 = mathCos(startAngle) * rx + cx;\n                            y0 = mathSin(startAngle) * ry + cy;\n                        }\n\n                        bbox.fromArc(\n                            cx, cy, rx, ry, startAngle, endAngle,\n                            anticlockwise, min2, max2\n                        );\n\n                        xi = mathCos(endAngle) * rx + cx;\n                        yi = mathSin(endAngle) * ry + cy;\n                        break;\n                    case CMD.R:\n                        x0 = xi = data[i++];\n                        y0 = yi = data[i++];\n                        var width = data[i++];\n                        var height = data[i++];\n                        // Use fromLine\n                        bbox.fromLine(x0, y0, x0 + width, y0 + height, min2, max2);\n                        break;\n                    case CMD.Z:\n                        xi = x0;\n                        yi = y0;\n                        break;\n                }\n\n                // Union\n                vec2.min(min, min, min2);\n                vec2.max(max, max, max2);\n            }\n\n            // No data\n            if (i === 0) {\n                min[0] = min[1] = max[0] = max[1] = 0;\n            }\n\n            return new BoundingRect(\n                min[0], min[1], max[0] - min[0], max[1] - min[1]\n            );\n        },\n\n        /**\n         * Rebuild path from current data\n         * Rebuild path will not consider javascript implemented line dash.\n         * @param {CanvasRenderingContext} ctx\n         */\n        rebuildPath: function (ctx) {\n            var d = this.data;\n            var x0, y0;\n            var xi, yi;\n            var x, y;\n            var ux = this._ux;\n            var uy = this._uy;\n            var len = this._len;\n            for (var i = 0; i < len;) {\n                var cmd = d[i++];\n\n                if (i == 1) {\n                    // 如果第一个命令是 L, C, Q\n                    // 则 previous point 同绘制命令的第一个 point\n                    //\n                    // 第一个命令为 Arc 的情况下会在后面特殊处理\n                    xi = d[i];\n                    yi = d[i + 1];\n\n                    x0 = xi;\n                    y0 = yi;\n                }\n                switch (cmd) {\n                    case CMD.M:\n                        x0 = xi = d[i++];\n                        y0 = yi = d[i++];\n                        ctx.moveTo(xi, yi);\n                        break;\n                    case CMD.L:\n                        x = d[i++];\n                        y = d[i++];\n                        // Not draw too small seg between\n                        if (mathAbs(x - xi) > ux || mathAbs(y - yi) > uy || i === len - 1) {\n                            ctx.lineTo(x, y);\n                            xi = x;\n                            yi = y;\n                        }\n                        break;\n                    case CMD.C:\n                        ctx.bezierCurveTo(\n                            d[i++], d[i++], d[i++], d[i++], d[i++], d[i++]\n                        );\n                        xi = d[i - 2];\n                        yi = d[i - 1];\n                        break;\n                    case CMD.Q:\n                        ctx.quadraticCurveTo(d[i++], d[i++], d[i++], d[i++]);\n                        xi = d[i - 2];\n                        yi = d[i - 1];\n                        break;\n                    case CMD.A:\n                        var cx = d[i++];\n                        var cy = d[i++];\n                        var rx = d[i++];\n                        var ry = d[i++];\n                        var theta = d[i++];\n                        var dTheta = d[i++];\n                        var psi = d[i++];\n                        var fs = d[i++];\n                        var r = (rx > ry) ? rx : ry;\n                        var scaleX = (rx > ry) ? 1 : rx / ry;\n                        var scaleY = (rx > ry) ? ry / rx : 1;\n                        var isEllipse = Math.abs(rx - ry) > 1e-3;\n                        var endAngle = theta + dTheta;\n                        if (isEllipse) {\n                            ctx.translate(cx, cy);\n                            ctx.rotate(psi);\n                            ctx.scale(scaleX, scaleY);\n                            ctx.arc(0, 0, r, theta, endAngle, 1 - fs);\n                            ctx.scale(1 / scaleX, 1 / scaleY);\n                            ctx.rotate(-psi);\n                            ctx.translate(-cx, -cy);\n                        }\n                        else {\n                            ctx.arc(cx, cy, r, theta, endAngle, 1 - fs);\n                        }\n\n                        if (i == 1) {\n                            // 直接使用 arc 命令\n                            // 第一个命令起点还未定义\n                            x0 = mathCos(theta) * rx + cx;\n                            y0 = mathSin(theta) * ry + cy;\n                        }\n                        xi = mathCos(endAngle) * rx + cx;\n                        yi = mathSin(endAngle) * ry + cy;\n                        break;\n                    case CMD.R:\n                        x0 = xi = d[i];\n                        y0 = yi = d[i + 1];\n                        ctx.rect(d[i++], d[i++], d[i++], d[i++]);\n                        break;\n                    case CMD.Z:\n                        ctx.closePath();\n                        xi = x0;\n                        yi = y0;\n                }\n            }\n        }\n    };\n\n    PathProxy.CMD = CMD;\n\n    module.exports = PathProxy;\n\n\n/***/ }),\n/* 489 */,\n/* 490 */,\n/* 491 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = { \"default\": __webpack_require__(492), __esModule: true };\n\n/***/ }),\n/* 492 */\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(180);\n__webpack_require__(494);\nmodule.exports = __webpack_require__(46).Array.from;\n\n/***/ }),\n/* 493 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar $defineProperty = __webpack_require__(33)\n  , createDesc      = __webpack_require__(61);\n\nmodule.exports = function(object, index, value){\n  if(index in object)$defineProperty.f(object, index, createDesc(0, value));\n  else object[index] = value;\n};\n\n/***/ }),\n/* 494 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar ctx            = __webpack_require__(177)\n  , $export        = __webpack_require__(58)\n  , toObject       = __webpack_require__(118)\n  , call           = __webpack_require__(480)\n  , isArrayIter    = __webpack_require__(479)\n  , toLength       = __webpack_require__(179)\n  , createProperty = __webpack_require__(493)\n  , getIterFn      = __webpack_require__(482);\n\n$export($export.S + $export.F * !__webpack_require__(481)(function(iter){ Array.from(iter); }), 'Array', {\n  // 22.1.2.1 Array.from(arrayLike, mapfn = undefined, thisArg = undefined)\n  from: function from(arrayLike/*, mapfn = undefined, thisArg = undefined*/){\n    var O       = toObject(arrayLike)\n      , C       = typeof this == 'function' ? this : Array\n      , aLen    = arguments.length\n      , mapfn   = aLen > 1 ? arguments[1] : undefined\n      , mapping = mapfn !== undefined\n      , index   = 0\n      , iterFn  = getIterFn(O)\n      , length, result, step, iterator;\n    if(mapping)mapfn = ctx(mapfn, aLen > 2 ? arguments[2] : undefined, 2);\n    // if object isn't iterable or it's array with default iterator - use simple case\n    if(iterFn != undefined && !(C == Array && isArrayIter(iterFn))){\n      for(iterator = iterFn.call(O), result = new C; !(step = iterator.next()).done; index++){\n        createProperty(result, index, mapping ? call(iterator, mapfn, [step.value, index], true) : step.value);\n      }\n    } else {\n      length = toLength(O.length);\n      for(result = new C(length); length > index; index++){\n        createProperty(result, index, mapping ? mapfn(O[index], index) : O[index]);\n      }\n    }\n    result.length = index;\n    return result;\n  }\n});\n\n\n/***/ }),\n/* 495 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(453);\n\n    var coordinateSystemCreators = {};\n\n    function CoordinateSystemManager() {\n\n        this._coordinateSystems = [];\n    }\n\n    CoordinateSystemManager.prototype = {\n\n        constructor: CoordinateSystemManager,\n\n        create: function (ecModel, api) {\n            var coordinateSystems = [];\n            zrUtil.each(coordinateSystemCreators, function (creater, type) {\n                var list = creater.create(ecModel, api);\n                coordinateSystems = coordinateSystems.concat(list || []);\n            });\n\n            this._coordinateSystems = coordinateSystems;\n        },\n\n        update: function (ecModel, api) {\n            zrUtil.each(this._coordinateSystems, function (coordSys) {\n                // FIXME MUST have\n                coordSys.update && coordSys.update(ecModel, api);\n            });\n        },\n\n        getCoordinateSystems: function () {\n            return this._coordinateSystems.slice();\n        }\n    };\n\n    CoordinateSystemManager.register = function (type, coordinateSystemCreator) {\n        coordinateSystemCreators[type] = coordinateSystemCreator;\n    };\n\n    CoordinateSystemManager.get = function (type) {\n        return coordinateSystemCreators[type];\n    };\n\n    module.exports = CoordinateSystemManager;\n\n\n/***/ }),\n/* 496 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @file Data zoom model\n */\n\n\n    var zrUtil = __webpack_require__(453);\n    var env = __webpack_require__(460);\n    var echarts = __webpack_require__(455);\n    var modelUtil = __webpack_require__(456);\n    var helper = __webpack_require__(498);\n    var AxisProxy = __webpack_require__(596);\n    var each = zrUtil.each;\n    var eachAxisDim = helper.eachAxisDim;\n\n    var DataZoomModel = echarts.extendComponentModel({\n\n        type: 'dataZoom',\n\n        dependencies: [\n            'xAxis', 'yAxis', 'zAxis', 'radiusAxis', 'angleAxis', 'singleAxis', 'series'\n        ],\n\n        /**\n         * @protected\n         */\n        defaultOption: {\n            zlevel: 0,\n            z: 4,                   // Higher than normal component (z: 2).\n            orient: null,           // Default auto by axisIndex. Possible value: 'horizontal', 'vertical'.\n            xAxisIndex: null,       // Default the first horizontal category axis.\n            yAxisIndex: null,       // Default the first vertical category axis.\n\n            filterMode: 'filter',   // Possible values: 'filter' or 'empty' or 'weakFilter'.\n                                    // 'filter': data items which are out of window will be removed. This option is\n                                    //          applicable when filtering outliers. For each data item, it will be\n                                    //          filtered if one of the relevant dimensions is out of the window.\n                                    // 'weakFilter': data items which are out of window will be removed. This option\n                                    //          is applicable when filtering outliers. For each data item, it will be\n                                    //          filtered only if all  of the relevant dimensions are out of the same\n                                    //          side of the window.\n                                    // 'empty': data items which are out of window will be set to empty.\n                                    //          This option is applicable when user should not neglect\n                                    //          that there are some data items out of window.\n                                    // 'none': Do not filter.\n                                    // Taking line chart as an example, line will be broken in\n                                    // the filtered points when filterModel is set to 'empty', but\n                                    // be connected when set to 'filter'.\n\n            throttle: null,         // Dispatch action by the fixed rate, avoid frequency.\n                                    // default 100. Do not throttle when use null/undefined.\n                                    // If animation === true and animationDurationUpdate > 0,\n                                    // default value is 100, otherwise 20.\n            start: 0,               // Start percent. 0 ~ 100\n            end: 100,               // End percent. 0 ~ 100\n            startValue: null,       // Start value. If startValue specified, start is ignored.\n            endValue: null,         // End value. If endValue specified, end is ignored.\n            minSpan: null,          // 0 ~ 100\n            maxSpan: null,          // 0 ~ 100\n            minValueSpan: null,     // The range of dataZoom can not be smaller than that.\n            maxValueSpan: null      // The range of dataZoom can not be larger than that.\n        },\n\n        /**\n         * @override\n         */\n        init: function (option, parentModel, ecModel) {\n\n            /**\n             * key like x_0, y_1\n             * @private\n             * @type {Object}\n             */\n            this._dataIntervalByAxis = {};\n\n            /**\n             * @private\n             */\n            this._dataInfo = {};\n\n            /**\n             * key like x_0, y_1\n             * @private\n             */\n            this._axisProxies = {};\n\n            /**\n             * @readOnly\n             */\n            this.textStyleModel;\n\n            /**\n             * @private\n             */\n            this._autoThrottle = true;\n\n            /**\n             * 'percent' or 'value'\n             * @private\n             */\n            this._rangePropMode = ['percent', 'percent'];\n\n            var rawOption = retrieveRaw(option);\n\n            this.mergeDefaultAndTheme(option, ecModel);\n\n            this.doInit(rawOption);\n        },\n\n        /**\n         * @override\n         */\n        mergeOption: function (newOption) {\n            var rawOption = retrieveRaw(newOption);\n\n            //FIX #2591\n            zrUtil.merge(this.option, newOption, true);\n\n            this.doInit(rawOption);\n        },\n\n        /**\n         * @protected\n         */\n        doInit: function (rawOption) {\n            var thisOption = this.option;\n\n            // Disable realtime view update if canvas is not supported.\n            if (!env.canvasSupported) {\n                thisOption.realtime = false;\n            }\n\n            this._setDefaultThrottle(rawOption);\n\n            updateRangeUse(this, rawOption);\n\n            each([['start', 'startValue'], ['end', 'endValue']], function (names, index) {\n                // start/end has higher priority over startValue/endValue if they\n                // both set, but we should make chart.setOption({endValue: 1000})\n                // effective, rather than chart.setOption({endValue: 1000, end: null}).\n                if (this._rangePropMode[index] === 'value') {\n                    thisOption[names[0]] = null;\n                }\n                // Otherwise do nothing and use the merge result.\n            }, this);\n\n            this.textStyleModel = this.getModel('textStyle');\n\n            this._resetTarget();\n\n            this._giveAxisProxies();\n        },\n\n        /**\n         * @private\n         */\n        _giveAxisProxies: function () {\n            var axisProxies = this._axisProxies;\n\n            this.eachTargetAxis(function (dimNames, axisIndex, dataZoomModel, ecModel) {\n                var axisModel = this.dependentModels[dimNames.axis][axisIndex];\n\n                // If exists, share axisProxy with other dataZoomModels.\n                var axisProxy = axisModel.__dzAxisProxy || (\n                    // Use the first dataZoomModel as the main model of axisProxy.\n                    axisModel.__dzAxisProxy = new AxisProxy(\n                        dimNames.name, axisIndex, this, ecModel\n                    )\n                );\n                // FIXME\n                // dispose __dzAxisProxy\n\n                axisProxies[dimNames.name + '_' + axisIndex] = axisProxy;\n            }, this);\n        },\n\n        /**\n         * @private\n         */\n        _resetTarget: function () {\n            var thisOption = this.option;\n\n            var autoMode = this._judgeAutoMode();\n\n            eachAxisDim(function (dimNames) {\n                var axisIndexName = dimNames.axisIndex;\n                thisOption[axisIndexName] = modelUtil.normalizeToArray(\n                    thisOption[axisIndexName]\n                );\n            }, this);\n\n            if (autoMode === 'axisIndex') {\n                this._autoSetAxisIndex();\n            }\n            else if (autoMode === 'orient') {\n                this._autoSetOrient();\n            }\n        },\n\n        /**\n         * @private\n         */\n        _judgeAutoMode: function () {\n            // Auto set only works for setOption at the first time.\n            // The following is user's reponsibility. So using merged\n            // option is OK.\n            var thisOption = this.option;\n\n            var hasIndexSpecified = false;\n            eachAxisDim(function (dimNames) {\n                // When user set axisIndex as a empty array, we think that user specify axisIndex\n                // but do not want use auto mode. Because empty array may be encountered when\n                // some error occured.\n                if (thisOption[dimNames.axisIndex] != null) {\n                    hasIndexSpecified = true;\n                }\n            }, this);\n\n            var orient = thisOption.orient;\n\n            if (orient == null && hasIndexSpecified) {\n                return 'orient';\n            }\n            else if (!hasIndexSpecified) {\n                if (orient == null) {\n                    thisOption.orient = 'horizontal';\n                }\n                return 'axisIndex';\n            }\n        },\n\n        /**\n         * @private\n         */\n        _autoSetAxisIndex: function () {\n            var autoAxisIndex = true;\n            var orient = this.get('orient', true);\n            var thisOption = this.option;\n            var dependentModels = this.dependentModels;\n\n            if (autoAxisIndex) {\n                // Find axis that parallel to dataZoom as default.\n                var dimName = orient === 'vertical' ? 'y' : 'x';\n\n                if (dependentModels[dimName + 'Axis'].length) {\n                    thisOption[dimName + 'AxisIndex'] = [0];\n                    autoAxisIndex = false;\n                }\n                else {\n                    each(dependentModels.singleAxis, function (singleAxisModel) {\n                        if (autoAxisIndex && singleAxisModel.get('orient', true) === orient) {\n                            thisOption.singleAxisIndex = [singleAxisModel.componentIndex];\n                            autoAxisIndex = false;\n                        }\n                    });\n                }\n            }\n\n            if (autoAxisIndex) {\n                // Find the first category axis as default. (consider polar)\n                eachAxisDim(function (dimNames) {\n                    if (!autoAxisIndex) {\n                        return;\n                    }\n                    var axisIndices = [];\n                    var axisModels = this.dependentModels[dimNames.axis];\n                    if (axisModels.length && !axisIndices.length) {\n                        for (var i = 0, len = axisModels.length; i < len; i++) {\n                            if (axisModels[i].get('type') === 'category') {\n                                axisIndices.push(i);\n                            }\n                        }\n                    }\n                    thisOption[dimNames.axisIndex] = axisIndices;\n                    if (axisIndices.length) {\n                        autoAxisIndex = false;\n                    }\n                }, this);\n            }\n\n            if (autoAxisIndex) {\n                // FIXME\n                // 这里是兼容ec2的写法（没指定xAxisIndex和yAxisIndex时把scatter和双数值轴折柱纳入dataZoom控制），\n                // 但是实际是否需要Grid.js#getScaleByOption来判断（考虑time，log等axis type）？\n\n                // If both dataZoom.xAxisIndex and dataZoom.yAxisIndex is not specified,\n                // dataZoom component auto adopts series that reference to\n                // both xAxis and yAxis which type is 'value'.\n                this.ecModel.eachSeries(function (seriesModel) {\n                    if (this._isSeriesHasAllAxesTypeOf(seriesModel, 'value')) {\n                        eachAxisDim(function (dimNames) {\n                            var axisIndices = thisOption[dimNames.axisIndex];\n\n                            var axisIndex = seriesModel.get(dimNames.axisIndex);\n                            var axisId = seriesModel.get(dimNames.axisId);\n\n                            var axisModel = seriesModel.ecModel.queryComponents({\n                                mainType: dimNames.axis,\n                                index: axisIndex,\n                                id: axisId\n                            })[0];\n\n                            if (__DEV__) {\n                                if (!axisModel) {\n                                    throw new Error(\n                                        dimNames.axis + ' \"' + zrUtil.retrieve(\n                                            axisIndex,\n                                            axisId,\n                                            0\n                                        ) + '\" not found'\n                                    );\n                                }\n                            }\n                            axisIndex = axisModel.componentIndex;\n\n                            if (zrUtil.indexOf(axisIndices, axisIndex) < 0) {\n                                axisIndices.push(axisIndex);\n                            }\n                        });\n                    }\n                }, this);\n            }\n        },\n\n        /**\n         * @private\n         */\n        _autoSetOrient: function () {\n            var dim;\n\n            // Find the first axis\n            this.eachTargetAxis(function (dimNames) {\n                !dim && (dim = dimNames.name);\n            }, this);\n\n            this.option.orient = dim === 'y' ? 'vertical' : 'horizontal';\n        },\n\n        /**\n         * @private\n         */\n        _isSeriesHasAllAxesTypeOf: function (seriesModel, axisType) {\n            // FIXME\n            // 需要series的xAxisIndex和yAxisIndex都首先自动设置上。\n            // 例如series.type === scatter时。\n\n            var is = true;\n            eachAxisDim(function (dimNames) {\n                var seriesAxisIndex = seriesModel.get(dimNames.axisIndex);\n                var axisModel = this.dependentModels[dimNames.axis][seriesAxisIndex];\n\n                if (!axisModel || axisModel.get('type') !== axisType) {\n                    is = false;\n                }\n            }, this);\n            return is;\n        },\n\n        /**\n         * @private\n         */\n        _setDefaultThrottle: function (rawOption) {\n            // When first time user set throttle, auto throttle ends.\n            if (rawOption.hasOwnProperty('throttle')) {\n                this._autoThrottle = false;\n            }\n            if (this._autoThrottle) {\n                var globalOption = this.ecModel.option;\n                this.option.throttle =\n                    (globalOption.animation && globalOption.animationDurationUpdate > 0)\n                    ? 100 : 20;\n            }\n        },\n\n        /**\n         * @public\n         */\n        getFirstTargetAxisModel: function () {\n            var firstAxisModel;\n            eachAxisDim(function (dimNames) {\n                if (firstAxisModel == null) {\n                    var indices = this.get(dimNames.axisIndex);\n                    if (indices.length) {\n                        firstAxisModel = this.dependentModels[dimNames.axis][indices[0]];\n                    }\n                }\n            }, this);\n\n            return firstAxisModel;\n        },\n\n        /**\n         * @public\n         * @param {Function} callback param: axisModel, dimNames, axisIndex, dataZoomModel, ecModel\n         */\n        eachTargetAxis: function (callback, context) {\n            var ecModel = this.ecModel;\n            eachAxisDim(function (dimNames) {\n                each(\n                    this.get(dimNames.axisIndex),\n                    function (axisIndex) {\n                        callback.call(context, dimNames, axisIndex, this, ecModel);\n                    },\n                    this\n                );\n            }, this);\n        },\n\n        /**\n         * @param {string} dimName\n         * @param {number} axisIndex\n         * @return {module:echarts/component/dataZoom/AxisProxy} If not found, return null/undefined.\n         */\n        getAxisProxy: function (dimName, axisIndex) {\n            return this._axisProxies[dimName + '_' + axisIndex];\n        },\n\n        /**\n         * @param {string} dimName\n         * @param {number} axisIndex\n         * @return {module:echarts/model/Model} If not found, return null/undefined.\n         */\n        getAxisModel: function (dimName, axisIndex) {\n            var axisProxy = this.getAxisProxy(dimName, axisIndex);\n            return axisProxy && axisProxy.getAxisModel();\n        },\n\n        /**\n         * If not specified, set to undefined.\n         *\n         * @public\n         * @param {Object} opt\n         * @param {number} [opt.start]\n         * @param {number} [opt.end]\n         * @param {number} [opt.startValue]\n         * @param {number} [opt.endValue]\n         * @param {boolean} [ignoreUpdateRangeUsg=false]\n         */\n        setRawRange: function (opt, ignoreUpdateRangeUsg) {\n            each(['start', 'end', 'startValue', 'endValue'], function (name) {\n                // If any of those prop is null/undefined, we should alos set\n                // them, because only one pair between start/end and\n                // startValue/endValue can work.\n                this.option[name] = opt[name];\n            }, this);\n\n            !ignoreUpdateRangeUsg && updateRangeUse(this, opt);\n        },\n\n        /**\n         * @public\n         * @return {Array.<number>} [startPercent, endPercent]\n         */\n        getPercentRange: function () {\n            var axisProxy = this.findRepresentativeAxisProxy();\n            if (axisProxy) {\n                return axisProxy.getDataPercentWindow();\n            }\n        },\n\n        /**\n         * @public\n         * For example, chart.getModel().getComponent('dataZoom').getValueRange('y', 0);\n         *\n         * @param {string} [axisDimName]\n         * @param {number} [axisIndex]\n         * @return {Array.<number>} [startValue, endValue] value can only be '-' or finite number.\n         */\n        getValueRange: function (axisDimName, axisIndex) {\n            if (axisDimName == null && axisIndex == null) {\n                var axisProxy = this.findRepresentativeAxisProxy();\n                if (axisProxy) {\n                    return axisProxy.getDataValueWindow();\n                }\n            }\n            else {\n                return this.getAxisProxy(axisDimName, axisIndex).getDataValueWindow();\n            }\n        },\n\n        /**\n         * @public\n         * @param {module:echarts/model/Model} [axisModel] If axisModel given, find axisProxy\n         *      corresponding to the axisModel\n         * @return {module:echarts/component/dataZoom/AxisProxy}\n         */\n        findRepresentativeAxisProxy: function (axisModel) {\n            if (axisModel) {\n                return axisModel.__dzAxisProxy;\n            }\n\n            // Find the first hosted axisProxy\n            var axisProxies = this._axisProxies;\n            for (var key in axisProxies) {\n                if (axisProxies.hasOwnProperty(key) && axisProxies[key].hostedBy(this)) {\n                    return axisProxies[key];\n                }\n            }\n\n            // If no hosted axis find not hosted axisProxy.\n            // Consider this case: dataZoomModel1 and dataZoomModel2 control the same axis,\n            // and the option.start or option.end settings are different. The percentRange\n            // should follow axisProxy.\n            // (We encounter this problem in toolbox data zoom.)\n            for (var key in axisProxies) {\n                if (axisProxies.hasOwnProperty(key) && !axisProxies[key].hostedBy(this)) {\n                    return axisProxies[key];\n                }\n            }\n        },\n\n        /**\n         * @return {Array.<string>}\n         */\n        getRangePropMode: function () {\n            return this._rangePropMode.slice();\n        }\n    });\n\n    function retrieveRaw(option) {\n        var ret = {};\n        each(\n            ['start', 'end', 'startValue', 'endValue', 'throttle'],\n            function (name) {\n                option.hasOwnProperty(name) && (ret[name] = option[name]);\n            }\n        );\n        return ret;\n    }\n\n    function updateRangeUse(dataZoomModel, rawOption) {\n        each([['start', 'startValue'], ['end', 'endValue']], function (names, index) {\n            var rangePropMode = dataZoomModel._rangePropMode;\n            if (rawOption[names[0]] != null) {\n                rangePropMode[index] = 'percent';\n            }\n            else if (rawOption[names[1]] != null) {\n                rangePropMode[index] = 'value';\n            }\n            // else remain its original setting.\n        });\n    }\n\n    module.exports = DataZoomModel;\n\n\n\n/***/ }),\n/* 497 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var ComponentView = __webpack_require__(536);\n\n    module.exports = ComponentView.extend({\n\n        type: 'dataZoom',\n\n        render: function (dataZoomModel, ecModel, api, payload) {\n            this.dataZoomModel = dataZoomModel;\n            this.ecModel = ecModel;\n            this.api = api;\n        },\n\n        /**\n         * Find the first target coordinate system.\n         *\n         * @protected\n         * @return {Object} {\n         *                   grid: [\n         *                       {model: coord0, axisModels: [axis1, axis3], coordIndex: 1},\n         *                       {model: coord1, axisModels: [axis0, axis2], coordIndex: 0},\n         *                       ...\n         *                   ],  // cartesians must not be null/undefined.\n         *                   polar: [\n         *                       {model: coord0, axisModels: [axis4], coordIndex: 0},\n         *                       ...\n         *                   ],  // polars must not be null/undefined.\n         *                   singleAxis: [\n         *                       {model: coord0, axisModels: [], coordIndex: 0}\n         *                   ]\n         */\n        getTargetCoordInfo: function () {\n            var dataZoomModel = this.dataZoomModel;\n            var ecModel = this.ecModel;\n            var coordSysLists = {};\n\n            dataZoomModel.eachTargetAxis(function (dimNames, axisIndex) {\n                var axisModel = ecModel.getComponent(dimNames.axis, axisIndex);\n                if (axisModel) {\n                    var coordModel = axisModel.getCoordSysModel();\n                    coordModel && save(\n                        coordModel,\n                        axisModel,\n                        coordSysLists[coordModel.mainType] || (coordSysLists[coordModel.mainType] = []),\n                        coordModel.componentIndex\n                    );\n                }\n            }, this);\n\n            function save(coordModel, axisModel, store, coordIndex) {\n                var item;\n                for (var i = 0; i < store.length; i++) {\n                    if (store[i].model === coordModel) {\n                        item = store[i];\n                        break;\n                    }\n                }\n                if (!item) {\n                    store.push(item = {\n                        model: coordModel, axisModels: [], coordIndex: coordIndex\n                    });\n                }\n                item.axisModels.push(axisModel);\n            }\n\n            return coordSysLists;\n        }\n\n    });\n\n\n\n/***/ }),\n/* 498 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    var formatUtil = __webpack_require__(461);\n    var zrUtil = __webpack_require__(453);\n\n    var helper = {};\n\n    var AXIS_DIMS = ['x', 'y', 'z', 'radius', 'angle', 'single'];\n    // Supported coords.\n    var COORDS = ['cartesian2d', 'polar', 'singleAxis'];\n\n    /**\n     * @param {string} coordType\n     * @return {boolean}\n     */\n    helper.isCoordSupported = function (coordType) {\n        return zrUtil.indexOf(COORDS, coordType) >= 0;\n    };\n\n    /**\n     * Create \"each\" method to iterate names.\n     *\n     * @pubilc\n     * @param  {Array.<string>} names\n     * @param  {Array.<string>=} attrs\n     * @return {Function}\n     */\n    helper.createNameEach = function (names, attrs) {\n        names = names.slice();\n        var capitalNames = zrUtil.map(names, formatUtil.capitalFirst);\n        attrs = (attrs || []).slice();\n        var capitalAttrs = zrUtil.map(attrs, formatUtil.capitalFirst);\n\n        return function (callback, context) {\n            zrUtil.each(names, function (name, index) {\n                var nameObj = {name: name, capital: capitalNames[index]};\n\n                for (var j = 0; j < attrs.length; j++) {\n                    nameObj[attrs[j]] = name + capitalAttrs[j];\n                }\n\n                callback.call(context, nameObj);\n            });\n        };\n    };\n\n    /**\n     * Iterate each dimension name.\n     *\n     * @public\n     * @param {Function} callback The parameter is like:\n     *                            {\n     *                                name: 'angle',\n     *                                capital: 'Angle',\n     *                                axis: 'angleAxis',\n     *                                axisIndex: 'angleAixs',\n     *                                index: 'angleIndex'\n     *                            }\n     * @param {Object} context\n     */\n    helper.eachAxisDim = helper.createNameEach(AXIS_DIMS, ['axisIndex', 'axis', 'index', 'id']);\n\n    /**\n     * If tow dataZoomModels has the same axis controlled, we say that they are 'linked'.\n     * dataZoomModels and 'links' make up one or more graphics.\n     * This function finds the graphic where the source dataZoomModel is in.\n     *\n     * @public\n     * @param {Function} forEachNode Node iterator.\n     * @param {Function} forEachEdgeType edgeType iterator\n     * @param {Function} edgeIdGetter Giving node and edgeType, return an array of edge id.\n     * @return {Function} Input: sourceNode, Output: Like {nodes: [], dims: {}}\n     */\n    helper.createLinkedNodesFinder = function (forEachNode, forEachEdgeType, edgeIdGetter) {\n\n        return function (sourceNode) {\n            var result = {\n                nodes: [],\n                records: {} // key: edgeType.name, value: Object (key: edge id, value: boolean).\n            };\n\n            forEachEdgeType(function (edgeType) {\n                result.records[edgeType.name] = {};\n            });\n\n            if (!sourceNode) {\n                return result;\n            }\n\n            absorb(sourceNode, result);\n\n            var existsLink;\n            do {\n                existsLink = false;\n                forEachNode(processSingleNode);\n            }\n            while (existsLink);\n\n            function processSingleNode(node) {\n                if (!isNodeAbsorded(node, result) && isLinked(node, result)) {\n                    absorb(node, result);\n                    existsLink = true;\n                }\n            }\n\n            return result;\n        };\n\n        function isNodeAbsorded(node, result) {\n            return zrUtil.indexOf(result.nodes, node) >= 0;\n        }\n\n        function isLinked(node, result) {\n            var hasLink = false;\n            forEachEdgeType(function (edgeType) {\n                zrUtil.each(edgeIdGetter(node, edgeType) || [], function (edgeId) {\n                    result.records[edgeType.name][edgeId] && (hasLink = true);\n                });\n            });\n            return hasLink;\n        }\n\n        function absorb(node, result) {\n            result.nodes.push(node);\n            forEachEdgeType(function (edgeType) {\n                zrUtil.each(edgeIdGetter(node, edgeType) || [], function (edgeId) {\n                    result.records[edgeType.name][edgeId] = true;\n                });\n            });\n        }\n    };\n\n    module.exports = helper;\n\n\n/***/ }),\n/* 499 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// TODO Parse shadow style\n// TODO Only shallow path support\n\n    var zrUtil = __webpack_require__(453);\n\n    module.exports = function (properties) {\n        // Normalize\n        for (var i = 0; i < properties.length; i++) {\n            if (!properties[i][1]) {\n               properties[i][1] = properties[i][0];\n            }\n        }\n        return function (excludes, includes) {\n            var style = {};\n            for (var i = 0; i < properties.length; i++) {\n                var propName = properties[i][1];\n                if ((excludes && zrUtil.indexOf(excludes, propName) >= 0)\n                    || (includes && zrUtil.indexOf(includes, propName) < 0)\n                ) {\n                    continue;\n                }\n                var val = this.getShallow(propName);\n                if (val != null) {\n                    style[properties[i][0]] = val;\n                }\n            }\n            return style;\n        };\n    };\n\n\n/***/ }),\n/* 500 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Interval scale\n * @module echarts/scale/Interval\n */\n\n\n\n    var numberUtil = __webpack_require__(457);\n    var formatUtil = __webpack_require__(461);\n    var Scale = __webpack_require__(484);\n    var helper = __webpack_require__(534);\n\n    var roundNumber = numberUtil.round;\n\n    /**\n     * @alias module:echarts/coord/scale/Interval\n     * @constructor\n     */\n    var IntervalScale = Scale.extend({\n\n        type: 'interval',\n\n        _interval: 0,\n\n        _intervalPrecision: 2,\n\n        setExtent: function (start, end) {\n            var thisExtent = this._extent;\n            //start,end may be a Number like '25',so...\n            if (!isNaN(start)) {\n                thisExtent[0] = parseFloat(start);\n            }\n            if (!isNaN(end)) {\n                thisExtent[1] = parseFloat(end);\n            }\n        },\n\n        unionExtent: function (other) {\n            var extent = this._extent;\n            other[0] < extent[0] && (extent[0] = other[0]);\n            other[1] > extent[1] && (extent[1] = other[1]);\n\n            // unionExtent may called by it's sub classes\n            IntervalScale.prototype.setExtent.call(this, extent[0], extent[1]);\n        },\n        /**\n         * Get interval\n         */\n        getInterval: function () {\n            return this._interval;\n        },\n\n        /**\n         * Set interval\n         */\n        setInterval: function (interval) {\n            this._interval = interval;\n            // Dropped auto calculated niceExtent and use user setted extent\n            // We assume user wan't to set both interval, min, max to get a better result\n            this._niceExtent = this._extent.slice();\n\n            this._intervalPrecision = helper.getIntervalPrecision(interval);\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getTicks: function () {\n            return helper.intervalScaleGetTicks(\n                this._interval, this._extent, this._niceExtent, this._intervalPrecision\n            );\n        },\n\n        /**\n         * @return {Array.<string>}\n         */\n        getTicksLabels: function () {\n            var labels = [];\n            var ticks = this.getTicks();\n            for (var i = 0; i < ticks.length; i++) {\n                labels.push(this.getLabel(ticks[i]));\n            }\n            return labels;\n        },\n\n        /**\n         * @param {number} data\n         * @param {Object} [opt]\n         * @param {number|string} [opt.precision] If 'auto', use nice presision.\n         * @param {boolean} [opt.pad] returns 1.50 but not 1.5 if precision is 2.\n         * @return {string}\n         */\n        getLabel: function (data, opt) {\n            if (data == null) {\n                return '';\n            }\n\n            var precision = opt && opt.precision;\n\n            if (precision == null) {\n                precision = numberUtil.getPrecisionSafe(data) || 0;\n            }\n            else if (precision === 'auto') {\n                // Should be more precise then tick.\n                precision = this._intervalPrecision;\n            }\n\n            // (1) If `precision` is set, 12.005 should be display as '12.00500'.\n            // (2) Use roundNumber (toFixed) to avoid scientific notation like '3.5e-7'.\n            data = roundNumber(data, precision, true);\n\n            return formatUtil.addCommas(data);\n        },\n\n        /**\n         * Update interval and extent of intervals for nice ticks\n         *\n         * @param {number} [splitNumber = 5] Desired number of ticks\n         * @param {number} [minInterval]\n         */\n        niceTicks: function (splitNumber, minInterval) {\n            splitNumber = splitNumber || 5;\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            if (!isFinite(span)) {\n                return;\n            }\n            // User may set axis min 0 and data are all negative\n            // FIXME If it needs to reverse ?\n            if (span < 0) {\n                span = -span;\n                extent.reverse();\n            }\n\n            var result = helper.intervalScaleNiceTicks(extent, splitNumber, minInterval);\n\n            this._intervalPrecision = result.intervalPrecision;\n            this._interval = result.interval;\n            this._niceExtent = result.niceTickExtent;\n        },\n\n        /**\n         * Nice extent.\n         * @param {Object} opt\n         * @param {number} [opt.splitNumber = 5] Given approx tick number\n         * @param {boolean} [opt.fixMin=false]\n         * @param {boolean} [opt.fixMax=false]\n         * @param {boolean} [opt.minInterval=false]\n         */\n        niceExtent: function (opt) {\n            var extent = this._extent;\n            // If extent start and end are same, expand them\n            if (extent[0] === extent[1]) {\n                if (extent[0] !== 0) {\n                    // Expand extent\n                    var expandSize = extent[0];\n                    // In the fowllowing case\n                    //      Axis has been fixed max 100\n                    //      Plus data are all 100 and axis extent are [100, 100].\n                    // Extend to the both side will cause expanded max is larger than fixed max.\n                    // So only expand to the smaller side.\n                    if (!opt.fixMax) {\n                        extent[1] += expandSize / 2;\n                        extent[0] -= expandSize / 2;\n                    }\n                    else {\n                        extent[0] -= expandSize / 2;\n                    }\n                }\n                else {\n                    extent[1] = 1;\n                }\n            }\n            var span = extent[1] - extent[0];\n            // If there are no data and extent are [Infinity, -Infinity]\n            if (!isFinite(span)) {\n                extent[0] = 0;\n                extent[1] = 1;\n            }\n\n            this.niceTicks(opt.splitNumber, opt.minInterval);\n\n            // var extent = this._extent;\n            var interval = this._interval;\n\n            if (!opt.fixMin) {\n                extent[0] = roundNumber(Math.floor(extent[0] / interval) * interval);\n            }\n            if (!opt.fixMax) {\n                extent[1] = roundNumber(Math.ceil(extent[1] / interval) * interval);\n            }\n        }\n    });\n\n    /**\n     * @return {module:echarts/scale/Time}\n     */\n    IntervalScale.create = function () {\n        return new IntervalScale();\n    };\n\n    module.exports = IntervalScale;\n\n\n\n/***/ }),\n/* 501 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(453);\n    var clazz = __webpack_require__(467);\n\n    var parseClassType = clazz.parseClassType;\n\n    var base = 0;\n\n    var componentUtil = {};\n\n    var DELIMITER = '_';\n\n    /**\n     * @public\n     * @param {string} type\n     * @return {string}\n     */\n    componentUtil.getUID = function (type) {\n        // Considering the case of crossing js context,\n        // use Math.random to make id as unique as possible.\n        return [(type || ''), base++, Math.random()].join(DELIMITER);\n    };\n\n    /**\n     * @inner\n     */\n    componentUtil.enableSubTypeDefaulter = function (entity) {\n\n        var subTypeDefaulters = {};\n\n        entity.registerSubTypeDefaulter = function (componentType, defaulter) {\n            componentType = parseClassType(componentType);\n            subTypeDefaulters[componentType.main] = defaulter;\n        };\n\n        entity.determineSubType = function (componentType, option) {\n            var type = option.type;\n            if (!type) {\n                var componentTypeMain = parseClassType(componentType).main;\n                if (entity.hasSubTypes(componentType) && subTypeDefaulters[componentTypeMain]) {\n                    type = subTypeDefaulters[componentTypeMain](option);\n                }\n            }\n            return type;\n        };\n\n        return entity;\n    };\n\n    /**\n     * Topological travel on Activity Network (Activity On Vertices).\n     * Dependencies is defined in Model.prototype.dependencies, like ['xAxis', 'yAxis'].\n     *\n     * If 'xAxis' or 'yAxis' is absent in componentTypeList, just ignore it in topology.\n     *\n     * If there is circle dependencey, Error will be thrown.\n     *\n     */\n    componentUtil.enableTopologicalTravel = function (entity, dependencyGetter) {\n\n        /**\n         * @public\n         * @param {Array.<string>} targetNameList Target Component type list.\n         *                                           Can be ['aa', 'bb', 'aa.xx']\n         * @param {Array.<string>} fullNameList By which we can build dependency graph.\n         * @param {Function} callback Params: componentType, dependencies.\n         * @param {Object} context Scope of callback.\n         */\n        entity.topologicalTravel = function (targetNameList, fullNameList, callback, context) {\n            if (!targetNameList.length) {\n                return;\n            }\n\n            var result = makeDepndencyGraph(fullNameList);\n            var graph = result.graph;\n            var stack = result.noEntryList;\n\n            var targetNameSet = {};\n            zrUtil.each(targetNameList, function (name) {\n                targetNameSet[name] = true;\n            });\n\n            while (stack.length) {\n                var currComponentType = stack.pop();\n                var currVertex = graph[currComponentType];\n                var isInTargetNameSet = !!targetNameSet[currComponentType];\n                if (isInTargetNameSet) {\n                    callback.call(context, currComponentType, currVertex.originalDeps.slice());\n                    delete targetNameSet[currComponentType];\n                }\n                zrUtil.each(\n                    currVertex.successor,\n                    isInTargetNameSet ? removeEdgeAndAdd : removeEdge\n                );\n            }\n\n            zrUtil.each(targetNameSet, function () {\n                throw new Error('Circle dependency may exists');\n            });\n\n            function removeEdge(succComponentType) {\n                graph[succComponentType].entryCount--;\n                if (graph[succComponentType].entryCount === 0) {\n                    stack.push(succComponentType);\n                }\n            }\n\n            // Consider this case: legend depends on series, and we call\n            // chart.setOption({series: [...]}), where only series is in option.\n            // If we do not have 'removeEdgeAndAdd', legendModel.mergeOption will\n            // not be called, but only sereis.mergeOption is called. Thus legend\n            // have no chance to update its local record about series (like which\n            // name of series is available in legend).\n            function removeEdgeAndAdd(succComponentType) {\n                targetNameSet[succComponentType] = true;\n                removeEdge(succComponentType);\n            }\n        };\n\n        /**\n         * DepndencyGraph: {Object}\n         * key: conponentType,\n         * value: {\n         *     successor: [conponentTypes...],\n         *     originalDeps: [conponentTypes...],\n         *     entryCount: {number}\n         * }\n         */\n        function makeDepndencyGraph(fullNameList) {\n            var graph = {};\n            var noEntryList = [];\n\n            zrUtil.each(fullNameList, function (name) {\n\n                var thisItem = createDependencyGraphItem(graph, name);\n                var originalDeps = thisItem.originalDeps = dependencyGetter(name);\n\n                var availableDeps = getAvailableDependencies(originalDeps, fullNameList);\n                thisItem.entryCount = availableDeps.length;\n                if (thisItem.entryCount === 0) {\n                    noEntryList.push(name);\n                }\n\n                zrUtil.each(availableDeps, function (dependentName) {\n                    if (zrUtil.indexOf(thisItem.predecessor, dependentName) < 0) {\n                        thisItem.predecessor.push(dependentName);\n                    }\n                    var thatItem = createDependencyGraphItem(graph, dependentName);\n                    if (zrUtil.indexOf(thatItem.successor, dependentName) < 0) {\n                        thatItem.successor.push(name);\n                    }\n                });\n            });\n\n            return {graph: graph, noEntryList: noEntryList};\n        }\n\n        function createDependencyGraphItem(graph, name) {\n            if (!graph[name]) {\n                graph[name] = {predecessor: [], successor: []};\n            }\n            return graph[name];\n        }\n\n        function getAvailableDependencies(originalDeps, fullNameList) {\n            var availableDeps = [];\n            zrUtil.each(originalDeps, function (dep) {\n                zrUtil.indexOf(fullNameList, dep) >= 0 && availableDeps.push(dep);\n            });\n            return availableDeps;\n        }\n    };\n\n    module.exports = componentUtil;\n\n\n/***/ }),\n/* 502 */,\n/* 503 */,\n/* 504 */,\n/* 505 */\n/***/ (function(module, exports) {\n\n// https://github.com/mziccard/node-timsort\n\n    var DEFAULT_MIN_MERGE = 32;\n\n    var DEFAULT_MIN_GALLOPING = 7;\n\n    var DEFAULT_TMP_STORAGE_LENGTH = 256;\n\n    function minRunLength(n) {\n        var r = 0;\n\n        while (n >= DEFAULT_MIN_MERGE) {\n            r |= n & 1;\n            n >>= 1;\n        }\n\n        return n + r;\n    }\n\n    function makeAscendingRun(array, lo, hi, compare) {\n        var runHi = lo + 1;\n\n        if (runHi === hi) {\n            return 1;\n        }\n\n        if (compare(array[runHi++], array[lo]) < 0) {\n            while (runHi < hi && compare(array[runHi], array[runHi - 1]) < 0) {\n                runHi++;\n            }\n\n            reverseRun(array, lo, runHi);\n        }\n        else {\n            while (runHi < hi && compare(array[runHi], array[runHi - 1]) >= 0) {\n                runHi++;\n            }\n        }\n\n        return runHi - lo;\n    }\n\n    function reverseRun(array, lo, hi) {\n        hi--;\n\n        while (lo < hi) {\n            var t = array[lo];\n            array[lo++] = array[hi];\n            array[hi--] = t;\n        }\n    }\n\n    function binaryInsertionSort(array, lo, hi, start, compare) {\n        if (start === lo) {\n            start++;\n        }\n\n        for (; start < hi; start++) {\n            var pivot = array[start];\n\n            var left = lo;\n            var right = start;\n            var mid;\n\n            while (left < right) {\n                mid = left + right >>> 1;\n\n                if (compare(pivot, array[mid]) < 0) {\n                    right = mid;\n                }\n                else {\n                    left = mid + 1;\n                }\n            }\n\n            var n = start - left;\n\n            switch (n) {\n                case 3:\n                    array[left + 3] = array[left + 2];\n\n                case 2:\n                    array[left + 2] = array[left + 1];\n\n                case 1:\n                    array[left + 1] = array[left];\n                    break;\n                default:\n                    while (n > 0) {\n                        array[left + n] = array[left + n - 1];\n                        n--;\n                    }\n            }\n\n            array[left] = pivot;\n        }\n    }\n\n    function gallopLeft(value, array, start, length, hint, compare) {\n        var lastOffset = 0;\n        var maxOffset = 0;\n        var offset = 1;\n\n        if (compare(value, array[start + hint]) > 0) {\n            maxOffset = length - hint;\n\n            while (offset < maxOffset && compare(value, array[start + hint + offset]) > 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            lastOffset += hint;\n            offset += hint;\n        }\n        else {\n            maxOffset = hint + 1;\n            while (offset < maxOffset && compare(value, array[start + hint - offset]) <= 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            var tmp = lastOffset;\n            lastOffset = hint - offset;\n            offset = hint - tmp;\n        }\n\n        lastOffset++;\n        while (lastOffset < offset) {\n            var m = lastOffset + (offset - lastOffset >>> 1);\n\n            if (compare(value, array[start + m]) > 0) {\n                lastOffset = m + 1;\n            }\n            else {\n                offset = m;\n            }\n        }\n        return offset;\n    }\n\n    function gallopRight(value, array, start, length, hint, compare) {\n        var lastOffset = 0;\n        var maxOffset = 0;\n        var offset = 1;\n\n        if (compare(value, array[start + hint]) < 0) {\n            maxOffset = hint + 1;\n\n            while (offset < maxOffset && compare(value, array[start + hint - offset]) < 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            var tmp = lastOffset;\n            lastOffset = hint - offset;\n            offset = hint - tmp;\n        }\n        else {\n            maxOffset = length - hint;\n\n            while (offset < maxOffset && compare(value, array[start + hint + offset]) >= 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            lastOffset += hint;\n            offset += hint;\n        }\n\n        lastOffset++;\n\n        while (lastOffset < offset) {\n            var m = lastOffset + (offset - lastOffset >>> 1);\n\n            if (compare(value, array[start + m]) < 0) {\n                offset = m;\n            }\n            else {\n                lastOffset = m + 1;\n            }\n        }\n\n        return offset;\n    }\n\n    function TimSort(array, compare) {\n        var minGallop = DEFAULT_MIN_GALLOPING;\n        var length = 0;\n        var tmpStorageLength = DEFAULT_TMP_STORAGE_LENGTH;\n        var stackLength = 0;\n        var runStart;\n        var runLength;\n        var stackSize = 0;\n\n        length = array.length;\n\n        if (length < 2 * DEFAULT_TMP_STORAGE_LENGTH) {\n            tmpStorageLength = length >>> 1;\n        }\n\n        var tmp = [];\n\n        stackLength = length < 120 ? 5 : length < 1542 ? 10 : length < 119151 ? 19 : 40;\n\n        runStart = [];\n        runLength = [];\n\n        function pushRun(_runStart, _runLength) {\n            runStart[stackSize] = _runStart;\n            runLength[stackSize] = _runLength;\n            stackSize += 1;\n        }\n\n        function mergeRuns() {\n            while (stackSize > 1) {\n                var n = stackSize - 2;\n\n                if (n >= 1 && runLength[n - 1] <= runLength[n] + runLength[n + 1] || n >= 2 && runLength[n - 2] <= runLength[n] + runLength[n - 1]) {\n                    if (runLength[n - 1] < runLength[n + 1]) {\n                        n--;\n                    }\n                }\n                else if (runLength[n] > runLength[n + 1]) {\n                    break;\n                }\n                mergeAt(n);\n            }\n        }\n\n        function forceMergeRuns() {\n            while (stackSize > 1) {\n                var n = stackSize - 2;\n\n                if (n > 0 && runLength[n - 1] < runLength[n + 1]) {\n                    n--;\n                }\n\n                mergeAt(n);\n            }\n        }\n\n        function mergeAt(i) {\n            var start1 = runStart[i];\n            var length1 = runLength[i];\n            var start2 = runStart[i + 1];\n            var length2 = runLength[i + 1];\n\n            runLength[i] = length1 + length2;\n\n            if (i === stackSize - 3) {\n                runStart[i + 1] = runStart[i + 2];\n                runLength[i + 1] = runLength[i + 2];\n            }\n\n            stackSize--;\n\n            var k = gallopRight(array[start2], array, start1, length1, 0, compare);\n            start1 += k;\n            length1 -= k;\n\n            if (length1 === 0) {\n                return;\n            }\n\n            length2 = gallopLeft(array[start1 + length1 - 1], array, start2, length2, length2 - 1, compare);\n\n            if (length2 === 0) {\n                return;\n            }\n\n            if (length1 <= length2) {\n                mergeLow(start1, length1, start2, length2);\n            }\n            else {\n                mergeHigh(start1, length1, start2, length2);\n            }\n        }\n\n        function mergeLow(start1, length1, start2, length2) {\n            var i = 0;\n\n            for (i = 0; i < length1; i++) {\n                tmp[i] = array[start1 + i];\n            }\n\n            var cursor1 = 0;\n            var cursor2 = start2;\n            var dest = start1;\n\n            array[dest++] = array[cursor2++];\n\n            if (--length2 === 0) {\n                for (i = 0; i < length1; i++) {\n                    array[dest + i] = tmp[cursor1 + i];\n                }\n                return;\n            }\n\n            if (length1 === 1) {\n                for (i = 0; i < length2; i++) {\n                    array[dest + i] = array[cursor2 + i];\n                }\n                array[dest + length2] = tmp[cursor1];\n                return;\n            }\n\n            var _minGallop = minGallop;\n            var count1, count2, exit;\n\n            while (1) {\n                count1 = 0;\n                count2 = 0;\n                exit = false;\n\n                do {\n                    if (compare(array[cursor2], tmp[cursor1]) < 0) {\n                        array[dest++] = array[cursor2++];\n                        count2++;\n                        count1 = 0;\n\n                        if (--length2 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                    else {\n                        array[dest++] = tmp[cursor1++];\n                        count1++;\n                        count2 = 0;\n                        if (--length1 === 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                } while ((count1 | count2) < _minGallop);\n\n                if (exit) {\n                    break;\n                }\n\n                do {\n                    count1 = gallopRight(array[cursor2], tmp, cursor1, length1, 0, compare);\n\n                    if (count1 !== 0) {\n                        for (i = 0; i < count1; i++) {\n                            array[dest + i] = tmp[cursor1 + i];\n                        }\n\n                        dest += count1;\n                        cursor1 += count1;\n                        length1 -= count1;\n                        if (length1 <= 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n\n                    array[dest++] = array[cursor2++];\n\n                    if (--length2 === 0) {\n                        exit = true;\n                        break;\n                    }\n\n                    count2 = gallopLeft(tmp[cursor1], array, cursor2, length2, 0, compare);\n\n                    if (count2 !== 0) {\n                        for (i = 0; i < count2; i++) {\n                            array[dest + i] = array[cursor2 + i];\n                        }\n\n                        dest += count2;\n                        cursor2 += count2;\n                        length2 -= count2;\n\n                        if (length2 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                    array[dest++] = tmp[cursor1++];\n\n                    if (--length1 === 1) {\n                        exit = true;\n                        break;\n                    }\n\n                    _minGallop--;\n                } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n                if (exit) {\n                    break;\n                }\n\n                if (_minGallop < 0) {\n                    _minGallop = 0;\n                }\n\n                _minGallop += 2;\n            }\n\n            minGallop = _minGallop;\n\n            minGallop < 1 && (minGallop = 1);\n\n            if (length1 === 1) {\n                for (i = 0; i < length2; i++) {\n                    array[dest + i] = array[cursor2 + i];\n                }\n                array[dest + length2] = tmp[cursor1];\n            }\n            else if (length1 === 0) {\n                throw new Error();\n                // throw new Error('mergeLow preconditions were not respected');\n            }\n            else {\n                for (i = 0; i < length1; i++) {\n                    array[dest + i] = tmp[cursor1 + i];\n                }\n            }\n        }\n\n        function mergeHigh (start1, length1, start2, length2) {\n            var i = 0;\n\n            for (i = 0; i < length2; i++) {\n                tmp[i] = array[start2 + i];\n            }\n\n            var cursor1 = start1 + length1 - 1;\n            var cursor2 = length2 - 1;\n            var dest = start2 + length2 - 1;\n            var customCursor = 0;\n            var customDest = 0;\n\n            array[dest--] = array[cursor1--];\n\n            if (--length1 === 0) {\n                customCursor = dest - (length2 - 1);\n\n                for (i = 0; i < length2; i++) {\n                    array[customCursor + i] = tmp[i];\n                }\n\n                return;\n            }\n\n            if (length2 === 1) {\n                dest -= length1;\n                cursor1 -= length1;\n                customDest = dest + 1;\n                customCursor = cursor1 + 1;\n\n                for (i = length1 - 1; i >= 0; i--) {\n                    array[customDest + i] = array[customCursor + i];\n                }\n\n                array[dest] = tmp[cursor2];\n                return;\n            }\n\n            var _minGallop = minGallop;\n\n            while (true) {\n                var count1 = 0;\n                var count2 = 0;\n                var exit = false;\n\n                do {\n                    if (compare(tmp[cursor2], array[cursor1]) < 0) {\n                        array[dest--] = array[cursor1--];\n                        count1++;\n                        count2 = 0;\n                        if (--length1 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                    else {\n                        array[dest--] = tmp[cursor2--];\n                        count2++;\n                        count1 = 0;\n                        if (--length2 === 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                } while ((count1 | count2) < _minGallop);\n\n                if (exit) {\n                    break;\n                }\n\n                do {\n                    count1 = length1 - gallopRight(tmp[cursor2], array, start1, length1, length1 - 1, compare);\n\n                    if (count1 !== 0) {\n                        dest -= count1;\n                        cursor1 -= count1;\n                        length1 -= count1;\n                        customDest = dest + 1;\n                        customCursor = cursor1 + 1;\n\n                        for (i = count1 - 1; i >= 0; i--) {\n                            array[customDest + i] = array[customCursor + i];\n                        }\n\n                        if (length1 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n\n                    array[dest--] = tmp[cursor2--];\n\n                    if (--length2 === 1) {\n                        exit = true;\n                        break;\n                    }\n\n                    count2 = length2 - gallopLeft(array[cursor1], tmp, 0, length2, length2 - 1, compare);\n\n                    if (count2 !== 0) {\n                        dest -= count2;\n                        cursor2 -= count2;\n                        length2 -= count2;\n                        customDest = dest + 1;\n                        customCursor = cursor2 + 1;\n\n                        for (i = 0; i < count2; i++) {\n                            array[customDest + i] = tmp[customCursor + i];\n                        }\n\n                        if (length2 <= 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n\n                    array[dest--] = array[cursor1--];\n\n                    if (--length1 === 0) {\n                        exit = true;\n                        break;\n                    }\n\n                    _minGallop--;\n                } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n                if (exit) {\n                    break;\n                }\n\n                if (_minGallop < 0) {\n                    _minGallop = 0;\n                }\n\n                _minGallop += 2;\n            }\n\n            minGallop = _minGallop;\n\n            if (minGallop < 1) {\n                minGallop = 1;\n            }\n\n            if (length2 === 1) {\n                dest -= length1;\n                cursor1 -= length1;\n                customDest = dest + 1;\n                customCursor = cursor1 + 1;\n\n                for (i = length1 - 1; i >= 0; i--) {\n                    array[customDest + i] = array[customCursor + i];\n                }\n\n                array[dest] = tmp[cursor2];\n            }\n            else if (length2 === 0) {\n                throw new Error();\n                // throw new Error('mergeHigh preconditions were not respected');\n            }\n            else {\n                customCursor = dest - (length2 - 1);\n                for (i = 0; i < length2; i++) {\n                    array[customCursor + i] = tmp[i];\n                }\n            }\n        }\n\n        this.mergeRuns = mergeRuns;\n        this.forceMergeRuns = forceMergeRuns;\n        this.pushRun = pushRun;\n    }\n\n    function sort(array, compare, lo, hi) {\n        if (!lo) {\n            lo = 0;\n        }\n        if (!hi) {\n            hi = array.length;\n        }\n\n        var remaining = hi - lo;\n\n        if (remaining < 2) {\n            return;\n        }\n\n        var runLength = 0;\n\n        if (remaining < DEFAULT_MIN_MERGE) {\n            runLength = makeAscendingRun(array, lo, hi, compare);\n            binaryInsertionSort(array, lo, hi, lo + runLength, compare);\n            return;\n        }\n\n        var ts = new TimSort(array, compare);\n\n        var minRun = minRunLength(remaining);\n\n        do {\n            runLength = makeAscendingRun(array, lo, hi, compare);\n            if (runLength < minRun) {\n                var force = remaining;\n                if (force > minRun) {\n                    force = minRun;\n                }\n\n                binaryInsertionSort(array, lo, lo + force, lo + runLength, compare);\n                runLength = force;\n            }\n\n            ts.pushRun(lo, runLength);\n            ts.mergeRuns();\n\n            remaining -= runLength;\n            lo += runLength;\n        } while (remaining !== 0);\n\n        ts.forceMergeRuns();\n    }\n\n    module.exports = sort;\n\n\n/***/ }),\n/* 506 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 可绘制的图形基类\n * Base class of all displayable graphic objects\n * @module zrender/graphic/Displayable\n */\n\n\n\n    var zrUtil = __webpack_require__(453);\n\n    var Style = __webpack_require__(548);\n\n    var Element = __webpack_require__(539);\n    var RectText = __webpack_require__(671);\n    // var Stateful = require('./mixin/Stateful');\n\n    /**\n     * @alias module:zrender/graphic/Displayable\n     * @extends module:zrender/Element\n     * @extends module:zrender/graphic/mixin/RectText\n     */\n    function Displayable(opts) {\n\n        opts = opts || {};\n\n        Element.call(this, opts);\n\n        // Extend properties\n        for (var name in opts) {\n            if (\n                opts.hasOwnProperty(name) &&\n                name !== 'style'\n            ) {\n                this[name] = opts[name];\n            }\n        }\n\n        /**\n         * @type {module:zrender/graphic/Style}\n         */\n        this.style = new Style(opts.style);\n\n        this._rect = null;\n        // Shapes for cascade clipping.\n        this.__clipPaths = [];\n\n        // FIXME Stateful must be mixined after style is setted\n        // Stateful.call(this, opts);\n    }\n\n    Displayable.prototype = {\n\n        constructor: Displayable,\n\n        type: 'displayable',\n\n        /**\n         * Displayable 是否为脏，Painter 中会根据该标记判断是否需要是否需要重新绘制\n         * Dirty flag. From which painter will determine if this displayable object needs brush\n         * @name module:zrender/graphic/Displayable#__dirty\n         * @type {boolean}\n         */\n        __dirty: true,\n\n        /**\n         * 图形是否可见，为true时不绘制图形，但是仍能触发鼠标事件\n         * If ignore drawing of the displayable object. Mouse event will still be triggered\n         * @name module:/zrender/graphic/Displayable#invisible\n         * @type {boolean}\n         * @default false\n         */\n        invisible: false,\n\n        /**\n         * @name module:/zrender/graphic/Displayable#z\n         * @type {number}\n         * @default 0\n         */\n        z: 0,\n\n        /**\n         * @name module:/zrender/graphic/Displayable#z\n         * @type {number}\n         * @default 0\n         */\n        z2: 0,\n\n        /**\n         * z层level，决定绘画在哪层canvas中\n         * @name module:/zrender/graphic/Displayable#zlevel\n         * @type {number}\n         * @default 0\n         */\n        zlevel: 0,\n\n        /**\n         * 是否可拖拽\n         * @name module:/zrender/graphic/Displayable#draggable\n         * @type {boolean}\n         * @default false\n         */\n        draggable: false,\n\n        /**\n         * 是否正在拖拽\n         * @name module:/zrender/graphic/Displayable#draggable\n         * @type {boolean}\n         * @default false\n         */\n        dragging: false,\n\n        /**\n         * 是否相应鼠标事件\n         * @name module:/zrender/graphic/Displayable#silent\n         * @type {boolean}\n         * @default false\n         */\n        silent: false,\n\n        /**\n         * If enable culling\n         * @type {boolean}\n         * @default false\n         */\n        culling: false,\n\n        /**\n         * Mouse cursor when hovered\n         * @name module:/zrender/graphic/Displayable#cursor\n         * @type {string}\n         */\n        cursor: 'pointer',\n\n        /**\n         * If hover area is bounding rect\n         * @name module:/zrender/graphic/Displayable#rectHover\n         * @type {string}\n         */\n        rectHover: false,\n\n        /**\n         * Render the element progressively when the value >= 0,\n         * usefull for large data.\n         * @type {number}\n         */\n        progressive: -1,\n\n        beforeBrush: function (ctx) {},\n\n        afterBrush: function (ctx) {},\n\n        /**\n         * 图形绘制方法\n         * @param {Canvas2DRenderingContext} ctx\n         */\n        // Interface\n        brush: function (ctx, prevEl) {},\n\n        /**\n         * 获取最小包围盒\n         * @return {module:zrender/core/BoundingRect}\n         */\n        // Interface\n        getBoundingRect: function () {},\n\n        /**\n         * 判断坐标 x, y 是否在图形上\n         * If displayable element contain coord x, y\n         * @param  {number} x\n         * @param  {number} y\n         * @return {boolean}\n         */\n        contain: function (x, y) {\n            return this.rectContain(x, y);\n        },\n\n        /**\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        traverse: function (cb, context) {\n            cb.call(context, this);\n        },\n\n        /**\n         * 判断坐标 x, y 是否在图形的包围盒上\n         * If bounding rect of element contain coord x, y\n         * @param  {number} x\n         * @param  {number} y\n         * @return {boolean}\n         */\n        rectContain: function (x, y) {\n            var coord = this.transformCoordToLocal(x, y);\n            var rect = this.getBoundingRect();\n            return rect.contain(coord[0], coord[1]);\n        },\n\n        /**\n         * 标记图形元素为脏，并且在下一帧重绘\n         * Mark displayable element dirty and refresh next frame\n         */\n        dirty: function () {\n            this.__dirty = true;\n\n            this._rect = null;\n\n            this.__zr && this.__zr.refresh();\n        },\n\n        /**\n         * 图形是否会触发事件\n         * If displayable object binded any event\n         * @return {boolean}\n         */\n        // TODO, 通过 bind 绑定的事件\n        // isSilent: function () {\n        //     return !(\n        //         this.hoverable || this.draggable\n        //         || this.onmousemove || this.onmouseover || this.onmouseout\n        //         || this.onmousedown || this.onmouseup || this.onclick\n        //         || this.ondragenter || this.ondragover || this.ondragleave\n        //         || this.ondrop\n        //     );\n        // },\n        /**\n         * Alias for animate('style')\n         * @param {boolean} loop\n         */\n        animateStyle: function (loop) {\n            return this.animate('style', loop);\n        },\n\n        attrKV: function (key, value) {\n            if (key !== 'style') {\n                Element.prototype.attrKV.call(this, key, value);\n            }\n            else {\n                this.style.set(value);\n            }\n        },\n\n        /**\n         * @param {Object|string} key\n         * @param {*} value\n         */\n        setStyle: function (key, value) {\n            this.style.set(key, value);\n            this.dirty(false);\n            return this;\n        },\n\n        /**\n         * Use given style object\n         * @param  {Object} obj\n         */\n        useStyle: function (obj) {\n            this.style = new Style(obj);\n            this.dirty(false);\n            return this;\n        }\n    };\n\n    zrUtil.inherits(Displayable, Element);\n\n    zrUtil.mixin(Displayable, RectText);\n    // zrUtil.mixin(Displayable, Stateful);\n\n    module.exports = Displayable;\n\n\n/***/ }),\n/* 507 */\n/***/ (function(module, exports) {\n\n\n\n    /**\n     * @param {Array.<Object>} colorStops\n     */\n    var Gradient = function (colorStops) {\n\n        this.colorStops = colorStops || [];\n    };\n\n    Gradient.prototype = {\n\n        constructor: Gradient,\n\n        addColorStop: function (offset, color) {\n            this.colorStops.push({\n\n                offset: offset,\n\n                color: color\n            });\n        }\n    };\n\n    module.exports = Gradient;\n\n\n/***/ }),\n/* 508 */,\n/* 509 */,\n/* 510 */,\n/* 511 */,\n/* 512 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// Symbol factory\n\n\n    var graphic = __webpack_require__(454);\n    var BoundingRect = __webpack_require__(468);\n\n    /**\n     * Triangle shape\n     * @inner\n     */\n    var Triangle = graphic.extendShape({\n        type: 'triangle',\n        shape: {\n            cx: 0,\n            cy: 0,\n            width: 0,\n            height: 0\n        },\n        buildPath: function (path, shape) {\n            var cx = shape.cx;\n            var cy = shape.cy;\n            var width = shape.width / 2;\n            var height = shape.height / 2;\n            path.moveTo(cx, cy - height);\n            path.lineTo(cx + width, cy + height);\n            path.lineTo(cx - width, cy + height);\n            path.closePath();\n        }\n    });\n    /**\n     * Diamond shape\n     * @inner\n     */\n    var Diamond = graphic.extendShape({\n        type: 'diamond',\n        shape: {\n            cx: 0,\n            cy: 0,\n            width: 0,\n            height: 0\n        },\n        buildPath: function (path, shape) {\n            var cx = shape.cx;\n            var cy = shape.cy;\n            var width = shape.width / 2;\n            var height = shape.height / 2;\n            path.moveTo(cx, cy - height);\n            path.lineTo(cx + width, cy);\n            path.lineTo(cx, cy + height);\n            path.lineTo(cx - width, cy);\n            path.closePath();\n        }\n    });\n\n    /**\n     * Pin shape\n     * @inner\n     */\n    var Pin = graphic.extendShape({\n        type: 'pin',\n        shape: {\n            // x, y on the cusp\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (path, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var w = shape.width / 5 * 3;\n            // Height must be larger than width\n            var h = Math.max(w, shape.height);\n            var r = w / 2;\n\n            // Dist on y with tangent point and circle center\n            var dy = r * r / (h - r);\n            var cy = y - h + r + dy;\n            var angle = Math.asin(dy / r);\n            // Dist on x with tangent point and circle center\n            var dx = Math.cos(angle) * r;\n\n            var tanX = Math.sin(angle);\n            var tanY = Math.cos(angle);\n\n            path.arc(\n                x, cy, r,\n                Math.PI - angle,\n                Math.PI * 2 + angle\n            );\n\n            var cpLen = r * 0.6;\n            var cpLen2 = r * 0.7;\n            path.bezierCurveTo(\n                x + dx - tanX * cpLen, cy + dy + tanY * cpLen,\n                x, y - cpLen2,\n                x, y\n            );\n            path.bezierCurveTo(\n                x, y - cpLen2,\n                x - dx + tanX * cpLen, cy + dy + tanY * cpLen,\n                x - dx, cy + dy\n            );\n            path.closePath();\n        }\n    });\n\n    /**\n     * Arrow shape\n     * @inner\n     */\n    var Arrow = graphic.extendShape({\n\n        type: 'arrow',\n\n        shape: {\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var height = shape.height;\n            var width = shape.width;\n            var x = shape.x;\n            var y = shape.y;\n            var dx = width / 3 * 2;\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + dx, y + height);\n            ctx.lineTo(x, y + height / 4 * 3);\n            ctx.lineTo(x - dx, y + height);\n            ctx.lineTo(x, y);\n            ctx.closePath();\n        }\n    });\n\n    /**\n     * Map of path contructors\n     * @type {Object.<string, module:zrender/graphic/Path>}\n     */\n    var symbolCtors = {\n        line: graphic.Line,\n\n        rect: graphic.Rect,\n\n        roundRect: graphic.Rect,\n\n        square: graphic.Rect,\n\n        circle: graphic.Circle,\n\n        diamond: Diamond,\n\n        pin: Pin,\n\n        arrow: Arrow,\n\n        triangle: Triangle\n    };\n\n    var symbolShapeMakers = {\n\n        line: function (x, y, w, h, shape) {\n            // FIXME\n            shape.x1 = x;\n            shape.y1 = y + h / 2;\n            shape.x2 = x + w;\n            shape.y2 = y + h / 2;\n        },\n\n        rect: function (x, y, w, h, shape) {\n            shape.x = x;\n            shape.y = y;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        roundRect: function (x, y, w, h, shape) {\n            shape.x = x;\n            shape.y = y;\n            shape.width = w;\n            shape.height = h;\n            shape.r = Math.min(w, h) / 4;\n        },\n\n        square: function (x, y, w, h, shape) {\n            var size = Math.min(w, h);\n            shape.x = x;\n            shape.y = y;\n            shape.width = size;\n            shape.height = size;\n        },\n\n        circle: function (x, y, w, h, shape) {\n            // Put circle in the center of square\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.r = Math.min(w, h) / 2;\n        },\n\n        diamond: function (x, y, w, h, shape) {\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        pin: function (x, y, w, h, shape) {\n            shape.x = x + w / 2;\n            shape.y = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        arrow: function (x, y, w, h, shape) {\n            shape.x = x + w / 2;\n            shape.y = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        triangle: function (x, y, w, h, shape) {\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        }\n    };\n\n    var symbolBuildProxies = {};\n    for (var name in symbolCtors) {\n        if (symbolCtors.hasOwnProperty(name)) {\n            symbolBuildProxies[name] = new symbolCtors[name]();\n        }\n    }\n\n    var Symbol = graphic.extendShape({\n\n        type: 'symbol',\n\n        shape: {\n            symbolType: '',\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        beforeBrush: function () {\n            var style = this.style;\n            var shape = this.shape;\n            // FIXME\n            if (shape.symbolType === 'pin' && style.textPosition === 'inside') {\n                style.textPosition = ['50%', '40%'];\n                style.textAlign = 'center';\n                style.textVerticalAlign = 'middle';\n            }\n        },\n\n        buildPath: function (ctx, shape, inBundle) {\n            var symbolType = shape.symbolType;\n            var proxySymbol = symbolBuildProxies[symbolType];\n            if (shape.symbolType !== 'none') {\n                if (!proxySymbol) {\n                    // Default rect\n                    symbolType = 'rect';\n                    proxySymbol = symbolBuildProxies[symbolType];\n                }\n                symbolShapeMakers[symbolType](\n                    shape.x, shape.y, shape.width, shape.height, proxySymbol.shape\n                );\n                proxySymbol.buildPath(ctx, proxySymbol.shape, inBundle);\n            }\n        }\n    });\n\n    // Provide setColor helper method to avoid determine if set the fill or stroke outside\n    var symbolPathSetColor = function (color) {\n        if (this.type !== 'image') {\n            var symbolStyle = this.style;\n            var symbolShape = this.shape;\n            if (symbolShape && symbolShape.symbolType === 'line') {\n                symbolStyle.stroke = color;\n            }\n            else if (this.__isEmptyBrush) {\n                symbolStyle.stroke = color;\n                symbolStyle.fill = '#fff';\n            }\n            else {\n                // FIXME 判断图形默认是填充还是描边，使用 onlyStroke ?\n                symbolStyle.fill && (symbolStyle.fill = color);\n                symbolStyle.stroke && (symbolStyle.stroke = color);\n            }\n            this.dirty(false);\n        }\n    };\n\n    var symbolUtil = {\n        /**\n         * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n         * @param {string} symbolType\n         * @param {number} x\n         * @param {number} y\n         * @param {number} w\n         * @param {number} h\n         * @param {string} color\n         */\n        createSymbol: function (symbolType, x, y, w, h, color) {\n            // TODO Support image object, DynamicImage.\n\n            var isEmpty = symbolType.indexOf('empty') === 0;\n            if (isEmpty) {\n                symbolType = symbolType.substr(5, 1).toLowerCase() + symbolType.substr(6);\n            }\n            var symbolPath;\n\n            if (symbolType.indexOf('image://') === 0) {\n                symbolPath = new graphic.Image({\n                    style: {\n                        image: symbolType.slice(8),\n                        x: x,\n                        y: y,\n                        width: w,\n                        height: h\n                    }\n                });\n            }\n            else if (symbolType.indexOf('path://') === 0) {\n                symbolPath = graphic.makePath(symbolType.slice(7), {}, new BoundingRect(x, y, w, h));\n            }\n            else {\n                symbolPath = new Symbol({\n                    shape: {\n                        symbolType: symbolType,\n                        x: x,\n                        y: y,\n                        width: w,\n                        height: h\n                    }\n                });\n            }\n\n            symbolPath.__isEmptyBrush = isEmpty;\n\n            symbolPath.setColor = symbolPathSetColor;\n\n            symbolPath.setColor(color);\n\n            return symbolPath;\n        }\n    };\n\n    module.exports = symbolUtil;\n\n\n/***/ }),\n/* 513 */,\n/* 514 */,\n/* 515 */,\n/* 516 */,\n/* 517 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar ctx                = __webpack_require__(177)\n  , invoke             = __webpack_require__(571)\n  , html               = __webpack_require__(182)\n  , cel                = __webpack_require__(122)\n  , global             = __webpack_require__(29)\n  , process            = global.process\n  , setTask            = global.setImmediate\n  , clearTask          = global.clearImmediate\n  , MessageChannel     = global.MessageChannel\n  , counter            = 0\n  , queue              = {}\n  , ONREADYSTATECHANGE = 'onreadystatechange'\n  , defer, channel, port;\nvar run = function(){\n  var id = +this;\n  if(queue.hasOwnProperty(id)){\n    var fn = queue[id];\n    delete queue[id];\n    fn();\n  }\n};\nvar listener = function(event){\n  run.call(event.data);\n};\n// Node.js 0.9+ & IE10+ has setImmediate, otherwise:\nif(!setTask || !clearTask){\n  setTask = function setImmediate(fn){\n    var args = [], i = 1;\n    while(arguments.length > i)args.push(arguments[i++]);\n    queue[++counter] = function(){\n      invoke(typeof fn == 'function' ? fn : Function(fn), args);\n    };\n    defer(counter);\n    return counter;\n  };\n  clearTask = function clearImmediate(id){\n    delete queue[id];\n  };\n  // Node.js 0.8-\n  if(__webpack_require__(120)(process) == 'process'){\n    defer = function(id){\n      process.nextTick(ctx(run, id, 1));\n    };\n  // Browsers with MessageChannel, includes WebWorkers\n  } else if(MessageChannel){\n    channel = new MessageChannel;\n    port    = channel.port2;\n    channel.port1.onmessage = listener;\n    defer = ctx(port.postMessage, port, 1);\n  // Browsers with postMessage, skip WebWorkers\n  // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'\n  } else if(global.addEventListener && typeof postMessage == 'function' && !global.importScripts){\n    defer = function(id){\n      global.postMessage(id + '', '*');\n    };\n    global.addEventListener('message', listener, false);\n  // IE8-\n  } else if(ONREADYSTATECHANGE in cel('script')){\n    defer = function(id){\n      html.appendChild(cel('script'))[ONREADYSTATECHANGE] = function(){\n        html.removeChild(this);\n        run.call(id);\n      };\n    };\n  // Rest old browsers\n  } else {\n    defer = function(id){\n      setTimeout(ctx(run, id, 1), 0);\n    };\n  }\n}\nmodule.exports = {\n  set:   setTask,\n  clear: clearTask\n};\n\n/***/ }),\n/* 518 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module echarts/chart/helper/Symbol\n */\n\n\n    var zrUtil = __webpack_require__(453);\n    var symbolUtil = __webpack_require__(512);\n    var graphic = __webpack_require__(454);\n    var numberUtil = __webpack_require__(457);\n    var labelHelper = __webpack_require__(581);\n\n    function getSymbolSize(data, idx) {\n        var symbolSize = data.getItemVisual(idx, 'symbolSize');\n        return symbolSize instanceof Array\n            ? symbolSize.slice()\n            : [+symbolSize, +symbolSize];\n    }\n\n    function getScale(symbolSize) {\n        return [symbolSize[0] / 2, symbolSize[1] / 2];\n    }\n\n    /**\n     * @constructor\n     * @alias {module:echarts/chart/helper/Symbol}\n     * @param {module:echarts/data/List} data\n     * @param {number} idx\n     * @extends {module:zrender/graphic/Group}\n     */\n    function Symbol(data, idx, seriesScope) {\n        graphic.Group.call(this);\n\n        this.updateData(data, idx, seriesScope);\n    }\n\n    var symbolProto = Symbol.prototype;\n\n    function driftSymbol(dx, dy) {\n        this.parent.drift(dx, dy);\n    }\n\n    symbolProto._createSymbol = function (symbolType, data, idx, symbolSize) {\n        // Remove paths created before\n        this.removeAll();\n\n        var seriesModel = data.hostModel;\n        var color = data.getItemVisual(idx, 'color');\n\n        // var symbolPath = symbolUtil.createSymbol(\n        //     symbolType, -0.5, -0.5, 1, 1, color\n        // );\n        // If width/height are set too small (e.g., set to 1) on ios10\n        // and macOS Sierra, a circle stroke become a rect, no matter what\n        // the scale is set. So we set width/height as 2. See #4150.\n        var symbolPath = symbolUtil.createSymbol(\n            symbolType, -1, -1, 2, 2, color\n        );\n\n        symbolPath.attr({\n            z2: 100,\n            culling: true,\n            scale: [0, 0]\n        });\n        // Rewrite drift method\n        symbolPath.drift = driftSymbol;\n\n        graphic.initProps(symbolPath, {\n            scale: getScale(symbolSize)\n        }, seriesModel, idx);\n        this._symbolType = symbolType;\n\n        this.add(symbolPath);\n    };\n\n    /**\n     * Stop animation\n     * @param {boolean} toLastFrame\n     */\n    symbolProto.stopSymbolAnimation = function (toLastFrame) {\n        this.childAt(0).stopAnimation(toLastFrame);\n    };\n\n    /**\n     * Get symbol path element\n     */\n    symbolProto.getSymbolPath = function () {\n        return this.childAt(0);\n    };\n\n    /**\n     * Get scale(aka, current symbol size).\n     * Including the change caused by animation\n     */\n    symbolProto.getScale = function () {\n        return this.childAt(0).scale;\n    };\n\n    /**\n     * Highlight symbol\n     */\n    symbolProto.highlight = function () {\n        this.childAt(0).trigger('emphasis');\n    };\n\n    /**\n     * Downplay symbol\n     */\n    symbolProto.downplay = function () {\n        this.childAt(0).trigger('normal');\n    };\n\n    /**\n     * @param {number} zlevel\n     * @param {number} z\n     */\n    symbolProto.setZ = function (zlevel, z) {\n        var symbolPath = this.childAt(0);\n        symbolPath.zlevel = zlevel;\n        symbolPath.z = z;\n    };\n\n    symbolProto.setDraggable = function (draggable) {\n        var symbolPath = this.childAt(0);\n        symbolPath.draggable = draggable;\n        symbolPath.cursor = draggable ? 'move' : 'pointer';\n    };\n\n    /**\n     * Update symbol properties\n     * @param  {module:echarts/data/List} data\n     * @param  {number} idx\n     */\n    symbolProto.updateData = function (data, idx, seriesScope) {\n        this.silent = false;\n\n        var symbolType = data.getItemVisual(idx, 'symbol') || 'circle';\n        var seriesModel = data.hostModel;\n        var symbolSize = getSymbolSize(data, idx);\n\n        if (symbolType !== this._symbolType) {\n            this._createSymbol(symbolType, data, idx, symbolSize);\n        }\n        else {\n            var symbolPath = this.childAt(0);\n            symbolPath.silent = false;\n            graphic.updateProps(symbolPath, {\n                scale: getScale(symbolSize)\n            }, seriesModel, idx);\n        }\n        this._updateCommon(data, idx, symbolSize, seriesScope);\n        this._seriesModel = seriesModel;\n    };\n\n    // Update common properties\n    var normalStyleAccessPath = ['itemStyle', 'normal'];\n    var emphasisStyleAccessPath = ['itemStyle', 'emphasis'];\n    var normalLabelAccessPath = ['label', 'normal'];\n    var emphasisLabelAccessPath = ['label', 'emphasis'];\n\n    symbolProto._updateCommon = function (data, idx, symbolSize, seriesScope) {\n        var symbolPath = this.childAt(0);\n        var seriesModel = data.hostModel;\n        var color = data.getItemVisual(idx, 'color');\n\n        // Reset style\n        if (symbolPath.type !== 'image') {\n            symbolPath.useStyle({\n                strokeNoScale: true\n            });\n        }\n\n        seriesScope = seriesScope || null;\n\n        var itemStyle = seriesScope && seriesScope.itemStyle;\n        var hoverItemStyle = seriesScope && seriesScope.hoverItemStyle;\n        var symbolRotate = seriesScope && seriesScope.symbolRotate;\n        var symbolOffset = seriesScope && seriesScope.symbolOffset;\n        var labelModel = seriesScope && seriesScope.labelModel;\n        var hoverLabelModel = seriesScope && seriesScope.hoverLabelModel;\n        var hoverAnimation = seriesScope && seriesScope.hoverAnimation;\n        var cursorStyle = seriesScope && seriesScope.cursorStyle;\n\n        if (!seriesScope || data.hasItemOption) {\n            var itemModel = data.getItemModel(idx);\n\n            // Color must be excluded.\n            // Because symbol provide setColor individually to set fill and stroke\n            itemStyle = itemModel.getModel(normalStyleAccessPath).getItemStyle(['color']);\n            hoverItemStyle = itemModel.getModel(emphasisStyleAccessPath).getItemStyle();\n\n            symbolRotate = itemModel.getShallow('symbolRotate');\n            symbolOffset = itemModel.getShallow('symbolOffset');\n\n            labelModel = itemModel.getModel(normalLabelAccessPath);\n            hoverLabelModel = itemModel.getModel(emphasisLabelAccessPath);\n            hoverAnimation = itemModel.getShallow('hoverAnimation');\n            cursorStyle = itemModel.getShallow('cursor');\n        }\n        else {\n            hoverItemStyle = zrUtil.extend({}, hoverItemStyle);\n        }\n\n        var elStyle = symbolPath.style;\n\n        symbolPath.attr('rotation', (symbolRotate || 0) * Math.PI / 180 || 0);\n\n        if (symbolOffset) {\n            symbolPath.attr('position', [\n                numberUtil.parsePercent(symbolOffset[0], symbolSize[0]),\n                numberUtil.parsePercent(symbolOffset[1], symbolSize[1])\n            ]);\n        }\n\n        cursorStyle && symbolPath.attr('cursor', cursorStyle);\n\n        // PENDING setColor before setStyle!!!\n        symbolPath.setColor(color);\n\n        symbolPath.setStyle(itemStyle);\n\n        var opacity = data.getItemVisual(idx, 'opacity');\n        if (opacity != null) {\n            elStyle.opacity = opacity;\n        }\n\n        var valueDim = labelHelper.findLabelValueDim(data);\n        labelHelper.setTextToStyle(\n            data, idx, valueDim, elStyle, seriesModel, labelModel, color\n        );\n        labelHelper.setTextToStyle(\n            data, idx, valueDim, hoverItemStyle, seriesModel, hoverLabelModel, color\n        );\n\n        symbolPath.off('mouseover')\n            .off('mouseout')\n            .off('emphasis')\n            .off('normal');\n\n        symbolPath.hoverStyle = hoverItemStyle;\n\n        graphic.setHoverStyle(symbolPath);\n\n        var scale = getScale(symbolSize);\n\n        if (hoverAnimation && seriesModel.isAnimationEnabled()) {\n            var onEmphasis = function() {\n                var ratio = scale[1] / scale[0];\n                this.animateTo({\n                    scale: [\n                        Math.max(scale[0] * 1.1, scale[0] + 3),\n                        Math.max(scale[1] * 1.1, scale[1] + 3 * ratio)\n                    ]\n                }, 400, 'elasticOut');\n            };\n            var onNormal = function() {\n                this.animateTo({\n                    scale: scale\n                }, 400, 'elasticOut');\n            };\n            symbolPath.on('mouseover', onEmphasis)\n                .on('mouseout', onNormal)\n                .on('emphasis', onEmphasis)\n                .on('normal', onNormal);\n        }\n    };\n\n    symbolProto.fadeOut = function (cb) {\n        var symbolPath = this.childAt(0);\n        // Avoid mistaken hover when fading out\n        this.silent = symbolPath.silent = true;\n        // Not show text when animating\n        symbolPath.style.text = '';\n        graphic.updateProps(symbolPath, {\n            scale: [0, 0]\n        }, this._seriesModel, this.dataIndex, cb);\n    };\n\n    zrUtil.inherits(Symbol, graphic.Group);\n\n    module.exports = Symbol;\n\n\n/***/ }),\n/* 519 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var List = __webpack_require__(530);\n    var completeDimensions = __webpack_require__(531);\n    var zrUtil = __webpack_require__(453);\n    var modelUtil = __webpack_require__(456);\n    var CoordinateSystem = __webpack_require__(495);\n    var getDataItemValue = modelUtil.getDataItemValue;\n    var converDataValue = modelUtil.converDataValue;\n\n    function firstDataNotNull(data) {\n        var i = 0;\n        while (i < data.length && data[i] == null) {\n            i++;\n        }\n        return data[i];\n    }\n    function ifNeedCompleteOrdinalData(data) {\n        var sampleItem = firstDataNotNull(data);\n        return sampleItem != null\n            && !zrUtil.isArray(getDataItemValue(sampleItem));\n    }\n\n    /**\n     * Helper function to create a list from option data\n     */\n    function createListFromArray(data, seriesModel, ecModel) {\n        // If data is undefined\n        data = data || [];\n\n        if (__DEV__) {\n            if (!zrUtil.isArray(data)) {\n                throw new Error('Invalid data.');\n            }\n        }\n\n        var coordSysName = seriesModel.get('coordinateSystem');\n        var creator = creators[coordSysName];\n        var registeredCoordSys = CoordinateSystem.get(coordSysName);\n        var completeDimOpt = {\n            encodeDef: seriesModel.get('encode'),\n            dimsDef: seriesModel.get('dimensions')\n        };\n\n        // FIXME\n        var axesInfo = creator && creator(data, seriesModel, ecModel, completeDimOpt);\n        var dimensions = axesInfo && axesInfo.dimensions;\n        if (!dimensions) {\n            // Get dimensions from registered coordinate system\n            dimensions = (registeredCoordSys && (\n                registeredCoordSys.getDimensionsInfo\n                    ? registeredCoordSys.getDimensionsInfo()\n                    : registeredCoordSys.dimensions.slice()\n            )) || ['x', 'y'];\n            dimensions = completeDimensions(dimensions, data, completeDimOpt);\n        }\n\n        var categoryIndex = axesInfo ? axesInfo.categoryIndex : -1;\n\n        var list = new List(dimensions, seriesModel);\n\n        var nameList = createNameList(axesInfo, data);\n\n        var categories = {};\n        var dimValueGetter = (categoryIndex >= 0 && ifNeedCompleteOrdinalData(data))\n            ? function (itemOpt, dimName, dataIndex, dimIndex) {\n                // If any dataItem is like { value: 10 }\n                if (modelUtil.isDataItemOption(itemOpt)) {\n                    list.hasItemOption = true;\n                }\n\n                // Use dataIndex as ordinal value in categoryAxis\n                return dimIndex === categoryIndex\n                    ? dataIndex\n                    : converDataValue(getDataItemValue(itemOpt), dimensions[dimIndex]);\n            }\n            : function (itemOpt, dimName, dataIndex, dimIndex) {\n                var value = getDataItemValue(itemOpt);\n                var val = converDataValue(value && value[dimIndex], dimensions[dimIndex]);\n                // If any dataItem is like { value: 10 }\n                if (modelUtil.isDataItemOption(itemOpt)) {\n                    list.hasItemOption = true;\n                }\n\n                var categoryAxesModels = axesInfo && axesInfo.categoryAxesModels;\n                if (categoryAxesModels && categoryAxesModels[dimName]) {\n                    // If given value is a category string\n                    if (typeof val === 'string') {\n                        // Lazy get categories\n                        categories[dimName] = categories[dimName]\n                            || categoryAxesModels[dimName].getCategories();\n                        val = zrUtil.indexOf(categories[dimName], val);\n                        if (val < 0 && !isNaN(val)) {\n                            // In case some one write '1', '2' istead of 1, 2\n                            val = +val;\n                        }\n                    }\n                }\n                return val;\n            };\n\n        list.hasItemOption = false;\n        list.initData(data, nameList, dimValueGetter);\n\n        return list;\n    }\n\n    function isStackable(axisType) {\n        return axisType !== 'category' && axisType !== 'time';\n    }\n\n    function getDimTypeByAxis(axisType) {\n        return axisType === 'category'\n            ? 'ordinal'\n            : axisType === 'time'\n            ? 'time'\n            : 'float';\n    }\n\n    /**\n     * Creaters for each coord system.\n     */\n    var creators = {\n\n        cartesian2d: function (data, seriesModel, ecModel, completeDimOpt) {\n\n            var axesModels = zrUtil.map(['xAxis', 'yAxis'], function (name) {\n                return ecModel.queryComponents({\n                    mainType: name,\n                    index: seriesModel.get(name + 'Index'),\n                    id: seriesModel.get(name + 'Id')\n                })[0];\n            });\n            var xAxisModel = axesModels[0];\n            var yAxisModel = axesModels[1];\n\n            if (__DEV__) {\n                if (!xAxisModel) {\n                    throw new Error('xAxis \"' + zrUtil.retrieve(\n                        seriesModel.get('xAxisIndex'),\n                        seriesModel.get('xAxisId'),\n                        0\n                    ) + '\" not found');\n                }\n                if (!yAxisModel) {\n                    throw new Error('yAxis \"' + zrUtil.retrieve(\n                        seriesModel.get('xAxisIndex'),\n                        seriesModel.get('yAxisId'),\n                        0\n                    ) + '\" not found');\n                }\n            }\n\n            var xAxisType = xAxisModel.get('type');\n            var yAxisType = yAxisModel.get('type');\n\n            var dimensions = [\n                {\n                    name: 'x',\n                    type: getDimTypeByAxis(xAxisType),\n                    stackable: isStackable(xAxisType)\n                },\n                {\n                    name: 'y',\n                    // If two category axes\n                    type: getDimTypeByAxis(yAxisType),\n                    stackable: isStackable(yAxisType)\n                }\n            ];\n\n            var isXAxisCateogry = xAxisType === 'category';\n            var isYAxisCategory = yAxisType === 'category';\n\n            dimensions = completeDimensions(dimensions, data, completeDimOpt);\n\n            var categoryAxesModels = {};\n            if (isXAxisCateogry) {\n                categoryAxesModels.x = xAxisModel;\n            }\n            if (isYAxisCategory) {\n                categoryAxesModels.y = yAxisModel;\n            }\n            return {\n                dimensions: dimensions,\n                categoryIndex: isXAxisCateogry ? 0 : (isYAxisCategory ? 1 : -1),\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        singleAxis: function (data, seriesModel, ecModel, completeDimOpt) {\n\n            var singleAxisModel = ecModel.queryComponents({\n                mainType: 'singleAxis',\n                index: seriesModel.get('singleAxisIndex'),\n                id: seriesModel.get('singleAxisId')\n            })[0];\n\n            if (__DEV__) {\n                if (!singleAxisModel) {\n                    throw new Error('singleAxis should be specified.');\n                }\n            }\n\n            var singleAxisType = singleAxisModel.get('type');\n            var isCategory = singleAxisType === 'category';\n\n            var dimensions = [{\n                name: 'single',\n                type: getDimTypeByAxis(singleAxisType),\n                stackable: isStackable(singleAxisType)\n            }];\n\n            dimensions = completeDimensions(dimensions, data, completeDimOpt);\n\n            var categoryAxesModels = {};\n            if (isCategory) {\n                categoryAxesModels.single = singleAxisModel;\n            }\n\n            return {\n                dimensions: dimensions,\n                categoryIndex: isCategory ? 0 : -1,\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        polar: function (data, seriesModel, ecModel, completeDimOpt) {\n            var polarModel = ecModel.queryComponents({\n                mainType: 'polar',\n                index: seriesModel.get('polarIndex'),\n                id: seriesModel.get('polarId')\n            })[0];\n\n            var angleAxisModel = polarModel.findAxisModel('angleAxis');\n            var radiusAxisModel = polarModel.findAxisModel('radiusAxis');\n\n            if (__DEV__) {\n                if (!angleAxisModel) {\n                    throw new Error('angleAxis option not found');\n                }\n                if (!radiusAxisModel) {\n                    throw new Error('radiusAxis option not found');\n                }\n            }\n\n            var radiusAxisType = radiusAxisModel.get('type');\n            var angleAxisType = angleAxisModel.get('type');\n\n            var dimensions = [\n                {\n                    name: 'radius',\n                    type: getDimTypeByAxis(radiusAxisType),\n                    stackable: isStackable(radiusAxisType)\n                },\n                {\n                    name: 'angle',\n                    type: getDimTypeByAxis(angleAxisType),\n                    stackable: isStackable(angleAxisType)\n                }\n            ];\n            var isAngleAxisCateogry = angleAxisType === 'category';\n            var isRadiusAxisCateogry = radiusAxisType === 'category';\n\n            dimensions = completeDimensions(dimensions, data, completeDimOpt);\n\n            var categoryAxesModels = {};\n            if (isRadiusAxisCateogry) {\n                categoryAxesModels.radius = radiusAxisModel;\n            }\n            if (isAngleAxisCateogry) {\n                categoryAxesModels.angle = angleAxisModel;\n            }\n            return {\n                dimensions: dimensions,\n                categoryIndex: isAngleAxisCateogry ? 1 : (isRadiusAxisCateogry ? 0 : -1),\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        geo: function (data, seriesModel, ecModel, completeDimOpt) {\n            // TODO Region\n            // 多个散点图系列在同一个地区的时候\n            return {\n                dimensions: completeDimensions([\n                    {name: 'lng'},\n                    {name: 'lat'}\n                ], data, completeDimOpt)\n            };\n        }\n    };\n\n    function createNameList(result, data) {\n        var nameList = [];\n\n        var categoryDim = result && result.dimensions[result.categoryIndex];\n        var categoryAxisModel;\n        if (categoryDim) {\n            categoryAxisModel = result.categoryAxesModels[categoryDim.name];\n        }\n\n        if (categoryAxisModel) {\n            // FIXME Two category axis\n            var categories = categoryAxisModel.getCategories();\n            if (categories) {\n                var dataLen = data.length;\n                // Ordered data is given explicitly like\n                // [[3, 0.2], [1, 0.3], [2, 0.15]]\n                // or given scatter data,\n                // pick the category\n                if (zrUtil.isArray(data[0]) && data[0].length > 1) {\n                    nameList = [];\n                    for (var i = 0; i < dataLen; i++) {\n                        nameList[i] = categories[data[i][result.categoryIndex || 0]];\n                    }\n                }\n                else {\n                    nameList = categories.slice(0);\n                }\n            }\n        }\n\n        return nameList;\n    }\n\n    module.exports = createListFromArray;\n\n\n\n/***/ }),\n/* 520 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(453);\n    var formatUtil = __webpack_require__(461);\n    var graphic = __webpack_require__(454);\n    var Model = __webpack_require__(463);\n    var numberUtil = __webpack_require__(457);\n    var remRadian = numberUtil.remRadian;\n    var isRadianAroundZero = numberUtil.isRadianAroundZero;\n    var vec2 = __webpack_require__(458);\n    var matrix = __webpack_require__(475);\n    var v2ApplyTransform = vec2.applyTransform;\n    var retrieve = zrUtil.retrieve;\n\n    var PI = Math.PI;\n\n    function makeAxisEventDataBase(axisModel) {\n        var eventData = {\n            componentType: axisModel.mainType\n        };\n        eventData[axisModel.mainType + 'Index'] = axisModel.componentIndex;\n        return eventData;\n    }\n\n    /**\n     * A final axis is translated and rotated from a \"standard axis\".\n     * So opt.position and opt.rotation is required.\n     *\n     * A standard axis is and axis from [0, 0] to [0, axisExtent[1]],\n     * for example: (0, 0) ------------> (0, 50)\n     *\n     * nameDirection or tickDirection or labelDirection is 1 means tick\n     * or label is below the standard axis, whereas is -1 means above\n     * the standard axis. labelOffset means offset between label and axis,\n     * which is useful when 'onZero', where axisLabel is in the grid and\n     * label in outside grid.\n     *\n     * Tips: like always,\n     * positive rotation represents anticlockwise, and negative rotation\n     * represents clockwise.\n     * The direction of position coordinate is the same as the direction\n     * of screen coordinate.\n     *\n     * Do not need to consider axis 'inverse', which is auto processed by\n     * axis extent.\n     *\n     * @param {module:zrender/container/Group} group\n     * @param {Object} axisModel\n     * @param {Object} opt Standard axis parameters.\n     * @param {Array.<number>} opt.position [x, y]\n     * @param {number} opt.rotation by radian\n     * @param {number} [opt.nameDirection=1] 1 or -1 Used when nameLocation is 'middle'.\n     * @param {number} [opt.tickDirection=1] 1 or -1\n     * @param {number} [opt.labelDirection=1] 1 or -1\n     * @param {number} [opt.labelOffset=0] Usefull when onZero.\n     * @param {string} [opt.axisLabelShow] default get from axisModel.\n     * @param {string} [opt.axisName] default get from axisModel.\n     * @param {number} [opt.axisNameAvailableWidth]\n     * @param {number} [opt.labelRotate] by degree, default get from axisModel.\n     * @param {number} [opt.labelInterval] Default label interval when label\n     *                                     interval from model is null or 'auto'.\n     * @param {number} [opt.strokeContainThreshold] Default label interval when label\n     * @param {number} [opt.nameTruncateMaxWidth]\n     */\n    var AxisBuilder = function (axisModel, opt) {\n\n        /**\n         * @readOnly\n         */\n        this.opt = opt;\n\n        /**\n         * @readOnly\n         */\n        this.axisModel = axisModel;\n\n        // Default value\n        zrUtil.defaults(\n            opt,\n            {\n                labelOffset: 0,\n                nameDirection: 1,\n                tickDirection: 1,\n                labelDirection: 1,\n                silent: true\n            }\n        );\n\n        /**\n         * @readOnly\n         */\n        this.group = new graphic.Group();\n\n        // FIXME Not use a seperate text group?\n        var dumbGroup = new graphic.Group({\n            position: opt.position.slice(),\n            rotation: opt.rotation\n        });\n\n        // this.group.add(dumbGroup);\n        // this._dumbGroup = dumbGroup;\n\n        dumbGroup.updateTransform();\n        this._transform = dumbGroup.transform;\n\n        this._dumbGroup = dumbGroup;\n    };\n\n    AxisBuilder.prototype = {\n\n        constructor: AxisBuilder,\n\n        hasBuilder: function (name) {\n            return !!builders[name];\n        },\n\n        add: function (name) {\n            builders[name].call(this);\n        },\n\n        getGroup: function () {\n            return this.group;\n        }\n\n    };\n\n    var builders = {\n\n        /**\n         * @private\n         */\n        axisLine: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n\n            if (!axisModel.get('axisLine.show')) {\n                return;\n            }\n\n            var extent = this.axisModel.axis.getExtent();\n\n            var matrix = this._transform;\n            var pt1 = [extent[0], 0];\n            var pt2 = [extent[1], 0];\n            if (matrix) {\n                v2ApplyTransform(pt1, pt1, matrix);\n                v2ApplyTransform(pt2, pt2, matrix);\n            }\n\n            this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n\n                // Id for animation\n                anid: 'line',\n\n                shape: {\n                    x1: pt1[0],\n                    y1: pt1[1],\n                    x2: pt2[0],\n                    y2: pt2[1]\n                },\n                style: zrUtil.extend(\n                    {lineCap: 'round'},\n                    axisModel.getModel('axisLine.lineStyle').getLineStyle()\n                ),\n                strokeContainThreshold: opt.strokeContainThreshold || 5,\n                silent: true,\n                z2: 1\n            })));\n        },\n\n        /**\n         * @private\n         */\n        axisTick: function () {\n            var axisModel = this.axisModel;\n            var axis = axisModel.axis;\n\n            if (!axisModel.get('axisTick.show') || axis.scale.isBlank()) {\n                return;\n            }\n\n            var tickModel = axisModel.getModel('axisTick');\n            var opt = this.opt;\n\n            var lineStyleModel = tickModel.getModel('lineStyle');\n            var tickLen = tickModel.get('length');\n\n            var tickInterval = getInterval(tickModel, opt.labelInterval);\n            var ticksCoords = axis.getTicksCoords(tickModel.get('alignWithLabel'));\n            var ticks = axis.scale.getTicks();\n\n            var pt1 = [];\n            var pt2 = [];\n            var matrix = this._transform;\n\n            for (var i = 0; i < ticksCoords.length; i++) {\n                // Only ordinal scale support tick interval\n                if (ifIgnoreOnTick(axis, i, tickInterval)) {\n                     continue;\n                }\n\n                var tickCoord = ticksCoords[i];\n\n                pt1[0] = tickCoord;\n                pt1[1] = 0;\n                pt2[0] = tickCoord;\n                pt2[1] = opt.tickDirection * tickLen;\n\n                if (matrix) {\n                    v2ApplyTransform(pt1, pt1, matrix);\n                    v2ApplyTransform(pt2, pt2, matrix);\n                }\n                // Tick line, Not use group transform to have better line draw\n                this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n\n                    // Id for animation\n                    anid: 'tick_' + ticks[i],\n\n                    shape: {\n                        x1: pt1[0],\n                        y1: pt1[1],\n                        x2: pt2[0],\n                        y2: pt2[1]\n                    },\n                    style: zrUtil.defaults(\n                        lineStyleModel.getLineStyle(),\n                        {\n                            stroke: axisModel.get('axisLine.lineStyle.color')\n                        }\n                    ),\n                    z2: 2,\n                    silent: true\n                })));\n            }\n        },\n\n        /**\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/coord/cartesian/GridModel} gridModel\n         * @private\n         */\n        axisLabel: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n            var axis = axisModel.axis;\n            var show = retrieve(opt.axisLabelShow, axisModel.get('axisLabel.show'));\n\n            if (!show || axis.scale.isBlank()) {\n                return;\n            }\n\n            var labelModel = axisModel.getModel('axisLabel');\n            var textStyleModel = labelModel.getModel('textStyle');\n            var labelMargin = labelModel.get('margin');\n            var ticks = axis.scale.getTicks();\n            var labels = axisModel.getFormattedLabels();\n\n            // Special label rotate.\n            var labelRotation = (\n                retrieve(opt.labelRotate, labelModel.get('rotate')) || 0\n            ) * PI / 180;\n\n            var labelLayout = innerTextLayout(opt.rotation, labelRotation, opt.labelDirection);\n            var categoryData = axisModel.get('data');\n\n            var textEls = [];\n            var silent = isSilent(axisModel);\n            var triggerEvent = axisModel.get('triggerEvent');\n\n            zrUtil.each(ticks, function (tickVal, index) {\n                if (ifIgnoreOnTick(axis, index, opt.labelInterval)) {\n                     return;\n                }\n\n                var itemTextStyleModel = textStyleModel;\n                if (categoryData && categoryData[tickVal] && categoryData[tickVal].textStyle) {\n                    itemTextStyleModel = new Model(\n                        categoryData[tickVal].textStyle, textStyleModel, axisModel.ecModel\n                    );\n                }\n                var textColor = itemTextStyleModel.getTextColor()\n                    || axisModel.get('axisLine.lineStyle.color');\n\n                var tickCoord = axis.dataToCoord(tickVal);\n                var pos = [\n                    tickCoord,\n                    opt.labelOffset + opt.labelDirection * labelMargin\n                ];\n                var labelStr = axis.scale.getLabel(tickVal);\n\n                var textEl = new graphic.Text({\n\n                    // Id for animation\n                    anid: 'label_' + tickVal,\n\n                    style: {\n                        text: labels[index],\n                        textAlign: itemTextStyleModel.get('align', true) || labelLayout.textAlign,\n                        textVerticalAlign: itemTextStyleModel.get('baseline', true) || labelLayout.textVerticalAlign,\n                        textFont: itemTextStyleModel.getFont(),\n                        fill: typeof textColor === 'function'\n                            ? textColor(\n                                // (1) In category axis with data zoom, tick is not the original\n                                // index of axis.data. So tick should not be exposed to user\n                                // in category axis.\n                                // (2) Compatible with previous version, which always returns labelStr.\n                                // But in interval scale labelStr is like '223,445', which maked\n                                // user repalce ','. So we modify it to return original val but remain\n                                // it as 'string' to avoid error in replacing.\n                                axis.type === 'category' ? labelStr : axis.type === 'value' ? tickVal + '' : tickVal,\n                                index\n                            )\n                            : textColor\n                    },\n                    position: pos,\n                    rotation: labelLayout.rotation,\n                    silent: silent,\n                    z2: 10\n                });\n\n                // Pack data for mouse event\n                if (triggerEvent) {\n                    textEl.eventData = makeAxisEventDataBase(axisModel);\n                    textEl.eventData.targetType = 'axisLabel';\n                    textEl.eventData.value = labelStr;\n                }\n\n                // FIXME\n                this._dumbGroup.add(textEl);\n                textEl.updateTransform();\n\n                textEls.push(textEl);\n                this.group.add(textEl);\n\n                textEl.decomposeTransform();\n\n            }, this);\n\n            fixMinMaxLabelShow(axisModel, textEls);\n        },\n\n        /**\n         * @private\n         */\n        axisName: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n            var name = retrieve(opt.axisName, axisModel.get('name'));\n\n            if (!name) {\n                return;\n            }\n\n            var nameLocation = axisModel.get('nameLocation');\n            var nameDirection = opt.nameDirection;\n            var textStyleModel = axisModel.getModel('nameTextStyle');\n            var gap = axisModel.get('nameGap') || 0;\n\n            var extent = this.axisModel.axis.getExtent();\n            var gapSignal = extent[0] > extent[1] ? -1 : 1;\n            var pos = [\n                nameLocation === 'start'\n                    ? extent[0] - gapSignal * gap\n                    : nameLocation === 'end'\n                    ? extent[1] + gapSignal * gap\n                    : (extent[0] + extent[1]) / 2, // 'middle'\n                // Reuse labelOffset.\n                nameLocation === 'middle' ? opt.labelOffset + nameDirection * gap : 0\n            ];\n\n            var labelLayout;\n\n            var nameRotation = axisModel.get('nameRotate');\n            if (nameRotation != null) {\n                nameRotation = nameRotation * PI / 180; // To radian.\n            }\n\n            var axisNameAvailableWidth;\n\n            if (nameLocation === 'middle') {\n                labelLayout = innerTextLayout(\n                    opt.rotation,\n                    nameRotation != null ? nameRotation : opt.rotation, // Adapt to axis.\n                    nameDirection\n                );\n            }\n            else {\n                labelLayout = endTextLayout(\n                    opt, nameLocation, nameRotation || 0, extent\n                );\n\n                axisNameAvailableWidth = opt.axisNameAvailableWidth;\n                if (axisNameAvailableWidth != null) {\n                    axisNameAvailableWidth = Math.abs(\n                        axisNameAvailableWidth / Math.sin(labelLayout.rotation)\n                    );\n                    !isFinite(axisNameAvailableWidth) && (axisNameAvailableWidth = null);\n                }\n            }\n\n            var textFont = textStyleModel.getFont();\n\n            var truncateOpt = axisModel.get('nameTruncate', true) || {};\n            var ellipsis = truncateOpt.ellipsis;\n            var maxWidth = retrieve(\n                opt.nameTruncateMaxWidth, truncateOpt.maxWidth, axisNameAvailableWidth\n            );\n            var truncatedText = (ellipsis != null && maxWidth != null)\n                ? formatUtil.truncateText(\n                    name, maxWidth, textFont, ellipsis,\n                    {minChar: 2, placeholder: truncateOpt.placeholder}\n                )\n                : name;\n\n            var tooltipOpt = axisModel.get('tooltip', true);\n\n            var mainType = axisModel.mainType;\n            var formatterParams = {\n                componentType: mainType,\n                name: name,\n                $vars: ['name']\n            };\n            formatterParams[mainType + 'Index'] = axisModel.componentIndex;\n\n            var textEl = new graphic.Text({\n\n                // Id for animation\n                anid: 'name',\n\n                __fullText: name,\n                __truncatedText: truncatedText,\n\n                style: {\n                    text: truncatedText,\n                    textFont: textFont,\n                    fill: textStyleModel.getTextColor()\n                        || axisModel.get('axisLine.lineStyle.color'),\n                    textAlign: labelLayout.textAlign,\n                    textVerticalAlign: labelLayout.textVerticalAlign\n                },\n                position: pos,\n                rotation: labelLayout.rotation,\n                silent: isSilent(axisModel),\n                z2: 1,\n                tooltip: (tooltipOpt && tooltipOpt.show)\n                    ? zrUtil.extend({\n                        content: name,\n                        formatter: function () {\n                            return name;\n                        },\n                        formatterParams: formatterParams\n                    }, tooltipOpt)\n                    : null\n            });\n\n            if (axisModel.get('triggerEvent')) {\n                textEl.eventData = makeAxisEventDataBase(axisModel);\n                textEl.eventData.targetType = 'axisName';\n                textEl.eventData.name = name;\n            }\n\n            // FIXME\n            this._dumbGroup.add(textEl);\n            textEl.updateTransform();\n\n            this.group.add(textEl);\n\n            textEl.decomposeTransform();\n        }\n\n    };\n\n    /**\n     * @public\n     * @static\n     * @param {Object} opt\n     * @param {number} axisRotation in radian\n     * @param {number} textRotation in radian\n     * @param {number} direction\n     * @return {Object} {\n     *  rotation, // according to axis\n     *  textAlign,\n     *  textVerticalAlign\n     * }\n     */\n    var innerTextLayout = AxisBuilder.innerTextLayout = function (axisRotation, textRotation, direction) {\n        var rotationDiff = remRadian(textRotation - axisRotation);\n        var textAlign;\n        var textVerticalAlign;\n\n        if (isRadianAroundZero(rotationDiff)) { // Label is parallel with axis line.\n            textVerticalAlign = direction > 0 ? 'top' : 'bottom';\n            textAlign = 'center';\n        }\n        else if (isRadianAroundZero(rotationDiff - PI)) { // Label is inverse parallel with axis line.\n            textVerticalAlign = direction > 0 ? 'bottom' : 'top';\n            textAlign = 'center';\n        }\n        else {\n            textVerticalAlign = 'middle';\n\n            if (rotationDiff > 0 && rotationDiff < PI) {\n                textAlign = direction > 0 ? 'right' : 'left';\n            }\n            else {\n                textAlign = direction > 0 ? 'left' : 'right';\n            }\n        }\n\n        return {\n            rotation: rotationDiff,\n            textAlign: textAlign,\n            textVerticalAlign: textVerticalAlign\n        };\n    };\n\n    function endTextLayout(opt, textPosition, textRotate, extent) {\n        var rotationDiff = remRadian(textRotate - opt.rotation);\n        var textAlign;\n        var textVerticalAlign;\n        var inverse = extent[0] > extent[1];\n        var onLeft = (textPosition === 'start' && !inverse)\n            || (textPosition !== 'start' && inverse);\n\n        if (isRadianAroundZero(rotationDiff - PI / 2)) {\n            textVerticalAlign = onLeft ? 'bottom' : 'top';\n            textAlign = 'center';\n        }\n        else if (isRadianAroundZero(rotationDiff - PI * 1.5)) {\n            textVerticalAlign = onLeft ? 'top' : 'bottom';\n            textAlign = 'center';\n        }\n        else {\n            textVerticalAlign = 'middle';\n            if (rotationDiff < PI * 1.5 && rotationDiff > PI / 2) {\n                textAlign = onLeft ? 'left' : 'right';\n            }\n            else {\n                textAlign = onLeft ? 'right' : 'left';\n            }\n        }\n\n        return {\n            rotation: rotationDiff,\n            textAlign: textAlign,\n            textVerticalAlign: textVerticalAlign\n        };\n    }\n\n    function isSilent(axisModel) {\n        var tooltipOpt = axisModel.get('tooltip');\n        return axisModel.get('silent')\n            // Consider mouse cursor, add these restrictions.\n            || !(\n                axisModel.get('triggerEvent') || (tooltipOpt && tooltipOpt.show)\n            );\n    }\n\n    function fixMinMaxLabelShow(axisModel, textEls) {\n        // If min or max are user set, we need to check\n        // If the tick on min(max) are overlap on their neighbour tick\n        // If they are overlapped, we need to hide the min(max) tick label\n        var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n        var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n        var firstLabel = textEls[0];\n        var nextLabel = textEls[1];\n        var lastLabel = textEls[textEls.length - 1];\n        var prevLabel = textEls[textEls.length - 2];\n\n        if (showMinLabel === false) {\n            firstLabel.ignore = true;\n        }\n        else if (axisModel.getMin() != null && isTwoLabelOverlapped(firstLabel, nextLabel)) {\n            showMinLabel ? (nextLabel.ignore = true) : (firstLabel.ignore = true);\n        }\n\n        if (showMaxLabel === false) {\n            lastLabel.ignore = true;\n        }\n        else if (axisModel.getMax() != null && isTwoLabelOverlapped(prevLabel, lastLabel)) {\n            showMaxLabel ? (prevLabel.ignore = true) : (lastLabel.ignore = true);\n        }\n    }\n\n    function isTwoLabelOverlapped(current, next, labelLayout) {\n        // current and next has the same rotation.\n        var firstRect = current && current.getBoundingRect().clone();\n        var nextRect = next && next.getBoundingRect().clone();\n\n        if (!firstRect || !nextRect) {\n            return;\n        }\n\n        // When checking intersect of two rotated labels, we use mRotationBack\n        // to avoid that boundingRect is enlarge when using `boundingRect.applyTransform`.\n        var mRotationBack = matrix.identity([]);\n        matrix.rotate(mRotationBack, mRotationBack, -current.rotation);\n\n        firstRect.applyTransform(matrix.mul([], mRotationBack, current.getLocalTransform()));\n        nextRect.applyTransform(matrix.mul([], mRotationBack, next.getLocalTransform()));\n\n        return firstRect.intersect(nextRect);\n    }\n\n\n    /**\n     * @static\n     */\n    var ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick = function (axis, i, interval) {\n        var rawTick;\n        var scale = axis.scale;\n        return scale.type === 'ordinal'\n            && (\n                typeof interval === 'function'\n                    ? (\n                        rawTick = scale.getTicks()[i],\n                        !interval(rawTick, scale.getLabel(rawTick))\n                    )\n                    : i % (interval + 1)\n            );\n    };\n\n    /**\n     * @static\n     */\n    var getInterval = AxisBuilder.getInterval = function (model, labelInterval) {\n        var interval = model.get('interval');\n        if (interval == null || interval == 'auto') {\n            interval = labelInterval;\n        }\n        return interval;\n    };\n\n    module.exports = AxisBuilder;\n\n\n\n/***/ }),\n/* 521 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var axisPointerModelHelper = __webpack_require__(483);\n\n    /**\n     * Base class of AxisView.\n     */\n    var AxisView = __webpack_require__(455).extendComponentView({\n\n        type: 'axis',\n\n        /**\n         * @private\n         */\n        _axisPointer: null,\n\n        /**\n         * @protected\n         * @type {string}\n         */\n        axisPointerClass: null,\n\n        /**\n         * @override\n         */\n        render: function (axisModel, ecModel, api, payload) {\n            // FIXME\n            // This process should proformed after coordinate systems updated\n            // (axis scale updated), and should be performed each time update.\n            // So put it here temporarily, although it is not appropriate to\n            // put a model-writing procedure in `view`.\n            this.axisPointerClass && axisPointerModelHelper.fixValue(axisModel);\n\n            AxisView.superApply(this, 'render', arguments);\n\n            updateAxisPointer(this, axisModel, ecModel, api, payload, true);\n        },\n\n        /**\n         * Action handler.\n         * @public\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/model/Global} ecModel\n         * @param {module:echarts/ExtensionAPI} api\n         * @param {Object} payload\n         */\n        updateAxisPointer: function (axisModel, ecModel, api, payload, force) {\n            updateAxisPointer(this, axisModel, ecModel, api, payload, false);\n        },\n\n        /**\n         * @override\n         */\n        remove: function (ecModel, api) {\n            var axisPointer = this._axisPointer;\n            axisPointer && axisPointer.remove(api);\n            AxisView.superApply(this, 'remove', arguments);\n        },\n\n        /**\n         * @override\n         */\n        dispose: function (ecModel, api) {\n            disposeAxisPointer(this, api);\n            AxisView.superApply(this, 'dispose', arguments);\n        }\n\n    });\n\n    function updateAxisPointer(axisView, axisModel, ecModel, api, payload, forceRender) {\n        var Clazz = AxisView.getAxisPointerClass(axisView.axisPointerClass);\n        if (!Clazz) {\n            return;\n        }\n        var axisPointerModel = axisPointerModelHelper.getAxisPointerModel(axisModel);\n        axisPointerModel\n            ? (axisView._axisPointer || (axisView._axisPointer = new Clazz()))\n                .render(axisModel, axisPointerModel, api, forceRender)\n            : disposeAxisPointer(axisView, api);\n    }\n\n    function disposeAxisPointer(axisView, ecModel, api) {\n        var axisPointer = axisView._axisPointer;\n        axisPointer && axisPointer.dispose(ecModel, api);\n        axisView._axisPointer = null;\n    }\n\n    var axisPointerClazz = [];\n\n    AxisView.registerAxisPointerClass = function (type, clazz) {\n        if (__DEV__) {\n            if (axisPointerClazz[type]) {\n                throw new Error('axisPointer ' + type + ' exists');\n            }\n        }\n        axisPointerClazz[type] = clazz;\n    };\n\n    AxisView.getAxisPointerClass = function (type) {\n        return type && axisPointerClazz[type];\n    };\n\n    module.exports = AxisView;\n\n\n/***/ }),\n/* 522 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(453);\n\n    var helper = {};\n\n    /**\n     * @param {Object} opt {labelInside}\n     * @return {Object} {\n     *  position, rotation, labelDirection, labelOffset,\n     *  tickDirection, labelRotate, labelInterval, z2\n     * }\n     */\n    helper.layout = function (gridModel, axisModel, opt) {\n        opt = opt || {};\n        var grid = gridModel.coordinateSystem;\n        var axis = axisModel.axis;\n        var layout = {};\n\n        var rawAxisPosition = axis.position;\n        var axisPosition = axis.onZero ? 'onZero' : rawAxisPosition;\n        var axisDim = axis.dim;\n\n        // [left, right, top, bottom]\n        var rect = grid.getRect();\n        var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];\n\n        var axisOffset = axisModel.get('offset') || 0;\n\n        var posMap = {\n            x: { top: rectBound[2] - axisOffset, bottom: rectBound[3] + axisOffset },\n            y: { left: rectBound[0] - axisOffset, right: rectBound[1] + axisOffset }\n        };\n\n        posMap.x.onZero = Math.max(Math.min(getZero('y'), posMap.x.bottom), posMap.x.top);\n        posMap.y.onZero = Math.max(Math.min(getZero('x'), posMap.y.right), posMap.y.left);\n\n        function getZero(dim, val) {\n            var theAxis = grid.getAxis(dim);\n            return theAxis.toGlobalCoord(theAxis.dataToCoord(0));\n        }\n\n        // Axis position\n        layout.position = [\n            axisDim === 'y' ? posMap.y[axisPosition] : rectBound[0],\n            axisDim === 'x' ? posMap.x[axisPosition] : rectBound[3]\n        ];\n\n        // Axis rotation\n        layout.rotation = Math.PI / 2 * (axisDim === 'x' ? 0 : 1);\n\n        // Tick and label direction, x y is axisDim\n        var dirMap = {top: -1, bottom: 1, left: -1, right: 1};\n\n        layout.labelDirection = layout.tickDirection = layout.nameDirection = dirMap[rawAxisPosition];\n        layout.labelOffset = axis.onZero ? posMap[axisDim][rawAxisPosition] - posMap[axisDim].onZero : 0;\n\n        if (axisModel.get('axisTick.inside')) {\n            layout.tickDirection = -layout.tickDirection;\n        }\n        if (zrUtil.retrieve(opt.labelInside, axisModel.get('axisLabel.inside'))) {\n            layout.labelDirection = -layout.labelDirection;\n        }\n\n        // Special label rotation\n        var labelRotate = axisModel.get('axisLabel.rotate');\n        layout.labelRotate = axisPosition === 'top' ? -labelRotate : labelRotate;\n\n        // label interval when auto mode.\n        layout.labelInterval = axis.getLabelInterval();\n\n        // Over splitLine and splitArea\n        layout.z2 = 1;\n\n        return layout;\n    };\n\n    module.exports = helper;\n\n\n\n/***/ }),\n/* 523 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(453);\n    var modelUtil = __webpack_require__(456);\n\n    /**\n     * @param {Object} finder contains {seriesIndex, dataIndex, dataIndexInside}\n     * @param {module:echarts/model/Global} ecModel\n     * @return {Object} {point: [x, y], el: ...} point Will not be null.\n     */\n    module.exports = function (finder, ecModel) {\n        var point = [];\n        var seriesIndex = finder.seriesIndex;\n        var seriesModel;\n        if (seriesIndex == null || !(\n            seriesModel = ecModel.getSeriesByIndex(seriesIndex)\n        )) {\n            return {point: []};\n        }\n\n        var data = seriesModel.getData();\n        var dataIndex = modelUtil.queryDataIndex(data, finder);\n        if (dataIndex == null || zrUtil.isArray(dataIndex)) {\n            return {point: []};\n        }\n\n        var el = data.getItemGraphicEl(dataIndex);\n        var coordSys = seriesModel.coordinateSystem;\n\n        if (seriesModel.getTooltipPosition) {\n            point = seriesModel.getTooltipPosition(dataIndex) || [];\n        }\n        else if (coordSys && coordSys.dataToPoint) {\n            point = coordSys.dataToPoint(\n                data.getValues(\n                    zrUtil.map(coordSys.dimensions, function (dim) {\n                        return seriesModel.coordDimToDataDim(dim)[0];\n                    }), dataIndex, true\n                )\n            ) || [];\n        }\n        else if (el) {\n            // Use graphic bounding rect\n            var rect = el.getBoundingRect().clone();\n            rect.applyTransform(el.transform);\n            point = [\n                rect.x + rect.width / 2,\n                rect.y + rect.height / 2\n            ];\n        }\n\n        return {point: point, el: el};\n    };\n\n\n\n\n/***/ }),\n/* 524 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var env = __webpack_require__(460);\n    var zrUtil = __webpack_require__(453);\n    var get = __webpack_require__(456).makeGetter();\n\n    var each = zrUtil.each;\n\n    var globalListener = {};\n\n    /**\n     * @param {string} key\n     * @param {module:echarts/ExtensionAPI} api\n     * @param {Function} handler\n     *      param: {string} currTrigger\n     *      param: {Array.<number>} point\n     */\n    globalListener.register = function (key, api, handler) {\n        if (env.node) {\n            return;\n        }\n\n        var zr = api.getZr();\n        get(zr).records || (get(zr).records = {});\n\n        initGlobalListeners(zr, api);\n\n        var record = get(zr).records[key] || (get(zr).records[key] = {});\n        record.handler = handler;\n    };\n\n    function initGlobalListeners(zr, api) {\n        if (get(zr).initialized) {\n            return;\n        }\n\n        get(zr).initialized = true;\n\n        useHandler('click', zrUtil.curry(doEnter, 'click'));\n        useHandler('mousemove', zrUtil.curry(doEnter, 'mousemove'));\n        // useHandler('mouseout', onLeave);\n        useHandler('globalout', onLeave);\n\n        function useHandler(eventType, cb) {\n            zr.on(eventType, function (e) {\n                var dis = makeDispatchAction(api);\n\n                each(get(zr).records, function (record) {\n                    record && cb(record, e, dis.dispatchAction);\n                });\n\n                dispatchTooltipFinally(dis.pendings, api);\n            });\n        }\n    }\n\n    function dispatchTooltipFinally(pendings, api) {\n        var showLen = pendings.showTip.length;\n        var hideLen = pendings.hideTip.length;\n\n        var actuallyPayload;\n        if (showLen) {\n            actuallyPayload = pendings.showTip[showLen - 1];\n        }\n        else if (hideLen) {\n            actuallyPayload = pendings.hideTip[hideLen - 1];\n        }\n        if (actuallyPayload) {\n            actuallyPayload.dispatchAction = null;\n            api.dispatchAction(actuallyPayload);\n        }\n    }\n\n    function onLeave(record, e, dispatchAction) {\n        record.handler('leave', null, dispatchAction);\n    }\n\n    function doEnter(currTrigger, record, e, dispatchAction) {\n        record.handler(currTrigger, e, dispatchAction);\n    }\n\n    function makeDispatchAction(api) {\n        var pendings = {\n            showTip: [],\n            hideTip: []\n        };\n        // FIXME\n        // better approach?\n        // 'showTip' and 'hideTip' can be triggered by axisPointer and tooltip,\n        // which may be conflict, (axisPointer call showTip but tooltip call hideTip);\n        // So we have to add \"final stage\" to merge those dispatched actions.\n        var dispatchAction = function (payload) {\n            var pendingList = pendings[payload.type];\n            if (pendingList) {\n                pendingList.push(payload);\n            }\n            else {\n                payload.dispatchAction = dispatchAction;\n                api.dispatchAction(payload);\n            }\n        };\n\n        return {\n            dispatchAction: dispatchAction,\n            pendings: pendings\n        };\n    }\n\n    /**\n     * @param {string} key\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    globalListener.unregister = function (key, api) {\n        if (env.node) {\n            return;\n        }\n        var zr = api.getZr();\n        var record = (get(zr).records || {})[key];\n        if (record) {\n            get(zr).records[key] = null;\n        }\n    };\n\n    module.exports = globalListener;\n\n\n/***/ }),\n/* 525 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(453);\n    var graphic = __webpack_require__(454);\n    var textContain = __webpack_require__(473);\n    var formatUtil = __webpack_require__(461);\n    var matrix = __webpack_require__(475);\n    var axisHelper = __webpack_require__(472);\n    var AxisBuilder = __webpack_require__(520);\n\n    var helper = {};\n\n    /**\n     * @param {module:echarts/model/Model} axisPointerModel\n     */\n    helper.buildElStyle = function (axisPointerModel) {\n        var axisPointerType = axisPointerModel.get('type');\n        var styleModel = axisPointerModel.getModel(axisPointerType + 'Style');\n        var style;\n        if (axisPointerType === 'line') {\n            style = styleModel.getLineStyle();\n            style.fill = null;\n        }\n        else if (axisPointerType === 'shadow') {\n            style = styleModel.getAreaStyle();\n            style.stroke = null;\n        }\n        return style;\n    };\n\n    /**\n     * @param {Function} labelPos {align, verticalAlign, position}\n     */\n    helper.buildLabelElOption = function (\n        elOption, axisModel, axisPointerModel, api, labelPos\n    ) {\n        var value = axisPointerModel.get('value');\n        var text = helper.getValueLabel(\n            value, axisModel.axis, axisModel.ecModel,\n            axisPointerModel.get('seriesDataIndices'),\n            {\n                precision: axisPointerModel.get('label.precision'),\n                formatter: axisPointerModel.get('label.formatter')\n            }\n        );\n        var labelModel = axisPointerModel.getModel('label');\n        var textStyleModel = labelModel.getModel('textStyle');\n        var paddings = formatUtil.normalizeCssArray(labelModel.get('padding') || 0);\n\n        var font = textStyleModel.getFont();\n        var textRect = textContain.getBoundingRect(\n            text, font, labelPos.textAlign, labelPos.textBaseline\n        );\n\n        var position = labelPos.position;\n        var width = textRect.width + paddings[1] + paddings[3];\n        var height = textRect.height + paddings[0] + paddings[2];\n\n        // Adjust by align.\n        var align = labelPos.align;\n        align === 'right' && (position[0] -= width);\n        align === 'center' && (position[0] -= width / 2);\n        var verticalAlign = labelPos.verticalAlign;\n        verticalAlign === 'bottom' && (position[1] -= height);\n        verticalAlign === 'middle' && (position[1] -= height / 2);\n\n        // Not overflow ec container\n        confineInContainer(position, width, height, api);\n\n        var bgColor = labelModel.get('backgroundColor');\n        if (!bgColor || bgColor === 'auto') {\n            bgColor = axisModel.get('axisLine.lineStyle.color');\n        }\n\n        elOption.label = {\n            shape: {x: 0, y: 0, width: width, height: height, r: labelModel.get('borderRadius')},\n            position: position.slice(),\n            style: {\n                text: text,\n                textFont: font,\n                textFill: textStyleModel.getTextColor(),\n                textPosition: 'inside',\n                fill: bgColor,\n                stroke: labelModel.get('borderColor') || 'transparent',\n                lineWidth: labelModel.get('borderWidth') || 0,\n                shadowBlur: labelModel.get('shadowBlur'),\n                shadowColor: labelModel.get('shadowColor'),\n                shadowOffsetX: labelModel.get('shadowOffsetX'),\n                shadowOffsetY: labelModel.get('shadowOffsetY')\n            },\n            // Lable should be over axisPointer.\n            z2: 10\n        };\n    };\n\n    // Do not overflow ec container\n    function confineInContainer(position, width, height, api) {\n        var viewWidth = api.getWidth();\n        var viewHeight = api.getHeight();\n        position[0] = Math.min(position[0] + width, viewWidth) - width;\n        position[1] = Math.min(position[1] + height, viewHeight) - height;\n        position[0] = Math.max(position[0], 0);\n        position[1] = Math.max(position[1], 0);\n    }\n\n    /**\n     * @param {number} value\n     * @param {module:echarts/coord/Axis} axis\n     * @param {module:echarts/model/Global} ecModel\n     * @param {Object} opt\n     * @param {Array.<Object>} seriesDataIndices\n     * @param {number|string} opt.precision 'auto' or a number\n     * @param {string|Function} opt.formatter label formatter\n     */\n    helper.getValueLabel = function (value, axis, ecModel, seriesDataIndices, opt) {\n        var text = axis.scale.getLabel(\n            // If `precision` is set, width can be fixed (like '12.00500'), which\n            // helps to debounce when when moving label.\n            value, {precision: opt.precision}\n        );\n        var formatter = opt.formatter;\n\n        if (formatter) {\n            var params = {\n                value: axisHelper.getAxisRawValue(axis, value),\n                seriesData: []\n            };\n            zrUtil.each(seriesDataIndices, function (idxItem) {\n                var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n                var dataIndex = idxItem.dataIndexInside;\n                var dataParams = series && series.getDataParams(dataIndex);\n                dataParams && params.seriesData.push(dataParams);\n            });\n\n            if (zrUtil.isString(formatter)) {\n                text = formatter.replace('{value}', text);\n            }\n            else if (zrUtil.isFunction(formatter)) {\n                text = formatter(params);\n            }\n        }\n\n        return text;\n    };\n\n    /**\n     * @param {module:echarts/coord/Axis} axis\n     * @param {number} value\n     * @param {Object} layoutInfo {\n     *  rotation, position, labelOffset, labelDirection, labelMargin\n     * }\n     */\n    helper.getTransformedPosition = function (axis, value, layoutInfo) {\n        var transform = matrix.create();\n        matrix.rotate(transform, transform, layoutInfo.rotation);\n        matrix.translate(transform, transform, layoutInfo.position);\n\n        return graphic.applyTransform([\n            axis.dataToCoord(value),\n            (layoutInfo.labelOffset || 0)\n                + (layoutInfo.labelDirection || 1) * (layoutInfo.labelMargin || 0)\n        ], transform);\n    };\n\n    helper.buildCartesianSingleLabelElOption = function (\n        value, elOption, layoutInfo, axisModel, axisPointerModel, api\n    ) {\n        var textLayout = AxisBuilder.innerTextLayout(\n            layoutInfo.rotation, 0, layoutInfo.labelDirection\n        );\n        layoutInfo.labelMargin = axisPointerModel.get('label.margin');\n        helper.buildLabelElOption(elOption, axisModel, axisPointerModel, api, {\n            position: helper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n            align: textLayout.textAlign,\n            verticalAlign: textLayout.textVerticalAlign\n        });\n    };\n\n    /**\n     * @param {Array.<number>} p1\n     * @param {Array.<number>} p2\n     * @param {number} [xDimIndex=0] or 1\n     */\n    helper.makeLineShape = function (p1, p2, xDimIndex) {\n        xDimIndex = xDimIndex || 0;\n        return {\n            x1: p1[xDimIndex],\n            y1: p1[1 - xDimIndex],\n            x2: p2[xDimIndex],\n            y2: p2[1 - xDimIndex]\n        };\n    };\n\n    /**\n     * @param {Array.<number>} xy\n     * @param {Array.<number>} wh\n     * @param {number} [xDimIndex=0] or 1\n     */\n    helper.makeRectShape = function (xy, wh, xDimIndex) {\n        xDimIndex = xDimIndex || 0;\n        return {\n            x: xy[xDimIndex],\n            y: xy[1 - xDimIndex],\n            width: wh[xDimIndex],\n            height: wh[1 - xDimIndex]\n        };\n    };\n\n    helper.makeSectorShape = function (cx, cy, r0, r, startAngle, endAngle) {\n        return {\n            cx: cx,\n            cy: cy,\n            r0: r0,\n            r: r,\n            startAngle: startAngle,\n            endAngle: endAngle,\n            clockwise: true\n        };\n    };\n\n    module.exports = helper;\n\n\n/***/ }),\n/* 526 */\n/***/ (function(module, exports) {\n\n\n\n    /**\n     * Calculate slider move result.\n     * Usage:\n     * (1) If both handle0 and handle1 are needed to be moved, set minSpan the same as\n     * maxSpan and the same as `Math.abs(handleEnd[1] - handleEnds[0])`.\n     * (2) If handle0 is forbidden to cross handle1, set minSpan as `0`.\n     *\n     * @param {number} delta Move length.\n     * @param {Array.<number>} handleEnds handleEnds[0] can be bigger then handleEnds[1].\n     *              handleEnds will be modified in this method.\n     * @param {Array.<number>} extent handleEnds is restricted by extent.\n     *              extent[0] should less or equals than extent[1].\n     * @param {number|string} handleIndex Can be 'all', means that both move the two handleEnds,\n     *              where the input minSpan and maxSpan will not work.\n     * @param {number} [minSpan] The range of dataZoom can not be smaller than that.\n     *              If not set, handle0 and cross handle1. If set as a non-negative\n     *              number (including `0`), handles will push each other when reaching\n     *              the minSpan.\n     * @param {number} [maxSpan] The range of dataZoom can not be larger than that.\n     * @return {Array.<number>} The input handleEnds.\n     */\n    module.exports = function (delta, handleEnds, extent, handleIndex, minSpan, maxSpan) {\n        // Normalize firstly.\n        handleEnds[0] = restrict(handleEnds[0], extent);\n        handleEnds[1] = restrict(handleEnds[1], extent);\n\n        delta = delta || 0;\n\n        var extentSpan = extent[1] - extent[0];\n\n        // Notice maxSpan and minSpan can be null/undefined.\n        if (minSpan != null) {\n            minSpan = restrict(minSpan, [0, extentSpan]);\n        }\n        if (maxSpan != null) {\n            maxSpan = Math.max(maxSpan, minSpan != null ? minSpan : 0);\n        }\n        if (handleIndex === 'all') {\n            minSpan = maxSpan = Math.abs(handleEnds[1] - handleEnds[0]);\n            handleIndex = 0;\n        }\n\n        var originalDistSign = getSpanSign(handleEnds, handleIndex);\n\n        handleEnds[handleIndex] += delta;\n\n        // Restrict in extent.\n        var extentMinSpan = minSpan || 0;\n        var realExtent = extent.slice();\n        originalDistSign.sign < 0 ? (realExtent[0] += extentMinSpan) : (realExtent[1] -= extentMinSpan);\n        handleEnds[handleIndex] = restrict(handleEnds[handleIndex], realExtent);\n\n        // Expand span.\n        var currDistSign = getSpanSign(handleEnds, handleIndex);\n        if (minSpan != null && (\n            currDistSign.sign !== originalDistSign.sign || currDistSign.span < minSpan\n        )) {\n            // If minSpan exists, 'cross' is forbinden.\n            handleEnds[1 - handleIndex] = handleEnds[handleIndex] + originalDistSign.sign * minSpan;\n        }\n\n        // Shrink span.\n        var currDistSign = getSpanSign(handleEnds, handleIndex);\n        if (maxSpan != null && currDistSign.span > maxSpan) {\n            handleEnds[1 - handleIndex] = handleEnds[handleIndex] + currDistSign.sign * maxSpan;\n        }\n\n        return handleEnds;\n    };\n\n    function getSpanSign(handleEnds, handleIndex) {\n        var dist = handleEnds[handleIndex] - handleEnds[1 - handleIndex];\n        // If `handleEnds[0] === handleEnds[1]`, always believe that handleEnd[0]\n        // is at left of handleEnds[1] for non-cross case.\n        return {span: Math.abs(dist), sign: dist > 0 ? -1 : dist < 0 ? 1 : handleIndex ? -1 : 1};\n    }\n\n    function restrict(value, extend) {\n        return Math.min(extend[1], Math.max(extend[0], value));\n    }\n\n\n/***/ }),\n/* 527 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var numberUtil = __webpack_require__(457);\n    var linearMap = numberUtil.linearMap;\n    var zrUtil = __webpack_require__(453);\n    var axisHelper = __webpack_require__(472);\n\n    function fixExtentWithBands(extent, nTick) {\n        var size = extent[1] - extent[0];\n        var len = nTick;\n        var margin = size / len / 2;\n        extent[0] += margin;\n        extent[1] -= margin;\n    }\n\n    var normalizedExtent = [0, 1];\n    /**\n     * @name module:echarts/coord/CartesianAxis\n     * @constructor\n     */\n    var Axis = function (dim, scale, extent) {\n\n        /**\n         * Axis dimension. Such as 'x', 'y', 'z', 'angle', 'radius'\n         * @type {string}\n         */\n        this.dim = dim;\n\n        /**\n         * Axis scale\n         * @type {module:echarts/coord/scale/*}\n         */\n        this.scale = scale;\n\n        /**\n         * @type {Array.<number>}\n         * @private\n         */\n        this._extent = extent || [0, 0];\n\n        /**\n         * @type {boolean}\n         */\n        this.inverse = false;\n\n        /**\n         * Usually true when axis has a ordinal scale\n         * @type {boolean}\n         */\n        this.onBand = false;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._labelInterval;\n    };\n\n    Axis.prototype = {\n\n        constructor: Axis,\n\n        /**\n         * If axis extent contain given coord\n         * @param {number} coord\n         * @return {boolean}\n         */\n        contain: function (coord) {\n            var extent = this._extent;\n            var min = Math.min(extent[0], extent[1]);\n            var max = Math.max(extent[0], extent[1]);\n            return coord >= min && coord <= max;\n        },\n\n        /**\n         * If axis extent contain given data\n         * @param {number} data\n         * @return {boolean}\n         */\n        containData: function (data) {\n            return this.contain(this.dataToCoord(data));\n        },\n\n        /**\n         * Get coord extent.\n         * @return {Array.<number>}\n         */\n        getExtent: function () {\n            return this._extent.slice();\n        },\n\n        /**\n         * Get precision used for formatting\n         * @param {Array.<number>} [dataExtent]\n         * @return {number}\n         */\n        getPixelPrecision: function (dataExtent) {\n            return numberUtil.getPixelPrecision(\n                dataExtent || this.scale.getExtent(),\n                this._extent\n            );\n        },\n\n        /**\n         * Set coord extent\n         * @param {number} start\n         * @param {number} end\n         */\n        setExtent: function (start, end) {\n            var extent = this._extent;\n            extent[0] = start;\n            extent[1] = end;\n        },\n\n        /**\n         * Convert data to coord. Data is the rank if it has a ordinal scale\n         * @param {number} data\n         * @param  {boolean} clamp\n         * @return {number}\n         */\n        dataToCoord: function (data, clamp) {\n            var extent = this._extent;\n            var scale = this.scale;\n            data = scale.normalize(data);\n\n            if (this.onBand && scale.type === 'ordinal') {\n                extent = extent.slice();\n                fixExtentWithBands(extent, scale.count());\n            }\n\n            return linearMap(data, normalizedExtent, extent, clamp);\n        },\n\n        /**\n         * Convert coord to data. Data is the rank if it has a ordinal scale\n         * @param {number} coord\n         * @param  {boolean} clamp\n         * @return {number}\n         */\n        coordToData: function (coord, clamp) {\n            var extent = this._extent;\n            var scale = this.scale;\n\n            if (this.onBand && scale.type === 'ordinal') {\n                extent = extent.slice();\n                fixExtentWithBands(extent, scale.count());\n            }\n\n            var t = linearMap(coord, extent, normalizedExtent, clamp);\n\n            return this.scale.scale(t);\n        },\n\n        /**\n         * Convert pixel point to data in axis\n         * @param {Array.<number>} point\n         * @param  {boolean} clamp\n         * @return {number} data\n         */\n        pointToData: function (point, clamp) {\n            // Should be implemented in derived class if necessary.\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getTicksCoords: function (alignWithLabel) {\n            if (this.onBand && !alignWithLabel) {\n                var bands = this.getBands();\n                var coords = [];\n                for (var i = 0; i < bands.length; i++) {\n                    coords.push(bands[i][0]);\n                }\n                if (bands[i - 1]) {\n                    coords.push(bands[i - 1][1]);\n                }\n                return coords;\n            }\n            else {\n                return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n            }\n        },\n\n        /**\n         * Coords of labels are on the ticks or on the middle of bands\n         * @return {Array.<number>}\n         */\n        getLabelsCoords: function () {\n            return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n        },\n\n        /**\n         * Get bands.\n         *\n         * If axis has labels [1, 2, 3, 4]. Bands on the axis are\n         * |---1---|---2---|---3---|---4---|.\n         *\n         * @return {Array}\n         */\n         // FIXME Situation when labels is on ticks\n        getBands: function () {\n            var extent = this.getExtent();\n            var bands = [];\n            var len = this.scale.count();\n            var start = extent[0];\n            var end = extent[1];\n            var span = end - start;\n\n            for (var i = 0; i < len; i++) {\n                bands.push([\n                    span * i / len + start,\n                    span * (i + 1) / len + start\n                ]);\n            }\n            return bands;\n        },\n\n        /**\n         * Get width of band\n         * @return {number}\n         */\n        getBandWidth: function () {\n            var axisExtent = this._extent;\n            var dataExtent = this.scale.getExtent();\n\n            var len = dataExtent[1] - dataExtent[0] + (this.onBand ? 1 : 0);\n            // Fix #2728, avoid NaN when only one data.\n            len === 0 && (len = 1);\n\n            var size = Math.abs(axisExtent[1] - axisExtent[0]);\n\n            return Math.abs(size) / len;\n        },\n\n        /**\n         * Get interval of the axis label.\n         * @return {number}\n         */\n        getLabelInterval: function () {\n            var labelInterval = this._labelInterval;\n            if (!labelInterval) {\n                var axisModel = this.model;\n                var labelModel = axisModel.getModel('axisLabel');\n                var interval = labelModel.get('interval');\n                if (!(this.type === 'category' && interval === 'auto')) {\n                    labelInterval = interval === 'auto' ? 0 : interval;\n                }\n                else if (this.isHorizontal){\n                    labelInterval = axisHelper.getAxisLabelInterval(\n                        zrUtil.map(this.scale.getTicks(), this.dataToCoord, this),\n                        axisModel.getFormattedLabels(),\n                        labelModel.getModel('textStyle').getFont(),\n                        this.isHorizontal()\n                    );\n                }\n                this._labelInterval = labelInterval;\n            }\n            return labelInterval;\n        }\n\n    };\n\n    module.exports = Axis;\n\n\n/***/ }),\n/* 528 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(453);\n    var axisHelper = __webpack_require__(472);\n\n    function getName(obj) {\n        if (zrUtil.isObject(obj) && obj.value != null) {\n            return obj.value;\n        }\n        else {\n            return obj + '';\n        }\n    }\n\n    module.exports = {\n\n        /**\n         * Format labels\n         * @return {Array.<string>}\n         */\n        getFormattedLabels: function () {\n            return axisHelper.getFormattedLabels(\n                this.axis,\n                this.get('axisLabel.formatter')\n            );\n        },\n\n        /**\n         * Get categories\n         */\n        getCategories: function () {\n            return this.get('type') === 'category'\n                && zrUtil.map(this.get('data'), getName);\n        },\n\n        /**\n         * @param {boolean} origin\n         * @return {number|string} min value or 'dataMin' or null/undefined (means auto) or NaN\n         */\n        getMin: function (origin) {\n            var option = this.option;\n            var min = (!origin && option.rangeStart != null)\n                ? option.rangeStart : option.min;\n\n            if (this.axis && min != null && min !== 'dataMin' && !zrUtil.eqNaN(min)) {\n                min = this.axis.scale.parse(min);\n            }\n            return min;\n        },\n\n        /**\n         * @param {boolean} origin\n         * @return {number|string} max value or 'dataMax' or null/undefined (means auto) or NaN\n         */\n        getMax: function (origin) {\n            var option = this.option;\n            var max = (!origin && option.rangeEnd != null)\n                ? option.rangeEnd : option.max;\n\n            if (this.axis && max != null && max !== 'dataMax' && !zrUtil.eqNaN(max)) {\n                max = this.axis.scale.parse(max);\n            }\n            return max;\n        },\n\n        /**\n         * @return {boolean}\n         */\n        getNeedCrossZero: function () {\n            var option = this.option;\n            return (option.rangeStart != null || option.rangeEnd != null)\n                ? false : !option.scale;\n        },\n\n        /**\n         * Should be implemented by each axis model if necessary.\n         * @return {module:echarts/model/Component} coordinate system model\n         */\n        getCoordSysModel: zrUtil.noop,\n\n        /**\n         * @param {number} rangeStart Can only be finite number or null/undefined or NaN.\n         * @param {number} rangeEnd Can only be finite number or null/undefined or NaN.\n         */\n        setRange: function (rangeStart, rangeEnd) {\n            this.option.rangeStart = rangeStart;\n            this.option.rangeEnd = rangeEnd;\n        },\n\n        /**\n         * Reset range\n         */\n        resetRange: function () {\n            // rangeStart and rangeEnd is readonly.\n            this.option.rangeStart = this.option.rangeEnd = null;\n        }\n    };\n\n\n/***/ }),\n/* 529 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var ComponentModel = __webpack_require__(469);\n    var zrUtil = __webpack_require__(453);\n    var axisModelCreator = __webpack_require__(613);\n\n    var AxisModel = ComponentModel.extend({\n\n        type: 'cartesian2dAxis',\n\n        /**\n         * @type {module:echarts/coord/cartesian/Axis2D}\n         */\n        axis: null,\n\n        /**\n         * @override\n         */\n        init: function () {\n            AxisModel.superApply(this, 'init', arguments);\n            this.resetRange();\n        },\n\n        /**\n         * @override\n         */\n        mergeOption: function () {\n            AxisModel.superApply(this, 'mergeOption', arguments);\n            this.resetRange();\n        },\n\n        /**\n         * @override\n         */\n        restoreData: function () {\n            AxisModel.superApply(this, 'restoreData', arguments);\n            this.resetRange();\n        },\n\n        /**\n         * @override\n         * @return {module:echarts/model/Component}\n         */\n        getCoordSysModel: function () {\n            return this.ecModel.queryComponents({\n                mainType: 'grid',\n                index: this.option.gridIndex,\n                id: this.option.gridId\n            })[0];\n        }\n\n    });\n\n    function getAxisType(axisDim, option) {\n        // Default axis with data is category axis\n        return option.type || (option.data ? 'category' : 'value');\n    }\n\n    zrUtil.merge(AxisModel.prototype, __webpack_require__(528));\n\n    var extraOption = {\n        // gridIndex: 0,\n        // gridId: '',\n\n        // Offset is for multiple axis on the same position\n        offset: 0\n    };\n\n    axisModelCreator('x', AxisModel, getAxisType, extraOption);\n    axisModelCreator('y', AxisModel, getAxisType, extraOption);\n\n    module.exports = AxisModel;\n\n\n/***/ }),\n/* 530 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {/**\n * List for data storage\n * @module echarts/data/List\n */\n\n\n    var UNDEFINED = 'undefined';\n    var globalObj = typeof window === 'undefined' ? global : window;\n    var Float64Array = typeof globalObj.Float64Array === UNDEFINED\n        ? Array : globalObj.Float64Array;\n    var Int32Array = typeof globalObj.Int32Array === UNDEFINED\n        ? Array : globalObj.Int32Array;\n\n    var dataCtors = {\n        'float': Float64Array,\n        'int': Int32Array,\n        // Ordinal data type can be string or int\n        'ordinal': Array,\n        'number': Array,\n        'time': Array\n    };\n\n    var Model = __webpack_require__(463);\n    var DataDiffer = __webpack_require__(619);\n\n    var zrUtil = __webpack_require__(453);\n    var modelUtil = __webpack_require__(456);\n    var isObject = zrUtil.isObject;\n\n    var TRANSFERABLE_PROPERTIES = [\n        'stackedOn', 'hasItemOption', '_nameList', '_idList', '_rawData'\n    ];\n\n    function transferProperties(a, b) {\n        zrUtil.each(TRANSFERABLE_PROPERTIES.concat(b.__wrappedMethods || []), function (propName) {\n            if (b.hasOwnProperty(propName)) {\n                a[propName] = b[propName];\n            }\n        });\n\n        a.__wrappedMethods = b.__wrappedMethods;\n    }\n\n    function DefaultDataProvider(dataArray) {\n        this._array = dataArray || [];\n    }\n\n    DefaultDataProvider.prototype.pure = false;\n\n    DefaultDataProvider.prototype.count = function () {\n        return this._array.length;\n    };\n    DefaultDataProvider.prototype.getItem = function (idx) {\n        return this._array[idx];\n    };\n\n    /**\n     * @constructor\n     * @alias module:echarts/data/List\n     *\n     * @param {Array.<string|Object>} dimensions\n     *      For example, ['someDimName', {name: 'someDimName', type: 'someDimType'}, ...].\n     *      Dimensions should be concrete names like x, y, z, lng, lat, angle, radius\n     * @param {module:echarts/model/Model} hostModel\n     */\n    var List = function (dimensions, hostModel) {\n\n        dimensions = dimensions || ['x', 'y'];\n\n        var dimensionInfos = {};\n        var dimensionNames = [];\n        for (var i = 0; i < dimensions.length; i++) {\n            var dimensionName;\n            var dimensionInfo = {};\n            if (typeof dimensions[i] === 'string') {\n                dimensionName = dimensions[i];\n                dimensionInfo = {\n                    name: dimensionName,\n                    coordDim: dimensionName,\n                    coordDimIndex: 0,\n                    stackable: false,\n                    // Type can be 'float', 'int', 'number'\n                    // Default is number, Precision of float may not enough\n                    type: 'number'\n                };\n            }\n            else {\n                dimensionInfo = dimensions[i];\n                dimensionName = dimensionInfo.name;\n                dimensionInfo.type = dimensionInfo.type || 'number';\n                if (!dimensionInfo.coordDim) {\n                    dimensionInfo.coordDim = dimensionName;\n                    dimensionInfo.coordDimIndex = 0;\n                }\n            }\n            dimensionInfo.otherDims = dimensionInfo.otherDims || {};\n            dimensionNames.push(dimensionName);\n            dimensionInfos[dimensionName] = dimensionInfo;\n        }\n\n        /**\n         * @readOnly\n         * @type {Array.<string>}\n         */\n        this.dimensions = dimensionNames;\n\n        /**\n         * Infomation of each data dimension, like data type.\n         * @type {Object}\n         */\n        this._dimensionInfos = dimensionInfos;\n\n        /**\n         * @type {module:echarts/model/Model}\n         */\n        this.hostModel = hostModel;\n\n        /**\n         * @type {module:echarts/model/Model}\n         */\n        this.dataType;\n\n        /**\n         * Indices stores the indices of data subset after filtered.\n         * This data subset will be used in chart.\n         * @type {Array.<number>}\n         * @readOnly\n         */\n        this.indices = [];\n\n        /**\n         * Data storage\n         * @type {Object.<key, TypedArray|Array>}\n         * @private\n         */\n        this._storage = {};\n\n        /**\n         * @type {Array.<string>}\n         */\n        this._nameList = [];\n        /**\n         * @type {Array.<string>}\n         */\n        this._idList = [];\n\n        /**\n         * Models of data option is stored sparse for optimizing memory cost\n         * @type {Array.<module:echarts/model/Model>}\n         * @private\n         */\n        this._optionModels = [];\n\n        /**\n         * @param {module:echarts/data/List}\n         */\n        this.stackedOn = null;\n\n        /**\n         * Global visual properties after visual coding\n         * @type {Object}\n         * @private\n         */\n        this._visual = {};\n\n        /**\n         * Globel layout properties.\n         * @type {Object}\n         * @private\n         */\n        this._layout = {};\n\n        /**\n         * Item visual properties after visual coding\n         * @type {Array.<Object>}\n         * @private\n         */\n        this._itemVisuals = [];\n\n        /**\n         * Item layout properties after layout\n         * @type {Array.<Object>}\n         * @private\n         */\n        this._itemLayouts = [];\n\n        /**\n         * Graphic elemnents\n         * @type {Array.<module:zrender/Element>}\n         * @private\n         */\n        this._graphicEls = [];\n\n        /**\n         * @type {Array.<Array|Object>}\n         * @private\n         */\n        this._rawData;\n\n        /**\n         * @type {Object}\n         * @private\n         */\n        this._extent;\n    };\n\n    var listProto = List.prototype;\n\n    listProto.type = 'list';\n\n    /**\n     * If each data item has it's own option\n     * @type {boolean}\n     */\n    listProto.hasItemOption = true;\n\n    /**\n     * Get dimension name\n     * @param {string|number} dim\n     *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n     *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n     * @return {string} Concrete dim name.\n     */\n    listProto.getDimension = function (dim) {\n        if (!isNaN(dim)) {\n            dim = this.dimensions[dim] || dim;\n        }\n        return dim;\n    };\n\n    /**\n     * Get type and stackable info of particular dimension\n     * @param {string|number} dim\n     *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n     *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n     */\n    listProto.getDimensionInfo = function (dim) {\n        return zrUtil.clone(this._dimensionInfos[this.getDimension(dim)]);\n    };\n\n    /**\n     * Initialize from data\n     * @param {Array.<Object|number|Array>} data\n     * @param {Array.<string>} [nameList]\n     * @param {Function} [dimValueGetter] (dataItem, dimName, dataIndex, dimIndex) => number\n     */\n    listProto.initData = function (data, nameList, dimValueGetter) {\n        data = data || [];\n\n        var isDataArray = zrUtil.isArray(data);\n        if (isDataArray) {\n            data = new DefaultDataProvider(data);\n        }\n        if (__DEV__) {\n            if (!isDataArray && (typeof data.getItem != 'function' || typeof data.count != 'function')) {\n                throw new Error('Inavlid data provider.');\n            }\n        }\n\n        this._rawData = data;\n\n        // Clear\n        var storage = this._storage = {};\n        var indices = this.indices = [];\n\n        var dimensions = this.dimensions;\n        var dimensionInfoMap = this._dimensionInfos;\n\n        var size = data.count();\n\n        var idList = [];\n        var nameRepeatCount = {};\n        var nameDimIdx;\n\n        nameList = nameList || [];\n\n        // Init storage\n        for (var i = 0; i < dimensions.length; i++) {\n            var dimInfo = dimensionInfoMap[dimensions[i]];\n            dimInfo.otherDims.itemName === 0 && (nameDimIdx = i);\n            var DataCtor = dataCtors[dimInfo.type];\n            storage[dimensions[i]] = new DataCtor(size);\n        }\n\n        var self = this;\n        if (!dimValueGetter) {\n            self.hasItemOption = false;\n        }\n        // Default dim value getter\n        dimValueGetter = dimValueGetter || function (dataItem, dimName, dataIndex, dimIndex) {\n            var value = modelUtil.getDataItemValue(dataItem);\n            // If any dataItem is like { value: 10 }\n            if (modelUtil.isDataItemOption(dataItem)) {\n                self.hasItemOption = true;\n            }\n            return modelUtil.converDataValue(\n                (value instanceof Array)\n                    ? value[dimIndex]\n                    // If value is a single number or something else not array.\n                    : value,\n                dimensionInfoMap[dimName]\n            );\n        };\n\n        for (var i = 0; i < size; i++) {\n            // NOTICE: Try not to write things into dataItem\n            var dataItem = data.getItem(i);\n            // Each data item is value\n            // [1, 2]\n            // 2\n            // Bar chart, line chart which uses category axis\n            // only gives the 'y' value. 'x' value is the indices of cateogry\n            // Use a tempValue to normalize the value to be a (x, y) value\n\n            // Store the data by dimensions\n            for (var k = 0; k < dimensions.length; k++) {\n                var dim = dimensions[k];\n                var dimStorage = storage[dim];\n                // PENDING NULL is empty or zero\n                dimStorage[i] = dimValueGetter(dataItem, dim, i, k);\n            }\n\n            indices.push(i);\n        }\n\n        // Use the name in option and create id\n        for (var i = 0; i < size; i++) {\n            var dataItem = data.getItem(i);\n            if (!nameList[i] && dataItem) {\n                if (dataItem.name != null) {\n                    nameList[i] = dataItem.name;\n                }\n                else if (nameDimIdx != null) {\n                    nameList[i] = storage[dimensions[nameDimIdx]][i];\n                }\n            }\n            var name = nameList[i] || '';\n            // Try using the id in option\n            var id = dataItem && dataItem.id;\n\n            if (!id && name) {\n                // Use name as id and add counter to avoid same name\n                nameRepeatCount[name] = nameRepeatCount[name] || 0;\n                id = name;\n                if (nameRepeatCount[name] > 0) {\n                    id += '__ec__' + nameRepeatCount[name];\n                }\n                nameRepeatCount[name]++;\n            }\n            id && (idList[i] = id);\n        }\n\n        this._nameList = nameList;\n        this._idList = idList;\n    };\n\n    /**\n     * @return {number}\n     */\n    listProto.count = function () {\n        return this.indices.length;\n    };\n\n    /**\n     * Get value. Return NaN if idx is out of range.\n     * @param {string} dim Dim must be concrete name.\n     * @param {number} idx\n     * @param {boolean} stack\n     * @return {number}\n     */\n    listProto.get = function (dim, idx, stack) {\n        var storage = this._storage;\n        var dataIndex = this.indices[idx];\n\n        // If value not exists\n        if (dataIndex == null || !storage[dim]) {\n            return NaN;\n        }\n\n        var value = storage[dim][dataIndex];\n        // FIXME ordinal data type is not stackable\n        if (stack) {\n            var dimensionInfo = this._dimensionInfos[dim];\n            if (dimensionInfo && dimensionInfo.stackable) {\n                var stackedOn = this.stackedOn;\n                while (stackedOn) {\n                    // Get no stacked data of stacked on\n                    var stackedValue = stackedOn.get(dim, idx);\n                    // Considering positive stack, negative stack and empty data\n                    if ((value >= 0 && stackedValue > 0)  // Positive stack\n                        || (value <= 0 && stackedValue < 0) // Negative stack\n                    ) {\n                        value += stackedValue;\n                    }\n                    stackedOn = stackedOn.stackedOn;\n                }\n            }\n        }\n        return value;\n    };\n\n    /**\n     * Get value for multi dimensions.\n     * @param {Array.<string>} [dimensions] If ignored, using all dimensions.\n     * @param {number} idx\n     * @param {boolean} stack\n     * @return {number}\n     */\n    listProto.getValues = function (dimensions, idx, stack) {\n        var values = [];\n\n        if (!zrUtil.isArray(dimensions)) {\n            stack = idx;\n            idx = dimensions;\n            dimensions = this.dimensions;\n        }\n\n        for (var i = 0, len = dimensions.length; i < len; i++) {\n            values.push(this.get(dimensions[i], idx, stack));\n        }\n\n        return values;\n    };\n\n    /**\n     * If value is NaN. Inlcuding '-'\n     * @param {string} dim\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.hasValue = function (idx) {\n        var dimensions = this.dimensions;\n        var dimensionInfos = this._dimensionInfos;\n        for (var i = 0, len = dimensions.length; i < len; i++) {\n            if (\n                // Ordinal type can be string or number\n                dimensionInfos[dimensions[i]].type !== 'ordinal'\n                && isNaN(this.get(dimensions[i], idx))\n            ) {\n                return false;\n            }\n        }\n        return true;\n    };\n\n    /**\n     * Get extent of data in one dimension\n     * @param {string} dim\n     * @param {boolean} stack\n     * @param {Function} filter\n     */\n    listProto.getDataExtent = function (dim, stack, filter) {\n        dim = this.getDimension(dim);\n        var dimData = this._storage[dim];\n        var dimInfo = this.getDimensionInfo(dim);\n        stack = (dimInfo && dimInfo.stackable) && stack;\n        var dimExtent = (this._extent || (this._extent = {}))[dim + (!!stack)];\n        var value;\n        if (dimExtent) {\n            return dimExtent;\n        }\n        // var dimInfo = this._dimensionInfos[dim];\n        if (dimData) {\n            var min = Infinity;\n            var max = -Infinity;\n            // var isOrdinal = dimInfo.type === 'ordinal';\n            for (var i = 0, len = this.count(); i < len; i++) {\n                value = this.get(dim, i, stack);\n                // FIXME\n                // if (isOrdinal && typeof value === 'string') {\n                //     value = zrUtil.indexOf(dimData, value);\n                // }\n                if (!filter || filter(value, dim, i)) {\n                    value < min && (min = value);\n                    value > max && (max = value);\n                }\n            }\n            return (this._extent[dim + !!stack] = [min, max]);\n        }\n        else {\n            return [Infinity, -Infinity];\n        }\n    };\n\n    /**\n     * Get sum of data in one dimension\n     * @param {string} dim\n     * @param {boolean} stack\n     */\n    listProto.getSum = function (dim, stack) {\n        var dimData = this._storage[dim];\n        var sum = 0;\n        if (dimData) {\n            for (var i = 0, len = this.count(); i < len; i++) {\n                var value = this.get(dim, i, stack);\n                if (!isNaN(value)) {\n                    sum += value;\n                }\n            }\n        }\n        return sum;\n    };\n\n    /**\n     * Retreive the index with given value\n     * @param {number} idx\n     * @param {number} value\n     * @return {number}\n     */\n    // FIXME Precision of float value\n    listProto.indexOf = function (dim, value) {\n        var storage = this._storage;\n        var dimData = storage[dim];\n        var indices = this.indices;\n\n        if (dimData) {\n            for (var i = 0, len = indices.length; i < len; i++) {\n                var rawIndex = indices[i];\n                if (dimData[rawIndex] === value) {\n                    return i;\n                }\n            }\n        }\n        return -1;\n    };\n\n    /**\n     * Retreive the index with given name\n     * @param {number} idx\n     * @param {number} name\n     * @return {number}\n     */\n    listProto.indexOfName = function (name) {\n        var indices = this.indices;\n        var nameList = this._nameList;\n\n        for (var i = 0, len = indices.length; i < len; i++) {\n            var rawIndex = indices[i];\n            if (nameList[rawIndex] === name) {\n                return i;\n            }\n        }\n\n        return -1;\n    };\n\n    /**\n     * Retreive the index with given raw data index\n     * @param {number} idx\n     * @param {number} name\n     * @return {number}\n     */\n    listProto.indexOfRawIndex = function (rawIndex) {\n        // Indices are ascending\n        var indices = this.indices;\n\n        // If rawIndex === dataIndex\n        var rawDataIndex = indices[rawIndex];\n        if (rawDataIndex != null && rawDataIndex === rawIndex) {\n            return rawIndex;\n        }\n\n        var left = 0;\n        var right = indices.length - 1;\n        while (left <= right) {\n            var mid = (left + right) / 2 | 0;\n            if (indices[mid] < rawIndex) {\n                left = mid + 1;\n            }\n            else if (indices[mid] > rawIndex) {\n                right = mid - 1;\n            }\n            else {\n                return mid;\n            }\n        }\n        return -1;\n    };\n\n    /**\n     * Retreive the index of nearest value\n     * @param {string} dim\n     * @param {number} value\n     * @param {boolean} stack If given value is after stacked\n     * @param {number} [maxDistance=Infinity]\n     * @return {Array.<number>} Considere multiple points has the same value.\n     */\n    listProto.indicesOfNearest = function (dim, value, stack, maxDistance) {\n        var storage = this._storage;\n        var dimData = storage[dim];\n        var nearestIndices = [];\n\n        if (!dimData) {\n            return nearestIndices;\n        }\n\n        if (maxDistance == null) {\n            maxDistance = Infinity;\n        }\n\n        var minDist = Number.MAX_VALUE;\n        var minDiff = -1;\n        for (var i = 0, len = this.count(); i < len; i++) {\n            var diff = value - this.get(dim, i, stack);\n            var dist = Math.abs(diff);\n            if (diff <= maxDistance && dist <= minDist) {\n                // For the case of two data are same on xAxis, which has sequence data.\n                // Show the nearest index\n                // https://github.com/ecomfe/echarts/issues/2869\n                if (dist < minDist || (diff >= 0 && minDiff < 0)) {\n                    minDist = dist;\n                    minDiff = diff;\n                    nearestIndices.length = 0;\n                }\n                nearestIndices.push(i);\n            }\n        }\n        return nearestIndices;\n    };\n\n    /**\n     * Get raw data index\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.getRawIndex = function (idx) {\n        var rawIdx = this.indices[idx];\n        return rawIdx == null ? -1 : rawIdx;\n    };\n\n    /**\n     * Get raw data item\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.getRawDataItem = function (idx) {\n        return this._rawData.getItem(this.getRawIndex(idx));\n    };\n\n    /**\n     * @param {number} idx\n     * @param {boolean} [notDefaultIdx=false]\n     * @return {string}\n     */\n    listProto.getName = function (idx) {\n        return this._nameList[this.indices[idx]] || '';\n    };\n\n    /**\n     * @param {number} idx\n     * @param {boolean} [notDefaultIdx=false]\n     * @return {string}\n     */\n    listProto.getId = function (idx) {\n        return this._idList[this.indices[idx]] || (this.getRawIndex(idx) + '');\n    };\n\n\n    function normalizeDimensions(dimensions) {\n        if (!zrUtil.isArray(dimensions)) {\n            dimensions = [dimensions];\n        }\n        return dimensions;\n    }\n\n    /**\n     * Data iteration\n     * @param {string|Array.<string>}\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     *\n     * @example\n     *  list.each('x', function (x, idx) {});\n     *  list.each(['x', 'y'], function (x, y, idx) {});\n     *  list.each(function (idx) {})\n     */\n    listProto.each = function (dims, cb, stack, context) {\n        if (typeof dims === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dims;\n            dims = [];\n        }\n\n        dims = zrUtil.map(normalizeDimensions(dims), this.getDimension, this);\n\n        var value = [];\n        var dimSize = dims.length;\n        var indices = this.indices;\n\n        context = context || this;\n\n        for (var i = 0; i < indices.length; i++) {\n            // Simple optimization\n            switch (dimSize) {\n                case 0:\n                    cb.call(context, i);\n                    break;\n                case 1:\n                    cb.call(context, this.get(dims[0], i, stack), i);\n                    break;\n                case 2:\n                    cb.call(context, this.get(dims[0], i, stack), this.get(dims[1], i, stack), i);\n                    break;\n                default:\n                    for (var k = 0; k < dimSize; k++) {\n                        value[k] = this.get(dims[k], i, stack);\n                    }\n                    // Index\n                    value[k] = i;\n                    cb.apply(context, value);\n            }\n        }\n    };\n\n    /**\n     * Data filter\n     * @param {string|Array.<string>}\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     */\n    listProto.filterSelf = function (dimensions, cb, stack, context) {\n        if (typeof dimensions === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dimensions;\n            dimensions = [];\n        }\n\n        dimensions = zrUtil.map(\n            normalizeDimensions(dimensions), this.getDimension, this\n        );\n\n        var newIndices = [];\n        var value = [];\n        var dimSize = dimensions.length;\n        var indices = this.indices;\n\n        context = context || this;\n\n        for (var i = 0; i < indices.length; i++) {\n            var keep;\n            // Simple optimization\n            if (!dimSize) {\n                keep = cb.call(context, i);\n            }\n            else if (dimSize === 1) {\n                keep = cb.call(\n                    context, this.get(dimensions[0], i, stack), i\n                );\n            }\n            else {\n                for (var k = 0; k < dimSize; k++) {\n                    value[k] = this.get(dimensions[k], i, stack);\n                }\n                value[k] = i;\n                keep = cb.apply(context, value);\n            }\n            if (keep) {\n                newIndices.push(indices[i]);\n            }\n        }\n\n        this.indices = newIndices;\n\n        // Reset data extent\n        this._extent = {};\n\n        return this;\n    };\n\n    /**\n     * Data mapping to a plain array\n     * @param {string|Array.<string>} [dimensions]\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     * @return {Array}\n     */\n    listProto.mapArray = function (dimensions, cb, stack, context) {\n        if (typeof dimensions === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dimensions;\n            dimensions = [];\n        }\n\n        var result = [];\n        this.each(dimensions, function () {\n            result.push(cb && cb.apply(this, arguments));\n        }, stack, context);\n        return result;\n    };\n\n    function cloneListForMapAndSample(original, excludeDimensions) {\n        var allDimensions = original.dimensions;\n        var list = new List(\n            zrUtil.map(allDimensions, original.getDimensionInfo, original),\n            original.hostModel\n        );\n        // FIXME If needs stackedOn, value may already been stacked\n        transferProperties(list, original);\n\n        var storage = list._storage = {};\n        var originalStorage = original._storage;\n        // Init storage\n        for (var i = 0; i < allDimensions.length; i++) {\n            var dim = allDimensions[i];\n            var dimStore = originalStorage[dim];\n            if (zrUtil.indexOf(excludeDimensions, dim) >= 0) {\n                storage[dim] = new dimStore.constructor(\n                    originalStorage[dim].length\n                );\n            }\n            else {\n                // Direct reference for other dimensions\n                storage[dim] = originalStorage[dim];\n            }\n        }\n        return list;\n    }\n\n    /**\n     * Data mapping to a new List with given dimensions\n     * @param {string|Array.<string>} dimensions\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     * @return {Array}\n     */\n    listProto.map = function (dimensions, cb, stack, context) {\n        dimensions = zrUtil.map(\n            normalizeDimensions(dimensions), this.getDimension, this\n        );\n\n        var list = cloneListForMapAndSample(this, dimensions);\n        // Following properties are all immutable.\n        // So we can reference to the same value\n        var indices = list.indices = this.indices;\n\n        var storage = list._storage;\n\n        var tmpRetValue = [];\n        this.each(dimensions, function () {\n            var idx = arguments[arguments.length - 1];\n            var retValue = cb && cb.apply(this, arguments);\n            if (retValue != null) {\n                // a number\n                if (typeof retValue === 'number') {\n                    tmpRetValue[0] = retValue;\n                    retValue = tmpRetValue;\n                }\n                for (var i = 0; i < retValue.length; i++) {\n                    var dim = dimensions[i];\n                    var dimStore = storage[dim];\n                    var rawIdx = indices[idx];\n                    if (dimStore) {\n                        dimStore[rawIdx] = retValue[i];\n                    }\n                }\n            }\n        }, stack, context);\n\n        return list;\n    };\n\n    /**\n     * Large data down sampling on given dimension\n     * @param {string} dimension\n     * @param {number} rate\n     * @param {Function} sampleValue\n     * @param {Function} sampleIndex Sample index for name and id\n     */\n    listProto.downSample = function (dimension, rate, sampleValue, sampleIndex) {\n        var list = cloneListForMapAndSample(this, [dimension]);\n        var storage = this._storage;\n        var targetStorage = list._storage;\n\n        var originalIndices = this.indices;\n        var indices = list.indices = [];\n\n        var frameValues = [];\n        var frameIndices = [];\n        var frameSize = Math.floor(1 / rate);\n\n        var dimStore = targetStorage[dimension];\n        var len = this.count();\n        // Copy data from original data\n        for (var i = 0; i < storage[dimension].length; i++) {\n            targetStorage[dimension][i] = storage[dimension][i];\n        }\n        for (var i = 0; i < len; i += frameSize) {\n            // Last frame\n            if (frameSize > len - i) {\n                frameSize = len - i;\n                frameValues.length = frameSize;\n            }\n            for (var k = 0; k < frameSize; k++) {\n                var idx = originalIndices[i + k];\n                frameValues[k] = dimStore[idx];\n                frameIndices[k] = idx;\n            }\n            var value = sampleValue(frameValues);\n            var idx = frameIndices[sampleIndex(frameValues, value) || 0];\n            // Only write value on the filtered data\n            dimStore[idx] = value;\n            indices.push(idx);\n        }\n\n        return list;\n    };\n\n    /**\n     * Get model of one data item.\n     *\n     * @param {number} idx\n     */\n    // FIXME Model proxy ?\n    listProto.getItemModel = function (idx) {\n        var hostModel = this.hostModel;\n        idx = this.indices[idx];\n        return new Model(this._rawData.getItem(idx), hostModel, hostModel && hostModel.ecModel);\n    };\n\n    /**\n     * Create a data differ\n     * @param {module:echarts/data/List} otherList\n     * @return {module:echarts/data/DataDiffer}\n     */\n    listProto.diff = function (otherList) {\n        var idList = this._idList;\n        var otherIdList = otherList && otherList._idList;\n        var val;\n        // Use prefix to avoid index to be the same as otherIdList[idx],\n        // which will cause weird udpate animation.\n        var prefix = 'e\\0\\0';\n\n        return new DataDiffer(\n            otherList ? otherList.indices : [],\n            this.indices,\n            function (idx) {\n                return (val = otherIdList[idx]) != null ? val : prefix + idx;\n            },\n            function (idx) {\n                return (val = idList[idx]) != null ? val : prefix + idx;\n            }\n        );\n    };\n    /**\n     * Get visual property.\n     * @param {string} key\n     */\n    listProto.getVisual = function (key) {\n        var visual = this._visual;\n        return visual && visual[key];\n    };\n\n    /**\n     * Set visual property\n     * @param {string|Object} key\n     * @param {*} [value]\n     *\n     * @example\n     *  setVisual('color', color);\n     *  setVisual({\n     *      'color': color\n     *  });\n     */\n    listProto.setVisual = function (key, val) {\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    this.setVisual(name, key[name]);\n                }\n            }\n            return;\n        }\n        this._visual = this._visual || {};\n        this._visual[key] = val;\n    };\n\n    /**\n     * Set layout property.\n     * @param {string} key\n     * @param {*} [val]\n     */\n    listProto.setLayout = function (key, val) {\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    this.setLayout(name, key[name]);\n                }\n            }\n            return;\n        }\n        this._layout[key] = val;\n    };\n\n    /**\n     * Get layout property.\n     * @param  {string} key.\n     * @return {*}\n     */\n    listProto.getLayout = function (key) {\n        return this._layout[key];\n    };\n\n    /**\n     * Get layout of single data item\n     * @param {number} idx\n     */\n    listProto.getItemLayout = function (idx) {\n        return this._itemLayouts[idx];\n    };\n\n    /**\n     * Set layout of single data item\n     * @param {number} idx\n     * @param {Object} layout\n     * @param {boolean=} [merge=false]\n     */\n    listProto.setItemLayout = function (idx, layout, merge) {\n        this._itemLayouts[idx] = merge\n            ? zrUtil.extend(this._itemLayouts[idx] || {}, layout)\n            : layout;\n    };\n\n    /**\n     * Clear all layout of single data item\n     */\n    listProto.clearItemLayouts = function () {\n        this._itemLayouts.length = 0;\n    };\n\n    /**\n     * Get visual property of single data item\n     * @param {number} idx\n     * @param {string} key\n     * @param {boolean} [ignoreParent=false]\n     */\n    listProto.getItemVisual = function (idx, key, ignoreParent) {\n        var itemVisual = this._itemVisuals[idx];\n        var val = itemVisual && itemVisual[key];\n        if (val == null && !ignoreParent) {\n            // Use global visual property\n            return this.getVisual(key);\n        }\n        return val;\n    };\n\n    /**\n     * Set visual property of single data item\n     *\n     * @param {number} idx\n     * @param {string|Object} key\n     * @param {*} [value]\n     *\n     * @example\n     *  setItemVisual(0, 'color', color);\n     *  setItemVisual(0, {\n     *      'color': color\n     *  });\n     */\n    listProto.setItemVisual = function (idx, key, value) {\n        var itemVisual = this._itemVisuals[idx] || {};\n        this._itemVisuals[idx] = itemVisual;\n\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    itemVisual[name] = key[name];\n                }\n            }\n            return;\n        }\n        itemVisual[key] = value;\n    };\n\n    /**\n     * Clear itemVisuals and list visual.\n     */\n    listProto.clearAllVisual = function () {\n        this._visual = {};\n        this._itemVisuals = [];\n    };\n\n    var setItemDataAndSeriesIndex = function (child) {\n        child.seriesIndex = this.seriesIndex;\n        child.dataIndex = this.dataIndex;\n        child.dataType = this.dataType;\n    };\n    /**\n     * Set graphic element relative to data. It can be set as null\n     * @param {number} idx\n     * @param {module:zrender/Element} [el]\n     */\n    listProto.setItemGraphicEl = function (idx, el) {\n        var hostModel = this.hostModel;\n\n        if (el) {\n            // Add data index and series index for indexing the data by element\n            // Useful in tooltip\n            el.dataIndex = idx;\n            el.dataType = this.dataType;\n            el.seriesIndex = hostModel && hostModel.seriesIndex;\n            if (el.type === 'group') {\n                el.traverse(setItemDataAndSeriesIndex, el);\n            }\n        }\n\n        this._graphicEls[idx] = el;\n    };\n\n    /**\n     * @param {number} idx\n     * @return {module:zrender/Element}\n     */\n    listProto.getItemGraphicEl = function (idx) {\n        return this._graphicEls[idx];\n    };\n\n    /**\n     * @param {Function} cb\n     * @param {*} context\n     */\n    listProto.eachItemGraphicEl = function (cb, context) {\n        zrUtil.each(this._graphicEls, function (el, idx) {\n            if (el) {\n                cb && cb.call(context, el, idx);\n            }\n        });\n    };\n\n    /**\n     * Shallow clone a new list except visual and layout properties, and graph elements.\n     * New list only change the indices.\n     */\n    listProto.cloneShallow = function () {\n        var dimensionInfoList = zrUtil.map(this.dimensions, this.getDimensionInfo, this);\n        var list = new List(dimensionInfoList, this.hostModel);\n\n        // FIXME\n        list._storage = this._storage;\n\n        transferProperties(list, this);\n\n\n        // Clone will not change the data extent and indices\n        list.indices = this.indices.slice();\n\n        if (this._extent) {\n            list._extent = zrUtil.extend({}, this._extent);\n        }\n\n        return list;\n    };\n\n    /**\n     * Wrap some method to add more feature\n     * @param {string} methodName\n     * @param {Function} injectFunction\n     */\n    listProto.wrapMethod = function (methodName, injectFunction) {\n        var originalMethod = this[methodName];\n        if (typeof originalMethod !== 'function') {\n            return;\n        }\n        this.__wrappedMethods = this.__wrappedMethods || [];\n        this.__wrappedMethods.push(methodName);\n        this[methodName] = function () {\n            var res = originalMethod.apply(this, arguments);\n            return injectFunction.apply(this, [res].concat(zrUtil.slice(arguments)));\n        };\n    };\n\n    // Methods that create a new list based on this list should be listed here.\n    // Notice that those method should `RETURN` the new list.\n    listProto.TRANSFERABLE_METHODS = ['cloneShallow', 'downSample', 'map'];\n    // Methods that change indices of this list should be listed here.\n    listProto.CHANGABLE_METHODS = ['filterSelf'];\n\n    module.exports = List;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(78)))\n\n/***/ }),\n/* 531 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Complete dimensions by data (guess dimension).\n */\n\n\n    var zrUtil = __webpack_require__(453);\n    var modelUtil = __webpack_require__(456);\n    var each = zrUtil.each;\n    var isString = zrUtil.isString;\n    var defaults = zrUtil.defaults;\n    var normalizeToArray = modelUtil.normalizeToArray;\n\n    var OTHER_DIMS = {tooltip: 1, label: 1, itemName: 1};\n\n    /**\n     * Complete the dimensions array, by user defined `dimension` and `encode`,\n     * and guessing from the data structure.\n     * If no 'value' dimension specified, the first no-named dimension will be\n     * named as 'value'.\n     *\n     * @param {Array.<string>} sysDims Necessary dimensions, like ['x', 'y'], which\n     *      provides not only dim template, but also default order.\n     *      `name` of each item provides default coord name.\n     *      [{dimsDef: []}, ...] can be specified to give names.\n     * @param {Array} data Data list. [[1, 2, 3], [2, 3, 4]].\n     * @param {Object} [opt]\n     * @param {Array.<Object|string>} [opt.dimsDef] option.series.dimensions User defined dimensions\n     *      For example: ['asdf', {name, type}, ...].\n     * @param {Object} [opt.encodeDef] option.series.encode {x: 2, y: [3, 1], tooltip: [1, 2], label: 3}\n     * @param {string} [opt.extraPrefix] Prefix of name when filling the left dimensions.\n     * @param {string} [opt.extraFromZero] If specified, extra dim names will be:\n     *                      extraPrefix + 0, extraPrefix + extraBaseIndex + 1 ...\n     *                      If not specified, extra dim names will be:\n     *                      extraPrefix, extraPrefix + 0, extraPrefix + 1 ...\n     * @param {number} [opt.dimCount] If not specified, guess by the first data item.\n     * @return {Array.<Object>} [{\n     *      name: string mandatory,\n     *      coordDim: string mandatory,\n     *      coordDimIndex: number mandatory,\n     *      type: string optional,\n     *      tooltipName: string optional,\n     *      otherDims: {\n     *          tooltip: number optional,\n     *          label: number optional\n     *      },\n     *      isExtraCoord: boolean true or undefined.\n     *      other props ...\n     * }]\n     */\n    function completeDimensions(sysDims, data, opt) {\n        data = data || [];\n        opt = opt || {};\n        sysDims = (sysDims || []).slice();\n        var dimsDef = (opt.dimsDef || []).slice();\n        var encodeDef = zrUtil.createHashMap(opt.encodeDef);\n        var dataDimNameMap = zrUtil.createHashMap();\n        var coordDimNameMap = zrUtil.createHashMap();\n        // var valueCandidate;\n        var result = [];\n\n        var dimCount = opt.dimCount;\n        if (dimCount == null) {\n            var value0 = retrieveValue(data[0]);\n            dimCount = Math.max(\n                zrUtil.isArray(value0) && value0.length || 1,\n                sysDims.length,\n                dimsDef.length\n            );\n            each(sysDims, function (sysDimItem) {\n                var sysDimItemDimsDef = sysDimItem.dimsDef;\n                sysDimItemDimsDef && (dimCount = Math.max(dimCount, sysDimItemDimsDef.length));\n            });\n        }\n\n        // Apply user defined dims (`name` and `type`) and init result.\n        for (var i = 0; i < dimCount; i++) {\n            var dimDefItem = isString(dimsDef[i]) ? {name: dimsDef[i]} : (dimsDef[i] || {});\n            var userDimName = dimDefItem.name;\n            var resultItem = result[i] = {otherDims: {}};\n            // Name will be applied later for avoiding duplication.\n            if (userDimName != null && dataDimNameMap.get(userDimName) == null) {\n                // Only if `series.dimensions` is defined in option, tooltipName\n                // will be set, and dimension will be diplayed vertically in\n                // tooltip by default.\n                resultItem.name = resultItem.tooltipName = userDimName;\n                dataDimNameMap.set(userDimName, i);\n            }\n            dimDefItem.type != null && (resultItem.type = dimDefItem.type);\n        }\n\n        // Set `coordDim` and `coordDimIndex` by `encodeDef` and normalize `encodeDef`.\n        encodeDef.each(function (dataDims, coordDim) {\n            dataDims = encodeDef.set(coordDim, normalizeToArray(dataDims).slice());\n            each(dataDims, function (resultDimIdx, coordDimIndex) {\n                // The input resultDimIdx can be dim name or index.\n                isString(resultDimIdx) && (resultDimIdx = dataDimNameMap.get(resultDimIdx));\n                if (resultDimIdx != null && resultDimIdx < dimCount) {\n                    dataDims[coordDimIndex] = resultDimIdx;\n                    applyDim(result[resultDimIdx], coordDim, coordDimIndex);\n                }\n            });\n        });\n\n        // Apply templetes and default order from `sysDims`.\n        var availDimIdx = 0;\n        each(sysDims, function (sysDimItem, sysDimIndex) {\n            var coordDim;\n            var sysDimItem;\n            var sysDimItemDimsDef;\n            var sysDimItemOtherDims;\n            if (isString(sysDimItem)) {\n                coordDim = sysDimItem;\n                sysDimItem = {};\n            }\n            else {\n                coordDim = sysDimItem.name;\n                sysDimItem = zrUtil.clone(sysDimItem);\n                // `coordDimIndex` should not be set directly.\n                sysDimItemDimsDef = sysDimItem.dimsDef;\n                sysDimItemOtherDims = sysDimItem.otherDims;\n                sysDimItem.name = sysDimItem.coordDim = sysDimItem.coordDimIndex\n                    = sysDimItem.dimsDef = sysDimItem.otherDims = null;\n            }\n\n            var dataDims = normalizeToArray(encodeDef.get(coordDim));\n            // dimensions provides default dim sequences.\n            if (!dataDims.length) {\n                for (var i = 0; i < (sysDimItemDimsDef && sysDimItemDimsDef.length || 1); i++) {\n                    while (availDimIdx < result.length && result[availDimIdx].coordDim != null) {\n                        availDimIdx++;\n                    }\n                    availDimIdx < result.length && dataDims.push(availDimIdx++);\n                }\n            }\n            // Apply templates.\n            each(dataDims, function (resultDimIdx, coordDimIndex) {\n                var resultItem = result[resultDimIdx];\n                applyDim(defaults(resultItem, sysDimItem), coordDim, coordDimIndex);\n                if (resultItem.name == null && sysDimItemDimsDef) {\n                    resultItem.name = resultItem.tooltipName = sysDimItemDimsDef[coordDimIndex];\n                }\n                sysDimItemOtherDims && defaults(resultItem.otherDims, sysDimItemOtherDims);\n            });\n        });\n\n        // Make sure the first extra dim is 'value'.\n        var extra = opt.extraPrefix || 'value';\n\n        // Set dim `name` and other `coordDim` and other props.\n        for (var resultDimIdx = 0; resultDimIdx < dimCount; resultDimIdx++) {\n            var resultItem = result[resultDimIdx] = result[resultDimIdx] || {};\n            var coordDim = resultItem.coordDim;\n\n            coordDim == null && (\n                resultItem.coordDim = genName(extra, coordDimNameMap, opt.extraFromZero),\n                resultItem.coordDimIndex = 0,\n                resultItem.isExtraCoord = true\n            );\n\n            resultItem.name == null && (resultItem.name = genName(\n                resultItem.coordDim,\n                dataDimNameMap\n            ));\n\n            resultItem.type == null && guessOrdinal(data, resultDimIdx)\n                && (resultItem.type = 'ordinal');\n        }\n\n        return result;\n\n        function applyDim(resultItem, coordDim, coordDimIndex) {\n            if (OTHER_DIMS[coordDim]) {\n                resultItem.otherDims[coordDim] = coordDimIndex;\n            }\n            else {\n                resultItem.coordDim = coordDim;\n                resultItem.coordDimIndex = coordDimIndex;\n                coordDimNameMap.set(coordDim, true);\n            }\n        }\n\n        function genName(name, map, fromZero) {\n            if (fromZero || map.get(name) != null) {\n                var i = 0;\n                while (map.get(name + i) != null) {\n                    i++;\n                }\n                name += i;\n            }\n            map.set(name, true);\n            return name;\n        }\n    }\n\n    // The rule should not be complex, otherwise user might not\n    // be able to known where the data is wrong.\n    var guessOrdinal = completeDimensions.guessOrdinal = function (data, dimIndex) {\n        for (var i = 0, len = data.length; i < len; i++) {\n            var value = retrieveValue(data[i]);\n\n            if (!zrUtil.isArray(value)) {\n                return false;\n            }\n\n            var value = value[dimIndex];\n            // Consider usage convenience, '1', '2' will be treated as \"number\".\n            if (value != null && isFinite(value)) {\n                return false;\n            }\n            else if (isString(value) && value !== '-') {\n                return true;\n            }\n        }\n        return false;\n    };\n\n    function retrieveValue(o) {\n        return zrUtil.isArray(o) ? o : zrUtil.isObject(o) ? o.value: o;\n    }\n\n    module.exports = completeDimensions;\n\n\n\n/***/ }),\n/* 532 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(453);\n    var formatUtil = __webpack_require__(461);\n    var classUtil = __webpack_require__(467);\n    var modelUtil = __webpack_require__(456);\n    var ComponentModel = __webpack_require__(469);\n    var colorPaletteMixin = __webpack_require__(533);\n    var env = __webpack_require__(460);\n    var layout = __webpack_require__(471);\n\n    var set = classUtil.set;\n    var get = classUtil.get;\n    var encodeHTML = formatUtil.encodeHTML;\n    var addCommas = formatUtil.addCommas;\n\n    var SeriesModel = ComponentModel.extend({\n\n        type: 'series.__base__',\n\n        /**\n         * @readOnly\n         */\n        seriesIndex: 0,\n\n        // coodinateSystem will be injected in the echarts/CoordinateSystem\n        coordinateSystem: null,\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        defaultOption: null,\n\n        /**\n         * Data provided for legend\n         * @type {Function}\n         */\n        // PENDING\n        legendDataProvider: null,\n\n        /**\n         * Access path of color for visual\n         */\n        visualColorAccessPath: 'itemStyle.normal.color',\n\n        /**\n         * Support merge layout params.\n         * Only support 'box' now (left/right/top/bottom/width/height).\n         * @type {string|Object} Object can be {ignoreSize: true}\n         * @readOnly\n         */\n        layoutMode: null,\n\n        init: function (option, parentModel, ecModel, extraOpt) {\n\n            /**\n             * @type {number}\n             * @readOnly\n             */\n            this.seriesIndex = this.componentIndex;\n\n            this.mergeDefaultAndTheme(option, ecModel);\n\n            var data = this.getInitialData(option, ecModel);\n            if (__DEV__) {\n                zrUtil.assert(data, 'getInitialData returned invalid data.');\n            }\n            /**\n             * @type {module:echarts/data/List|module:echarts/data/Tree|module:echarts/data/Graph}\n             * @private\n             */\n            set(this, 'dataBeforeProcessed', data);\n\n            // If we reverse the order (make data firstly, and then make\n            // dataBeforeProcessed by cloneShallow), cloneShallow will\n            // cause data.graph.data !== data when using\n            // module:echarts/data/Graph or module:echarts/data/Tree.\n            // See module:echarts/data/helper/linkList\n            this.restoreData();\n        },\n\n        /**\n         * Util for merge default and theme to option\n         * @param  {Object} option\n         * @param  {module:echarts/model/Global} ecModel\n         */\n        mergeDefaultAndTheme: function (option, ecModel) {\n            var layoutMode = this.layoutMode;\n            var inputPositionParams = layoutMode\n                ? layout.getLayoutParams(option) : {};\n\n            zrUtil.merge(\n                option,\n                ecModel.getTheme().get(this.subType)\n            );\n            zrUtil.merge(option, this.getDefaultOption());\n\n            // Default label emphasis `position` and `show`\n            // FIXME Set label in mergeOption\n            modelUtil.defaultEmphasis(option.label, modelUtil.LABEL_OPTIONS);\n\n            this.fillDataTextStyle(option.data);\n\n            if (layoutMode) {\n                layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n            }\n        },\n\n        mergeOption: function (newSeriesOption, ecModel) {\n            newSeriesOption = zrUtil.merge(this.option, newSeriesOption, true);\n            this.fillDataTextStyle(newSeriesOption.data);\n\n            var layoutMode = this.layoutMode;\n            if (layoutMode) {\n                layout.mergeLayoutParam(this.option, newSeriesOption, layoutMode);\n            }\n\n            var data = this.getInitialData(newSeriesOption, ecModel);\n            // TODO Merge data?\n            if (data) {\n                set(this, 'data', data);\n                set(this, 'dataBeforeProcessed', data.cloneShallow());\n            }\n        },\n\n        fillDataTextStyle: function (data) {\n            // Default data label emphasis `position` and `show`\n            // FIXME Tree structure data ?\n            // FIXME Performance ?\n            if (data) {\n                for (var i = 0; i < data.length; i++) {\n                    if (data[i] && data[i].label) {\n                        modelUtil.defaultEmphasis(data[i].label, modelUtil.LABEL_OPTIONS);\n                    }\n                }\n            }\n        },\n\n        /**\n         * Init a data structure from data related option in series\n         * Must be overwritten\n         */\n        getInitialData: function () {},\n\n        /**\n         * @param {string} [dataType]\n         * @return {module:echarts/data/List}\n         */\n        getData: function (dataType) {\n            var data = get(this, 'data');\n            return dataType == null ? data : data.getLinkedData(dataType);\n        },\n\n        /**\n         * @param {module:echarts/data/List} data\n         */\n        setData: function (data) {\n            set(this, 'data', data);\n        },\n\n        /**\n         * Get data before processed\n         * @return {module:echarts/data/List}\n         */\n        getRawData: function () {\n            return get(this, 'dataBeforeProcessed');\n        },\n\n        /**\n         * Coord dimension to data dimension.\n         *\n         * By default the result is the same as dimensions of series data.\n         * But in some series data dimensions are different from coord dimensions (i.e.\n         * candlestick and boxplot). Override this method to handle those cases.\n         *\n         * Coord dimension to data dimension can be one-to-many\n         *\n         * @param {string} coordDim\n         * @return {Array.<string>} dimensions on the axis.\n         */\n        coordDimToDataDim: function (coordDim) {\n            return modelUtil.coordDimToDataDim(this.getData(), coordDim);\n        },\n\n        /**\n         * Convert data dimension to coord dimension.\n         *\n         * @param {string|number} dataDim\n         * @return {string}\n         */\n        dataDimToCoordDim: function (dataDim) {\n            return modelUtil.dataDimToCoordDim(this.getData(), dataDim);\n        },\n\n        /**\n         * Get base axis if has coordinate system and has axis.\n         * By default use coordSys.getBaseAxis();\n         * Can be overrided for some chart.\n         * @return {type} description\n         */\n        getBaseAxis: function () {\n            var coordSys = this.coordinateSystem;\n            return coordSys && coordSys.getBaseAxis && coordSys.getBaseAxis();\n        },\n\n        // FIXME\n        /**\n         * Default tooltip formatter\n         *\n         * @param {number} dataIndex\n         * @param {boolean} [multipleSeries=false]\n         * @param {number} [dataType]\n         */\n        formatTooltip: function (dataIndex, multipleSeries, dataType) {\n            function formatArrayValue(value) {\n                var vertially = zrUtil.reduce(value, function (vertially, val, idx) {\n                    var dimItem = data.getDimensionInfo(idx);\n                    return vertially |= dimItem && dimItem.tooltip !== false && dimItem.tooltipName != null;\n                }, 0);\n\n                var result = [];\n                var tooltipDims = modelUtil.otherDimToDataDim(data, 'tooltip');\n\n                tooltipDims.length\n                    ? zrUtil.each(tooltipDims, function (dimIdx) {\n                        setEachItem(data.get(dimIdx, dataIndex), dimIdx);\n                    })\n                    // By default, all dims is used on tooltip.\n                    : zrUtil.each(value, setEachItem);\n\n                function setEachItem(val, dimIdx) {\n                    var dimInfo = data.getDimensionInfo(dimIdx);\n                    // If `dimInfo.tooltip` is not set, show tooltip.\n                    if (!dimInfo || dimInfo.otherDims.tooltip === false) {\n                        return;\n                    }\n                    var dimType = dimInfo.type;\n                    var valStr = (vertially ? '- ' + (dimInfo.tooltipName || dimInfo.name) + ': ' : '')\n                        + (dimType === 'ordinal'\n                            ? val + ''\n                            : dimType === 'time'\n                            ? (multipleSeries ? '' : formatUtil.formatTime('yyyy/MM/dd hh:mm:ss', val))\n                            : addCommas(val)\n                        );\n                    valStr && result.push(encodeHTML(valStr));\n                }\n\n                return (vertially ? '<br/>' : '') + result.join(vertially ? '<br/>' : ', ');\n            }\n\n            var data = get(this, 'data');\n\n            var value = this.getRawValue(dataIndex);\n            var formattedValue = zrUtil.isArray(value)\n                ? formatArrayValue(value) : encodeHTML(addCommas(value));\n            var name = data.getName(dataIndex);\n\n            var color = data.getItemVisual(dataIndex, 'color');\n            if (zrUtil.isObject(color) && color.colorStops) {\n                color = (color.colorStops[0] || {}).color;\n            }\n            color = color || 'transparent';\n\n            var colorEl = formatUtil.getTooltipMarker(color);\n\n            var seriesName = this.name;\n            // FIXME\n            if (seriesName === '\\0-') {\n                // Not show '-'\n                seriesName = '';\n            }\n            seriesName = seriesName\n                ? encodeHTML(seriesName) + (!multipleSeries ? '<br/>' : ': ')\n                : '';\n            return !multipleSeries\n                ? seriesName + colorEl\n                    + (name\n                        ? encodeHTML(name) + ': ' + formattedValue\n                        : formattedValue\n                    )\n                : colorEl + seriesName + formattedValue;\n        },\n\n        /**\n         * @return {boolean}\n         */\n        isAnimationEnabled: function () {\n            if (env.node) {\n                return false;\n            }\n\n            var animationEnabled = this.getShallow('animation');\n            if (animationEnabled) {\n                if (this.getData().count() > this.getShallow('animationThreshold')) {\n                    animationEnabled = false;\n                }\n            }\n            return animationEnabled;\n        },\n\n        restoreData: function () {\n            set(this, 'data', get(this, 'dataBeforeProcessed').cloneShallow());\n        },\n\n        getColorFromPalette: function (name, scope) {\n            var ecModel = this.ecModel;\n            // PENDING\n            var color = colorPaletteMixin.getColorFromPalette.call(this, name, scope);\n            if (!color) {\n                color = ecModel.getColorFromPalette(name, scope);\n            }\n            return color;\n        },\n\n        /**\n         * Get data indices for show tooltip content. See tooltip.\n         * @abstract\n         * @param {Array.<string>|string} dim\n         * @param {Array.<number>} value\n         * @param {module:echarts/coord/single/SingleAxis} baseAxis\n         * @return {Object} {dataIndices, nestestValue}.\n         */\n        getAxisTooltipData: null,\n\n        /**\n         * See tooltip.\n         * @abstract\n         * @param {number} dataIndex\n         * @return {Array.<number>} Point of tooltip. null/undefined can be returned.\n         */\n        getTooltipPosition: null\n    });\n\n    zrUtil.mixin(SeriesModel, modelUtil.dataFormatMixin);\n    zrUtil.mixin(SeriesModel, colorPaletteMixin);\n\n    module.exports = SeriesModel;\n\n\n/***/ }),\n/* 533 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var classUtil = __webpack_require__(467);\n    var set = classUtil.set;\n    var get = classUtil.get;\n\n    module.exports = {\n        clearColorPalette: function () {\n            set(this, 'colorIdx', 0);\n            set(this, 'colorNameMap', {});\n        },\n\n        getColorFromPalette: function (name, scope) {\n            scope = scope || this;\n            var colorIdx = get(scope, 'colorIdx') || 0;\n            var colorNameMap = get(scope, 'colorNameMap') || set(scope, 'colorNameMap', {});\n            // Use `hasOwnProperty` to avoid conflict with Object.prototype.\n            if (colorNameMap.hasOwnProperty(name)) {\n                return colorNameMap[name];\n            }\n            var colorPalette = this.get('color', true) || [];\n            if (!colorPalette.length) {\n                return;\n            }\n\n            var color = colorPalette[colorIdx];\n            if (name) {\n                colorNameMap[name] = color;\n            }\n            set(scope, 'colorIdx', (colorIdx + 1) % colorPalette.length);\n\n            return color;\n        }\n    };\n\n\n/***/ }),\n/* 534 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * For testable.\n */\n\n\n    var numberUtil = __webpack_require__(457);\n\n    var roundNumber = numberUtil.round;\n\n    var helper = {};\n\n    /**\n     * @param {Array.<number>} extent Both extent[0] and extent[1] should be valid number.\n     *                                Should be extent[0] < extent[1].\n     * @param {number} splitNumber splitNumber should be >= 1.\n     * @param {number} [minInterval]\n     * @return {Object} {interval, intervalPrecision, niceTickExtent}\n     */\n    helper.intervalScaleNiceTicks = function (extent, splitNumber, minInterval) {\n        var result = {};\n        var span = extent[1] - extent[0];\n\n        var interval = result.interval = numberUtil.nice(span / splitNumber, true);\n        if (minInterval != null && interval < minInterval) {\n            interval = result.interval = minInterval;\n        }\n        // Tow more digital for tick.\n        var precision = result.intervalPrecision = helper.getIntervalPrecision(interval);\n        // Niced extent inside original extent\n        var niceTickExtent = result.niceTickExtent = [\n            roundNumber(Math.ceil(extent[0] / interval) * interval, precision),\n            roundNumber(Math.floor(extent[1] / interval) * interval, precision)\n        ];\n\n        helper.fixExtent(niceTickExtent, extent);\n\n        return result;\n    };\n\n    /**\n     * @param {number} interval\n     * @return {number} interval precision\n     */\n    helper.getIntervalPrecision = function (interval) {\n        // Tow more digital for tick.\n        return numberUtil.getPrecisionSafe(interval) + 2;\n    };\n\n    function clamp(niceTickExtent, idx, extent) {\n        niceTickExtent[idx] = Math.max(Math.min(niceTickExtent[idx], extent[1]), extent[0]);\n    }\n\n    // In some cases (e.g., splitNumber is 1), niceTickExtent may be out of extent.\n    helper.fixExtent = function (niceTickExtent, extent) {\n        !isFinite(niceTickExtent[0]) && (niceTickExtent[0] = extent[0]);\n        !isFinite(niceTickExtent[1]) && (niceTickExtent[1] = extent[1]);\n        clamp(niceTickExtent, 0, extent);\n        clamp(niceTickExtent, 1, extent);\n        if (niceTickExtent[0] > niceTickExtent[1]) {\n            niceTickExtent[0] = niceTickExtent[1];\n        }\n    };\n\n    helper.intervalScaleGetTicks = function (interval, extent, niceTickExtent, intervalPrecision) {\n        var ticks = [];\n\n        // If interval is 0, return [];\n        if (!interval) {\n            return ticks;\n        }\n\n        // Consider this case: using dataZoom toolbox, zoom and zoom.\n        var safeLimit = 10000;\n\n        if (extent[0] < niceTickExtent[0]) {\n            ticks.push(extent[0]);\n        }\n        var tick = niceTickExtent[0];\n\n        while (tick <= niceTickExtent[1]) {\n            ticks.push(tick);\n            // Avoid rounding error\n            tick = roundNumber(tick + interval, intervalPrecision);\n            if (tick === ticks[ticks.length - 1]) {\n                // Consider out of safe float point, e.g.,\n                // -3711126.9907707 + 2e-10 === -3711126.9907707\n                break;\n            }\n            if (ticks.length > safeLimit) {\n                return [];\n            }\n        }\n        // Consider this case: the last item of ticks is smaller\n        // than niceTickExtent[1] and niceTickExtent[1] === extent[1].\n        if (extent[1] > (ticks.length ? ticks[ticks.length - 1] : niceTickExtent[1])) {\n            ticks.push(extent[1]);\n        }\n\n        return ticks;\n    };\n\n    module.exports = helper;\n\n\n/***/ }),\n/* 535 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var Group = __webpack_require__(487);\n    var componentUtil = __webpack_require__(501);\n    var clazzUtil = __webpack_require__(467);\n    var modelUtil = __webpack_require__(456);\n    var zrUtil = __webpack_require__(453);\n\n    function Chart() {\n\n        /**\n         * @type {module:zrender/container/Group}\n         * @readOnly\n         */\n        this.group = new Group();\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        this.uid = componentUtil.getUID('viewChart');\n    }\n\n    Chart.prototype = {\n\n        type: 'chart',\n\n        /**\n         * Init the chart\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        init: function (ecModel, api) {},\n\n        /**\n         * Render the chart\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        render: function (seriesModel, ecModel, api, payload) {},\n\n        /**\n         * Highlight series or specified data item\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        highlight: function (seriesModel, ecModel, api, payload) {\n            toggleHighlight(seriesModel.getData(), payload, 'emphasis');\n        },\n\n        /**\n         * Downplay series or specified data item\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        downplay: function (seriesModel, ecModel, api, payload) {\n            toggleHighlight(seriesModel.getData(), payload, 'normal');\n        },\n\n        /**\n         * Remove self\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        remove: function (ecModel, api) {\n            this.group.removeAll();\n        },\n\n        /**\n         * Dispose self\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        dispose: function () {}\n\n        /**\n         * The view contains the given point.\n         * @interface\n         * @param {Array.<number>} point\n         * @return {boolean}\n         */\n        // containPoint: function () {}\n\n    };\n\n    var chartProto = Chart.prototype;\n    chartProto.updateView\n        = chartProto.updateLayout\n        = chartProto.updateVisual\n        = function (seriesModel, ecModel, api, payload) {\n            this.render(seriesModel, ecModel, api, payload);\n        };\n\n    /**\n     * Set state of single element\n     * @param  {module:zrender/Element} el\n     * @param  {string} state\n     */\n    function elSetState(el, state) {\n        if (el) {\n            el.trigger(state);\n            if (el.type === 'group') {\n                for (var i = 0; i < el.childCount(); i++) {\n                    elSetState(el.childAt(i), state);\n                }\n            }\n        }\n    }\n    /**\n     * @param  {module:echarts/data/List} data\n     * @param  {Object} payload\n     * @param  {string} state 'normal'|'emphasis'\n     * @inner\n     */\n    function toggleHighlight(data, payload, state) {\n        var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n        if (dataIndex != null) {\n            zrUtil.each(modelUtil.normalizeToArray(dataIndex), function (dataIdx) {\n                elSetState(data.getItemGraphicEl(dataIdx), state);\n            });\n        }\n        else {\n            data.eachItemGraphicEl(function (el) {\n                elSetState(el, state);\n            });\n        }\n    }\n\n    // Enable Chart.extend.\n    clazzUtil.enableClassExtend(Chart, ['dispose']);\n\n    // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(Chart, {registerWhenExtend: true});\n\n    module.exports = Chart;\n\n\n/***/ }),\n/* 536 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var Group = __webpack_require__(487);\n    var componentUtil = __webpack_require__(501);\n    var clazzUtil = __webpack_require__(467);\n\n    var Component = function () {\n        /**\n         * @type {module:zrender/container/Group}\n         * @readOnly\n         */\n        this.group = new Group();\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        this.uid = componentUtil.getUID('viewComponent');\n    };\n\n    Component.prototype = {\n\n        constructor: Component,\n\n        init: function (ecModel, api) {},\n\n        render: function (componentModel, ecModel, api, payload) {},\n\n        dispose: function () {}\n\n    };\n\n    var componentProto = Component.prototype;\n    componentProto.updateView\n        = componentProto.updateLayout\n        = componentProto.updateVisual\n        = function (seriesModel, ecModel, api, payload) {\n            // Do nothing;\n        };\n    // Enable Component.extend.\n    clazzUtil.enableClassExtend(Component);\n\n    // Enable capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(Component, {registerWhenExtend: true});\n\n    module.exports = Component;\n\n\n/***/ }),\n/* 537 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar replace = String.prototype.replace;\nvar percentTwenties = /%20/g;\n\nmodule.exports = {\n    'default': 'RFC3986',\n    formatters: {\n        RFC1738: function (value) {\n            return replace.call(value, percentTwenties, '+');\n        },\n        RFC3986: function (value) {\n            return value;\n        }\n    },\n    RFC1738: 'RFC1738',\n    RFC3986: 'RFC3986'\n};\n\n\n/***/ }),\n/* 538 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar has = Object.prototype.hasOwnProperty;\n\nvar hexTable = (function () {\n    var array = [];\n    for (var i = 0; i < 256; ++i) {\n        array.push('%' + ((i < 16 ? '0' : '') + i.toString(16)).toUpperCase());\n    }\n\n    return array;\n}());\n\nexports.arrayToObject = function (source, options) {\n    var obj = options && options.plainObjects ? Object.create(null) : {};\n    for (var i = 0; i < source.length; ++i) {\n        if (typeof source[i] !== 'undefined') {\n            obj[i] = source[i];\n        }\n    }\n\n    return obj;\n};\n\nexports.merge = function (target, source, options) {\n    if (!source) {\n        return target;\n    }\n\n    if (typeof source !== 'object') {\n        if (Array.isArray(target)) {\n            target.push(source);\n        } else if (typeof target === 'object') {\n            if (options.plainObjects || options.allowPrototypes || !has.call(Object.prototype, source)) {\n                target[source] = true;\n            }\n        } else {\n            return [target, source];\n        }\n\n        return target;\n    }\n\n    if (typeof target !== 'object') {\n        return [target].concat(source);\n    }\n\n    var mergeTarget = target;\n    if (Array.isArray(target) && !Array.isArray(source)) {\n        mergeTarget = exports.arrayToObject(target, options);\n    }\n\n    if (Array.isArray(target) && Array.isArray(source)) {\n        source.forEach(function (item, i) {\n            if (has.call(target, i)) {\n                if (target[i] && typeof target[i] === 'object') {\n                    target[i] = exports.merge(target[i], item, options);\n                } else {\n                    target.push(item);\n                }\n            } else {\n                target[i] = item;\n            }\n        });\n        return target;\n    }\n\n    return Object.keys(source).reduce(function (acc, key) {\n        var value = source[key];\n\n        if (Object.prototype.hasOwnProperty.call(acc, key)) {\n            acc[key] = exports.merge(acc[key], value, options);\n        } else {\n            acc[key] = value;\n        }\n        return acc;\n    }, mergeTarget);\n};\n\nexports.decode = function (str) {\n    try {\n        return decodeURIComponent(str.replace(/\\+/g, ' '));\n    } catch (e) {\n        return str;\n    }\n};\n\nexports.encode = function (str) {\n    // This code was originally written by Brian White (mscdex) for the io.js core querystring library.\n    // It has been adapted here for stricter adherence to RFC 3986\n    if (str.length === 0) {\n        return str;\n    }\n\n    var string = typeof str === 'string' ? str : String(str);\n\n    var out = '';\n    for (var i = 0; i < string.length; ++i) {\n        var c = string.charCodeAt(i);\n\n        if (\n            c === 0x2D || // -\n            c === 0x2E || // .\n            c === 0x5F || // _\n            c === 0x7E || // ~\n            (c >= 0x30 && c <= 0x39) || // 0-9\n            (c >= 0x41 && c <= 0x5A) || // a-z\n            (c >= 0x61 && c <= 0x7A) // A-Z\n        ) {\n            out += string.charAt(i);\n            continue;\n        }\n\n        if (c < 0x80) {\n            out = out + hexTable[c];\n            continue;\n        }\n\n        if (c < 0x800) {\n            out = out + (hexTable[0xC0 | (c >> 6)] + hexTable[0x80 | (c & 0x3F)]);\n            continue;\n        }\n\n        if (c < 0xD800 || c >= 0xE000) {\n            out = out + (hexTable[0xE0 | (c >> 12)] + hexTable[0x80 | ((c >> 6) & 0x3F)] + hexTable[0x80 | (c & 0x3F)]);\n            continue;\n        }\n\n        i += 1;\n        c = 0x10000 + (((c & 0x3FF) << 10) | (string.charCodeAt(i) & 0x3FF));\n        out += hexTable[0xF0 | (c >> 18)] + hexTable[0x80 | ((c >> 12) & 0x3F)] + hexTable[0x80 | ((c >> 6) & 0x3F)] + hexTable[0x80 | (c & 0x3F)]; // eslint-disable-line max-len\n    }\n\n    return out;\n};\n\nexports.compact = function (obj, references) {\n    if (typeof obj !== 'object' || obj === null) {\n        return obj;\n    }\n\n    var refs = references || [];\n    var lookup = refs.indexOf(obj);\n    if (lookup !== -1) {\n        return refs[lookup];\n    }\n\n    refs.push(obj);\n\n    if (Array.isArray(obj)) {\n        var compacted = [];\n\n        for (var i = 0; i < obj.length; ++i) {\n            if (obj[i] && typeof obj[i] === 'object') {\n                compacted.push(exports.compact(obj[i], refs));\n            } else if (typeof obj[i] !== 'undefined') {\n                compacted.push(obj[i]);\n            }\n        }\n\n        return compacted;\n    }\n\n    var keys = Object.keys(obj);\n    keys.forEach(function (key) {\n        obj[key] = exports.compact(obj[key], refs);\n    });\n\n    return obj;\n};\n\nexports.isRegExp = function (obj) {\n    return Object.prototype.toString.call(obj) === '[object RegExp]';\n};\n\nexports.isBuffer = function (obj) {\n    if (obj === null || typeof obj === 'undefined') {\n        return false;\n    }\n\n    return !!(obj.constructor && obj.constructor.isBuffer && obj.constructor.isBuffer(obj));\n};\n\n\n/***/ }),\n/* 539 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * @module zrender/Element\n */\n\n\n    var guid = __webpack_require__(544);\n    var Eventful = __webpack_require__(476);\n    var Transformable = __webpack_require__(550);\n    var Animatable = __webpack_require__(681);\n    var zrUtil = __webpack_require__(453);\n\n    /**\n     * @alias module:zrender/Element\n     * @constructor\n     * @extends {module:zrender/mixin/Animatable}\n     * @extends {module:zrender/mixin/Transformable}\n     * @extends {module:zrender/mixin/Eventful}\n     */\n    var Element = function (opts) {\n\n        Transformable.call(this, opts);\n        Eventful.call(this, opts);\n        Animatable.call(this, opts);\n\n        /**\n         * 画布元素ID\n         * @type {string}\n         */\n        this.id = opts.id || guid();\n    };\n\n    Element.prototype = {\n\n        /**\n         * 元素类型\n         * Element type\n         * @type {string}\n         */\n        type: 'element',\n\n        /**\n         * 元素名字\n         * Element name\n         * @type {string}\n         */\n        name: '',\n\n        /**\n         * ZRender 实例对象，会在 element 添加到 zrender 实例中后自动赋值\n         * ZRender instance will be assigned when element is associated with zrender\n         * @name module:/zrender/Element#__zr\n         * @type {module:zrender/ZRender}\n         */\n        __zr: null,\n\n        /**\n         * 图形是否忽略，为true时忽略图形的绘制以及事件触发\n         * If ignore drawing and events of the element object\n         * @name module:/zrender/Element#ignore\n         * @type {boolean}\n         * @default false\n         */\n        ignore: false,\n\n        /**\n         * 用于裁剪的路径(shape)，所有 Group 内的路径在绘制时都会被这个路径裁剪\n         * 该路径会继承被裁减对象的变换\n         * @type {module:zrender/graphic/Path}\n         * @see http://www.w3.org/TR/2dcontext/#clipping-region\n         * @readOnly\n         */\n        clipPath: null,\n\n        /**\n         * Drift element\n         * @param  {number} dx dx on the global space\n         * @param  {number} dy dy on the global space\n         */\n        drift: function (dx, dy) {\n            switch (this.draggable) {\n                case 'horizontal':\n                    dy = 0;\n                    break;\n                case 'vertical':\n                    dx = 0;\n                    break;\n            }\n\n            var m = this.transform;\n            if (!m) {\n                m = this.transform = [1, 0, 0, 1, 0, 0];\n            }\n            m[4] += dx;\n            m[5] += dy;\n\n            this.decomposeTransform();\n            this.dirty(false);\n        },\n\n        /**\n         * Hook before update\n         */\n        beforeUpdate: function () {},\n        /**\n         * Hook after update\n         */\n        afterUpdate: function () {},\n        /**\n         * Update each frame\n         */\n        update: function () {\n            this.updateTransform();\n        },\n\n        /**\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        traverse: function (cb, context) {},\n\n        /**\n         * @protected\n         */\n        attrKV: function (key, value) {\n            if (key === 'position' || key === 'scale' || key === 'origin') {\n                // Copy the array\n                if (value) {\n                    var target = this[key];\n                    if (!target) {\n                        target = this[key] = [];\n                    }\n                    target[0] = value[0];\n                    target[1] = value[1];\n                }\n            }\n            else {\n                this[key] = value;\n            }\n        },\n\n        /**\n         * Hide the element\n         */\n        hide: function () {\n            this.ignore = true;\n            this.__zr && this.__zr.refresh();\n        },\n\n        /**\n         * Show the element\n         */\n        show: function () {\n            this.ignore = false;\n            this.__zr && this.__zr.refresh();\n        },\n\n        /**\n         * @param {string|Object} key\n         * @param {*} value\n         */\n        attr: function (key, value) {\n            if (typeof key === 'string') {\n                this.attrKV(key, value);\n            }\n            else if (zrUtil.isObject(key)) {\n                for (var name in key) {\n                    if (key.hasOwnProperty(name)) {\n                        this.attrKV(name, key[name]);\n                    }\n                }\n            }\n\n            this.dirty(false);\n\n            return this;\n        },\n\n        /**\n         * @param {module:zrender/graphic/Path} clipPath\n         */\n        setClipPath: function (clipPath) {\n            var zr = this.__zr;\n            if (zr) {\n                clipPath.addSelfToZr(zr);\n            }\n\n            // Remove previous clip path\n            if (this.clipPath && this.clipPath !== clipPath) {\n                this.removeClipPath();\n            }\n\n            this.clipPath = clipPath;\n            clipPath.__zr = zr;\n            clipPath.__clipTarget = this;\n\n            this.dirty(false);\n        },\n\n        /**\n         */\n        removeClipPath: function () {\n            var clipPath = this.clipPath;\n            if (clipPath) {\n                if (clipPath.__zr) {\n                    clipPath.removeSelfFromZr(clipPath.__zr);\n                }\n\n                clipPath.__zr = null;\n                clipPath.__clipTarget = null;\n                this.clipPath = null;\n\n                this.dirty(false);\n            }\n        },\n\n        /**\n         * Add self from zrender instance.\n         * Not recursively because it will be invoked when element added to storage.\n         * @param {module:zrender/ZRender} zr\n         */\n        addSelfToZr: function (zr) {\n            this.__zr = zr;\n            // 添加动画\n            var animators = this.animators;\n            if (animators) {\n                for (var i = 0; i < animators.length; i++) {\n                    zr.animation.addAnimator(animators[i]);\n                }\n            }\n\n            if (this.clipPath) {\n                this.clipPath.addSelfToZr(zr);\n            }\n        },\n\n        /**\n         * Remove self from zrender instance.\n         * Not recursively because it will be invoked when element added to storage.\n         * @param {module:zrender/ZRender} zr\n         */\n        removeSelfFromZr: function (zr) {\n            this.__zr = null;\n            // 移除动画\n            var animators = this.animators;\n            if (animators) {\n                for (var i = 0; i < animators.length; i++) {\n                    zr.animation.removeAnimator(animators[i]);\n                }\n            }\n\n            if (this.clipPath) {\n                this.clipPath.removeSelfFromZr(zr);\n            }\n        }\n    };\n\n    zrUtil.mixin(Element, Animatable);\n    zrUtil.mixin(Element, Transformable);\n    zrUtil.mixin(Element, Eventful);\n\n    module.exports = Element;\n\n\n/***/ }),\n/* 540 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module echarts/animation/Animator\n */\n\n\n    var Clip = __webpack_require__(653);\n    var color = __webpack_require__(477);\n    var util = __webpack_require__(453);\n    var isArrayLike = util.isArrayLike;\n\n    var arraySlice = Array.prototype.slice;\n\n    function defaultGetter(target, key) {\n        return target[key];\n    }\n\n    function defaultSetter(target, key, value) {\n        target[key] = value;\n    }\n\n    /**\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} percent\n     * @return {number}\n     */\n    function interpolateNumber(p0, p1, percent) {\n        return (p1 - p0) * percent + p0;\n    }\n\n    /**\n     * @param  {string} p0\n     * @param  {string} p1\n     * @param  {number} percent\n     * @return {string}\n     */\n    function interpolateString(p0, p1, percent) {\n        return percent > 0.5 ? p1 : p0;\n    }\n\n    /**\n     * @param  {Array} p0\n     * @param  {Array} p1\n     * @param  {number} percent\n     * @param  {Array} out\n     * @param  {number} arrDim\n     */\n    function interpolateArray(p0, p1, percent, out, arrDim) {\n        var len = p0.length;\n        if (arrDim == 1) {\n            for (var i = 0; i < len; i++) {\n                out[i] = interpolateNumber(p0[i], p1[i], percent);\n            }\n        }\n        else {\n            var len2 = len && p0[0].length;\n            for (var i = 0; i < len; i++) {\n                for (var j = 0; j < len2; j++) {\n                    out[i][j] = interpolateNumber(\n                        p0[i][j], p1[i][j], percent\n                    );\n                }\n            }\n        }\n    }\n\n    // arr0 is source array, arr1 is target array.\n    // Do some preprocess to avoid error happened when interpolating from arr0 to arr1\n    function fillArr(arr0, arr1, arrDim) {\n        var arr0Len = arr0.length;\n        var arr1Len = arr1.length;\n        if (arr0Len !== arr1Len) {\n            // FIXME Not work for TypedArray\n            var isPreviousLarger = arr0Len > arr1Len;\n            if (isPreviousLarger) {\n                // Cut the previous\n                arr0.length = arr1Len;\n            }\n            else {\n                // Fill the previous\n                for (var i = arr0Len; i < arr1Len; i++) {\n                    arr0.push(\n                        arrDim === 1 ? arr1[i] : arraySlice.call(arr1[i])\n                    );\n                }\n            }\n        }\n        // Handling NaN value\n        var len2 = arr0[0] && arr0[0].length;\n        for (var i = 0; i < arr0.length; i++) {\n            if (arrDim === 1) {\n                if (isNaN(arr0[i])) {\n                    arr0[i] = arr1[i];\n                }\n            }\n            else {\n                for (var j = 0; j < len2; j++) {\n                    if (isNaN(arr0[i][j])) {\n                        arr0[i][j] = arr1[i][j];\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @param  {Array} arr0\n     * @param  {Array} arr1\n     * @param  {number} arrDim\n     * @return {boolean}\n     */\n    function isArraySame(arr0, arr1, arrDim) {\n        if (arr0 === arr1) {\n            return true;\n        }\n        var len = arr0.length;\n        if (len !== arr1.length) {\n            return false;\n        }\n        if (arrDim === 1) {\n            for (var i = 0; i < len; i++) {\n                if (arr0[i] !== arr1[i]) {\n                    return false;\n                }\n            }\n        }\n        else {\n            var len2 = arr0[0].length;\n            for (var i = 0; i < len; i++) {\n                for (var j = 0; j < len2; j++) {\n                    if (arr0[i][j] !== arr1[i][j]) {\n                        return false;\n                    }\n                }\n            }\n        }\n        return true;\n    }\n\n    /**\n     * Catmull Rom interpolate array\n     * @param  {Array} p0\n     * @param  {Array} p1\n     * @param  {Array} p2\n     * @param  {Array} p3\n     * @param  {number} t\n     * @param  {number} t2\n     * @param  {number} t3\n     * @param  {Array} out\n     * @param  {number} arrDim\n     */\n    function catmullRomInterpolateArray(\n        p0, p1, p2, p3, t, t2, t3, out, arrDim\n    ) {\n        var len = p0.length;\n        if (arrDim == 1) {\n            for (var i = 0; i < len; i++) {\n                out[i] = catmullRomInterpolate(\n                    p0[i], p1[i], p2[i], p3[i], t, t2, t3\n                );\n            }\n        }\n        else {\n            var len2 = p0[0].length;\n            for (var i = 0; i < len; i++) {\n                for (var j = 0; j < len2; j++) {\n                    out[i][j] = catmullRomInterpolate(\n                        p0[i][j], p1[i][j], p2[i][j], p3[i][j],\n                        t, t2, t3\n                    );\n                }\n            }\n        }\n    }\n\n    /**\n     * Catmull Rom interpolate number\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @param  {number} t2\n     * @param  {number} t3\n     * @return {number}\n     */\n    function catmullRomInterpolate(p0, p1, p2, p3, t, t2, t3) {\n        var v0 = (p2 - p0) * 0.5;\n        var v1 = (p3 - p1) * 0.5;\n        return (2 * (p1 - p2) + v0 + v1) * t3\n                + (-3 * (p1 - p2) - 2 * v0 - v1) * t2\n                + v0 * t + p1;\n    }\n\n    function cloneValue(value) {\n        if (isArrayLike(value)) {\n            var len = value.length;\n            if (isArrayLike(value[0])) {\n                var ret = [];\n                for (var i = 0; i < len; i++) {\n                    ret.push(arraySlice.call(value[i]));\n                }\n                return ret;\n            }\n\n            return arraySlice.call(value);\n        }\n\n        return value;\n    }\n\n    function rgba2String(rgba) {\n        rgba[0] = Math.floor(rgba[0]);\n        rgba[1] = Math.floor(rgba[1]);\n        rgba[2] = Math.floor(rgba[2]);\n\n        return 'rgba(' + rgba.join(',') + ')';\n    }\n\n    function getArrayDim(keyframes) {\n        var lastValue = keyframes[keyframes.length - 1].value;\n        return isArrayLike(lastValue && lastValue[0]) ? 2 : 1;\n    }\n\n    function createTrackClip (animator, easing, oneTrackDone, keyframes, propName) {\n        var getter = animator._getter;\n        var setter = animator._setter;\n        var useSpline = easing === 'spline';\n\n        var trackLen = keyframes.length;\n        if (!trackLen) {\n            return;\n        }\n        // Guess data type\n        var firstVal = keyframes[0].value;\n        var isValueArray = isArrayLike(firstVal);\n        var isValueColor = false;\n        var isValueString = false;\n\n        // For vertices morphing\n        var arrDim = isValueArray ? getArrayDim(keyframes) : 0;\n\n        var trackMaxTime;\n        // Sort keyframe as ascending\n        keyframes.sort(function(a, b) {\n            return a.time - b.time;\n        });\n\n        trackMaxTime = keyframes[trackLen - 1].time;\n        // Percents of each keyframe\n        var kfPercents = [];\n        // Value of each keyframe\n        var kfValues = [];\n        var prevValue = keyframes[0].value;\n        var isAllValueEqual = true;\n        for (var i = 0; i < trackLen; i++) {\n            kfPercents.push(keyframes[i].time / trackMaxTime);\n            // Assume value is a color when it is a string\n            var value = keyframes[i].value;\n\n            // Check if value is equal, deep check if value is array\n            if (!((isValueArray && isArraySame(value, prevValue, arrDim))\n                || (!isValueArray && value === prevValue))) {\n                isAllValueEqual = false;\n            }\n            prevValue = value;\n\n            // Try converting a string to a color array\n            if (typeof value == 'string') {\n                var colorArray = color.parse(value);\n                if (colorArray) {\n                    value = colorArray;\n                    isValueColor = true;\n                }\n                else {\n                    isValueString = true;\n                }\n            }\n            kfValues.push(value);\n        }\n        if (isAllValueEqual) {\n            return;\n        }\n\n        var lastValue = kfValues[trackLen - 1];\n        // Polyfill array and NaN value\n        for (var i = 0; i < trackLen - 1; i++) {\n            if (isValueArray) {\n                fillArr(kfValues[i], lastValue, arrDim);\n            }\n            else {\n                if (isNaN(kfValues[i]) && !isNaN(lastValue) && !isValueString && !isValueColor) {\n                    kfValues[i] = lastValue;\n                }\n            }\n        }\n        isValueArray && fillArr(getter(animator._target, propName), lastValue, arrDim);\n\n        // Cache the key of last frame to speed up when\n        // animation playback is sequency\n        var lastFrame = 0;\n        var lastFramePercent = 0;\n        var start;\n        var w;\n        var p0;\n        var p1;\n        var p2;\n        var p3;\n\n        if (isValueColor) {\n            var rgba = [0, 0, 0, 0];\n        }\n\n        var onframe = function (target, percent) {\n            // Find the range keyframes\n            // kf1-----kf2---------current--------kf3\n            // find kf2 and kf3 and do interpolation\n            var frame;\n            // In the easing function like elasticOut, percent may less than 0\n            if (percent < 0) {\n                frame = 0;\n            }\n            else if (percent < lastFramePercent) {\n                // Start from next key\n                // PENDING start from lastFrame ?\n                start = Math.min(lastFrame + 1, trackLen - 1);\n                for (frame = start; frame >= 0; frame--) {\n                    if (kfPercents[frame] <= percent) {\n                        break;\n                    }\n                }\n                // PENDING really need to do this ?\n                frame = Math.min(frame, trackLen - 2);\n            }\n            else {\n                for (frame = lastFrame; frame < trackLen; frame++) {\n                    if (kfPercents[frame] > percent) {\n                        break;\n                    }\n                }\n                frame = Math.min(frame - 1, trackLen - 2);\n            }\n            lastFrame = frame;\n            lastFramePercent = percent;\n\n            var range = (kfPercents[frame + 1] - kfPercents[frame]);\n            if (range === 0) {\n                return;\n            }\n            else {\n                w = (percent - kfPercents[frame]) / range;\n            }\n            if (useSpline) {\n                p1 = kfValues[frame];\n                p0 = kfValues[frame === 0 ? frame : frame - 1];\n                p2 = kfValues[frame > trackLen - 2 ? trackLen - 1 : frame + 1];\n                p3 = kfValues[frame > trackLen - 3 ? trackLen - 1 : frame + 2];\n                if (isValueArray) {\n                    catmullRomInterpolateArray(\n                        p0, p1, p2, p3, w, w * w, w * w * w,\n                        getter(target, propName),\n                        arrDim\n                    );\n                }\n                else {\n                    var value;\n                    if (isValueColor) {\n                        value = catmullRomInterpolateArray(\n                            p0, p1, p2, p3, w, w * w, w * w * w,\n                            rgba, 1\n                        );\n                        value = rgba2String(rgba);\n                    }\n                    else if (isValueString) {\n                        // String is step(0.5)\n                        return interpolateString(p1, p2, w);\n                    }\n                    else {\n                        value = catmullRomInterpolate(\n                            p0, p1, p2, p3, w, w * w, w * w * w\n                        );\n                    }\n                    setter(\n                        target,\n                        propName,\n                        value\n                    );\n                }\n            }\n            else {\n                if (isValueArray) {\n                    interpolateArray(\n                        kfValues[frame], kfValues[frame + 1], w,\n                        getter(target, propName),\n                        arrDim\n                    );\n                }\n                else {\n                    var value;\n                    if (isValueColor) {\n                        interpolateArray(\n                            kfValues[frame], kfValues[frame + 1], w,\n                            rgba, 1\n                        );\n                        value = rgba2String(rgba);\n                    }\n                    else if (isValueString) {\n                        // String is step(0.5)\n                        return interpolateString(kfValues[frame], kfValues[frame + 1], w);\n                    }\n                    else {\n                        value = interpolateNumber(kfValues[frame], kfValues[frame + 1], w);\n                    }\n                    setter(\n                        target,\n                        propName,\n                        value\n                    );\n                }\n            }\n        };\n\n        var clip = new Clip({\n            target: animator._target,\n            life: trackMaxTime,\n            loop: animator._loop,\n            delay: animator._delay,\n            onframe: onframe,\n            ondestroy: oneTrackDone\n        });\n\n        if (easing && easing !== 'spline') {\n            clip.easing = easing;\n        }\n\n        return clip;\n    }\n\n    /**\n     * @alias module:zrender/animation/Animator\n     * @constructor\n     * @param {Object} target\n     * @param {boolean} loop\n     * @param {Function} getter\n     * @param {Function} setter\n     */\n    var Animator = function(target, loop, getter, setter) {\n        this._tracks = {};\n        this._target = target;\n\n        this._loop = loop || false;\n\n        this._getter = getter || defaultGetter;\n        this._setter = setter || defaultSetter;\n\n        this._clipCount = 0;\n\n        this._delay = 0;\n\n        this._doneList = [];\n\n        this._onframeList = [];\n\n        this._clipList = [];\n    };\n\n    Animator.prototype = {\n        /**\n         * 设置动画关键帧\n         * @param  {number} time 关键帧时间，单位是ms\n         * @param  {Object} props 关键帧的属性值，key-value表示\n         * @return {module:zrender/animation/Animator}\n         */\n        when: function(time /* ms */, props) {\n            var tracks = this._tracks;\n            for (var propName in props) {\n                if (!props.hasOwnProperty(propName)) {\n                    continue;\n                }\n\n                if (!tracks[propName]) {\n                    tracks[propName] = [];\n                    // Invalid value\n                    var value = this._getter(this._target, propName);\n                    if (value == null) {\n                        // zrLog('Invalid property ' + propName);\n                        continue;\n                    }\n                    // If time is 0\n                    //  Then props is given initialize value\n                    // Else\n                    //  Initialize value from current prop value\n                    if (time !== 0) {\n                        tracks[propName].push({\n                            time: 0,\n                            value: cloneValue(value)\n                        });\n                    }\n                }\n                tracks[propName].push({\n                    time: time,\n                    value: props[propName]\n                });\n            }\n            return this;\n        },\n        /**\n         * 添加动画每一帧的回调函数\n         * @param  {Function} callback\n         * @return {module:zrender/animation/Animator}\n         */\n        during: function (callback) {\n            this._onframeList.push(callback);\n            return this;\n        },\n\n        pause: function () {\n            for (var i = 0; i < this._clipList.length; i++) {\n                this._clipList[i].pause();\n            }\n            this._paused = true;\n        },\n\n        resume: function () {\n            for (var i = 0; i < this._clipList.length; i++) {\n                this._clipList[i].resume();\n            }\n            this._paused = false;\n        },\n\n        isPaused: function () {\n            return !!this._paused;\n        },\n\n        _doneCallback: function () {\n            // Clear all tracks\n            this._tracks = {};\n            // Clear all clips\n            this._clipList.length = 0;\n\n            var doneList = this._doneList;\n            var len = doneList.length;\n            for (var i = 0; i < len; i++) {\n                doneList[i].call(this);\n            }\n        },\n        /**\n         * 开始执行动画\n         * @param  {string|Function} easing\n         *         动画缓动函数，详见{@link module:zrender/animation/easing}\n         * @return {module:zrender/animation/Animator}\n         */\n        start: function (easing) {\n\n            var self = this;\n            var clipCount = 0;\n\n            var oneTrackDone = function() {\n                clipCount--;\n                if (!clipCount) {\n                    self._doneCallback();\n                }\n            };\n\n            var lastClip;\n            for (var propName in this._tracks) {\n                if (!this._tracks.hasOwnProperty(propName)) {\n                    continue;\n                }\n                var clip = createTrackClip(\n                    this, easing, oneTrackDone,\n                    this._tracks[propName], propName\n                );\n                if (clip) {\n                    this._clipList.push(clip);\n                    clipCount++;\n\n                    // If start after added to animation\n                    if (this.animation) {\n                        this.animation.addClip(clip);\n                    }\n\n                    lastClip = clip;\n                }\n            }\n\n            // Add during callback on the last clip\n            if (lastClip) {\n                var oldOnFrame = lastClip.onframe;\n                lastClip.onframe = function (target, percent) {\n                    oldOnFrame(target, percent);\n\n                    for (var i = 0; i < self._onframeList.length; i++) {\n                        self._onframeList[i](target, percent);\n                    }\n                };\n            }\n\n            if (!clipCount) {\n                this._doneCallback();\n            }\n            return this;\n        },\n        /**\n         * 停止动画\n         * @param {boolean} forwardToLast If move to last frame before stop\n         */\n        stop: function (forwardToLast) {\n            var clipList = this._clipList;\n            var animation = this.animation;\n            for (var i = 0; i < clipList.length; i++) {\n                var clip = clipList[i];\n                if (forwardToLast) {\n                    // Move to last frame before stop\n                    clip.onframe(this._target, 1);\n                }\n                animation && animation.removeClip(clip);\n            }\n            clipList.length = 0;\n        },\n        /**\n         * 设置动画延迟开始的时间\n         * @param  {number} time 单位ms\n         * @return {module:zrender/animation/Animator}\n         */\n        delay: function (time) {\n            this._delay = time;\n            return this;\n        },\n        /**\n         * 添加动画结束的回调\n         * @param  {Function} cb\n         * @return {module:zrender/animation/Animator}\n         */\n        done: function(cb) {\n            if (cb) {\n                this._doneList.push(cb);\n            }\n            return this;\n        },\n\n        /**\n         * @return {Array.<module:zrender/animation/Clip>}\n         */\n        getClips: function () {\n            return this._clipList;\n        }\n    };\n\n    module.exports = Animator;\n\n\n/***/ }),\n/* 541 */\n/***/ (function(module, exports) {\n\n\n\n    module.exports = (typeof window !== 'undefined' &&\n                ((window.requestAnimationFrame && window.requestAnimationFrame.bind(window))\n                // https://github.com/ecomfe/zrender/issues/189#issuecomment-224919809\n                || (window.msRequestAnimationFrame && window.msRequestAnimationFrame.bind(window))\n                || window.mozRequestAnimationFrame\n                || window.webkitRequestAnimationFrame)\n            )\n            || function (func) {\n                setTimeout(func, 16);\n            };\n\n\n\n/***/ }),\n/* 542 */\n/***/ (function(module, exports) {\n\n\n\n    var PI2 = Math.PI * 2;\n    module.exports = {\n        normalizeRadian: function(angle) {\n            angle %= PI2;\n            if (angle < 0) {\n                angle += PI2;\n            }\n            return angle;\n        }\n    };\n\n\n/***/ }),\n/* 543 */\n/***/ (function(module, exports) {\n\n// Simple LRU cache use doubly linked list\n// @module zrender/core/LRU\n\n\n    /**\n     * Simple double linked list. Compared with array, it has O(1) remove operation.\n     * @constructor\n     */\n    var LinkedList = function () {\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.head = null;\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.tail = null;\n\n        this._len = 0;\n    };\n\n    var linkedListProto = LinkedList.prototype;\n    /**\n     * Insert a new value at the tail\n     * @param  {} val\n     * @return {module:zrender/core/LRU~Entry}\n     */\n    linkedListProto.insert = function (val) {\n        var entry = new Entry(val);\n        this.insertEntry(entry);\n        return entry;\n    };\n\n    /**\n     * Insert an entry at the tail\n     * @param  {module:zrender/core/LRU~Entry} entry\n     */\n    linkedListProto.insertEntry = function (entry) {\n        if (!this.head) {\n            this.head = this.tail = entry;\n        }\n        else {\n            this.tail.next = entry;\n            entry.prev = this.tail;\n            entry.next = null;\n            this.tail = entry;\n        }\n        this._len++;\n    };\n\n    /**\n     * Remove entry.\n     * @param  {module:zrender/core/LRU~Entry} entry\n     */\n    linkedListProto.remove = function (entry) {\n        var prev = entry.prev;\n        var next = entry.next;\n        if (prev) {\n            prev.next = next;\n        }\n        else {\n            // Is head\n            this.head = next;\n        }\n        if (next) {\n            next.prev = prev;\n        }\n        else {\n            // Is tail\n            this.tail = prev;\n        }\n        entry.next = entry.prev = null;\n        this._len--;\n    };\n\n    /**\n     * @return {number}\n     */\n    linkedListProto.len = function () {\n        return this._len;\n    };\n\n    /**\n     * Clear list\n     */\n    linkedListProto.clear = function () {\n        this.head = this.tail = null;\n        this._len = 0;\n    };\n\n    /**\n     * @constructor\n     * @param {} val\n     */\n    var Entry = function (val) {\n        /**\n         * @type {}\n         */\n        this.value = val;\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.next;\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.prev;\n    };\n\n    /**\n     * LRU Cache\n     * @constructor\n     * @alias module:zrender/core/LRU\n     */\n    var LRU = function (maxSize) {\n\n        this._list = new LinkedList();\n\n        this._map = {};\n\n        this._maxSize = maxSize || 10;\n\n        this._lastRemovedEntry = null;\n    };\n\n    var LRUProto = LRU.prototype;\n\n    /**\n     * @param  {string} key\n     * @param  {} value\n     * @return {} Removed value\n     */\n    LRUProto.put = function (key, value) {\n        var list = this._list;\n        var map = this._map;\n        var removed = null;\n        if (map[key] == null) {\n            var len = list.len();\n            // Reuse last removed entry\n            var entry = this._lastRemovedEntry;\n\n            if (len >= this._maxSize && len > 0) {\n                // Remove the least recently used\n                var leastUsedEntry = list.head;\n                list.remove(leastUsedEntry);\n                delete map[leastUsedEntry.key];\n\n                removed = leastUsedEntry.value;\n                this._lastRemovedEntry = leastUsedEntry;\n            }\n\n            if (entry) {\n                entry.value = value;\n            }\n            else {\n                entry = new Entry(value);\n            }\n            entry.key = key;\n            list.insertEntry(entry);\n            map[key] = entry;\n        }\n\n        return removed;\n    };\n\n    /**\n     * @param  {string} key\n     * @return {}\n     */\n    LRUProto.get = function (key) {\n        var entry = this._map[key];\n        var list = this._list;\n        if (entry != null) {\n            // Put the latest used entry in the tail\n            if (entry !== list.tail) {\n                list.remove(entry);\n                list.insertEntry(entry);\n            }\n\n            return entry.value;\n        }\n    };\n\n    /**\n     * Clear the cache\n     */\n    LRUProto.clear = function () {\n        this._list.clear();\n        this._map = {};\n    };\n\n    module.exports = LRU;\n\n\n/***/ }),\n/* 544 */\n/***/ (function(module, exports) {\n\n/**\n * zrender: 生成唯一id\n *\n * @author errorrik (errorrik@gmail.com)\n */\n\n\n    var idStart = 0x0907;\n\n    module.exports = function () {\n        return idStart++;\n    };\n\n\n\n/***/ }),\n/* 545 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n        var config = __webpack_require__(486);\n\n        /**\n         * @exports zrender/tool/log\n         * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n         */\n        module.exports = function() {\n            if (config.debugMode === 0) {\n                return;\n            }\n            else if (config.debugMode == 1) {\n                for (var k in arguments) {\n                    throw new Error(arguments[k]);\n                }\n            }\n            else if (config.debugMode > 1) {\n                for (var k in arguments) {\n                    console.log(arguments[k]);\n                }\n            }\n        };\n\n        /* for debug\n        return function(mes) {\n            document.getElementById('wrong-message').innerHTML =\n                mes + ' ' + (new Date() - 0)\n                + '<br/>'\n                + document.getElementById('wrong-message').innerHTML;\n        };\n        */\n    \n\n\n/***/ }),\n/* 546 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Image element\n * @module zrender/graphic/Image\n */\n\n\n\n    var Displayable = __webpack_require__(506);\n    var BoundingRect = __webpack_require__(468);\n    var zrUtil = __webpack_require__(453);\n\n    var LRU = __webpack_require__(543);\n    var globalImageCache = new LRU(50);\n    /**\n     * @alias zrender/graphic/Image\n     * @extends module:zrender/graphic/Displayable\n     * @constructor\n     * @param {Object} opts\n     */\n    function ZImage(opts) {\n        Displayable.call(this, opts);\n    }\n\n    ZImage.prototype = {\n\n        constructor: ZImage,\n\n        type: 'image',\n\n        brush: function (ctx, prevEl) {\n            var style = this.style;\n            var src = style.image;\n            var image;\n\n            // Must bind each time\n            style.bind(ctx, this, prevEl);\n            // style.image is a url string\n            if (typeof src === 'string') {\n                image = this._image;\n            }\n            // style.image is an HTMLImageElement or HTMLCanvasElement or Canvas\n            else {\n                image = src;\n            }\n            // FIXME Case create many images with src\n            if (!image && src) {\n                // Try get from global image cache\n                var cachedImgObj = globalImageCache.get(src);\n                if (!cachedImgObj) {\n                    // Create a new image\n                    image = new Image();\n                    image.onload = function () {\n                        image.onload = null;\n                        for (var i = 0; i < cachedImgObj.pending.length; i++) {\n                            cachedImgObj.pending[i].dirty();\n                        }\n                    };\n                    cachedImgObj = {\n                        image: image,\n                        pending: [this]\n                    };\n                    image.src = src;\n                    globalImageCache.put(src, cachedImgObj);\n                    this._image = image;\n                    return;\n                }\n                else {\n                    image = cachedImgObj.image;\n                    this._image = image;\n                    // Image is not complete finish, add to pending list\n                    if (!image.width || !image.height) {\n                        cachedImgObj.pending.push(this);\n                        return;\n                    }\n                }\n            }\n\n            if (image) {\n                // 图片已经加载完成\n                // if (image.nodeName.toUpperCase() == 'IMG') {\n                //     if (!image.complete) {\n                //         return;\n                //     }\n                // }\n                // Else is canvas\n\n                var x = style.x || 0;\n                var y = style.y || 0;\n                // 图片加载失败\n                if (!image.width || !image.height) {\n                    return;\n                }\n                var width = style.width;\n                var height = style.height;\n                var aspect = image.width / image.height;\n                if (width == null && height != null) {\n                    // Keep image/height ratio\n                    width = height * aspect;\n                }\n                else if (height == null && width != null) {\n                    height = width / aspect;\n                }\n                else if (width == null && height == null) {\n                    width = image.width;\n                    height = image.height;\n                }\n\n                // 设置transform\n                this.setTransform(ctx);\n\n                if (style.sWidth && style.sHeight) {\n                    var sx = style.sx || 0;\n                    var sy = style.sy || 0;\n                    ctx.drawImage(\n                        image,\n                        sx, sy, style.sWidth, style.sHeight,\n                        x, y, width, height\n                    );\n                }\n                else if (style.sx && style.sy) {\n                    var sx = style.sx;\n                    var sy = style.sy;\n                    var sWidth = width - sx;\n                    var sHeight = height - sy;\n                    ctx.drawImage(\n                        image,\n                        sx, sy, sWidth, sHeight,\n                        x, y, width, height\n                    );\n                }\n                else {\n                    ctx.drawImage(image, x, y, width, height);\n                }\n\n                this.restoreTransform(ctx);\n\n                // Draw rect text\n                if (style.text != null) {\n                    this.drawRectText(ctx, this.getBoundingRect());\n                }\n\n            }\n        },\n\n        getBoundingRect: function () {\n            var style = this.style;\n            if (! this._rect) {\n                this._rect = new BoundingRect(\n                    style.x || 0, style.y || 0, style.width || 0, style.height || 0\n                );\n            }\n            return this._rect;\n        }\n    };\n\n    zrUtil.inherits(ZImage, Displayable);\n\n    module.exports = ZImage;\n\n\n/***/ }),\n/* 547 */\n/***/ (function(module, exports) {\n\n\n\n    var Pattern = function (image, repeat) {\n        // Should do nothing more in this constructor. Because gradient can be\n        // declard by `color: {image: ...}`, where this constructor will not be called.\n\n        this.image = image;\n        this.repeat = repeat;\n\n        // Can be cloned\n        this.type = 'pattern';\n    };\n\n    Pattern.prototype.getCanvasPattern = function (ctx) {\n        return ctx.createPattern(this.image, this.repeat || 'repeat');\n    };\n\n    module.exports = Pattern;\n\n\n/***/ }),\n/* 548 */\n/***/ (function(module, exports) {\n\n/**\n * @module zrender/graphic/Style\n */\n\n\n    var STYLE_COMMON_PROPS = [\n        ['shadowBlur', 0], ['shadowOffsetX', 0], ['shadowOffsetY', 0], ['shadowColor', '#000'],\n        ['lineCap', 'butt'], ['lineJoin', 'miter'], ['miterLimit', 10]\n    ];\n\n    // var SHADOW_PROPS = STYLE_COMMON_PROPS.slice(0, 4);\n    // var LINE_PROPS = STYLE_COMMON_PROPS.slice(4);\n\n    var Style = function (opts) {\n        this.extendFrom(opts);\n    };\n\n    function createLinearGradient(ctx, obj, rect) {\n        var x = obj.x == null ? 0 : obj.x;\n        var x2 = obj.x2 == null ? 1 : obj.x2;\n        var y = obj.y == null ? 0 : obj.y;\n        var y2 = obj.y2 == null ? 0 : obj.y2;\n\n        if (!obj.global) {\n            x = x * rect.width + rect.x;\n            x2 = x2 * rect.width + rect.x;\n            y = y * rect.height + rect.y;\n            y2 = y2 * rect.height + rect.y;\n        }\n\n        var canvasGradient = ctx.createLinearGradient(x, y, x2, y2);\n\n        return canvasGradient;\n    }\n\n    function createRadialGradient(ctx, obj, rect) {\n        var width = rect.width;\n        var height = rect.height;\n        var min = Math.min(width, height);\n\n        var x = obj.x == null ? 0.5 : obj.x;\n        var y = obj.y == null ? 0.5 : obj.y;\n        var r = obj.r == null ? 0.5 : obj.r;\n        if (!obj.global) {\n            x = x * width + rect.x;\n            y = y * height + rect.y;\n            r = r * min;\n        }\n\n        var canvasGradient = ctx.createRadialGradient(x, y, 0, x, y, r);\n\n        return canvasGradient;\n    }\n\n\n    Style.prototype = {\n\n        constructor: Style,\n\n        /**\n         * @type {string}\n         */\n        fill: '#000000',\n\n        /**\n         * @type {string}\n         */\n        stroke: null,\n\n        /**\n         * @type {number}\n         */\n        opacity: 1,\n\n        /**\n         * @type {Array.<number>}\n         */\n        lineDash: null,\n\n        /**\n         * @type {number}\n         */\n        lineDashOffset: 0,\n\n        /**\n         * @type {number}\n         */\n        shadowBlur: 0,\n\n        /**\n         * @type {number}\n         */\n        shadowOffsetX: 0,\n\n        /**\n         * @type {number}\n         */\n        shadowOffsetY: 0,\n\n        /**\n         * @type {number}\n         */\n        lineWidth: 1,\n\n        /**\n         * If stroke ignore scale\n         * @type {Boolean}\n         */\n        strokeNoScale: false,\n\n        // Bounding rect text configuration\n        // Not affected by element transform\n        /**\n         * @type {string}\n         */\n        text: null,\n\n        /**\n         * @type {string}\n         */\n        textFill: '#000',\n\n        /**\n         * @type {string}\n         */\n        textStroke: null,\n\n        /**\n         * 'inside', 'left', 'right', 'top', 'bottom'\n         * [x, y]\n         * @type {string|Array.<number>}\n         * @default 'inside'\n         */\n        textPosition: 'inside',\n\n        /**\n         * If not specified, use the boundingRect of a `displayable`.\n         * @type {Object}\n         */\n        textPositionRect: null,\n\n        /**\n         * [x, y]\n         * @type {Array.<number>}\n         */\n        textOffset: null,\n\n        /**\n         * @type {string}\n         */\n        textBaseline: null,\n\n        /**\n         * @type {string}\n         */\n        textAlign: null,\n\n        /**\n         * @type {string}\n         */\n        textVerticalAlign: null,\n\n        /**\n         * Only useful in Path and Image element\n         * @type {number}\n         */\n        textDistance: 5,\n\n        /**\n         * Only useful in Path and Image element\n         * @type {number}\n         */\n        textShadowBlur: 0,\n\n        /**\n         * Only useful in Path and Image element\n         * @type {number}\n         */\n        textShadowOffsetX: 0,\n\n        /**\n         * Only useful in Path and Image element\n         * @type {number}\n         */\n        textShadowOffsetY: 0,\n\n        /**\n         * If transform text\n         * Only useful in Path and Image element\n         * @type {boolean}\n         */\n        textTransform: false,\n\n        /**\n         * Text rotate around position of Path or Image\n         * Only useful in Path and Image element and textTransform is false.\n         */\n        textRotation: 0,\n\n        /**\n         * @type {string}\n         * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n         */\n        blend: null,\n\n        /**\n         * @param {CanvasRenderingContext2D} ctx\n         */\n        bind: function (ctx, el, prevEl) {\n            var style = this;\n            var prevStyle = prevEl && prevEl.style;\n            var firstDraw = !prevStyle;\n\n            for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n                var prop = STYLE_COMMON_PROPS[i];\n                var styleName = prop[0];\n\n                if (firstDraw || style[styleName] !== prevStyle[styleName]) {\n                    // FIXME Invalid property value will cause style leak from previous element.\n                    ctx[styleName] = style[styleName] || prop[1];\n                }\n            }\n\n            if ((firstDraw || style.fill !== prevStyle.fill)) {\n                ctx.fillStyle = style.fill;\n            }\n            if ((firstDraw || style.stroke !== prevStyle.stroke)) {\n                ctx.strokeStyle = style.stroke;\n            }\n            if ((firstDraw || style.opacity !== prevStyle.opacity)) {\n                ctx.globalAlpha = style.opacity == null ? 1 : style.opacity;\n            }\n\n            if ((firstDraw || style.blend !== prevStyle.blend)) {\n                ctx.globalCompositeOperation = style.blend || 'source-over';\n            }\n            if (this.hasStroke()) {\n                var lineWidth = style.lineWidth;\n                ctx.lineWidth = lineWidth / (\n                    (this.strokeNoScale && el && el.getLineScale) ? el.getLineScale() : 1\n                );\n            }\n        },\n\n        hasFill: function () {\n            var fill = this.fill;\n            return fill != null && fill !== 'none';\n        },\n\n        hasStroke: function () {\n            var stroke = this.stroke;\n            return stroke != null && stroke !== 'none' && this.lineWidth > 0;\n        },\n\n        /**\n         * Extend from other style\n         * @param {zrender/graphic/Style} otherStyle\n         * @param {boolean} overwrite\n         */\n        extendFrom: function (otherStyle, overwrite) {\n            if (otherStyle) {\n                var target = this;\n                for (var name in otherStyle) {\n                    if (otherStyle.hasOwnProperty(name)\n                        && (overwrite || ! target.hasOwnProperty(name))\n                    ) {\n                        target[name] = otherStyle[name];\n                    }\n                }\n            }\n        },\n\n        /**\n         * Batch setting style with a given object\n         * @param {Object|string} obj\n         * @param {*} [obj]\n         */\n        set: function (obj, value) {\n            if (typeof obj === 'string') {\n                this[obj] = value;\n            }\n            else {\n                this.extendFrom(obj, true);\n            }\n        },\n\n        /**\n         * Clone\n         * @return {zrender/graphic/Style} [description]\n         */\n        clone: function () {\n            var newStyle = new this.constructor();\n            newStyle.extendFrom(this, true);\n            return newStyle;\n        },\n\n        getGradient: function (ctx, obj, rect) {\n            var method = obj.type === 'radial' ? createRadialGradient : createLinearGradient;\n            var canvasGradient = method(ctx, obj, rect);\n            var colorStops = obj.colorStops;\n            for (var i = 0; i < colorStops.length; i++) {\n                canvasGradient.addColorStop(\n                    colorStops[i].offset, colorStops[i].color\n                );\n            }\n            return canvasGradient;\n        }\n    };\n\n    var styleProto = Style.prototype;\n    for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n        var prop = STYLE_COMMON_PROPS[i];\n        if (!(prop[0] in styleProto)) {\n            styleProto[prop[0]] = prop[1];\n        }\n    }\n\n    // Provide for others\n    Style.getGradient = styleProto.getGradient;\n\n    module.exports = Style;\n\n\n/***/ }),\n/* 549 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var smoothSpline = __webpack_require__(670);\n    var smoothBezier = __webpack_require__(669);\n\n    module.exports = {\n        buildPath: function (ctx, shape, closePath) {\n            var points = shape.points;\n            var smooth = shape.smooth;\n            if (points && points.length >= 2) {\n                if (smooth && smooth !== 'spline') {\n                    var controlPoints = smoothBezier(\n                        points, smooth, closePath, shape.smoothConstraint\n                    );\n\n                    ctx.moveTo(points[0][0], points[0][1]);\n                    var len = points.length;\n                    for (var i = 0; i < (closePath ? len : len - 1); i++) {\n                        var cp1 = controlPoints[i * 2];\n                        var cp2 = controlPoints[i * 2 + 1];\n                        var p = points[(i + 1) % len];\n                        ctx.bezierCurveTo(\n                            cp1[0], cp1[1], cp2[0], cp2[1], p[0], p[1]\n                        );\n                    }\n                }\n                else {\n                    if (smooth === 'spline') {\n                        points = smoothSpline(points, closePath);\n                    }\n\n                    ctx.moveTo(points[0][0], points[0][1]);\n                    for (var i = 1, l = points.length; i < l; i++) {\n                        ctx.lineTo(points[i][0], points[i][1]);\n                    }\n                }\n\n                closePath && ctx.closePath();\n            }\n        }\n    };\n\n\n/***/ }),\n/* 550 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * 提供变换扩展\n * @module zrender/mixin/Transformable\n * @author pissang (https://www.github.com/pissang)\n */\n\n\n    var matrix = __webpack_require__(475);\n    var vector = __webpack_require__(458);\n    var mIdentity = matrix.identity;\n\n    var EPSILON = 5e-5;\n\n    function isNotAroundZero(val) {\n        return val > EPSILON || val < -EPSILON;\n    }\n\n    /**\n     * @alias module:zrender/mixin/Transformable\n     * @constructor\n     */\n    var Transformable = function (opts) {\n        opts = opts || {};\n        // If there are no given position, rotation, scale\n        if (!opts.position) {\n            /**\n             * 平移\n             * @type {Array.<number>}\n             * @default [0, 0]\n             */\n            this.position = [0, 0];\n        }\n        if (opts.rotation == null) {\n            /**\n             * 旋转\n             * @type {Array.<number>}\n             * @default 0\n             */\n            this.rotation = 0;\n        }\n        if (!opts.scale) {\n            /**\n             * 缩放\n             * @type {Array.<number>}\n             * @default [1, 1]\n             */\n            this.scale = [1, 1];\n        }\n        /**\n         * 旋转和缩放的原点\n         * @type {Array.<number>}\n         * @default null\n         */\n        this.origin = this.origin || null;\n    };\n\n    var transformableProto = Transformable.prototype;\n    transformableProto.transform = null;\n\n    /**\n     * 判断是否需要有坐标变换\n     * 如果有坐标变换, 则从position, rotation, scale以及父节点的transform计算出自身的transform矩阵\n     */\n    transformableProto.needLocalTransform = function () {\n        return isNotAroundZero(this.rotation)\n            || isNotAroundZero(this.position[0])\n            || isNotAroundZero(this.position[1])\n            || isNotAroundZero(this.scale[0] - 1)\n            || isNotAroundZero(this.scale[1] - 1);\n    };\n\n    transformableProto.updateTransform = function () {\n        var parent = this.parent;\n        var parentHasTransform = parent && parent.transform;\n        var needLocalTransform = this.needLocalTransform();\n\n        var m = this.transform;\n        if (!(needLocalTransform || parentHasTransform)) {\n            m && mIdentity(m);\n            return;\n        }\n\n        m = m || matrix.create();\n\n        if (needLocalTransform) {\n            this.getLocalTransform(m);\n        }\n        else {\n            mIdentity(m);\n        }\n\n        // 应用父节点变换\n        if (parentHasTransform) {\n            if (needLocalTransform) {\n                matrix.mul(m, parent.transform, m);\n            }\n            else {\n                matrix.copy(m, parent.transform);\n            }\n        }\n        // 保存这个变换矩阵\n        this.transform = m;\n\n        this.invTransform = this.invTransform || matrix.create();\n        matrix.invert(this.invTransform, m);\n    };\n\n    transformableProto.getLocalTransform = function (m) {\n        return Transformable.getLocalTransform(this, m);\n    };\n\n    /**\n     * 将自己的transform应用到context上\n     * @param {Context2D} ctx\n     */\n    transformableProto.setTransform = function (ctx) {\n        var m = this.transform;\n        var dpr = ctx.dpr || 1;\n        if (m) {\n            ctx.setTransform(dpr * m[0], dpr * m[1], dpr * m[2], dpr * m[3], dpr * m[4], dpr * m[5]);\n        }\n        else {\n            ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n        }\n    };\n\n    transformableProto.restoreTransform = function (ctx) {\n        var dpr = ctx.dpr || 1;\n        ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n    };\n\n    var tmpTransform = [];\n\n    /**\n     * 分解`transform`矩阵到`position`, `rotation`, `scale`\n     */\n    transformableProto.decomposeTransform = function () {\n        if (!this.transform) {\n            return;\n        }\n        var parent = this.parent;\n        var m = this.transform;\n        if (parent && parent.transform) {\n            // Get local transform and decompose them to position, scale, rotation\n            matrix.mul(tmpTransform, parent.invTransform, m);\n            m = tmpTransform;\n        }\n        var sx = m[0] * m[0] + m[1] * m[1];\n        var sy = m[2] * m[2] + m[3] * m[3];\n        var position = this.position;\n        var scale = this.scale;\n        if (isNotAroundZero(sx - 1)) {\n            sx = Math.sqrt(sx);\n        }\n        if (isNotAroundZero(sy - 1)) {\n            sy = Math.sqrt(sy);\n        }\n        if (m[0] < 0) {\n            sx = -sx;\n        }\n        if (m[3] < 0) {\n            sy = -sy;\n        }\n        position[0] = m[4];\n        position[1] = m[5];\n        scale[0] = sx;\n        scale[1] = sy;\n        this.rotation = Math.atan2(-m[1] / sy, m[0] / sx);\n    };\n\n    /**\n     * Get global scale\n     * @return {Array.<number>}\n     */\n    transformableProto.getGlobalScale = function () {\n        var m = this.transform;\n        if (!m) {\n            return [1, 1];\n        }\n        var sx = Math.sqrt(m[0] * m[0] + m[1] * m[1]);\n        var sy = Math.sqrt(m[2] * m[2] + m[3] * m[3]);\n        if (m[0] < 0) {\n            sx = -sx;\n        }\n        if (m[3] < 0) {\n            sy = -sy;\n        }\n        return [sx, sy];\n    };\n    /**\n     * 变换坐标位置到 shape 的局部坐标空间\n     * @method\n     * @param {number} x\n     * @param {number} y\n     * @return {Array.<number>}\n     */\n    transformableProto.transformCoordToLocal = function (x, y) {\n        var v2 = [x, y];\n        var invTransform = this.invTransform;\n        if (invTransform) {\n            vector.applyTransform(v2, v2, invTransform);\n        }\n        return v2;\n    };\n\n    /**\n     * 变换局部坐标位置到全局坐标空间\n     * @method\n     * @param {number} x\n     * @param {number} y\n     * @return {Array.<number>}\n     */\n    transformableProto.transformCoordToGlobal = function (x, y) {\n        var v2 = [x, y];\n        var transform = this.transform;\n        if (transform) {\n            vector.applyTransform(v2, v2, transform);\n        }\n        return v2;\n    };\n\n    /**\n     * @static\n     * @param {Object} target\n     * @param {Array.<number>} target.origin\n     * @param {number} target.rotation\n     * @param {Array.<number>} target.position\n     * @param {Array.<number>} [m]\n     */\n    Transformable.getLocalTransform = function (target, m) {\n        m = m || [];\n        mIdentity(m);\n\n        var origin = target.origin;\n        var scale = target.scale || [1, 1];\n        var rotation = target.rotation || 0;\n        var position = target.position || [0, 0];\n\n        if (origin) {\n            // Translate to origin\n            m[4] -= origin[0];\n            m[5] -= origin[1];\n        }\n        matrix.scale(m, m, scale);\n        if (rotation) {\n            matrix.rotate(m, m, rotation);\n        }\n        if (origin) {\n            // Translate back from origin\n            m[4] += origin[0];\n            m[5] += origin[1];\n        }\n\n        m[4] += position[0];\n        m[5] += position[1];\n\n        return m;\n    };\n\n    module.exports = Transformable;\n\n\n\n/***/ }),\n/* 551 */,\n/* 552 */,\n/* 553 */,\n/* 554 */,\n/* 555 */,\n/* 556 */,\n/* 557 */,\n/* 558 */,\n/* 559 */,\n/* 560 */,\n/* 561 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar stringify = __webpack_require__(643);\nvar parse = __webpack_require__(642);\nvar formats = __webpack_require__(537);\n\nmodule.exports = {\n    formats: formats,\n    parse: parse,\n    stringify: stringify\n};\n\n\n/***/ }),\n/* 562 */,\n/* 563 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_toConsumableArray__ = __webpack_require__(567);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_toConsumableArray___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_toConsumableArray__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_echarts_lib_echarts__ = __webpack_require__(455);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_echarts_lib_echarts___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_echarts_lib_echarts__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_lodash_debounce__ = __webpack_require__(641);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_lodash_debounce___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_lodash_debounce__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_vue__ = __webpack_require__(62);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_vue__);\n\n\n\n\n\n\n\nvar ACTION_EVENTS = ['legendselectchanged', 'legendselected', 'legendunselected', 'datazoom', 'datarangeselected', 'timelinechanged', 'timelineplaychanged', 'restore', 'dataviewchanged', 'magictypechanged', 'geoselectchanged', 'geoselected', 'geounselected', 'pieselectchanged', 'pieselected', 'pieunselected', 'mapselectchanged', 'mapselected', 'mapunselected', 'axisareaselected', 'brush', 'brushselected'];\n\nvar MOUSE_EVENTS = ['click', 'dblclick', 'mouseover', 'mouseout', 'mousedown', 'mouseup', 'globalout'];\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  props: {\n    options: Object,\n    theme: String,\n    initOptions: Object,\n    group: String,\n    autoResize: Boolean\n  },\n  data: function data() {\n    return {\n      chart: null\n    };\n  },\n\n  computed: {\n    width: {\n      cache: false,\n      get: function get() {\n        return this._delegateGet('width', 'getWidth');\n      }\n    },\n    height: {\n      cache: false,\n      get: function get() {\n        return this._delegateGet('height', 'getHeight');\n      }\n    },\n    isDisposed: {\n      cache: false,\n      get: function get() {\n        return !!this._delegateGet('isDisposed', 'isDisposed');\n      }\n    },\n    computedOptions: {\n      cache: false,\n      get: function get() {\n        return this._delegateGet('computedOptions', 'getOption');\n      }\n    }\n  },\n  watch: {\n    options: {\n      handler: function handler(options) {\n        if (!this.chart && options) {\n          this._init();\n        } else {\n          this.chart.setOption(this.options, true);\n        }\n      },\n\n      deep: true\n    },\n    group: {\n      handler: function handler(group) {\n        this.chart.group = group;\n      }\n    }\n  },\n  methods: {\n    mergeOptions: function mergeOptions(options) {\n      this._delegateMethod('setOption', options);\n    },\n    resize: function resize(options) {\n      this._delegateMethod('resize', options);\n    },\n    dispatchAction: function dispatchAction(payload) {\n      this._delegateMethod('dispatchAction', payload);\n    },\n    convertToPixel: function convertToPixel(finder, value) {\n      return this._delegateMethod('convertToPixel', finder, value);\n    },\n    convertFromPixel: function convertFromPixel(finder, value) {\n      return this._delegateMethod('convertFromPixel', finder, value);\n    },\n    containPixel: function containPixel(finder, value) {\n      return this._delegateMethod('containPixel', finder, value);\n    },\n    showLoading: function showLoading(type, options) {\n      this._delegateMethod('showLoading', type, options);\n    },\n    hideLoading: function hideLoading() {\n      this._delegateMethod('hideLoading');\n    },\n    getDataURL: function getDataURL(options) {\n      return this._delegateMethod('getDataURL', options);\n    },\n    getConnectedDataURL: function getConnectedDataURL(options) {\n      return this._delegateMethod('getConnectedDataURL', options);\n    },\n    clear: function clear() {\n      this._delegateMethod('clear');\n    },\n    dispose: function dispose() {\n      this._delegateMethod('dispose');\n    },\n    _delegateMethod: function _delegateMethod(name) {\n      var _chart;\n\n      if (!this.chart) {\n        __WEBPACK_IMPORTED_MODULE_3_vue___default.a.util.warn('Cannot call [' + name + '] before the chart is initialized. Set prop [options] first.', this);\n        return;\n      }\n\n      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      return (_chart = this.chart)[name].apply(_chart, __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_toConsumableArray___default()(args));\n    },\n    _delegateGet: function _delegateGet(name, method) {\n      if (!this.chart) {\n        __WEBPACK_IMPORTED_MODULE_3_vue___default.a.util.warn('Cannot get [' + name + '] before the chart is initialized. Set prop [options] first.', this);\n      }\n      return this.chart[method]();\n    },\n    _init: function _init() {\n      var _this = this;\n\n      if (this.chart) {\n        return;\n      }\n\n      var chart = __WEBPACK_IMPORTED_MODULE_1_echarts_lib_echarts___default.a.init(this.$el, this.theme, this.initOptions);\n\n      if (this.group) {\n        chart.group = this.group;\n      }\n\n      chart.setOption(this.options, true);\n\n      ACTION_EVENTS.forEach(function (event) {\n        chart.on(event, function (params) {\n          _this.$emit(event, params);\n        });\n      });\n      MOUSE_EVENTS.forEach(function (event) {\n        chart.on(event, function (params) {\n          _this.$emit(event, params);\n\n          _this.$emit('chart' + event, params);\n        });\n      });\n\n      if (this.autoResize) {\n        this.__resizeHanlder = __WEBPACK_IMPORTED_MODULE_2_lodash_debounce___default()(function () {\n          chart.resize();\n        }, 100, { leading: true });\n        window.addEventListener('resize', this.__resizeHanlder);\n      }\n\n      this.chart = chart;\n    }\n  },\n  mounted: function mounted() {\n    if (this.options) {\n      this._init();\n    }\n  },\n  beforeDestroy: function beforeDestroy() {\n    if (!this.chart) {\n      return;\n    }\n    if (this.autoResize) {\n      window.removeEventListener('resize', this.__resizeHanlder);\n    }\n    this.dispose();\n  },\n  connect: function connect(group) {\n    if (typeof group !== 'string') {\n      group = group.map(function (chart) {\n        return chart.chart;\n      });\n    }\n    __WEBPACK_IMPORTED_MODULE_1_echarts_lib_echarts___default.a.connect(group);\n  },\n  disconnect: function disconnect(group) {\n    __WEBPACK_IMPORTED_MODULE_1_echarts_lib_echarts___default.a.disConnect(group);\n  },\n  registerMap: function registerMap() {\n    __WEBPACK_IMPORTED_MODULE_1_echarts_lib_echarts___default.a.registerMap.apply(__WEBPACK_IMPORTED_MODULE_1_echarts_lib_echarts___default.a, arguments);\n  },\n  registerTheme: function registerTheme() {\n    __WEBPACK_IMPORTED_MODULE_1_echarts_lib_echarts___default.a.registerTheme.apply(__WEBPACK_IMPORTED_MODULE_1_echarts_lib_echarts___default.a, arguments);\n  }\n});\n\n/***/ }),\n/* 564 */,\n/* 565 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = getDaysInOneMonth;\n/* unused harmony export initTitle */\n/* unused harmony export getWeek */\n/* unused harmony export getJSON */\n/* unused harmony export serialization */\n/* unused harmony export md5 */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_promise__ = __webpack_require__(566);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_promise___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_promise__);\n\n\nfunction getDaysInOneMonth(year, month) {\n    month = parseInt(month, 10);\n    var d = new Date(year, month, 0);\n    return d.getDate();\n}\n\nfunction initTitle(txt) {\n    setTimeout(function () {\n        document.title = txt;\n    });\n}\n\nfunction getWeek(year, month, day) {\n    var week = [\"星期天\", \"星期一\", \"星期二\", \"星期三\", \"星期四\", \"星期五\", \"星期六\"];\n    var dt = new Date(year, month - 1, day).getDay();\n    return week[dt];\n}\n\nfunction getJSON(_url, data) {\n    var url = _url;\n    var promise = new __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_promise___default.a(function (resolve, reject) {\n        var client = new window.XMLHttpRequest();\n        if (data) {\n            url += paramFormat(data);\n        }\n        client.open('GET', url);\n        client.onreadystatechange = handler;\n        client.responseType = 'json';\n        client.setRequestHeader('Accept', 'application/json');\n        client.send();\n\n        function handler() {\n            if (this.readyState !== 4) {\n                return;\n            }\n            if (this.status === 200) {\n                resolve(this.response);\n            } else {\n                reject(new Error(this.statusText));\n            }\n        }\n    });\n    return promise;\n}\n\nfunction paramFormat(obj) {\n    var ret = '?';\n    if (obj) {\n        for (var pro in obj) {\n            if (obj.hasOwnProperty(pro)) {\n                ret += pro + '=' + obj[pro] + '&';\n            }\n        }\n        ret = ret.substring(0, ret.length - 1);\n    }\n    return ret;\n}\n\nfunction serialization(bodyObj) {\n    var temp = '';\n    for (var name in bodyObj) {\n        if (bodyObj.hasOwnProperty(name) && bodyObj[name]) {\n            temp += '&' + name + '=' + encodeURIComponent(bodyObj[name]);\n        }\n    }\n    temp = temp.substr(1);\n    console.log('temp = ' + temp);\n    return temp;\n}\n\nfunction md5(string) {\n    function md5_RotateLeft(lValue, iShiftBits) {\n        return lValue << iShiftBits | lValue >>> 32 - iShiftBits;\n    }\n\n    function md5_AddUnsigned(lX, lY) {\n        var lX4 = void 0,\n            lY4 = void 0,\n            lX8 = void 0,\n            lY8 = void 0,\n            lResult = void 0;\n        lX8 = lX & 0x80000000;\n        lY8 = lY & 0x80000000;\n        lX4 = lX & 0x40000000;\n        lY4 = lY & 0x40000000;\n        lResult = (lX & 0x3FFFFFFF) + (lY & 0x3FFFFFFF);\n        if (lX4 & lY4) {\n            return lResult ^ 0x80000000 ^ lX8 ^ lY8;\n        }\n        if (lX4 | lY4) {\n            if (lResult & 0x40000000) {\n                return lResult ^ 0xC0000000 ^ lX8 ^ lY8;\n            }\n            return lResult ^ 0x40000000 ^ lX8 ^ lY8;\n        }\n        return lResult ^ lX8 ^ lY8;\n    }\n\n    function md5_F(x, y, z) {\n        return x & y | ~x & z;\n    }\n\n    function md5_G(x, y, z) {\n        return x & z | y & ~z;\n    }\n\n    function md5_H(x, y, z) {\n        return x ^ y ^ z;\n    }\n\n    function md5_I(x, y, z) {\n        return y ^ (x | ~z);\n    }\n\n    function md5_FF(a, b, c, d, x, s, ac) {\n        a = md5_AddUnsigned(a, md5_AddUnsigned(md5_AddUnsigned(md5_F(b, c, d), x), ac));\n        return md5_AddUnsigned(md5_RotateLeft(a, s), b);\n    }\n\n    function md5_GG(a, b, c, d, x, s, ac) {\n        a = md5_AddUnsigned(a, md5_AddUnsigned(md5_AddUnsigned(md5_G(b, c, d), x), ac));\n        return md5_AddUnsigned(md5_RotateLeft(a, s), b);\n    }\n\n    function md5_HH(a, b, c, d, x, s, ac) {\n        a = md5_AddUnsigned(a, md5_AddUnsigned(md5_AddUnsigned(md5_H(b, c, d), x), ac));\n        return md5_AddUnsigned(md5_RotateLeft(a, s), b);\n    }\n\n    function md5_II(a, b, c, d, x, s, ac) {\n        a = md5_AddUnsigned(a, md5_AddUnsigned(md5_AddUnsigned(md5_I(b, c, d), x), ac));\n        return md5_AddUnsigned(md5_RotateLeft(a, s), b);\n    }\n\n    function md5_ConvertToWordArray(string) {\n        var lWordCount = void 0;\n        var lMessageLength = string.length;\n        var lNumberOfWords_temp1 = lMessageLength + 8;\n        var lNumberOfWords_temp2 = (lNumberOfWords_temp1 - lNumberOfWords_temp1 % 64) / 64;\n        var lNumberOfWords = (lNumberOfWords_temp2 + 1) * 16;\n        var lWordArray = Array(lNumberOfWords - 1);\n        var lBytePosition = 0;\n        var lByteCount = 0;\n        while (lByteCount < lMessageLength) {\n            lWordCount = (lByteCount - lByteCount % 4) / 4;\n            lBytePosition = lByteCount % 4 * 8;\n            lWordArray[lWordCount] = lWordArray[lWordCount] | string.charCodeAt(lByteCount) << lBytePosition;\n            lByteCount++;\n        }\n        lWordCount = (lByteCount - lByteCount % 4) / 4;\n        lBytePosition = lByteCount % 4 * 8;\n        lWordArray[lWordCount] = lWordArray[lWordCount] | 0x80 << lBytePosition;\n        lWordArray[lNumberOfWords - 2] = lMessageLength << 3;\n        lWordArray[lNumberOfWords - 1] = lMessageLength >>> 29;\n        return lWordArray;\n    }\n\n    function md5_WordToHex(lValue) {\n        var WordToHexValue = '';\n        var WordToHexValue_temp = '';\n        var lByte = void 0;\n        var lCount = void 0;\n        for (lCount = 0; lCount <= 3; lCount++) {\n            lByte = lValue >>> lCount * 8 & 255;\n            WordToHexValue_temp = '0' + lByte.toString(16);\n            WordToHexValue = WordToHexValue + WordToHexValue_temp.substr(WordToHexValue_temp.length - 2, 2);\n        }\n        return WordToHexValue;\n    }\n\n    function md5_Utf8Encode(string) {\n        string = string.replace(/\\r\\n/g, '\\n');\n        var utftext = '';\n        for (var n = 0; n < string.length; n++) {\n            var _c = string.charCodeAt(n);\n            if (_c < 128) {\n                utftext += String.fromCharCode(_c);\n            } else if (_c > 127 && _c < 2048) {\n                utftext += String.fromCharCode(_c >> 6 | 192);\n                utftext += String.fromCharCode(_c & 63 | 128);\n            } else {\n                utftext += String.fromCharCode(_c >> 12 | 224);\n                utftext += String.fromCharCode(_c >> 6 & 63 | 128);\n                utftext += String.fromCharCode(_c & 63 | 128);\n            }\n        }\n        return utftext;\n    }\n\n    var x = [];\n    var k = void 0;\n    var AA = void 0;\n    var BB = void 0;\n    var CC = void 0;\n    var DD = void 0;\n    var a = void 0;\n    var b = void 0;\n    var c = void 0;\n    var d = void 0;\n    var S11 = 7;\n    var S12 = 12;\n    var S13 = 17;\n    var S14 = 22;\n    var S21 = 5;\n    var S22 = 9;\n    var S23 = 14;\n    var S24 = 20;\n    var S31 = 4;\n    var S32 = 11;\n    var S33 = 16;\n    var S34 = 23;\n    var S41 = 6;\n    var S42 = 10;\n    var S43 = 15;\n    var S44 = 21;\n    string = md5_Utf8Encode(string);\n    x = md5_ConvertToWordArray(string);\n    a = 0x67452301;\n    b = 0xEFCDAB89;\n    c = 0x98BADCFE;\n    d = 0x10325476;\n    for (k = 0; k < x.length; k += 16) {\n        AA = a;\n        BB = b;\n        CC = c;\n        DD = d;\n        a = md5_FF(a, b, c, d, x[k + 0], S11, 0xD76AA478);\n        d = md5_FF(d, a, b, c, x[k + 1], S12, 0xE8C7B756);\n        c = md5_FF(c, d, a, b, x[k + 2], S13, 0x242070DB);\n        b = md5_FF(b, c, d, a, x[k + 3], S14, 0xC1BDCEEE);\n        a = md5_FF(a, b, c, d, x[k + 4], S11, 0xF57C0FAF);\n        d = md5_FF(d, a, b, c, x[k + 5], S12, 0x4787C62A);\n        c = md5_FF(c, d, a, b, x[k + 6], S13, 0xA8304613);\n        b = md5_FF(b, c, d, a, x[k + 7], S14, 0xFD469501);\n        a = md5_FF(a, b, c, d, x[k + 8], S11, 0x698098D8);\n        d = md5_FF(d, a, b, c, x[k + 9], S12, 0x8B44F7AF);\n        c = md5_FF(c, d, a, b, x[k + 10], S13, 0xFFFF5BB1);\n        b = md5_FF(b, c, d, a, x[k + 11], S14, 0x895CD7BE);\n        a = md5_FF(a, b, c, d, x[k + 12], S11, 0x6B901122);\n        d = md5_FF(d, a, b, c, x[k + 13], S12, 0xFD987193);\n        c = md5_FF(c, d, a, b, x[k + 14], S13, 0xA679438E);\n        b = md5_FF(b, c, d, a, x[k + 15], S14, 0x49B40821);\n        a = md5_GG(a, b, c, d, x[k + 1], S21, 0xF61E2562);\n        d = md5_GG(d, a, b, c, x[k + 6], S22, 0xC040B340);\n        c = md5_GG(c, d, a, b, x[k + 11], S23, 0x265E5A51);\n        b = md5_GG(b, c, d, a, x[k + 0], S24, 0xE9B6C7AA);\n        a = md5_GG(a, b, c, d, x[k + 5], S21, 0xD62F105D);\n        d = md5_GG(d, a, b, c, x[k + 10], S22, 0x2441453);\n        c = md5_GG(c, d, a, b, x[k + 15], S23, 0xD8A1E681);\n        b = md5_GG(b, c, d, a, x[k + 4], S24, 0xE7D3FBC8);\n        a = md5_GG(a, b, c, d, x[k + 9], S21, 0x21E1CDE6);\n        d = md5_GG(d, a, b, c, x[k + 14], S22, 0xC33707D6);\n        c = md5_GG(c, d, a, b, x[k + 3], S23, 0xF4D50D87);\n        b = md5_GG(b, c, d, a, x[k + 8], S24, 0x455A14ED);\n        a = md5_GG(a, b, c, d, x[k + 13], S21, 0xA9E3E905);\n        d = md5_GG(d, a, b, c, x[k + 2], S22, 0xFCEFA3F8);\n        c = md5_GG(c, d, a, b, x[k + 7], S23, 0x676F02D9);\n        b = md5_GG(b, c, d, a, x[k + 12], S24, 0x8D2A4C8A);\n        a = md5_HH(a, b, c, d, x[k + 5], S31, 0xFFFA3942);\n        d = md5_HH(d, a, b, c, x[k + 8], S32, 0x8771F681);\n        c = md5_HH(c, d, a, b, x[k + 11], S33, 0x6D9D6122);\n        b = md5_HH(b, c, d, a, x[k + 14], S34, 0xFDE5380C);\n        a = md5_HH(a, b, c, d, x[k + 1], S31, 0xA4BEEA44);\n        d = md5_HH(d, a, b, c, x[k + 4], S32, 0x4BDECFA9);\n        c = md5_HH(c, d, a, b, x[k + 7], S33, 0xF6BB4B60);\n        b = md5_HH(b, c, d, a, x[k + 10], S34, 0xBEBFBC70);\n        a = md5_HH(a, b, c, d, x[k + 13], S31, 0x289B7EC6);\n        d = md5_HH(d, a, b, c, x[k + 0], S32, 0xEAA127FA);\n        c = md5_HH(c, d, a, b, x[k + 3], S33, 0xD4EF3085);\n        b = md5_HH(b, c, d, a, x[k + 6], S34, 0x4881D05);\n        a = md5_HH(a, b, c, d, x[k + 9], S31, 0xD9D4D039);\n        d = md5_HH(d, a, b, c, x[k + 12], S32, 0xE6DB99E5);\n        c = md5_HH(c, d, a, b, x[k + 15], S33, 0x1FA27CF8);\n        b = md5_HH(b, c, d, a, x[k + 2], S34, 0xC4AC5665);\n        a = md5_II(a, b, c, d, x[k + 0], S41, 0xF4292244);\n        d = md5_II(d, a, b, c, x[k + 7], S42, 0x432AFF97);\n        c = md5_II(c, d, a, b, x[k + 14], S43, 0xAB9423A7);\n        b = md5_II(b, c, d, a, x[k + 5], S44, 0xFC93A039);\n        a = md5_II(a, b, c, d, x[k + 12], S41, 0x655B59C3);\n        d = md5_II(d, a, b, c, x[k + 3], S42, 0x8F0CCC92);\n        c = md5_II(c, d, a, b, x[k + 10], S43, 0xFFEFF47D);\n        b = md5_II(b, c, d, a, x[k + 1], S44, 0x85845DD1);\n        a = md5_II(a, b, c, d, x[k + 8], S41, 0x6FA87E4F);\n        d = md5_II(d, a, b, c, x[k + 15], S42, 0xFE2CE6E0);\n        c = md5_II(c, d, a, b, x[k + 6], S43, 0xA3014314);\n        b = md5_II(b, c, d, a, x[k + 13], S44, 0x4E0811A1);\n        a = md5_II(a, b, c, d, x[k + 4], S41, 0xF7537E82);\n        d = md5_II(d, a, b, c, x[k + 11], S42, 0xBD3AF235);\n        c = md5_II(c, d, a, b, x[k + 2], S43, 0x2AD7D2BB);\n        b = md5_II(b, c, d, a, x[k + 9], S44, 0xEB86D391);\n        a = md5_AddUnsigned(a, AA);\n        b = md5_AddUnsigned(b, BB);\n        c = md5_AddUnsigned(c, CC);\n        d = md5_AddUnsigned(d, DD);\n    }\n    return (md5_WordToHex(a) + md5_WordToHex(b) + md5_WordToHex(c) + md5_WordToHex(d)).toLowerCase();\n}\n\n/***/ }),\n/* 566 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = { \"default\": __webpack_require__(568), __esModule: true };\n\n/***/ }),\n/* 567 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\n\nvar _from = __webpack_require__(491);\n\nvar _from2 = _interopRequireDefault(_from);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function (arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  } else {\n    return (0, _from2.default)(arr);\n  }\n};\n\n/***/ }),\n/* 568 */\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(183);\n__webpack_require__(180);\n__webpack_require__(184);\n__webpack_require__(576);\nmodule.exports = __webpack_require__(46).Promise;\n\n/***/ }),\n/* 569 */\n/***/ (function(module, exports) {\n\nmodule.exports = function(it, Constructor, name, forbiddenField){\n  if(!(it instanceof Constructor) || (forbiddenField !== undefined && forbiddenField in it)){\n    throw TypeError(name + ': incorrect invocation!');\n  } return it;\n};\n\n/***/ }),\n/* 570 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar ctx         = __webpack_require__(177)\n  , call        = __webpack_require__(480)\n  , isArrayIter = __webpack_require__(479)\n  , anObject    = __webpack_require__(60)\n  , toLength    = __webpack_require__(179)\n  , getIterFn   = __webpack_require__(482)\n  , BREAK       = {}\n  , RETURN      = {};\nvar exports = module.exports = function(iterable, entries, fn, that, ITERATOR){\n  var iterFn = ITERATOR ? function(){ return iterable; } : getIterFn(iterable)\n    , f      = ctx(fn, that, entries ? 2 : 1)\n    , index  = 0\n    , length, step, iterator, result;\n  if(typeof iterFn != 'function')throw TypeError(iterable + ' is not iterable!');\n  // fast case for arrays with default iterator\n  if(isArrayIter(iterFn))for(length = toLength(iterable.length); length > index; index++){\n    result = entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);\n    if(result === BREAK || result === RETURN)return result;\n  } else for(iterator = iterFn.call(iterable); !(step = iterator.next()).done; ){\n    result = call(iterator, f, step.value, entries);\n    if(result === BREAK || result === RETURN)return result;\n  }\n};\nexports.BREAK  = BREAK;\nexports.RETURN = RETURN;\n\n/***/ }),\n/* 571 */\n/***/ (function(module, exports) {\n\n// fast apply, http://jsperf.lnkit.com/fast-apply/5\nmodule.exports = function(fn, args, that){\n  var un = that === undefined;\n  switch(args.length){\n    case 0: return un ? fn()\n                      : fn.call(that);\n    case 1: return un ? fn(args[0])\n                      : fn.call(that, args[0]);\n    case 2: return un ? fn(args[0], args[1])\n                      : fn.call(that, args[0], args[1]);\n    case 3: return un ? fn(args[0], args[1], args[2])\n                      : fn.call(that, args[0], args[1], args[2]);\n    case 4: return un ? fn(args[0], args[1], args[2], args[3])\n                      : fn.call(that, args[0], args[1], args[2], args[3]);\n  } return              fn.apply(that, args);\n};\n\n/***/ }),\n/* 572 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar global    = __webpack_require__(29)\n  , macrotask = __webpack_require__(517).set\n  , Observer  = global.MutationObserver || global.WebKitMutationObserver\n  , process   = global.process\n  , Promise   = global.Promise\n  , isNode    = __webpack_require__(120)(process) == 'process';\n\nmodule.exports = function(){\n  var head, last, notify;\n\n  var flush = function(){\n    var parent, fn;\n    if(isNode && (parent = process.domain))parent.exit();\n    while(head){\n      fn   = head.fn;\n      head = head.next;\n      try {\n        fn();\n      } catch(e){\n        if(head)notify();\n        else last = undefined;\n        throw e;\n      }\n    } last = undefined;\n    if(parent)parent.enter();\n  };\n\n  // Node.js\n  if(isNode){\n    notify = function(){\n      process.nextTick(flush);\n    };\n  // browsers with MutationObserver\n  } else if(Observer){\n    var toggle = true\n      , node   = document.createTextNode('');\n    new Observer(flush).observe(node, {characterData: true}); // eslint-disable-line no-new\n    notify = function(){\n      node.data = toggle = !toggle;\n    };\n  // environments with maybe non-completely correct, but existent Promise\n  } else if(Promise && Promise.resolve){\n    var promise = Promise.resolve();\n    notify = function(){\n      promise.then(flush);\n    };\n  // for other environments - macrotask based on:\n  // - setImmediate\n  // - MessageChannel\n  // - window.postMessag\n  // - onreadystatechange\n  // - setTimeout\n  } else {\n    notify = function(){\n      // strange IE + webpack dev server bug - use .call(global)\n      macrotask.call(global, flush);\n    };\n  }\n\n  return function(fn){\n    var task = {fn: fn, next: undefined};\n    if(last)last.next = task;\n    if(!head){\n      head = task;\n      notify();\n    } last = task;\n  };\n};\n\n/***/ }),\n/* 573 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar hide = __webpack_require__(48);\nmodule.exports = function(target, src, safe){\n  for(var key in src){\n    if(safe && target[key])target[key] = src[key];\n    else hide(target, key, src[key]);\n  } return target;\n};\n\n/***/ }),\n/* 574 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar global      = __webpack_require__(29)\n  , core        = __webpack_require__(46)\n  , dP          = __webpack_require__(33)\n  , DESCRIPTORS = __webpack_require__(34)\n  , SPECIES     = __webpack_require__(47)('species');\n\nmodule.exports = function(KEY){\n  var C = typeof core[KEY] == 'function' ? core[KEY] : global[KEY];\n  if(DESCRIPTORS && C && !C[SPECIES])dP.f(C, SPECIES, {\n    configurable: true,\n    get: function(){ return this; }\n  });\n};\n\n/***/ }),\n/* 575 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// 7.3.20 SpeciesConstructor(O, defaultConstructor)\nvar anObject  = __webpack_require__(60)\n  , aFunction = __webpack_require__(181)\n  , SPECIES   = __webpack_require__(47)('species');\nmodule.exports = function(O, D){\n  var C = anObject(O).constructor, S;\n  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? D : aFunction(S);\n};\n\n/***/ }),\n/* 576 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar LIBRARY            = __webpack_require__(79)\n  , global             = __webpack_require__(29)\n  , ctx                = __webpack_require__(177)\n  , classof            = __webpack_require__(478)\n  , $export            = __webpack_require__(58)\n  , isObject           = __webpack_require__(63)\n  , aFunction          = __webpack_require__(181)\n  , anInstance         = __webpack_require__(569)\n  , forOf              = __webpack_require__(570)\n  , speciesConstructor = __webpack_require__(575)\n  , task               = __webpack_require__(517).set\n  , microtask          = __webpack_require__(572)()\n  , PROMISE            = 'Promise'\n  , TypeError          = global.TypeError\n  , process            = global.process\n  , $Promise           = global[PROMISE]\n  , process            = global.process\n  , isNode             = classof(process) == 'process'\n  , empty              = function(){ /* empty */ }\n  , Internal, GenericPromiseCapability, Wrapper;\n\nvar USE_NATIVE = !!function(){\n  try {\n    // correct subclassing with @@species support\n    var promise     = $Promise.resolve(1)\n      , FakePromise = (promise.constructor = {})[__webpack_require__(47)('species')] = function(exec){ exec(empty, empty); };\n    // unhandled rejections tracking support, NodeJS Promise without it fails @@species test\n    return (isNode || typeof PromiseRejectionEvent == 'function') && promise.then(empty) instanceof FakePromise;\n  } catch(e){ /* empty */ }\n}();\n\n// helpers\nvar sameConstructor = function(a, b){\n  // with library wrapper special case\n  return a === b || a === $Promise && b === Wrapper;\n};\nvar isThenable = function(it){\n  var then;\n  return isObject(it) && typeof (then = it.then) == 'function' ? then : false;\n};\nvar newPromiseCapability = function(C){\n  return sameConstructor($Promise, C)\n    ? new PromiseCapability(C)\n    : new GenericPromiseCapability(C);\n};\nvar PromiseCapability = GenericPromiseCapability = function(C){\n  var resolve, reject;\n  this.promise = new C(function($$resolve, $$reject){\n    if(resolve !== undefined || reject !== undefined)throw TypeError('Bad Promise constructor');\n    resolve = $$resolve;\n    reject  = $$reject;\n  });\n  this.resolve = aFunction(resolve);\n  this.reject  = aFunction(reject);\n};\nvar perform = function(exec){\n  try {\n    exec();\n  } catch(e){\n    return {error: e};\n  }\n};\nvar notify = function(promise, isReject){\n  if(promise._n)return;\n  promise._n = true;\n  var chain = promise._c;\n  microtask(function(){\n    var value = promise._v\n      , ok    = promise._s == 1\n      , i     = 0;\n    var run = function(reaction){\n      var handler = ok ? reaction.ok : reaction.fail\n        , resolve = reaction.resolve\n        , reject  = reaction.reject\n        , domain  = reaction.domain\n        , result, then;\n      try {\n        if(handler){\n          if(!ok){\n            if(promise._h == 2)onHandleUnhandled(promise);\n            promise._h = 1;\n          }\n          if(handler === true)result = value;\n          else {\n            if(domain)domain.enter();\n            result = handler(value);\n            if(domain)domain.exit();\n          }\n          if(result === reaction.promise){\n            reject(TypeError('Promise-chain cycle'));\n          } else if(then = isThenable(result)){\n            then.call(result, resolve, reject);\n          } else resolve(result);\n        } else reject(value);\n      } catch(e){\n        reject(e);\n      }\n    };\n    while(chain.length > i)run(chain[i++]); // variable length - can't use forEach\n    promise._c = [];\n    promise._n = false;\n    if(isReject && !promise._h)onUnhandled(promise);\n  });\n};\nvar onUnhandled = function(promise){\n  task.call(global, function(){\n    var value = promise._v\n      , abrupt, handler, console;\n    if(isUnhandled(promise)){\n      abrupt = perform(function(){\n        if(isNode){\n          process.emit('unhandledRejection', value, promise);\n        } else if(handler = global.onunhandledrejection){\n          handler({promise: promise, reason: value});\n        } else if((console = global.console) && console.error){\n          console.error('Unhandled promise rejection', value);\n        }\n      });\n      // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should\n      promise._h = isNode || isUnhandled(promise) ? 2 : 1;\n    } promise._a = undefined;\n    if(abrupt)throw abrupt.error;\n  });\n};\nvar isUnhandled = function(promise){\n  if(promise._h == 1)return false;\n  var chain = promise._a || promise._c\n    , i     = 0\n    , reaction;\n  while(chain.length > i){\n    reaction = chain[i++];\n    if(reaction.fail || !isUnhandled(reaction.promise))return false;\n  } return true;\n};\nvar onHandleUnhandled = function(promise){\n  task.call(global, function(){\n    var handler;\n    if(isNode){\n      process.emit('rejectionHandled', promise);\n    } else if(handler = global.onrejectionhandled){\n      handler({promise: promise, reason: promise._v});\n    }\n  });\n};\nvar $reject = function(value){\n  var promise = this;\n  if(promise._d)return;\n  promise._d = true;\n  promise = promise._w || promise; // unwrap\n  promise._v = value;\n  promise._s = 2;\n  if(!promise._a)promise._a = promise._c.slice();\n  notify(promise, true);\n};\nvar $resolve = function(value){\n  var promise = this\n    , then;\n  if(promise._d)return;\n  promise._d = true;\n  promise = promise._w || promise; // unwrap\n  try {\n    if(promise === value)throw TypeError(\"Promise can't be resolved itself\");\n    if(then = isThenable(value)){\n      microtask(function(){\n        var wrapper = {_w: promise, _d: false}; // wrap\n        try {\n          then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));\n        } catch(e){\n          $reject.call(wrapper, e);\n        }\n      });\n    } else {\n      promise._v = value;\n      promise._s = 1;\n      notify(promise, false);\n    }\n  } catch(e){\n    $reject.call({_w: promise, _d: false}, e); // wrap\n  }\n};\n\n// constructor polyfill\nif(!USE_NATIVE){\n  // 25.4.3.1 Promise(executor)\n  $Promise = function Promise(executor){\n    anInstance(this, $Promise, PROMISE, '_h');\n    aFunction(executor);\n    Internal.call(this);\n    try {\n      executor(ctx($resolve, this, 1), ctx($reject, this, 1));\n    } catch(err){\n      $reject.call(this, err);\n    }\n  };\n  Internal = function Promise(executor){\n    this._c = [];             // <- awaiting reactions\n    this._a = undefined;      // <- checked in isUnhandled reactions\n    this._s = 0;              // <- state\n    this._d = false;          // <- done\n    this._v = undefined;      // <- value\n    this._h = 0;              // <- rejection state, 0 - default, 1 - handled, 2 - unhandled\n    this._n = false;          // <- notify\n  };\n  Internal.prototype = __webpack_require__(573)($Promise.prototype, {\n    // 25.4.5.3 Promise.prototype.then(onFulfilled, onRejected)\n    then: function then(onFulfilled, onRejected){\n      var reaction    = newPromiseCapability(speciesConstructor(this, $Promise));\n      reaction.ok     = typeof onFulfilled == 'function' ? onFulfilled : true;\n      reaction.fail   = typeof onRejected == 'function' && onRejected;\n      reaction.domain = isNode ? process.domain : undefined;\n      this._c.push(reaction);\n      if(this._a)this._a.push(reaction);\n      if(this._s)notify(this, false);\n      return reaction.promise;\n    },\n    // 25.4.5.1 Promise.prototype.catch(onRejected)\n    'catch': function(onRejected){\n      return this.then(undefined, onRejected);\n    }\n  });\n  PromiseCapability = function(){\n    var promise  = new Internal;\n    this.promise = promise;\n    this.resolve = ctx($resolve, promise, 1);\n    this.reject  = ctx($reject, promise, 1);\n  };\n}\n\n$export($export.G + $export.W + $export.F * !USE_NATIVE, {Promise: $Promise});\n__webpack_require__(80)($Promise, PROMISE);\n__webpack_require__(574)(PROMISE);\nWrapper = __webpack_require__(46)[PROMISE];\n\n// statics\n$export($export.S + $export.F * !USE_NATIVE, PROMISE, {\n  // 25.4.4.5 Promise.reject(r)\n  reject: function reject(r){\n    var capability = newPromiseCapability(this)\n      , $$reject   = capability.reject;\n    $$reject(r);\n    return capability.promise;\n  }\n});\n$export($export.S + $export.F * (LIBRARY || !USE_NATIVE), PROMISE, {\n  // 25.4.4.6 Promise.resolve(x)\n  resolve: function resolve(x){\n    // instanceof instead of internal slot check because we should fix it without replacement native Promise core\n    if(x instanceof $Promise && sameConstructor(x.constructor, this))return x;\n    var capability = newPromiseCapability(this)\n      , $$resolve  = capability.resolve;\n    $$resolve(x);\n    return capability.promise;\n  }\n});\n$export($export.S + $export.F * !(USE_NATIVE && __webpack_require__(481)(function(iter){\n  $Promise.all(iter)['catch'](empty);\n})), PROMISE, {\n  // 25.4.4.1 Promise.all(iterable)\n  all: function all(iterable){\n    var C          = this\n      , capability = newPromiseCapability(C)\n      , resolve    = capability.resolve\n      , reject     = capability.reject;\n    var abrupt = perform(function(){\n      var values    = []\n        , index     = 0\n        , remaining = 1;\n      forOf(iterable, false, function(promise){\n        var $index        = index++\n          , alreadyCalled = false;\n        values.push(undefined);\n        remaining++;\n        C.resolve(promise).then(function(value){\n          if(alreadyCalled)return;\n          alreadyCalled  = true;\n          values[$index] = value;\n          --remaining || resolve(values);\n        }, reject);\n      });\n      --remaining || resolve(values);\n    });\n    if(abrupt)reject(abrupt.error);\n    return capability.promise;\n  },\n  // 25.4.4.4 Promise.race(iterable)\n  race: function race(iterable){\n    var C          = this\n      , capability = newPromiseCapability(C)\n      , reject     = capability.reject;\n    var abrupt = perform(function(){\n      forOf(iterable, false, function(promise){\n        C.resolve(promise).then(capability.resolve, reject);\n      });\n    });\n    if(abrupt)reject(abrupt.error);\n    return capability.promise;\n  }\n});\n\n/***/ }),\n/* 577 */\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(416)(true);\n// imports\n\n\n// module\nexports.push([module.i, \".echarts{width:600px;height:400px}\", \"\", {\"version\":3,\"sources\":[\"/Users/yiche/Desktop/company/newfe/isp_feweb/node_modules/vue-echarts/components/ECharts.vue\"],\"names\":[],\"mappings\":\"AACA,SACE,YAAa,AACb,YAAc,CACf\",\"file\":\"ECharts.vue\",\"sourcesContent\":[\"\\n.echarts {\\n  width: 600px;\\n  height: 400px;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n/***/ }),\n/* 578 */,\n/* 579 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(453);\n\n    var echartsAPIList = [\n        'getDom', 'getZr', 'getWidth', 'getHeight', 'getDevicePixelRatio', 'dispatchAction', 'isDisposed',\n        'on', 'off', 'getDataURL', 'getConnectedDataURL', 'getModel', 'getOption',\n        'getViewOfComponentModel', 'getViewOfSeriesModel'\n    ];\n    // And `getCoordinateSystems` and `getComponentByElement` will be injected in echarts.js\n\n    function ExtensionAPI(chartInstance) {\n        zrUtil.each(echartsAPIList, function (name) {\n            this[name] = zrUtil.bind(chartInstance[name], chartInstance);\n        }, this);\n    }\n\n    module.exports = ExtensionAPI;\n\n\n/***/ }),\n/* 580 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module echarts/chart/helper/SymbolDraw\n */\n\n\n    var graphic = __webpack_require__(454);\n    var Symbol = __webpack_require__(518);\n\n    /**\n     * @constructor\n     * @alias module:echarts/chart/helper/SymbolDraw\n     * @param {module:zrender/graphic/Group} [symbolCtor]\n     */\n    function SymbolDraw(symbolCtor) {\n        this.group = new graphic.Group();\n\n        this._symbolCtor = symbolCtor || Symbol;\n    }\n\n    var symbolDrawProto = SymbolDraw.prototype;\n\n    function symbolNeedsDraw(data, idx, isIgnore) {\n        var point = data.getItemLayout(idx);\n        // Is an object\n        // if (point && point.hasOwnProperty('point')) {\n        //     point = point.point;\n        // }\n        return point && !isNaN(point[0]) && !isNaN(point[1]) && !(isIgnore && isIgnore(idx))\n                    && data.getItemVisual(idx, 'symbol') !== 'none';\n    }\n    /**\n     * Update symbols draw by new data\n     * @param {module:echarts/data/List} data\n     * @param {Array.<boolean>} [isIgnore]\n     */\n    symbolDrawProto.updateData = function (data, isIgnore) {\n        var group = this.group;\n        var seriesModel = data.hostModel;\n        var oldData = this._data;\n\n        var SymbolCtor = this._symbolCtor;\n\n        var seriesScope = {\n            itemStyle: seriesModel.getModel('itemStyle.normal').getItemStyle(['color']),\n            hoverItemStyle: seriesModel.getModel('itemStyle.emphasis').getItemStyle(),\n            symbolRotate: seriesModel.get('symbolRotate'),\n            symbolOffset: seriesModel.get('symbolOffset'),\n            hoverAnimation: seriesModel.get('hoverAnimation'),\n\n            labelModel: seriesModel.getModel('label.normal'),\n            hoverLabelModel: seriesModel.getModel('label.emphasis'),\n            cursorStyle: seriesModel.get('cursor')\n        };\n\n        data.diff(oldData)\n            .add(function (newIdx) {\n                var point = data.getItemLayout(newIdx);\n                if (symbolNeedsDraw(data, newIdx, isIgnore)) {\n                    var symbolEl = new SymbolCtor(data, newIdx, seriesScope);\n                    symbolEl.attr('position', point);\n                    data.setItemGraphicEl(newIdx, symbolEl);\n                    group.add(symbolEl);\n                }\n            })\n            .update(function (newIdx, oldIdx) {\n                var symbolEl = oldData.getItemGraphicEl(oldIdx);\n                var point = data.getItemLayout(newIdx);\n                if (!symbolNeedsDraw(data, newIdx, isIgnore)) {\n                    group.remove(symbolEl);\n                    return;\n                }\n                if (!symbolEl) {\n                    symbolEl = new SymbolCtor(data, newIdx);\n                    symbolEl.attr('position', point);\n                }\n                else {\n                    symbolEl.updateData(data, newIdx, seriesScope);\n                    graphic.updateProps(symbolEl, {\n                        position: point\n                    }, seriesModel);\n                }\n\n                // Add back\n                group.add(symbolEl);\n\n                data.setItemGraphicEl(newIdx, symbolEl);\n            })\n            .remove(function (oldIdx) {\n                var el = oldData.getItemGraphicEl(oldIdx);\n                el && el.fadeOut(function () {\n                    group.remove(el);\n                });\n            })\n            .execute();\n\n        this._data = data;\n    };\n\n    symbolDrawProto.updateLayout = function () {\n        var data = this._data;\n        if (data) {\n            // Not use animation\n            data.eachItemGraphicEl(function (el, idx) {\n                var point = data.getItemLayout(idx);\n                el.attr('position', point);\n            });\n        }\n    };\n\n    symbolDrawProto.remove = function (enableAnimation) {\n        var group = this.group;\n        var data = this._data;\n        if (data) {\n            if (enableAnimation) {\n                data.eachItemGraphicEl(function (el) {\n                    el.fadeOut(function () {\n                        group.remove(el);\n                    });\n                });\n            }\n            else {\n                group.removeAll();\n            }\n        }\n    };\n\n    module.exports = SymbolDraw;\n\n\n/***/ }),\n/* 581 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module echarts/chart/helper/Symbol\n */\n\n\n    var graphic = __webpack_require__(454);\n    var zrUtil = __webpack_require__(453);\n    var modelUtil = __webpack_require__(456);\n\n    var helper = {};\n\n    helper.findLabelValueDim = function (data) {\n        var valueDim;\n        var labelDims = modelUtil.otherDimToDataDim(data, 'label');\n\n        if (labelDims.length) {\n            valueDim = labelDims[0];\n        }\n        else {\n            // Get last value dim\n            var dimensions = data.dimensions.slice();\n            var dataType;\n            while (dimensions.length && (\n                valueDim = dimensions.pop(),\n                dataType = data.getDimensionInfo(valueDim).type,\n                dataType === 'ordinal' || dataType === 'time'\n            )) {} // jshint ignore:line\n        }\n\n        return valueDim;\n    };\n\n    helper.setTextToStyle = function (\n        data, dataIndex, valueDim, elStyle, seriesModel, labelModel, color\n    ) {\n        if (valueDim != null && labelModel.getShallow('show')) {\n            graphic.setText(elStyle, labelModel, color);\n            elStyle.text = zrUtil.retrieve(\n                seriesModel.getFormattedLabel(dataIndex, 'normal'),\n                data.get(valueDim, dataIndex)\n            );\n        }\n        else {\n            elStyle.text = '';\n        }\n    };\n\n    module.exports = helper;\n\n\n/***/ }),\n/* 582 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(453);\n    var echarts = __webpack_require__(455);\n    var PRIORITY = echarts.PRIORITY;\n\n    __webpack_require__(583);\n    __webpack_require__(584);\n\n    echarts.registerVisual(zrUtil.curry(\n        __webpack_require__(638), 'line', 'circle', 'line'\n    ));\n    echarts.registerLayout(zrUtil.curry(\n        __webpack_require__(621), 'line'\n    ));\n\n    // Down sample after filter\n    echarts.registerProcessor(PRIORITY.PROCESSOR.STATISTIC, zrUtil.curry(\n        __webpack_require__(633), 'line'\n    ));\n\n    // In case developer forget to include grid component\n    __webpack_require__(605);\n\n\n/***/ }),\n/* 583 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var createListFromArray = __webpack_require__(519);\n    var SeriesModel = __webpack_require__(532);\n\n    module.exports = SeriesModel.extend({\n\n        type: 'series.line',\n\n        dependencies: ['grid', 'polar'],\n\n        getInitialData: function (option, ecModel) {\n            if (__DEV__) {\n                var coordSys = option.coordinateSystem;\n                if (coordSys !== 'polar' && coordSys !== 'cartesian2d') {\n                    throw new Error('Line not support coordinateSystem besides cartesian and polar');\n                }\n            }\n            return createListFromArray(option.data, this, ecModel);\n        },\n\n        defaultOption: {\n            zlevel: 0,                  // 一级层叠\n            z: 2,                       // 二级层叠\n            coordinateSystem: 'cartesian2d',\n            legendHoverLink: true,\n\n            hoverAnimation: true,\n            // stack: null\n            // xAxisIndex: 0,\n            // yAxisIndex: 0,\n\n            // polarIndex: 0,\n\n            // If clip the overflow value\n            clipOverflow: true,\n            // cursor: null,\n\n            label: {\n                normal: {\n                    position: 'top'\n                }\n            },\n            // itemStyle: {\n            //     normal: {},\n            //     emphasis: {}\n            // },\n            lineStyle: {\n                normal: {\n                    width: 2,\n                    type: 'solid'\n                }\n            },\n            // areaStyle: {},\n            // false, 'start', 'end', 'middle'\n            step: false,\n\n            // Disabled if step is true\n            smooth: false,\n            smoothMonotone: null,\n            // 拐点图形类型\n            symbol: 'emptyCircle',\n            // 拐点图形大小\n            symbolSize: 4,\n            // 拐点图形旋转控制\n            symbolRotate: null,\n\n            // 是否显示 symbol, 只有在 tooltip hover 的时候显示\n            showSymbol: true,\n            // 标志图形默认只有主轴显示（随主轴标签间隔隐藏策略）\n            showAllSymbol: false,\n\n            // 是否连接断点\n            connectNulls: false,\n\n            // 数据过滤，'average', 'max', 'min', 'sum'\n            sampling: 'none',\n\n            animationEasing: 'linear',\n\n            // Disable progressive\n            progressive: 0,\n            hoverLayerThreshold: Infinity\n        }\n    });\n\n\n/***/ }),\n/* 584 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// FIXME step not support polar\n\n\n    var zrUtil = __webpack_require__(453);\n    var SymbolDraw = __webpack_require__(580);\n    var Symbol = __webpack_require__(518);\n    var lineAnimationDiff = __webpack_require__(585);\n    var graphic = __webpack_require__(454);\n    var modelUtil = __webpack_require__(456);\n    var polyHelper = __webpack_require__(586);\n    var ChartView = __webpack_require__(535);\n\n    function isPointsSame(points1, points2) {\n        if (points1.length !== points2.length) {\n            return;\n        }\n        for (var i = 0; i < points1.length; i++) {\n            var p1 = points1[i];\n            var p2 = points2[i];\n            if (p1[0] !== p2[0] || p1[1] !== p2[1]) {\n                return;\n            }\n        }\n        return true;\n    }\n\n    function getSmooth(smooth) {\n        return typeof (smooth) === 'number' ? smooth : (smooth ? 0.3 : 0);\n    }\n\n    function getAxisExtentWithGap(axis) {\n        var extent = axis.getGlobalExtent();\n        if (axis.onBand) {\n            // Remove extra 1px to avoid line miter in clipped edge\n            var halfBandWidth = axis.getBandWidth() / 2 - 1;\n            var dir = extent[1] > extent[0] ? 1 : -1;\n            extent[0] += dir * halfBandWidth;\n            extent[1] -= dir * halfBandWidth;\n        }\n        return extent;\n    }\n\n    function sign(val) {\n        return val >= 0 ? 1 : -1;\n    }\n    /**\n     * @param {module:echarts/coord/cartesian/Cartesian2D|module:echarts/coord/polar/Polar} coordSys\n     * @param {module:echarts/data/List} data\n     * @param {Array.<Array.<number>>} points\n     * @private\n     */\n    function getStackedOnPoints(coordSys, data) {\n        var baseAxis = coordSys.getBaseAxis();\n        var valueAxis = coordSys.getOtherAxis(baseAxis);\n        var valueStart = baseAxis.onZero\n            ? 0 : valueAxis.scale.getExtent()[0];\n\n        var valueDim = valueAxis.dim;\n\n        var baseDataOffset = valueDim === 'x' || valueDim === 'radius' ? 1 : 0;\n\n        return data.mapArray([valueDim], function (val, idx) {\n            var stackedOnSameSign;\n            var stackedOn = data.stackedOn;\n            // Find first stacked value with same sign\n            while (stackedOn &&\n                sign(stackedOn.get(valueDim, idx)) === sign(val)\n            ) {\n                stackedOnSameSign = stackedOn;\n                break;\n            }\n            var stackedData = [];\n            stackedData[baseDataOffset] = data.get(baseAxis.dim, idx);\n            stackedData[1 - baseDataOffset] = stackedOnSameSign\n                ? stackedOnSameSign.get(valueDim, idx, true) : valueStart;\n\n            return coordSys.dataToPoint(stackedData);\n        }, true);\n    }\n\n    function createGridClipShape(cartesian, hasAnimation, seriesModel) {\n        var xExtent = getAxisExtentWithGap(cartesian.getAxis('x'));\n        var yExtent = getAxisExtentWithGap(cartesian.getAxis('y'));\n        var isHorizontal = cartesian.getBaseAxis().isHorizontal();\n\n        var x = Math.min(xExtent[0], xExtent[1]);\n        var y = Math.min(yExtent[0], yExtent[1]);\n        var width = Math.max(xExtent[0], xExtent[1]) - x;\n        var height = Math.max(yExtent[0], yExtent[1]) - y;\n        var lineWidth = seriesModel.get('lineStyle.normal.width') || 2;\n        // Expand clip shape to avoid clipping when line value exceeds axis\n        var expandSize = seriesModel.get('clipOverflow') ? lineWidth / 2 : Math.max(width, height);\n        if (isHorizontal) {\n            y -= expandSize;\n            height += expandSize * 2;\n        }\n        else {\n            x -= expandSize;\n            width += expandSize * 2;\n        }\n\n        var clipPath = new graphic.Rect({\n            shape: {\n                x: x,\n                y: y,\n                width: width,\n                height: height\n            }\n        });\n\n        if (hasAnimation) {\n            clipPath.shape[isHorizontal ? 'width' : 'height'] = 0;\n            graphic.initProps(clipPath, {\n                shape: {\n                    width: width,\n                    height: height\n                }\n            }, seriesModel);\n        }\n\n        return clipPath;\n    }\n\n    function createPolarClipShape(polar, hasAnimation, seriesModel) {\n        var angleAxis = polar.getAngleAxis();\n        var radiusAxis = polar.getRadiusAxis();\n\n        var radiusExtent = radiusAxis.getExtent();\n        var angleExtent = angleAxis.getExtent();\n\n        var RADIAN = Math.PI / 180;\n\n        var clipPath = new graphic.Sector({\n            shape: {\n                cx: polar.cx,\n                cy: polar.cy,\n                r0: radiusExtent[0],\n                r: radiusExtent[1],\n                startAngle: -angleExtent[0] * RADIAN,\n                endAngle: -angleExtent[1] * RADIAN,\n                clockwise: angleAxis.inverse\n            }\n        });\n\n        if (hasAnimation) {\n            clipPath.shape.endAngle = -angleExtent[0] * RADIAN;\n            graphic.initProps(clipPath, {\n                shape: {\n                    endAngle: -angleExtent[1] * RADIAN\n                }\n            }, seriesModel);\n        }\n\n        return clipPath;\n    }\n\n    function createClipShape(coordSys, hasAnimation, seriesModel) {\n        return coordSys.type === 'polar'\n            ? createPolarClipShape(coordSys, hasAnimation, seriesModel)\n            : createGridClipShape(coordSys, hasAnimation, seriesModel);\n    }\n\n    function turnPointsIntoStep(points, coordSys, stepTurnAt) {\n        var baseAxis = coordSys.getBaseAxis();\n        var baseIndex = baseAxis.dim === 'x' || baseAxis.dim === 'radius' ? 0 : 1;\n\n        var stepPoints = [];\n        for (var i = 0; i < points.length - 1; i++) {\n            var nextPt = points[i + 1];\n            var pt = points[i];\n            stepPoints.push(pt);\n\n            var stepPt = [];\n            switch (stepTurnAt) {\n                case 'end':\n                    stepPt[baseIndex] = nextPt[baseIndex];\n                    stepPt[1 - baseIndex] = pt[1 - baseIndex];\n                    // default is start\n                    stepPoints.push(stepPt);\n                    break;\n                case 'middle':\n                    // default is start\n                    var middle = (pt[baseIndex] + nextPt[baseIndex]) / 2;\n                    var stepPt2 = [];\n                    stepPt[baseIndex] = stepPt2[baseIndex] = middle;\n                    stepPt[1 - baseIndex] = pt[1 - baseIndex];\n                    stepPt2[1 - baseIndex] = nextPt[1 - baseIndex];\n                    stepPoints.push(stepPt);\n                    stepPoints.push(stepPt2);\n                    break;\n                default:\n                    stepPt[baseIndex] = pt[baseIndex];\n                    stepPt[1 - baseIndex] = nextPt[1 - baseIndex];\n                    // default is start\n                    stepPoints.push(stepPt);\n            }\n        }\n        // Last points\n        points[i] && stepPoints.push(points[i]);\n        return stepPoints;\n    }\n\n    function getVisualGradient(data, coordSys) {\n        var visualMetaList = data.getVisual('visualMeta');\n        if (!visualMetaList || !visualMetaList.length || !data.count()) {\n            // When data.count() is 0, gradient range can not be calculated.\n            return;\n        }\n\n        var visualMeta;\n        for (var i = visualMetaList.length - 1; i >= 0; i--) {\n            // Can only be x or y\n            if (visualMetaList[i].dimension < 2) {\n                visualMeta = visualMetaList[i];\n                break;\n            }\n        }\n        if (!visualMeta || coordSys.type !== 'cartesian2d') {\n            if (__DEV__) {\n                console.warn('Visual map on line style only support x or y dimension.');\n            }\n            return;\n        }\n\n        // If the area to be rendered is bigger than area defined by LinearGradient,\n        // the canvas spec prescribes that the color of the first stop and the last\n        // stop should be used. But if two stops are added at offset 0, in effect\n        // browsers use the color of the second stop to render area outside\n        // LinearGradient. So we can only infinitesimally extend area defined in\n        // LinearGradient to render `outerColors`.\n\n        var dimension = visualMeta.dimension;\n        var dimName = data.dimensions[dimension];\n        var axis = coordSys.getAxis(dimName);\n\n        // dataToCoor mapping may not be linear, but must be monotonic.\n        var colorStops = zrUtil.map(visualMeta.stops, function (stop) {\n            return {\n                coord: axis.toGlobalCoord(axis.dataToCoord(stop.value)),\n                color: stop.color\n            };\n        });\n        var stopLen = colorStops.length;\n        var outerColors = visualMeta.outerColors.slice();\n\n        if (stopLen && colorStops[0].coord > colorStops[stopLen - 1].coord) {\n            colorStops.reverse();\n            outerColors.reverse();\n        }\n\n        var tinyExtent = 10; // Arbitrary value: 10px\n        var minCoord = colorStops[0].coord - tinyExtent;\n        var maxCoord = colorStops[stopLen - 1].coord + tinyExtent;\n        var coordSpan = maxCoord - minCoord;\n\n        if (coordSpan < 1e-3) {\n            return 'transparent';\n        }\n\n        zrUtil.each(colorStops, function (stop) {\n            stop.offset = (stop.coord - minCoord) / coordSpan;\n        });\n        colorStops.push({\n            offset: stopLen ? colorStops[stopLen - 1].offset : 0.5,\n            color: outerColors[1] || 'transparent'\n        });\n        colorStops.unshift({ // notice colorStops.length have been changed.\n            offset: stopLen ? colorStops[0].offset : 0.5,\n            color: outerColors[0] || 'transparent'\n        });\n\n        // zrUtil.each(colorStops, function (colorStop) {\n        //     // Make sure each offset has rounded px to avoid not sharp edge\n        //     colorStop.offset = (Math.round(colorStop.offset * (end - start) + start) - start) / (end - start);\n        // });\n\n        var gradient = new graphic.LinearGradient(0, 0, 0, 0, colorStops, true);\n        gradient[dimName] = minCoord;\n        gradient[dimName + '2'] = maxCoord;\n\n        return gradient;\n    }\n\n    module.exports = ChartView.extend({\n\n        type: 'line',\n\n        init: function () {\n            var lineGroup = new graphic.Group();\n\n            var symbolDraw = new SymbolDraw();\n            this.group.add(symbolDraw.group);\n\n            this._symbolDraw = symbolDraw;\n            this._lineGroup = lineGroup;\n        },\n\n        render: function (seriesModel, ecModel, api) {\n            var coordSys = seriesModel.coordinateSystem;\n            var group = this.group;\n            var data = seriesModel.getData();\n            var lineStyleModel = seriesModel.getModel('lineStyle.normal');\n            var areaStyleModel = seriesModel.getModel('areaStyle.normal');\n\n            var points = data.mapArray(data.getItemLayout, true);\n\n            var isCoordSysPolar = coordSys.type === 'polar';\n            var prevCoordSys = this._coordSys;\n\n            var symbolDraw = this._symbolDraw;\n            var polyline = this._polyline;\n            var polygon = this._polygon;\n\n            var lineGroup = this._lineGroup;\n\n            var hasAnimation = seriesModel.get('animation');\n\n            var isAreaChart = !areaStyleModel.isEmpty();\n            var stackedOnPoints = getStackedOnPoints(coordSys, data);\n\n            var showSymbol = seriesModel.get('showSymbol');\n\n            var isSymbolIgnore = showSymbol && !isCoordSysPolar && !seriesModel.get('showAllSymbol')\n                && this._getSymbolIgnoreFunc(data, coordSys);\n\n            // Remove temporary symbols\n            var oldData = this._data;\n            oldData && oldData.eachItemGraphicEl(function (el, idx) {\n                if (el.__temp) {\n                    group.remove(el);\n                    oldData.setItemGraphicEl(idx, null);\n                }\n            });\n\n            // Remove previous created symbols if showSymbol changed to false\n            if (!showSymbol) {\n                symbolDraw.remove();\n            }\n\n            group.add(lineGroup);\n\n            // FIXME step not support polar\n            var step = !isCoordSysPolar && seriesModel.get('step');\n            // Initialization animation or coordinate system changed\n            if (\n                !(polyline && prevCoordSys.type === coordSys.type && step === this._step)\n            ) {\n                showSymbol && symbolDraw.updateData(data, isSymbolIgnore);\n\n                if (step) {\n                    // TODO If stacked series is not step\n                    points = turnPointsIntoStep(points, coordSys, step);\n                    stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n                }\n\n                polyline = this._newPolyline(points, coordSys, hasAnimation);\n                if (isAreaChart) {\n                    polygon = this._newPolygon(\n                        points, stackedOnPoints,\n                        coordSys, hasAnimation\n                    );\n                }\n                lineGroup.setClipPath(createClipShape(coordSys, true, seriesModel));\n            }\n            else {\n                if (isAreaChart && !polygon) {\n                    // If areaStyle is added\n                    polygon = this._newPolygon(\n                        points, stackedOnPoints,\n                        coordSys, hasAnimation\n                    );\n                }\n                else if (polygon && !isAreaChart) {\n                    // If areaStyle is removed\n                    lineGroup.remove(polygon);\n                    polygon = this._polygon = null;\n                }\n\n                // Update clipPath\n                lineGroup.setClipPath(createClipShape(coordSys, false, seriesModel));\n\n                // Always update, or it is wrong in the case turning on legend\n                // because points are not changed\n                showSymbol && symbolDraw.updateData(data, isSymbolIgnore);\n\n                // Stop symbol animation and sync with line points\n                // FIXME performance?\n                data.eachItemGraphicEl(function (el) {\n                    el.stopAnimation(true);\n                });\n\n                // In the case data zoom triggerred refreshing frequently\n                // Data may not change if line has a category axis. So it should animate nothing\n                if (!isPointsSame(this._stackedOnPoints, stackedOnPoints)\n                    || !isPointsSame(this._points, points)\n                ) {\n                    if (hasAnimation) {\n                        this._updateAnimation(\n                            data, stackedOnPoints, coordSys, api, step\n                        );\n                    }\n                    else {\n                        // Not do it in update with animation\n                        if (step) {\n                            // TODO If stacked series is not step\n                            points = turnPointsIntoStep(points, coordSys, step);\n                            stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n                        }\n\n                        polyline.setShape({\n                            points: points\n                        });\n                        polygon && polygon.setShape({\n                            points: points,\n                            stackedOnPoints: stackedOnPoints\n                        });\n                    }\n                }\n            }\n\n            var visualColor = getVisualGradient(data, coordSys) || data.getVisual('color');\n\n            polyline.useStyle(zrUtil.defaults(\n                // Use color in lineStyle first\n                lineStyleModel.getLineStyle(),\n                {\n                    fill: 'none',\n                    stroke: visualColor,\n                    lineJoin: 'bevel'\n                }\n            ));\n\n            var smooth = seriesModel.get('smooth');\n            smooth = getSmooth(seriesModel.get('smooth'));\n            polyline.setShape({\n                smooth: smooth,\n                smoothMonotone: seriesModel.get('smoothMonotone'),\n                connectNulls: seriesModel.get('connectNulls')\n            });\n\n            if (polygon) {\n                var stackedOn = data.stackedOn;\n                var stackedOnSmooth = 0;\n\n                polygon.useStyle(zrUtil.defaults(\n                    areaStyleModel.getAreaStyle(),\n                    {\n                        fill: visualColor,\n                        opacity: 0.7,\n                        lineJoin: 'bevel'\n                    }\n                ));\n\n                if (stackedOn) {\n                    var stackedOnSeries = stackedOn.hostModel;\n                    stackedOnSmooth = getSmooth(stackedOnSeries.get('smooth'));\n                }\n\n                polygon.setShape({\n                    smooth: smooth,\n                    stackedOnSmooth: stackedOnSmooth,\n                    smoothMonotone: seriesModel.get('smoothMonotone'),\n                    connectNulls: seriesModel.get('connectNulls')\n                });\n            }\n\n            this._data = data;\n            // Save the coordinate system for transition animation when data changed\n            this._coordSys = coordSys;\n            this._stackedOnPoints = stackedOnPoints;\n            this._points = points;\n            this._step = step;\n        },\n\n        dispose: function () {},\n\n        highlight: function (seriesModel, ecModel, api, payload) {\n            var data = seriesModel.getData();\n            var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n            if (!(dataIndex instanceof Array) && dataIndex != null && dataIndex >= 0) {\n                var symbol = data.getItemGraphicEl(dataIndex);\n                if (!symbol) {\n                    // Create a temporary symbol if it is not exists\n                    var pt = data.getItemLayout(dataIndex);\n                    if (!pt) {\n                        // Null data\n                        return;\n                    }\n                    symbol = new Symbol(data, dataIndex);\n                    symbol.position = pt;\n                    symbol.setZ(\n                        seriesModel.get('zlevel'),\n                        seriesModel.get('z')\n                    );\n                    symbol.ignore = isNaN(pt[0]) || isNaN(pt[1]);\n                    symbol.__temp = true;\n                    data.setItemGraphicEl(dataIndex, symbol);\n\n                    // Stop scale animation\n                    symbol.stopSymbolAnimation(true);\n\n                    this.group.add(symbol);\n                }\n                symbol.highlight();\n            }\n            else {\n                // Highlight whole series\n                ChartView.prototype.highlight.call(\n                    this, seriesModel, ecModel, api, payload\n                );\n            }\n        },\n\n        downplay: function (seriesModel, ecModel, api, payload) {\n            var data = seriesModel.getData();\n            var dataIndex = modelUtil.queryDataIndex(data, payload);\n            if (dataIndex != null && dataIndex >= 0) {\n                var symbol = data.getItemGraphicEl(dataIndex);\n                if (symbol) {\n                    if (symbol.__temp) {\n                        data.setItemGraphicEl(dataIndex, null);\n                        this.group.remove(symbol);\n                    }\n                    else {\n                        symbol.downplay();\n                    }\n                }\n            }\n            else {\n                // FIXME\n                // can not downplay completely.\n                // Downplay whole series\n                ChartView.prototype.downplay.call(\n                    this, seriesModel, ecModel, api, payload\n                );\n            }\n        },\n\n        /**\n         * @param {module:zrender/container/Group} group\n         * @param {Array.<Array.<number>>} points\n         * @private\n         */\n        _newPolyline: function (points) {\n            var polyline = this._polyline;\n            // Remove previous created polyline\n            if (polyline) {\n                this._lineGroup.remove(polyline);\n            }\n\n            polyline = new polyHelper.Polyline({\n                shape: {\n                    points: points\n                },\n                silent: true,\n                z2: 10\n            });\n\n            this._lineGroup.add(polyline);\n\n            this._polyline = polyline;\n\n            return polyline;\n        },\n\n        /**\n         * @param {module:zrender/container/Group} group\n         * @param {Array.<Array.<number>>} stackedOnPoints\n         * @param {Array.<Array.<number>>} points\n         * @private\n         */\n        _newPolygon: function (points, stackedOnPoints) {\n            var polygon = this._polygon;\n            // Remove previous created polygon\n            if (polygon) {\n                this._lineGroup.remove(polygon);\n            }\n\n            polygon = new polyHelper.Polygon({\n                shape: {\n                    points: points,\n                    stackedOnPoints: stackedOnPoints\n                },\n                silent: true\n            });\n\n            this._lineGroup.add(polygon);\n\n            this._polygon = polygon;\n            return polygon;\n        },\n        /**\n         * @private\n         */\n        _getSymbolIgnoreFunc: function (data, coordSys) {\n            var categoryAxis = coordSys.getAxesByScale('ordinal')[0];\n            // `getLabelInterval` is provided by echarts/component/axis\n            if (categoryAxis && categoryAxis.isLabelIgnored) {\n                return zrUtil.bind(categoryAxis.isLabelIgnored, categoryAxis);\n            }\n        },\n\n        /**\n         * @private\n         */\n        // FIXME Two value axis\n        _updateAnimation: function (data, stackedOnPoints, coordSys, api, step) {\n            var polyline = this._polyline;\n            var polygon = this._polygon;\n            var seriesModel = data.hostModel;\n\n            var diff = lineAnimationDiff(\n                this._data, data,\n                this._stackedOnPoints, stackedOnPoints,\n                this._coordSys, coordSys\n            );\n\n            var current = diff.current;\n            var stackedOnCurrent = diff.stackedOnCurrent;\n            var next = diff.next;\n            var stackedOnNext = diff.stackedOnNext;\n            if (step) {\n                // TODO If stacked series is not step\n                current = turnPointsIntoStep(diff.current, coordSys, step);\n                stackedOnCurrent = turnPointsIntoStep(diff.stackedOnCurrent, coordSys, step);\n                next = turnPointsIntoStep(diff.next, coordSys, step);\n                stackedOnNext = turnPointsIntoStep(diff.stackedOnNext, coordSys, step);\n            }\n            // `diff.current` is subset of `current` (which should be ensured by\n            // turnPointsIntoStep), so points in `__points` can be updated when\n            // points in `current` are update during animation.\n            polyline.shape.__points = diff.current;\n            polyline.shape.points = current;\n\n            graphic.updateProps(polyline, {\n                shape: {\n                    points: next\n                }\n            }, seriesModel);\n\n            if (polygon) {\n                polygon.setShape({\n                    points: current,\n                    stackedOnPoints: stackedOnCurrent\n                });\n                graphic.updateProps(polygon, {\n                    shape: {\n                        points: next,\n                        stackedOnPoints: stackedOnNext\n                    }\n                }, seriesModel);\n            }\n\n            var updatedDataInfo = [];\n            var diffStatus = diff.status;\n\n            for (var i = 0; i < diffStatus.length; i++) {\n                var cmd = diffStatus[i].cmd;\n                if (cmd === '=') {\n                    var el = data.getItemGraphicEl(diffStatus[i].idx1);\n                    if (el) {\n                        updatedDataInfo.push({\n                            el: el,\n                            ptIdx: i    // Index of points\n                        });\n                    }\n                }\n            }\n\n            if (polyline.animators && polyline.animators.length) {\n                polyline.animators[0].during(function () {\n                    for (var i = 0; i < updatedDataInfo.length; i++) {\n                        var el = updatedDataInfo[i].el;\n                        el.attr('position', polyline.shape.__points[updatedDataInfo[i].ptIdx]);\n                    }\n                });\n            }\n        },\n\n        remove: function (ecModel) {\n            var group = this.group;\n            var oldData = this._data;\n            this._lineGroup.removeAll();\n            this._symbolDraw.remove(true);\n            // Remove temporary created elements when highlighting\n            oldData && oldData.eachItemGraphicEl(function (el, idx) {\n                if (el.__temp) {\n                    group.remove(el);\n                    oldData.setItemGraphicEl(idx, null);\n                }\n            });\n\n            this._polyline =\n            this._polygon =\n            this._coordSys =\n            this._points =\n            this._stackedOnPoints =\n            this._data = null;\n        }\n    });\n\n\n/***/ }),\n/* 585 */\n/***/ (function(module, exports) {\n\n\n\n    // var arrayDiff = require('zrender/lib/core/arrayDiff');\n    // 'zrender/core/arrayDiff' has been used before, but it did\n    // not do well in performance when roam with fixed dataZoom window.\n\n    function sign(val) {\n        return val >= 0 ? 1 : -1;\n    }\n\n    function getStackedOnPoint(coordSys, data, idx) {\n        var baseAxis = coordSys.getBaseAxis();\n        var valueAxis = coordSys.getOtherAxis(baseAxis);\n        var valueStart = baseAxis.onZero\n            ? 0 : valueAxis.scale.getExtent()[0];\n\n        var valueDim = valueAxis.dim;\n        var baseDataOffset = valueDim === 'x' || valueDim === 'radius' ? 1 : 0;\n\n        var stackedOnSameSign;\n        var stackedOn = data.stackedOn;\n        var val = data.get(valueDim, idx);\n        // Find first stacked value with same sign\n        while (stackedOn &&\n            sign(stackedOn.get(valueDim, idx)) === sign(val)\n        ) {\n            stackedOnSameSign = stackedOn;\n            break;\n        }\n        var stackedData = [];\n        stackedData[baseDataOffset] = data.get(baseAxis.dim, idx);\n        stackedData[1 - baseDataOffset] = stackedOnSameSign\n            ? stackedOnSameSign.get(valueDim, idx, true) : valueStart;\n\n        return coordSys.dataToPoint(stackedData);\n    }\n\n    // function convertToIntId(newIdList, oldIdList) {\n    //     // Generate int id instead of string id.\n    //     // Compare string maybe slow in score function of arrDiff\n\n    //     // Assume id in idList are all unique\n    //     var idIndicesMap = {};\n    //     var idx = 0;\n    //     for (var i = 0; i < newIdList.length; i++) {\n    //         idIndicesMap[newIdList[i]] = idx;\n    //         newIdList[i] = idx++;\n    //     }\n    //     for (var i = 0; i < oldIdList.length; i++) {\n    //         var oldId = oldIdList[i];\n    //         // Same with newIdList\n    //         if (idIndicesMap[oldId]) {\n    //             oldIdList[i] = idIndicesMap[oldId];\n    //         }\n    //         else {\n    //             oldIdList[i] = idx++;\n    //         }\n    //     }\n    // }\n\n    function diffData(oldData, newData) {\n        var diffResult = [];\n\n        newData.diff(oldData)\n            .add(function (idx) {\n                diffResult.push({cmd: '+', idx: idx});\n            })\n            .update(function (newIdx, oldIdx) {\n                diffResult.push({cmd: '=', idx: oldIdx, idx1: newIdx});\n            })\n            .remove(function (idx) {\n                diffResult.push({cmd: '-', idx: idx});\n            })\n            .execute();\n\n        return diffResult;\n    }\n\n    module.exports = function (\n        oldData, newData,\n        oldStackedOnPoints, newStackedOnPoints,\n        oldCoordSys, newCoordSys\n    ) {\n        var diff = diffData(oldData, newData);\n\n        // var newIdList = newData.mapArray(newData.getId);\n        // var oldIdList = oldData.mapArray(oldData.getId);\n\n        // convertToIntId(newIdList, oldIdList);\n\n        // // FIXME One data ?\n        // diff = arrayDiff(oldIdList, newIdList);\n\n        var currPoints = [];\n        var nextPoints = [];\n        // Points for stacking base line\n        var currStackedPoints = [];\n        var nextStackedPoints = [];\n\n        var status = [];\n        var sortedIndices = [];\n        var rawIndices = [];\n        var dims = newCoordSys.dimensions;\n        for (var i = 0; i < diff.length; i++) {\n            var diffItem = diff[i];\n            var pointAdded = true;\n\n            // FIXME, animation is not so perfect when dataZoom window moves fast\n            // Which is in case remvoing or add more than one data in the tail or head\n            switch (diffItem.cmd) {\n                case '=':\n                    var currentPt = oldData.getItemLayout(diffItem.idx);\n                    var nextPt = newData.getItemLayout(diffItem.idx1);\n                    // If previous data is NaN, use next point directly\n                    if (isNaN(currentPt[0]) || isNaN(currentPt[1])) {\n                        currentPt = nextPt.slice();\n                    }\n                    currPoints.push(currentPt);\n                    nextPoints.push(nextPt);\n\n                    currStackedPoints.push(oldStackedOnPoints[diffItem.idx]);\n                    nextStackedPoints.push(newStackedOnPoints[diffItem.idx1]);\n\n                    rawIndices.push(newData.getRawIndex(diffItem.idx1));\n                    break;\n                case '+':\n                    var idx = diffItem.idx;\n                    currPoints.push(\n                        oldCoordSys.dataToPoint([\n                            newData.get(dims[0], idx, true), newData.get(dims[1], idx, true)\n                        ])\n                    );\n\n                    nextPoints.push(newData.getItemLayout(idx).slice());\n\n                    currStackedPoints.push(\n                        getStackedOnPoint(oldCoordSys, newData, idx)\n                    );\n                    nextStackedPoints.push(newStackedOnPoints[idx]);\n\n                    rawIndices.push(newData.getRawIndex(idx));\n                    break;\n                case '-':\n                    var idx = diffItem.idx;\n                    var rawIndex = oldData.getRawIndex(idx);\n                    // Data is replaced. In the case of dynamic data queue\n                    // FIXME FIXME FIXME\n                    if (rawIndex !== idx) {\n                        currPoints.push(oldData.getItemLayout(idx));\n                        nextPoints.push(newCoordSys.dataToPoint([\n                            oldData.get(dims[0], idx, true), oldData.get(dims[1], idx, true)\n                        ]));\n\n                        currStackedPoints.push(oldStackedOnPoints[idx]);\n                        nextStackedPoints.push(\n                            getStackedOnPoint(\n                                newCoordSys, oldData, idx\n                            )\n                        );\n\n                        rawIndices.push(rawIndex);\n                    }\n                    else {\n                        pointAdded = false;\n                    }\n            }\n\n            // Original indices\n            if (pointAdded) {\n                status.push(diffItem);\n                sortedIndices.push(sortedIndices.length);\n            }\n        }\n\n        // Diff result may be crossed if all items are changed\n        // Sort by data index\n        sortedIndices.sort(function (a, b) {\n            return rawIndices[a] - rawIndices[b];\n        });\n\n        var sortedCurrPoints = [];\n        var sortedNextPoints = [];\n\n        var sortedCurrStackedPoints = [];\n        var sortedNextStackedPoints = [];\n\n        var sortedStatus = [];\n        for (var i = 0; i < sortedIndices.length; i++) {\n            var idx = sortedIndices[i];\n            sortedCurrPoints[i] = currPoints[idx];\n            sortedNextPoints[i] = nextPoints[idx];\n\n            sortedCurrStackedPoints[i] = currStackedPoints[idx];\n            sortedNextStackedPoints[i] = nextStackedPoints[idx];\n\n            sortedStatus[i] = status[idx];\n        }\n\n        return {\n            current: sortedCurrPoints,\n            next: sortedNextPoints,\n\n            stackedOnCurrent: sortedCurrStackedPoints,\n            stackedOnNext: sortedNextStackedPoints,\n\n            status: sortedStatus\n        };\n    };\n\n\n/***/ }),\n/* 586 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// Poly path support NaN point\n\n\n    var Path = __webpack_require__(459);\n    var vec2 = __webpack_require__(458);\n\n    var vec2Min = vec2.min;\n    var vec2Max = vec2.max;\n\n    var scaleAndAdd = vec2.scaleAndAdd;\n    var v2Copy = vec2.copy;\n\n    // Temporary variable\n    var v = [];\n    var cp0 = [];\n    var cp1 = [];\n\n    function isPointNull(p) {\n        return isNaN(p[0]) || isNaN(p[1]);\n    }\n\n    function drawSegment(\n        ctx, points, start, segLen, allLen,\n        dir, smoothMin, smoothMax, smooth, smoothMonotone, connectNulls\n    ) {\n        var prevIdx = 0;\n        var idx = start;\n        for (var k = 0; k < segLen; k++) {\n            var p = points[idx];\n            if (idx >= allLen || idx < 0) {\n                break;\n            }\n            if (isPointNull(p)) {\n                if (connectNulls) {\n                    idx += dir;\n                    continue;\n                }\n                break;\n            }\n\n            if (idx === start) {\n                ctx[dir > 0 ? 'moveTo' : 'lineTo'](p[0], p[1]);\n                v2Copy(cp0, p);\n            }\n            else {\n                if (smooth > 0) {\n                    var nextIdx = idx + dir;\n                    var nextP = points[nextIdx];\n                    if (connectNulls) {\n                        // Find next point not null\n                        while (nextP && isPointNull(points[nextIdx])) {\n                            nextIdx += dir;\n                            nextP = points[nextIdx];\n                        }\n                    }\n\n                    var ratioNextSeg = 0.5;\n                    var prevP = points[prevIdx];\n                    var nextP = points[nextIdx];\n                    // Last point\n                    if (!nextP || isPointNull(nextP)) {\n                        v2Copy(cp1, p);\n                    }\n                    else {\n                        // If next data is null in not connect case\n                        if (isPointNull(nextP) && !connectNulls) {\n                            nextP = p;\n                        }\n\n                        vec2.sub(v, nextP, prevP);\n\n                        var lenPrevSeg;\n                        var lenNextSeg;\n                        if (smoothMonotone === 'x' || smoothMonotone === 'y') {\n                            var dim = smoothMonotone === 'x' ? 0 : 1;\n                            lenPrevSeg = Math.abs(p[dim] - prevP[dim]);\n                            lenNextSeg = Math.abs(p[dim] - nextP[dim]);\n                        }\n                        else {\n                            lenPrevSeg = vec2.dist(p, prevP);\n                            lenNextSeg = vec2.dist(p, nextP);\n                        }\n\n                        // Use ratio of seg length\n                        ratioNextSeg = lenNextSeg / (lenNextSeg + lenPrevSeg);\n\n                        scaleAndAdd(cp1, p, v, -smooth * (1 - ratioNextSeg));\n                    }\n                    // Smooth constraint\n                    vec2Min(cp0, cp0, smoothMax);\n                    vec2Max(cp0, cp0, smoothMin);\n                    vec2Min(cp1, cp1, smoothMax);\n                    vec2Max(cp1, cp1, smoothMin);\n\n                    ctx.bezierCurveTo(\n                        cp0[0], cp0[1],\n                        cp1[0], cp1[1],\n                        p[0], p[1]\n                    );\n                    // cp0 of next segment\n                    scaleAndAdd(cp0, p, v, smooth * ratioNextSeg);\n                }\n                else {\n                    ctx.lineTo(p[0], p[1]);\n                }\n            }\n\n            prevIdx = idx;\n            idx += dir;\n        }\n\n        return k;\n    }\n\n    function getBoundingBox(points, smoothConstraint) {\n        var ptMin = [Infinity, Infinity];\n        var ptMax = [-Infinity, -Infinity];\n        if (smoothConstraint) {\n            for (var i = 0; i < points.length; i++) {\n                var pt = points[i];\n                if (pt[0] < ptMin[0]) { ptMin[0] = pt[0]; }\n                if (pt[1] < ptMin[1]) { ptMin[1] = pt[1]; }\n                if (pt[0] > ptMax[0]) { ptMax[0] = pt[0]; }\n                if (pt[1] > ptMax[1]) { ptMax[1] = pt[1]; }\n            }\n        }\n        return {\n            min: smoothConstraint ? ptMin : ptMax,\n            max: smoothConstraint ? ptMax : ptMin\n        };\n    }\n\n    module.exports = {\n\n        Polyline: Path.extend({\n\n            type: 'ec-polyline',\n\n            shape: {\n                points: [],\n\n                smooth: 0,\n\n                smoothConstraint: true,\n\n                smoothMonotone: null,\n\n                connectNulls: false\n            },\n\n            style: {\n                fill: null,\n\n                stroke: '#000'\n            },\n\n            buildPath: function (ctx, shape) {\n                var points = shape.points;\n\n                var i = 0;\n                var len = points.length;\n\n                var result = getBoundingBox(points, shape.smoothConstraint);\n\n                if (shape.connectNulls) {\n                    // Must remove first and last null values avoid draw error in polygon\n                    for (; len > 0; len--) {\n                        if (!isPointNull(points[len - 1])) {\n                            break;\n                        }\n                    }\n                    for (; i < len; i++) {\n                        if (!isPointNull(points[i])) {\n                            break;\n                        }\n                    }\n                }\n                while (i < len) {\n                    i += drawSegment(\n                        ctx, points, i, len, len,\n                        1, result.min, result.max, shape.smooth,\n                        shape.smoothMonotone, shape.connectNulls\n                    ) + 1;\n                }\n            }\n        }),\n\n        Polygon: Path.extend({\n\n            type: 'ec-polygon',\n\n            shape: {\n                points: [],\n\n                // Offset between stacked base points and points\n                stackedOnPoints: [],\n\n                smooth: 0,\n\n                stackedOnSmooth: 0,\n\n                smoothConstraint: true,\n\n                smoothMonotone: null,\n\n                connectNulls: false\n            },\n\n            buildPath: function (ctx, shape) {\n                var points = shape.points;\n                var stackedOnPoints = shape.stackedOnPoints;\n\n                var i = 0;\n                var len = points.length;\n                var smoothMonotone = shape.smoothMonotone;\n                var bbox = getBoundingBox(points, shape.smoothConstraint);\n                var stackedOnBBox = getBoundingBox(stackedOnPoints, shape.smoothConstraint);\n\n                if (shape.connectNulls) {\n                    // Must remove first and last null values avoid draw error in polygon\n                    for (; len > 0; len--) {\n                        if (!isPointNull(points[len - 1])) {\n                            break;\n                        }\n                    }\n                    for (; i < len; i++) {\n                        if (!isPointNull(points[i])) {\n                            break;\n                        }\n                    }\n                }\n                while (i < len) {\n                    var k = drawSegment(\n                        ctx, points, i, len, len,\n                        1, bbox.min, bbox.max, shape.smooth,\n                        smoothMonotone, shape.connectNulls\n                    );\n                    drawSegment(\n                        ctx, stackedOnPoints, i + k - 1, k, len,\n                        -1, stackedOnBBox.min, stackedOnBBox.max, shape.stackedOnSmooth,\n                        smoothMonotone, shape.connectNulls\n                    );\n                    i += k + 1;\n\n                    ctx.closePath();\n                }\n            }\n        })\n    };\n\n\n/***/ }),\n/* 587 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// TODO boundaryGap\n\n\n    __webpack_require__(529);\n\n    __webpack_require__(588);\n\n\n/***/ }),\n/* 588 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(453);\n    var graphic = __webpack_require__(454);\n    var AxisBuilder = __webpack_require__(520);\n    var AxisView = __webpack_require__(521);\n    var cartesianAxisHelper = __webpack_require__(522);\n    var ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick;\n    var getInterval = AxisBuilder.getInterval;\n\n    var axisBuilderAttrs = [\n        'axisLine', 'axisLabel', 'axisTick', 'axisName'\n    ];\n    var selfBuilderAttrs = [\n        'splitArea', 'splitLine'\n    ];\n\n    // function getAlignWithLabel(model, axisModel) {\n    //     var alignWithLabel = model.get('alignWithLabel');\n    //     if (alignWithLabel === 'auto') {\n    //         alignWithLabel = axisModel.get('axisTick.alignWithLabel');\n    //     }\n    //     return alignWithLabel;\n    // }\n\n    var CartesianAxisView = AxisView.extend({\n\n        type: 'cartesianAxis',\n\n        axisPointerClass: 'CartesianAxisPointer',\n\n        /**\n         * @override\n         */\n        render: function (axisModel, ecModel, api, payload) {\n\n            this.group.removeAll();\n\n            var oldAxisGroup = this._axisGroup;\n            this._axisGroup = new graphic.Group();\n\n            this.group.add(this._axisGroup);\n\n            if (!axisModel.get('show')) {\n                return;\n            }\n\n            var gridModel = axisModel.getCoordSysModel();\n\n            var layout = cartesianAxisHelper.layout(gridModel, axisModel);\n\n            var axisBuilder = new AxisBuilder(axisModel, layout);\n\n            zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n\n            this._axisGroup.add(axisBuilder.getGroup());\n\n            zrUtil.each(selfBuilderAttrs, function (name) {\n                if (axisModel.get(name + '.show')) {\n                    this['_' + name](axisModel, gridModel, layout.labelInterval);\n                }\n            }, this);\n\n            graphic.groupTransition(oldAxisGroup, this._axisGroup, axisModel);\n\n            CartesianAxisView.superCall(this, 'render', axisModel, ecModel, api, payload);\n        },\n\n        /**\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/coord/cartesian/GridModel} gridModel\n         * @param {number|Function} labelInterval\n         * @private\n         */\n        _splitLine: function (axisModel, gridModel, labelInterval) {\n            var axis = axisModel.axis;\n\n            if (axis.scale.isBlank()) {\n                return;\n            }\n\n            var splitLineModel = axisModel.getModel('splitLine');\n            var lineStyleModel = splitLineModel.getModel('lineStyle');\n            var lineColors = lineStyleModel.get('color');\n\n            var lineInterval = getInterval(splitLineModel, labelInterval);\n\n            lineColors = zrUtil.isArray(lineColors) ? lineColors : [lineColors];\n\n            var gridRect = gridModel.coordinateSystem.getRect();\n            var isHorizontal = axis.isHorizontal();\n\n            var lineCount = 0;\n\n            var ticksCoords = axis.getTicksCoords(\n                // splitLineModel.get('alignWithLabel')\n            );\n            var ticks = axis.scale.getTicks();\n\n            var p1 = [];\n            var p2 = [];\n            // Simple optimization\n            // Batching the lines if color are the same\n            var lineStyle = lineStyleModel.getLineStyle();\n            for (var i = 0; i < ticksCoords.length; i++) {\n                if (ifIgnoreOnTick(axis, i, lineInterval)) {\n                    continue;\n                }\n\n                var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n\n                if (isHorizontal) {\n                    p1[0] = tickCoord;\n                    p1[1] = gridRect.y;\n                    p2[0] = tickCoord;\n                    p2[1] = gridRect.y + gridRect.height;\n                }\n                else {\n                    p1[0] = gridRect.x;\n                    p1[1] = tickCoord;\n                    p2[0] = gridRect.x + gridRect.width;\n                    p2[1] = tickCoord;\n                }\n\n                var colorIndex = (lineCount++) % lineColors.length;\n                this._axisGroup.add(new graphic.Line(graphic.subPixelOptimizeLine({\n                    anid: 'line_' + ticks[i],\n\n                    shape: {\n                        x1: p1[0],\n                        y1: p1[1],\n                        x2: p2[0],\n                        y2: p2[1]\n                    },\n                    style: zrUtil.defaults({\n                        stroke: lineColors[colorIndex]\n                    }, lineStyle),\n                    silent: true\n                })));\n            }\n        },\n\n        /**\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/coord/cartesian/GridModel} gridModel\n         * @param {number|Function} labelInterval\n         * @private\n         */\n        _splitArea: function (axisModel, gridModel, labelInterval) {\n            var axis = axisModel.axis;\n\n            if (axis.scale.isBlank()) {\n                return;\n            }\n\n            var splitAreaModel = axisModel.getModel('splitArea');\n            var areaStyleModel = splitAreaModel.getModel('areaStyle');\n            var areaColors = areaStyleModel.get('color');\n\n            var gridRect = gridModel.coordinateSystem.getRect();\n\n            var ticksCoords = axis.getTicksCoords(\n                // splitAreaModel.get('alignWithLabel')\n            );\n            var ticks = axis.scale.getTicks();\n\n            var prevX = axis.toGlobalCoord(ticksCoords[0]);\n            var prevY = axis.toGlobalCoord(ticksCoords[0]);\n\n            var count = 0;\n\n            var areaInterval = getInterval(splitAreaModel, labelInterval);\n\n            var areaStyle = areaStyleModel.getAreaStyle();\n            areaColors = zrUtil.isArray(areaColors) ? areaColors : [areaColors];\n\n            for (var i = 1; i < ticksCoords.length; i++) {\n                if (ifIgnoreOnTick(axis, i, areaInterval)) {\n                    continue;\n                }\n\n                var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n\n                var x;\n                var y;\n                var width;\n                var height;\n                if (axis.isHorizontal()) {\n                    x = prevX;\n                    y = gridRect.y;\n                    width = tickCoord - x;\n                    height = gridRect.height;\n                }\n                else {\n                    x = gridRect.x;\n                    y = prevY;\n                    width = gridRect.width;\n                    height = tickCoord - y;\n                }\n\n                var colorIndex = (count++) % areaColors.length;\n                this._axisGroup.add(new graphic.Rect({\n                    anid: 'area_' + ticks[i],\n\n                    shape: {\n                        x: x,\n                        y: y,\n                        width: width,\n                        height: height\n                    },\n                    style: zrUtil.defaults({\n                        fill: areaColors[colorIndex]\n                    }, areaStyle),\n                    silent: true\n                }));\n\n                prevX = x + width;\n                prevY = y + height;\n            }\n        }\n    });\n\n    CartesianAxisView.extend({\n        type: 'xAxis'\n    });\n    CartesianAxisView.extend({\n        type: 'yAxis'\n    });\n\n\n\n/***/ }),\n/* 589 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var echarts = __webpack_require__(455);\n    var axisPointerModelHelper = __webpack_require__(483);\n    var axisTrigger = __webpack_require__(594);\n    var zrUtil = __webpack_require__(453);\n\n    __webpack_require__(590);\n    __webpack_require__(591);\n\n    // CartesianAxisPointer is not supposed to be required here. But consider\n    // echarts.simple.js and online build tooltip, which only require gridSimple,\n    // CartesianAxisPointer should be able to required somewhere.\n    __webpack_require__(593);\n\n    echarts.registerPreprocessor(function (option) {\n        // Always has a global axisPointerModel for default setting.\n        if (option) {\n            (!option.axisPointer || option.axisPointer.length === 0)\n                && (option.axisPointer = {});\n\n            var link = option.axisPointer.link;\n            // Normalize to array to avoid object mergin. But if link\n            // is not set, remain null/undefined, otherwise it will\n            // override existent link setting.\n            if (link && !zrUtil.isArray(link)) {\n                option.axisPointer.link = [link];\n            }\n        }\n    });\n\n    // This process should proformed after coordinate systems created\n    // and series data processed. So put it on statistic processing stage.\n    echarts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, function (ecModel, api) {\n        // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n        // allAxesInfo should be updated when setOption performed.\n        ecModel.getComponent('axisPointer').coordSysAxesInfo\n            = axisPointerModelHelper.collect(ecModel, api);\n    });\n\n    // Broadcast to all views.\n    echarts.registerAction({\n        type: 'updateAxisPointer',\n        event: 'updateAxisPointer',\n        update: ':updateAxisPointer'\n    }, axisTrigger);\n\n\n\n/***/ }),\n/* 590 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var echarts = __webpack_require__(455);\n\n    var AxisPointerModel = echarts.extendComponentModel({\n\n        type: 'axisPointer',\n\n        coordSysAxesInfo: null,\n\n        defaultOption: {\n            // 'auto' means that show when triggered by tooltip or handle.\n            show: 'auto',\n            // 'click' | 'mousemove' | 'none'\n            triggerOn: null, // set default in AxisPonterView.js\n\n            zlevel: 0,\n            z: 50,\n\n            type: 'line',\n            // axispointer triggered by tootip determine snap automatically,\n            // see `modelHelper`.\n            snap: false,\n            triggerTooltip: true,\n\n            value: null,\n            status: null, // Init value depends on whether handle is used.\n\n            // [group0, group1, ...]\n            // Each group can be: {\n            //      mapper: function () {},\n            //      singleTooltip: 'multiple',  // 'multiple' or 'single'\n            //      xAxisId: ...,\n            //      yAxisName: ...,\n            //      angleAxisIndex: ...\n            // }\n            // mapper: can be ignored.\n            //      input: {axisInfo, value}\n            //      output: {axisInfo, value}\n            link: [],\n\n            // Do not set 'auto' here, otherwise global animation: false\n            // will not effect at this axispointer.\n            animation: null,\n            animationDurationUpdate: 200,\n\n            lineStyle: {\n                color: '#aaa',\n                width: 1,\n                type: 'solid'\n            },\n\n            shadowStyle: {\n                color: 'rgba(150,150,150,0.3)'\n            },\n\n            label: {\n                show: true,\n                formatter: null, // string | Function\n                precision: 'auto', // Or a number like 0, 1, 2 ...\n                margin: 3,\n                textStyle: {\n                    color: '#fff'\n                },\n                padding: [5, 7, 5, 7],\n                backgroundColor: 'auto', // default: axis line color\n                borderColor: null,\n                borderWidth: 0,\n                shadowBlur: 3,\n                shadowColor: '#aaa'\n                // Considering applicability, common style should\n                // better not have shadowOffset.\n                // shadowOffsetX: 0,\n                // shadowOffsetY: 2\n            },\n\n            handle: {\n                show: false,\n                icon: 'M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4h1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7v-1.2h6.6z M13.3,22H6.7v-1.2h6.6z M13.3,19.6H6.7v-1.2h6.6z', // jshint ignore:line\n                size: 45,\n                // handle margin is from symbol center to axis, which is stable when circular move.\n                margin: 50,\n                // color: '#1b8bbd'\n                // color: '#2f4554'\n                color: '#333',\n                shadowBlur: 3,\n                shadowColor: '#aaa',\n                shadowOffsetX: 0,\n                shadowOffsetY: 2,\n\n                // For mobile performance\n                throttle: 40\n            }\n        }\n\n    });\n\n    module.exports = AxisPointerModel;\n\n\n\n/***/ }),\n/* 591 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var globalListener = __webpack_require__(524);\n\n    var AxisPonterView = __webpack_require__(455).extendComponentView({\n\n        type: 'axisPointer',\n\n        render: function (globalAxisPointerModel, ecModel, api) {\n            var globalTooltipModel = ecModel.getComponent('tooltip');\n            var triggerOn = globalAxisPointerModel.get('triggerOn')\n                || (globalTooltipModel && globalTooltipModel.get('triggerOn') || 'mousemove|click');\n\n            // Register global listener in AxisPointerView to enable\n            // AxisPointerView to be independent to Tooltip.\n            globalListener.register(\n                'axisPointer',\n                api,\n                function (currTrigger, e, dispatchAction) {\n                    // If 'none', it is not controlled by mouse totally.\n                    if (triggerOn !== 'none'\n                        && (currTrigger === 'leave' || triggerOn.indexOf(currTrigger) >= 0)\n                    ) {\n                        dispatchAction({\n                            type: 'updateAxisPointer',\n                            currTrigger: currTrigger,\n                            x: e && e.offsetX,\n                            y: e && e.offsetY\n                        });\n                    }\n                }\n            );\n        },\n\n        /**\n         * @override\n         */\n        remove: function (ecModel, api) {\n            globalListener.disopse(api.getZr(), 'axisPointer');\n            AxisPonterView.superApply(this._model, 'remove', arguments);\n        },\n\n        /**\n         * @override\n         */\n        dispose: function (ecModel, api) {\n            globalListener.unregister('axisPointer', api);\n            AxisPonterView.superApply(this._model, 'dispose', arguments);\n        }\n\n    });\n\n\n\n/***/ }),\n/* 592 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(453);\n    var clazzUtil = __webpack_require__(467);\n    var graphic = __webpack_require__(454);\n    var get = __webpack_require__(456).makeGetter();\n    var axisPointerModelHelper = __webpack_require__(483);\n    var eventTool = __webpack_require__(470);\n    var throttle = __webpack_require__(485);\n\n    var clone = zrUtil.clone;\n    var bind = zrUtil.bind;\n\n    /**\n     * Base axis pointer class in 2D.\n     * Implemenents {module:echarts/component/axis/IAxisPointer}.\n     */\n    function BaseAxisPointer () {\n    }\n\n    BaseAxisPointer.prototype = {\n\n        /**\n         * @private\n         */\n        _group: null,\n\n        /**\n         * @private\n         */\n        _lastGraphicKey: null,\n\n        /**\n         * @private\n         */\n        _handle: null,\n\n        /**\n         * @private\n         */\n        _dragging: false,\n\n        /**\n         * @private\n         */\n        _lastValue: null,\n\n        /**\n         * @private\n         */\n        _lastStatus: null,\n\n        /**\n         * @private\n         */\n        _payloadInfo: null,\n\n        /**\n         * In px, arbitrary value. Do not set too small,\n         * no animation is ok for most cases.\n         * @protected\n         */\n        animationThreshold: 15,\n\n        /**\n         * @implement\n         */\n        render: function (axisModel, axisPointerModel, api, forceRender) {\n            var value = axisPointerModel.get('value');\n            var status = axisPointerModel.get('status');\n\n            // Bind them to `this`, not in closure, otherwise they will not\n            // be replaced when user calling setOption in not merge mode.\n            this._axisModel = axisModel;\n            this._axisPointerModel = axisPointerModel;\n            this._api = api;\n\n            // Optimize: `render` will be called repeatly during mouse move.\n            // So it is power consuming if performing `render` each time,\n            // especially on mobile device.\n            if (!forceRender\n                && this._lastValue === value\n                && this._lastStatus === status\n            ) {\n                return;\n            }\n            this._lastValue = value;\n            this._lastStatus = status;\n\n            var group = this._group;\n            var handle = this._handle;\n\n            if (!status || status === 'hide') {\n                // Do not clear here, for animation better.\n                group && group.hide();\n                handle && handle.hide();\n                return;\n            }\n            group && group.show();\n            handle && handle.show();\n\n            // Otherwise status is 'show'\n            var elOption = {};\n            this.makeElOption(elOption, value, axisModel, axisPointerModel, api);\n\n            // Enable change axis pointer type.\n            var graphicKey = elOption.graphicKey;\n            if (graphicKey !== this._lastGraphicKey) {\n                this.clear(api);\n            }\n            this._lastGraphicKey = graphicKey;\n\n            var moveAnimation = this._moveAnimation =\n                this.determineAnimation(axisModel, axisPointerModel);\n\n            if (!group) {\n                group = this._group = new graphic.Group();\n                this.createPointerEl(group, elOption, axisModel, axisPointerModel);\n                this.createLabelEl(group, elOption, axisModel, axisPointerModel);\n                api.getZr().add(group);\n            }\n            else {\n                var doUpdateProps = zrUtil.curry(updateProps, axisPointerModel, moveAnimation);\n                this.updatePointerEl(group, elOption, doUpdateProps, axisPointerModel);\n                this.updateLabelEl(group, elOption, doUpdateProps, axisPointerModel);\n            }\n\n            updateMandatoryProps(group, axisPointerModel, true);\n\n            this._renderHandle(value);\n        },\n\n        /**\n         * @implement\n         */\n        remove: function (api) {\n            this.clear(api);\n        },\n\n        /**\n         * @implement\n         */\n        dispose: function (api) {\n            this.clear(api);\n        },\n\n        /**\n         * @protected\n         */\n        determineAnimation: function (axisModel, axisPointerModel) {\n            var animation = axisPointerModel.get('animation');\n            var axis = axisModel.axis;\n            var isCategoryAxis = axis.type === 'category';\n            var useSnap = axisPointerModel.get('snap');\n\n            // Value axis without snap always do not snap.\n            if (!useSnap && !isCategoryAxis) {\n                return false;\n            }\n\n            if (animation === 'auto' || animation == null) {\n                var animationThreshold = this.animationThreshold;\n                if (isCategoryAxis && axis.getBandWidth() > animationThreshold) {\n                    return true;\n                }\n\n                // It is important to auto animation when snap used. Consider if there is\n                // a dataZoom, animation will be disabled when too many points exist, while\n                // it will be enabled for better visual effect when little points exist.\n                if (useSnap) {\n                    var seriesDataCount = axisPointerModelHelper.getAxisInfo(axisModel).seriesDataCount;\n                    var axisExtent = axis.getExtent();\n                    // Approximate band width\n                    return Math.abs(axisExtent[0] - axisExtent[1]) / seriesDataCount > animationThreshold;\n                }\n\n                return false;\n            }\n\n            return animation === true;\n        },\n\n        /**\n         * add {pointer, label, graphicKey} to elOption\n         * @protected\n         */\n        makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n            // Shoule be implemenented by sub-class.\n        },\n\n        /**\n         * @protected\n         */\n        createPointerEl: function (group, elOption, axisModel, axisPointerModel) {\n            var pointerOption = elOption.pointer;\n            if (pointerOption) {\n                var pointerEl = get(group).pointerEl = new graphic[pointerOption.type](\n                    clone(elOption.pointer)\n                );\n                group.add(pointerEl);\n            }\n        },\n\n        /**\n         * @protected\n         */\n        createLabelEl: function (group, elOption, axisModel, axisPointerModel) {\n            if (elOption.label) {\n                var labelEl = get(group).labelEl = new graphic.Rect(\n                    clone(elOption.label)\n                );\n\n                group.add(labelEl);\n                updateLabelShowHide(labelEl, axisPointerModel);\n            }\n        },\n\n        /**\n         * @protected\n         */\n        updatePointerEl: function (group, elOption, updateProps) {\n            var pointerEl = get(group).pointerEl;\n            if (pointerEl) {\n                pointerEl.setStyle(elOption.pointer.style);\n                updateProps(pointerEl, {shape: elOption.pointer.shape});\n            }\n        },\n\n        /**\n         * @protected\n         */\n        updateLabelEl: function (group, elOption, updateProps, axisPointerModel) {\n            var labelEl = get(group).labelEl;\n            if (labelEl) {\n                labelEl.setStyle(elOption.label.style);\n                updateProps(labelEl, {\n                    // Consider text length change in vertical axis, animation should\n                    // be used on shape, otherwise the effect will be weird.\n                    shape: elOption.label.shape,\n                    position: elOption.label.position\n                });\n\n                updateLabelShowHide(labelEl, axisPointerModel);\n            }\n        },\n\n        /**\n         * @private\n         */\n        _renderHandle: function (value) {\n            if (this._dragging || !this.updateHandleTransform) {\n                return;\n            }\n\n            var axisPointerModel = this._axisPointerModel;\n            var zr = this._api.getZr();\n            var handle = this._handle;\n            var handleModel = axisPointerModel.getModel('handle');\n\n            var status = axisPointerModel.get('status');\n            if (!handleModel.get('show') || !status || status === 'hide') {\n                handle && zr.remove(handle);\n                this._handle = null;\n                return;\n            }\n\n            var isInit;\n            if (!this._handle) {\n                isInit = true;\n                handle = this._handle = createIcon(handleModel, {\n                    onmousemove: function (e) {\n                        // Fot mobile devicem, prevent screen slider on the button.\n                        eventTool.stop(e.event);\n                    },\n                    onmousedown: bind(this._onHandleDragMove, this, 0, 0),\n                    drift: bind(this._onHandleDragMove, this),\n                    ondragend: bind(this._onHandleDragEnd, this)\n                });\n                zr.add(handle);\n            }\n\n            updateMandatoryProps(handle, axisPointerModel, false);\n\n            // update style\n            var includeStyles = [\n                'color', 'borderColor', 'borderWidth', 'opacity',\n                'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY'\n            ];\n            handle.setStyle(handleModel.getItemStyle(null, includeStyles));\n\n            // update position\n            var handleSize = handleModel.get('size');\n            if (!zrUtil.isArray(handleSize)) {\n                handleSize = [handleSize, handleSize];\n            }\n            handle.attr('scale', [handleSize[0] / 2, handleSize[1] / 2]);\n\n            throttle.createOrUpdate(\n                this,\n                '_doDispatchAxisPointer',\n                handleModel.get('throttle') || 0,\n                'fixRate'\n            );\n\n            this._moveHandleToValue(value, isInit);\n        },\n\n        /**\n         * @private\n         */\n        _moveHandleToValue: function (value, isInit) {\n            updateProps(\n                this._axisPointerModel,\n                !isInit && this._moveAnimation,\n                this._handle,\n                getHandleTransProps(this.getHandleTransform(\n                    value, this._axisModel, this._axisPointerModel\n                ))\n            );\n        },\n\n        /**\n         * @private\n         */\n        _onHandleDragMove: function (dx, dy) {\n            var handle = this._handle;\n            if (!handle) {\n                return;\n            }\n\n            this._dragging = true;\n\n            // Persistent for throttle.\n            var trans = this.updateHandleTransform(\n                getHandleTransProps(handle),\n                [dx, dy],\n                this._axisModel,\n                this._axisPointerModel\n            );\n            this._payloadInfo = trans;\n\n            handle.stopAnimation();\n            handle.attr(getHandleTransProps(trans));\n            get(handle).lastProp = null;\n\n            this._doDispatchAxisPointer();\n        },\n\n        /**\n         * Throttled method.\n         * @private\n         */\n        _doDispatchAxisPointer: function () {\n            var handle = this._handle;\n            if (!handle) {\n                return;\n            }\n\n            var payloadInfo = this._payloadInfo;\n            var axisModel = this._axisModel;\n            this._api.dispatchAction({\n                type: 'updateAxisPointer',\n                x: payloadInfo.cursorPoint[0],\n                y: payloadInfo.cursorPoint[1],\n                tooltipOption: payloadInfo.tooltipOption,\n                axesInfo: [{\n                    axisDim: axisModel.axis.dim,\n                    axisIndex: axisModel.componentIndex\n                }]\n            });\n        },\n\n        /**\n         * @private\n         */\n        _onHandleDragEnd: function (moveAnimation) {\n            this._dragging = false;\n            var handle = this._handle;\n            if (!handle) {\n                return;\n            }\n\n            var value = this._axisPointerModel.get('value');\n            // Consider snap or categroy axis, handle may be not consistent with\n            // axisPointer. So move handle to align the exact value position when\n            // drag ended.\n            this._moveHandleToValue(value);\n\n            // For the effect: tooltip will be shown when finger holding on handle\n            // button, and will be hidden after finger left handle button.\n            this._api.dispatchAction({\n                type: 'hideTip'\n            });\n        },\n\n        /**\n         * Should be implemenented by sub-class if support `handle`.\n         * @protected\n         * @param {number} value\n         * @param {module:echarts/model/Model} axisModel\n         * @param {module:echarts/model/Model} axisPointerModel\n         * @return {Object} {position: [x, y], rotation: 0}\n         */\n        getHandleTransform: null,\n\n        /**\n         * * Should be implemenented by sub-class if support `handle`.\n         * @protected\n         * @param {Object} transform {position, rotation}\n         * @param {Array.<number>} delta [dx, dy]\n         * @param {module:echarts/model/Model} axisModel\n         * @param {module:echarts/model/Model} axisPointerModel\n         * @return {Object} {position: [x, y], rotation: 0, cursorPoint: [x, y]}\n         */\n        updateHandleTransform: null,\n\n        /**\n         * @private\n         */\n        clear: function (api) {\n            this._lastValue = null;\n            this._lastStatus = null;\n\n            var zr = api.getZr();\n            var group = this._group;\n            var handle = this._handle;\n            if (zr && group) {\n                this._lastGraphicKey = null;\n                group && zr.remove(group);\n                handle && zr.remove(handle);\n                this._group = null;\n                this._handle = null;\n                this._payloadInfo = null;\n            }\n        },\n\n        /**\n         * @protected\n         */\n        doClear: function () {\n            // Implemented by sub-class if necessary.\n        },\n\n        /**\n         * @protected\n         * @param {Array.<number>} xy\n         * @param {Array.<number>} wh\n         * @param {number} [xDimIndex=0] or 1\n         */\n        buildLabel: function (xy, wh, xDimIndex) {\n            xDimIndex = xDimIndex || 0;\n            return {\n                x: xy[xDimIndex],\n                y: xy[1 - xDimIndex],\n                width: wh[xDimIndex],\n                height: wh[1 - xDimIndex]\n            };\n        }\n    };\n\n    BaseAxisPointer.prototype.constructor = BaseAxisPointer;\n\n\n    function updateProps(animationModel, moveAnimation, el, props) {\n        // Animation optimize.\n        if (!propsEqual(get(el).lastProp, props)) {\n            get(el).lastProp = props;\n            moveAnimation\n                ? graphic.updateProps(el, props, animationModel)\n                : (el.stopAnimation(), el.attr(props));\n        }\n    }\n\n    function propsEqual(lastProps, newProps) {\n        if (zrUtil.isObject(lastProps) && zrUtil.isObject(newProps)) {\n            var equals = true;\n            zrUtil.each(newProps, function (item, key) {\n                equals &= propsEqual(lastProps[key], item);\n            });\n            return !!equals;\n        }\n        else {\n            return lastProps === newProps;\n        }\n    }\n\n    function updateLabelShowHide(labelEl, axisPointerModel) {\n        labelEl[axisPointerModel.get('label.show') ? 'show' : 'hide']();\n    }\n\n    function getHandleTransProps(trans) {\n        return {\n            position: trans.position.slice(),\n            rotation: trans.rotation || 0\n        };\n    }\n\n    function createIcon(handleModel, handlers) {\n        var iconStr = handleModel.get('icon');\n        var style = {\n            x: -1, y: -1, width: 2, height: 2\n        };\n        var opt = zrUtil.extend({\n            style: {\n                strokeNoScale: true\n            },\n            rectHover: true,\n            cursor: 'move',\n            draggable: true\n        }, handlers);\n\n        return iconStr.indexOf('image://') === 0\n            ? (\n                style.image = iconStr.slice(8),\n                opt.style = style,\n                new graphic.Image(opt)\n            )\n            : graphic.makePath(\n                iconStr.replace('path://', ''),\n                opt,\n                style,\n                'center'\n            );\n    }\n\n    function updateMandatoryProps(group, axisPointerModel, silent) {\n        var z = axisPointerModel.get('z');\n        var zlevel = axisPointerModel.get('zlevel');\n\n        group && group.traverse(function (el) {\n            if (el.type !== 'group') {\n                z != null && (el.z = z);\n                zlevel != null && (el.zlevel = zlevel);\n                el.silent = silent;\n            }\n        });\n    }\n\n    clazzUtil.enableClassExtend(BaseAxisPointer);\n\n    module.exports = BaseAxisPointer;\n\n\n/***/ }),\n/* 593 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var graphic = __webpack_require__(454);\n    var BaseAxisPointer = __webpack_require__(592);\n    var viewHelper = __webpack_require__(525);\n    var cartesianAxisHelper = __webpack_require__(522);\n    var AxisView = __webpack_require__(521);\n\n    var CartesianAxisPointer = BaseAxisPointer.extend({\n\n        /**\n         * @override\n         */\n        makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n            var axis = axisModel.axis;\n            var grid = axis.grid;\n            var axisPointerType = axisPointerModel.get('type');\n            var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n            var pixelValue = axis.toGlobalCoord(axis.dataToCoord(value, true));\n\n            if (axisPointerType && axisPointerType !== 'none') {\n                var elStyle = viewHelper.buildElStyle(axisPointerModel);\n                var pointerOption = pointerShapeBuilder[axisPointerType](\n                    axis, pixelValue, otherExtent, elStyle\n                );\n                pointerOption.style = elStyle;\n                elOption.graphicKey = pointerOption.type;\n                elOption.pointer = pointerOption;\n            }\n\n            var layoutInfo = cartesianAxisHelper.layout(grid.model, axisModel);\n            viewHelper.buildCartesianSingleLabelElOption(\n                value, elOption, layoutInfo, axisModel, axisPointerModel, api\n            );\n        },\n\n        /**\n         * @override\n         */\n        getHandleTransform: function (value, axisModel, axisPointerModel) {\n            var layoutInfo = cartesianAxisHelper.layout(axisModel.axis.grid.model, axisModel, {\n                labelInside: false\n            });\n            layoutInfo.labelMargin = axisPointerModel.get('handle.margin');\n            return {\n                position: viewHelper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n                rotation: layoutInfo.rotation + (layoutInfo.labelDirection < 0 ? Math.PI : 0)\n            };\n        },\n\n        /**\n         * @override\n         */\n        updateHandleTransform: function (transform, delta, axisModel, axisPointerModel) {\n            var axis = axisModel.axis;\n            var grid = axis.grid;\n            var axisExtent = axis.getGlobalExtent(true);\n            var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n            var dimIndex = axis.dim === 'x' ? 0 : 1;\n\n            var currPosition = transform.position;\n            currPosition[dimIndex] += delta[dimIndex];\n            currPosition[dimIndex] = Math.min(axisExtent[1], currPosition[dimIndex]);\n            currPosition[dimIndex] = Math.max(axisExtent[0], currPosition[dimIndex]);\n\n            var cursorOtherValue = (otherExtent[1] + otherExtent[0]) / 2;\n            var cursorPoint = [cursorOtherValue, cursorOtherValue];\n            cursorPoint[dimIndex] = currPosition[dimIndex];\n\n            // Make tooltip do not overlap axisPointer and in the middle of the grid.\n            var tooltipOptions = [{verticalAlign: 'middle'}, {align: 'center'}];\n\n            return {\n                position: currPosition,\n                rotation: transform.rotation,\n                cursorPoint: cursorPoint,\n                tooltipOption: tooltipOptions[dimIndex]\n            };\n        }\n\n    });\n\n    function getCartesian(grid, axis) {\n        var opt = {};\n        opt[axis.dim + 'AxisIndex'] = axis.index;\n        return grid.getCartesian(opt);\n    }\n\n    var pointerShapeBuilder = {\n\n        line: function (axis, pixelValue, otherExtent, elStyle) {\n            var targetShape = viewHelper.makeLineShape(\n                [pixelValue, otherExtent[0]],\n                [pixelValue, otherExtent[1]],\n                getAxisDimIndex(axis)\n            );\n            graphic.subPixelOptimizeLine({\n                shape: targetShape,\n                style: elStyle\n            });\n            return {\n                type: 'Line',\n                shape: targetShape\n            };\n        },\n\n        shadow: function (axis, pixelValue, otherExtent, elStyle) {\n            var bandWidth = axis.getBandWidth();\n            var span = otherExtent[1] - otherExtent[0];\n            return {\n                type: 'Rect',\n                shape: viewHelper.makeRectShape(\n                    [pixelValue - bandWidth / 2, otherExtent[0]],\n                    [bandWidth, span],\n                    getAxisDimIndex(axis)\n                )\n            };\n        }\n    };\n\n    function getAxisDimIndex(axis) {\n        return axis.dim === 'x' ? 0 : 1;\n    }\n\n    AxisView.registerAxisPointerClass('CartesianAxisPointer', CartesianAxisPointer);\n\n    module.exports = CartesianAxisPointer;\n\n\n/***/ }),\n/* 594 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(453);\n    var modelUtil = __webpack_require__(456);\n    var modelHelper = __webpack_require__(483);\n    var findPointFromSeries = __webpack_require__(523);\n\n    var each = zrUtil.each;\n    var curry = zrUtil.curry;\n    var get = modelUtil.makeGetter();\n\n    /**\n     * Basic logic: check all axis, if they do not demand show/highlight,\n     * then hide/downplay them.\n     *\n     * @param {Object} coordSysAxesInfo\n     * @param {Object} payload\n     * @param {string} [payload.currTrigger] 'click' | 'mousemove' | 'leave'\n     * @param {Array.<number>} [payload.x] x and y, which are mandatory, specify a point to\n     *              trigger axisPointer and tooltip.\n     * @param {Array.<number>} [payload.y] x and y, which are mandatory, specify a point to\n     *              trigger axisPointer and tooltip.\n     * @param {Object} [payload.seriesIndex] finder, optional, restrict target axes.\n     * @param {Object} [payload.dataIndex] finder, restrict target axes.\n     * @param {Object} [payload.axesInfo] finder, restrict target axes.\n     *        [{\n     *          axisDim: 'x'|'y'|'angle'|...,\n     *          axisIndex: ...,\n     *          value: ...\n     *        }, ...]\n     * @param {Function} [payload.dispatchAction]\n     * @param {Object} [payload.tooltipOption]\n     * @param {Object|Array.<number>|Function} [payload.position] Tooltip position,\n     *        which can be specified in dispatchAction\n     * @param {module:echarts/model/Global} ecModel\n     * @param {module:echarts/ExtensionAPI} api\n     * @return {Object} content of event obj for echarts.connect.\n     */\n    function axisTrigger(payload, ecModel, api) {\n        var currTrigger = payload.currTrigger;\n        var point = [payload.x, payload.y];\n        var finder = payload;\n        var dispatchAction = payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n        var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo;\n\n        if (illegalPoint(point)) {\n            // Used in the default behavior of `connection`: use the sample seriesIndex\n            // and dataIndex. And also used in the tooltipView trigger.\n            point = findPointFromSeries({\n                seriesIndex: finder.seriesIndex,\n                // Do not use dataIndexInside from other ec instance.\n                // FIXME: auto detect it?\n                dataIndex: finder.dataIndex\n            }, ecModel).point;\n        }\n        var isIllegalPoint = illegalPoint(point);\n\n        // Axis and value can be specified when calling dispatchAction({type: 'updateAxisPointer'}).\n        // Notice: In this case, it is difficult to get the `point` (which is necessary to show\n        // tooltip, so if point is not given, we just use the point found by sample seriesIndex\n        // and dataIndex.\n        var inputAxesInfo = finder.axesInfo;\n\n        var axesInfo = coordSysAxesInfo.axesInfo;\n        var shouldHide = currTrigger === 'leave' || illegalPoint(point);\n        var outputFinder = {};\n\n        var showValueMap = {};\n        var dataByCoordSys = {list: [], map: {}};\n        var updaters = {\n            showPointer: curry(showPointer, showValueMap),\n            showTooltip: curry(showTooltip, dataByCoordSys)\n        };\n\n        // Process for triggered axes.\n        each(coordSysAxesInfo.coordSysMap, function (coordSys, coordSysKey) {\n            // If a point given, it must be contained by the coordinate system.\n            var coordSysContainsPoint = isIllegalPoint || coordSys.containPoint(point);\n\n            each(coordSysAxesInfo.coordSysAxesInfo[coordSysKey], function (axisInfo, key) {\n                var axis = axisInfo.axis;\n                var inputAxisInfo = findInputAxisInfo(inputAxesInfo, axisInfo);\n                // If no inputAxesInfo, no axis is restricted.\n                if (!shouldHide && coordSysContainsPoint && (!inputAxesInfo || inputAxisInfo)) {\n                    var val = inputAxisInfo && inputAxisInfo.value;\n                    if (val == null && !isIllegalPoint) {\n                        val = axis.pointToData(point);\n                    }\n                    val != null && processOnAxis(axisInfo, val, updaters, false, outputFinder);\n                }\n            });\n        });\n\n        // Process for linked axes.\n        var linkTriggers = {};\n        each(axesInfo, function (tarAxisInfo, tarKey) {\n            var linkGroup = tarAxisInfo.linkGroup;\n\n            // If axis has been triggered in the previous stage, it should not be triggered by link.\n            if (linkGroup && !showValueMap[tarKey]) {\n                each(linkGroup.axesInfo, function (srcAxisInfo, srcKey) {\n                    var srcValItem = showValueMap[srcKey];\n                    // If srcValItem exist, source axis is triggered, so link to target axis.\n                    if (srcAxisInfo !== tarAxisInfo && srcValItem) {\n                        var val = srcValItem.value;\n                        linkGroup.mapper && (val = tarAxisInfo.axis.scale.parse(linkGroup.mapper(\n                            val, makeMapperParam(srcAxisInfo), makeMapperParam(tarAxisInfo)\n                        )));\n                        linkTriggers[tarAxisInfo.key] = val;\n                    }\n                });\n            }\n        });\n        each(linkTriggers, function (val, tarKey) {\n            processOnAxis(axesInfo[tarKey], val, updaters, true, outputFinder);\n        });\n\n        updateModelActually(showValueMap, axesInfo, outputFinder);\n        dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction);\n        dispatchHighDownActually(axesInfo, dispatchAction, api);\n\n        return outputFinder;\n    }\n\n    function processOnAxis(axisInfo, newValue, updaters, dontSnap, outputFinder) {\n        var axis = axisInfo.axis;\n\n        if (axis.scale.isBlank() || !axis.containData(newValue)) {\n            return;\n        }\n\n        if (!axisInfo.involveSeries) {\n            updaters.showPointer(axisInfo, newValue);\n            return;\n        }\n\n        // Heavy calculation. So put it after axis.containData checking.\n        var payloadInfo = buildPayloadsBySeries(newValue, axisInfo);\n        var payloadBatch = payloadInfo.payloadBatch;\n        var snapToValue = payloadInfo.snapToValue;\n\n        // Fill content of event obj for echarts.connect.\n        // By defualt use the first involved series data as a sample to connect.\n        if (payloadBatch[0] && outputFinder.seriesIndex == null) {\n            zrUtil.extend(outputFinder, payloadBatch[0]);\n        }\n\n        // If no linkSource input, this process is for collecting link\n        // target, where snap should not be accepted.\n        if (!dontSnap && axisInfo.snap) {\n            if (axis.containData(snapToValue) && snapToValue != null) {\n                newValue = snapToValue;\n            }\n        }\n\n        updaters.showPointer(axisInfo, newValue, payloadBatch, outputFinder);\n        // Tooltip should always be snapToValue, otherwise there will be\n        // incorrect \"axis value ~ series value\" mapping displayed in tooltip.\n        updaters.showTooltip(axisInfo, payloadInfo, snapToValue);\n    }\n\n    function buildPayloadsBySeries(value, axisInfo) {\n        var axis = axisInfo.axis;\n        var dim = axis.dim;\n        var snapToValue = value;\n        var payloadBatch = [];\n        var minDist = Number.MAX_VALUE;\n        var minDiff = -1;\n\n        each(axisInfo.seriesModels, function (series, idx) {\n            var dataDim = series.coordDimToDataDim(dim);\n            var seriesNestestValue;\n            var dataIndices;\n\n            if (series.getAxisTooltipData) {\n                var result = series.getAxisTooltipData(dataDim, value, axis);\n                dataIndices = result.dataIndices;\n                seriesNestestValue = result.nestestValue;\n            }\n            else {\n                dataIndices = series.getData().indicesOfNearest(\n                    dataDim[0],\n                    value,\n                    // Add a threshold to avoid find the wrong dataIndex\n                    // when data length is not same.\n                    false, axis.type === 'category' ? 0.5 : null\n                );\n                if (!dataIndices.length) {\n                    return;\n                }\n                seriesNestestValue = series.getData().get(dataDim[0], dataIndices[0]);\n            }\n\n            if (seriesNestestValue == null || !isFinite(seriesNestestValue)) {\n                return;\n            }\n\n            var diff = value - seriesNestestValue;\n            var dist = Math.abs(diff);\n            // Consider category case\n            if (dist <= minDist) {\n                if (dist < minDist || (diff >= 0 && minDiff < 0)) {\n                    minDist = dist;\n                    minDiff = diff;\n                    snapToValue = seriesNestestValue;\n                    payloadBatch.length = 0;\n                }\n                each(dataIndices, function (dataIndex) {\n                    payloadBatch.push({\n                        seriesIndex: series.seriesIndex,\n                        dataIndexInside: dataIndex,\n                        dataIndex: series.getData().getRawIndex(dataIndex)\n                    });\n                });\n            }\n        });\n\n        return {\n            payloadBatch: payloadBatch,\n            snapToValue: snapToValue\n        };\n    }\n\n    function showPointer(showValueMap, axisInfo, value, payloadBatch) {\n        showValueMap[axisInfo.key] = {value: value, payloadBatch: payloadBatch};\n    }\n\n    function showTooltip(dataByCoordSys, axisInfo, payloadInfo, value) {\n        var payloadBatch = payloadInfo.payloadBatch;\n        var axis = axisInfo.axis;\n        var axisModel = axis.model;\n        var axisPointerModel = axisInfo.axisPointerModel;\n\n        // If no data, do not create anything in dataByCoordSys,\n        // whose length will be used to judge whether dispatch action.\n        if (!axisInfo.triggerTooltip || !payloadBatch.length) {\n            return;\n        }\n\n        var coordSysModel = axisInfo.coordSys.model;\n        var coordSysKey = modelHelper.makeKey(coordSysModel);\n        var coordSysItem = dataByCoordSys.map[coordSysKey];\n        if (!coordSysItem) {\n            coordSysItem = dataByCoordSys.map[coordSysKey] = {\n                coordSysId: coordSysModel.id,\n                coordSysIndex: coordSysModel.componentIndex,\n                coordSysType: coordSysModel.type,\n                coordSysMainType: coordSysModel.mainType,\n                dataByAxis: []\n            };\n            dataByCoordSys.list.push(coordSysItem);\n        }\n\n        coordSysItem.dataByAxis.push({\n            axisDim: axis.dim,\n            axisIndex: axisModel.componentIndex,\n            axisType: axisModel.type,\n            axisId: axisModel.id,\n            value: value,\n            // Caustion: viewHelper.getValueLabel is actually on \"view stage\", which\n            // depends that all models have been updated. So it should not be performed\n            // here. Considering axisPointerModel used here is volatile, which is hard\n            // to be retrieve in TooltipView, we prepare parameters here.\n            valueLabelOpt: {\n                precision: axisPointerModel.get('label.precision'),\n                formatter: axisPointerModel.get('label.formatter')\n            },\n            seriesDataIndices: payloadBatch.slice()\n        });\n    }\n\n    function updateModelActually(showValueMap, axesInfo, outputFinder) {\n        var outputAxesInfo = outputFinder.axesInfo = [];\n        // Basic logic: If no 'show' required, 'hide' this axisPointer.\n        each(axesInfo, function (axisInfo, key) {\n            var option = axisInfo.axisPointerModel.option;\n            var valItem = showValueMap[key];\n\n            if (valItem) {\n                !axisInfo.useHandle && (option.status = 'show');\n                option.value = valItem.value;\n                // For label formatter param and highlight.\n                option.seriesDataIndices = (valItem.payloadBatch || []).slice();\n            }\n            // When always show (e.g., handle used), remain\n            // original value and status.\n            else {\n                // If hide, value still need to be set, consider\n                // click legend to toggle axis blank.\n                !axisInfo.useHandle && (option.status = 'hide');\n            }\n\n            // If status is 'hide', should be no info in payload.\n            option.status === 'show' && outputAxesInfo.push({\n                axisDim: axisInfo.axis.dim,\n                axisIndex: axisInfo.axis.model.componentIndex,\n                value: option.value\n            });\n        });\n    }\n\n    function dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction) {\n        // Basic logic: If no showTip required, hideTip will be dispatched.\n        if (illegalPoint(point) || !dataByCoordSys.list.length) {\n            dispatchAction({type: 'hideTip'});\n            return;\n        }\n\n        // In most case only one axis (or event one series is used). It is\n        // convinient to fetch payload.seriesIndex and payload.dataIndex\n        // dirtectly. So put the first seriesIndex and dataIndex of the first\n        // axis on the payload.\n        var sampleItem = ((dataByCoordSys.list[0].dataByAxis[0] || {}).seriesDataIndices || [])[0] || {};\n\n        dispatchAction({\n            type: 'showTip',\n            escapeConnect: true,\n            x: point[0],\n            y: point[1],\n            tooltipOption: payload.tooltipOption,\n            position: payload.position,\n            dataIndexInside: sampleItem.dataIndexInside,\n            dataIndex: sampleItem.dataIndex,\n            seriesIndex: sampleItem.seriesIndex,\n            dataByCoordSys: dataByCoordSys.list\n        });\n    }\n\n    function dispatchHighDownActually(axesInfo, dispatchAction, api) {\n        // FIXME\n        // highlight status modification shoule be a stage of main process?\n        // (Consider confilct (e.g., legend and axisPointer) and setOption)\n\n        var zr = api.getZr();\n        var highDownKey = 'axisPointerLastHighlights';\n        var lastHighlights = get(zr)[highDownKey] || {};\n        var newHighlights = get(zr)[highDownKey] = {};\n\n        // Update highlight/downplay status according to axisPointer model.\n        // Build hash map and remove duplicate incidentally.\n        each(axesInfo, function (axisInfo, key) {\n            var option = axisInfo.axisPointerModel.option;\n            option.status === 'show' && each(option.seriesDataIndices, function (batchItem) {\n                var key = batchItem.seriesIndex + ' | ' + batchItem.dataIndex;\n                newHighlights[key] = batchItem;\n            });\n        });\n\n        // Diff.\n        var toHighlight = [];\n        var toDownplay = [];\n        zrUtil.each(lastHighlights, function (batchItem, key) {\n            !newHighlights[key] && toDownplay.push(batchItem);\n        });\n        zrUtil.each(newHighlights, function (batchItem, key) {\n            !lastHighlights[key] && toHighlight.push(batchItem);\n        });\n\n        toDownplay.length && api.dispatchAction({\n            type: 'downplay', escapeConnect: true, batch: toDownplay\n        });\n        toHighlight.length && api.dispatchAction({\n            type: 'highlight', escapeConnect: true, batch: toHighlight\n        });\n    }\n\n    function findInputAxisInfo(inputAxesInfo, axisInfo) {\n        for (var i = 0; i < (inputAxesInfo || []).length; i++) {\n            var inputAxisInfo = inputAxesInfo[i];\n            if (axisInfo.axis.dim === inputAxisInfo.axisDim\n                && axisInfo.axis.model.componentIndex === inputAxisInfo.axisIndex\n            ) {\n                return inputAxisInfo;\n            }\n        }\n    }\n\n    function makeMapperParam(axisInfo) {\n        var axisModel = axisInfo.axis.model;\n        var item = {};\n        var dim = item.axisDim = axisInfo.axis.dim;\n        item.axisIndex = item[dim + 'AxisIndex'] = axisModel.componentIndex;\n        item.axisName = item[dim + 'AxisName'] = axisModel.name;\n        item.axisId = item[dim + 'AxisId'] = axisModel.id;\n        return item;\n    }\n\n    function illegalPoint(point) {\n        return !point || point[0] == null || isNaN(point[0]) || point[1] == null || isNaN(point[1]);\n    }\n\n    module.exports = axisTrigger;\n\n\n/***/ }),\n/* 595 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * DataZoom component entry\n */\n\n\n    __webpack_require__(604);\n\n    __webpack_require__(496);\n    __webpack_require__(497);\n\n    __webpack_require__(599);\n    __webpack_require__(600);\n\n    __webpack_require__(597);\n    __webpack_require__(598);\n\n    __webpack_require__(602);\n    __webpack_require__(601);\n\n\n\n/***/ }),\n/* 596 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @file Axis operator\n */\n\n\n    var zrUtil = __webpack_require__(453);\n    var numberUtil = __webpack_require__(457);\n    var helper = __webpack_require__(498);\n    var each = zrUtil.each;\n    var asc = numberUtil.asc;\n\n    /**\n     * Operate single axis.\n     * One axis can only operated by one axis operator.\n     * Different dataZoomModels may be defined to operate the same axis.\n     * (i.e. 'inside' data zoom and 'slider' data zoom components)\n     * So dataZoomModels share one axisProxy in that case.\n     *\n     * @class\n     */\n    var AxisProxy = function (dimName, axisIndex, dataZoomModel, ecModel) {\n\n        /**\n         * @private\n         * @type {string}\n         */\n        this._dimName = dimName;\n\n        /**\n         * @private\n         */\n        this._axisIndex = axisIndex;\n\n        /**\n         * @private\n         * @type {Array.<number>}\n         */\n        this._valueWindow;\n\n        /**\n         * @private\n         * @type {Array.<number>}\n         */\n        this._percentWindow;\n\n        /**\n         * @private\n         * @type {Array.<number>}\n         */\n        this._dataExtent;\n\n        /**\n         * {minSpan, maxSpan, minValueSpan, maxValueSpan}\n         * @private\n         * @type {Object}\n         */\n        this._minMaxSpan;\n\n        /**\n         * @readOnly\n         * @type {module: echarts/model/Global}\n         */\n        this.ecModel = ecModel;\n\n        /**\n         * @private\n         * @type {module: echarts/component/dataZoom/DataZoomModel}\n         */\n        this._dataZoomModel = dataZoomModel;\n    };\n\n    AxisProxy.prototype = {\n\n        constructor: AxisProxy,\n\n        /**\n         * Whether the axisProxy is hosted by dataZoomModel.\n         *\n         * @public\n         * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n         * @return {boolean}\n         */\n        hostedBy: function (dataZoomModel) {\n            return this._dataZoomModel === dataZoomModel;\n        },\n\n        /**\n         * @return {Array.<number>} Value can only be NaN or finite value.\n         */\n        getDataValueWindow: function () {\n            return this._valueWindow.slice();\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getDataPercentWindow: function () {\n            return this._percentWindow.slice();\n        },\n\n        /**\n         * @public\n         * @param {number} axisIndex\n         * @return {Array} seriesModels\n         */\n        getTargetSeriesModels: function () {\n            var seriesModels = [];\n            var ecModel = this.ecModel;\n\n            ecModel.eachSeries(function (seriesModel) {\n                if (helper.isCoordSupported(seriesModel.get('coordinateSystem'))) {\n                    var dimName = this._dimName;\n                    var axisModel = ecModel.queryComponents({\n                        mainType: dimName + 'Axis',\n                        index: seriesModel.get(dimName + 'AxisIndex'),\n                        id: seriesModel.get(dimName + 'AxisId')\n                    })[0];\n                    if (this._axisIndex === (axisModel && axisModel.componentIndex)) {\n                        seriesModels.push(seriesModel);\n                    }\n                }\n            }, this);\n\n            return seriesModels;\n        },\n\n        getAxisModel: function () {\n            return this.ecModel.getComponent(this._dimName + 'Axis', this._axisIndex);\n        },\n\n        getOtherAxisModel: function () {\n            var axisDim = this._dimName;\n            var ecModel = this.ecModel;\n            var axisModel = this.getAxisModel();\n            var isCartesian = axisDim === 'x' || axisDim === 'y';\n            var otherAxisDim;\n            var coordSysIndexName;\n            if (isCartesian) {\n                coordSysIndexName = 'gridIndex';\n                otherAxisDim = axisDim === 'x' ? 'y' : 'x';\n            }\n            else {\n                coordSysIndexName = 'polarIndex';\n                otherAxisDim = axisDim === 'angle' ? 'radius' : 'angle';\n            }\n            var foundOtherAxisModel;\n            ecModel.eachComponent(otherAxisDim + 'Axis', function (otherAxisModel) {\n                if ((otherAxisModel.get(coordSysIndexName) || 0)\n                    === (axisModel.get(coordSysIndexName) || 0)\n                ) {\n                    foundOtherAxisModel = otherAxisModel;\n                }\n            });\n            return foundOtherAxisModel;\n        },\n\n        getMinMaxSpan: function () {\n            return zrUtil.clone(this._minMaxSpan);\n        },\n\n        /**\n         * Only calculate by given range and this._dataExtent, do not change anything.\n         *\n         * @param {Object} opt\n         * @param {number} [opt.start]\n         * @param {number} [opt.end]\n         * @param {number} [opt.startValue]\n         * @param {number} [opt.endValue]\n         */\n        calculateDataWindow: function (opt) {\n            var dataExtent = this._dataExtent;\n            var axisModel = this.getAxisModel();\n            var scale = axisModel.axis.scale;\n            var rangePropMode = this._dataZoomModel.getRangePropMode();\n            var percentExtent = [0, 100];\n            var percentWindow = [\n                opt.start,\n                opt.end\n            ];\n            var valueWindow = [];\n\n            each(['startValue', 'endValue'], function (prop) {\n                valueWindow.push(opt[prop] != null ? scale.parse(opt[prop]) : null);\n            });\n\n            // Normalize bound.\n            each([0, 1], function (idx) {\n                var boundValue = valueWindow[idx];\n                var boundPercent = percentWindow[idx];\n\n                // Notice: dataZoom is based either on `percentProp` ('start', 'end') or\n                // on `valueProp` ('startValue', 'endValue'). The former one is suitable\n                // for cases that a dataZoom component controls multiple axes with different\n                // unit or extent, and the latter one is suitable for accurate zoom by pixel\n                // (e.g., in dataZoomSelect). `valueProp` can be calculated from `percentProp`,\n                // but it is awkward that `percentProp` can not be obtained from `valueProp`\n                // accurately (because all of values that are overflow the `dataExtent` will\n                // be calculated to percent '100%'). So we have to use\n                // `dataZoom.getRangePropMode()` to mark which prop is used.\n                // `rangePropMode` is updated only when setOption or dispatchAction, otherwise\n                // it remains its original value.\n\n                if (rangePropMode[idx] === 'percent') {\n                    if (boundPercent == null) {\n                        boundPercent = percentExtent[idx];\n                    }\n                    // Use scale.parse to math round for category or time axis.\n                    boundValue = scale.parse(numberUtil.linearMap(\n                        boundPercent, percentExtent, dataExtent, true\n                    ));\n                }\n                else {\n                    // Calculating `percent` from `value` may be not accurate, because\n                    // This calculation can not be inversed, because all of values that\n                    // are overflow the `dataExtent` will be calculated to percent '100%'\n                    boundPercent = numberUtil.linearMap(\n                        boundValue, dataExtent, percentExtent, true\n                    );\n                }\n\n                // valueWindow[idx] = round(boundValue);\n                // percentWindow[idx] = round(boundPercent);\n                valueWindow[idx] = boundValue;\n                percentWindow[idx] = boundPercent;\n            });\n\n            return {\n                valueWindow: asc(valueWindow),\n                percentWindow: asc(percentWindow)\n            };\n        },\n\n        /**\n         * Notice: reset should not be called before series.restoreData() called,\n         * so it is recommanded to be called in \"process stage\" but not \"model init\n         * stage\".\n         *\n         * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n         */\n        reset: function (dataZoomModel) {\n            if (dataZoomModel !== this._dataZoomModel) {\n                return;\n            }\n\n            // Culculate data window and data extent, and record them.\n            this._dataExtent = calculateDataExtent(\n                this, this._dimName, this.getTargetSeriesModels()\n            );\n\n            var dataWindow = this.calculateDataWindow(dataZoomModel.option);\n\n            this._valueWindow = dataWindow.valueWindow;\n            this._percentWindow = dataWindow.percentWindow;\n\n            setMinMaxSpan(this);\n\n            // Update axis setting then.\n            setAxisModel(this);\n        },\n\n        /**\n         * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n         */\n        restore: function (dataZoomModel) {\n            if (dataZoomModel !== this._dataZoomModel) {\n                return;\n            }\n\n            this._valueWindow = this._percentWindow = null;\n            setAxisModel(this, true);\n        },\n\n        /**\n         * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n         */\n        filterData: function (dataZoomModel) {\n            if (dataZoomModel !== this._dataZoomModel) {\n                return;\n            }\n\n            var axisDim = this._dimName;\n            var seriesModels = this.getTargetSeriesModels();\n            var filterMode = dataZoomModel.get('filterMode');\n            var valueWindow = this._valueWindow;\n\n            if (filterMode === 'none') {\n                return;\n            }\n\n            // FIXME\n            // Toolbox may has dataZoom injected. And if there are stacked bar chart\n            // with NaN data, NaN will be filtered and stack will be wrong.\n            // So we need to force the mode to be set empty.\n            // In fect, it is not a big deal that do not support filterMode-'filter'\n            // when using toolbox#dataZoom, utill tooltip#dataZoom support \"single axis\n            // selection\" some day, which might need \"adapt to data extent on the\n            // otherAxis\", which is disabled by filterMode-'empty'.\n            var otherAxisModel = this.getOtherAxisModel();\n            if (dataZoomModel.get('$fromToolbox')\n                && otherAxisModel\n                && otherAxisModel.get('type') === 'category'\n            ) {\n                filterMode = 'empty';\n            }\n\n            // Process series data\n            each(seriesModels, function (seriesModel) {\n                var seriesData = seriesModel.getData();\n                var dataDims = seriesModel.coordDimToDataDim(axisDim);\n\n                if (filterMode === 'weakFilter') {\n                    seriesData && seriesData.filterSelf(function (dataIndex) {\n                        var leftOut;\n                        var rightOut;\n                        var hasValue;\n                        for (var i = 0; i < dataDims.length; i++) {\n                            var value = seriesData.get(dataDims[i], dataIndex);\n                            var thisHasValue = !isNaN(value);\n                            var thisLeftOut = value < valueWindow[0];\n                            var thisRightOut = value > valueWindow[1];\n                            if (thisHasValue && !thisLeftOut && !thisRightOut) {\n                                return true;\n                            }\n                            thisHasValue && (hasValue = true);\n                            thisLeftOut && (leftOut = true);\n                            thisRightOut && (rightOut = true);\n                        }\n                        // If both left out and right out, do not filter.\n                        return hasValue && leftOut && rightOut;\n                    });\n                }\n                else {\n                    seriesData && each(dataDims, function (dim) {\n                        if (filterMode === 'empty') {\n                            seriesModel.setData(\n                                seriesData.map(dim, function (value) {\n                                    return !isInWindow(value) ? NaN : value;\n                                })\n                            );\n                        }\n                        else {\n                            seriesData.filterSelf(dim, isInWindow);\n                        }\n                    });\n                }\n            });\n\n            function isInWindow(value) {\n                return value >= valueWindow[0] && value <= valueWindow[1];\n            }\n        }\n    };\n\n    function calculateDataExtent(axisProxy, axisDim, seriesModels) {\n        var dataExtent = [Infinity, -Infinity];\n\n        each(seriesModels, function (seriesModel) {\n            var seriesData = seriesModel.getData();\n            if (seriesData) {\n                each(seriesModel.coordDimToDataDim(axisDim), function (dim) {\n                    var seriesExtent = seriesData.getDataExtent(dim);\n                    seriesExtent[0] < dataExtent[0] && (dataExtent[0] = seriesExtent[0]);\n                    seriesExtent[1] > dataExtent[1] && (dataExtent[1] = seriesExtent[1]);\n                });\n            }\n        });\n\n        if (dataExtent[1] < dataExtent[0]) {\n            dataExtent = [NaN, NaN];\n        }\n\n        // It is important to get \"consistent\" extent when more then one axes is\n        // controlled by a `dataZoom`, otherwise those axes will not be synchronized\n        // when zooming. But it is difficult to know what is \"consistent\", considering\n        // axes have different type or even different meanings (For example, two\n        // time axes are used to compare data of the same date in different years).\n        // So basically dataZoom just obtains extent by series.data (in category axis\n        // extent can be obtained from axis.data).\n        // Nevertheless, user can set min/max/scale on axes to make extent of axes\n        // consistent.\n        fixExtentByAxis(axisProxy, dataExtent);\n\n        return dataExtent;\n    }\n\n    function fixExtentByAxis(axisProxy, dataExtent) {\n        var axisModel = axisProxy.getAxisModel();\n        var min = axisModel.getMin(true);\n\n        // For category axis, if min/max/scale are not set, extent is determined\n        // by axis.data by default.\n        var isCategoryAxis = axisModel.get('type') === 'category';\n        var axisDataLen = isCategoryAxis && (axisModel.get('data') || []).length;\n\n        if (min != null && min !== 'dataMin') {\n            dataExtent[0] = min;\n        }\n        else if (isCategoryAxis) {\n            dataExtent[0] = axisDataLen > 0 ? 0 : NaN;\n        }\n\n        var max = axisModel.getMax(true);\n        if (max != null && max !== 'dataMax') {\n            dataExtent[1] = max;\n        }\n        else if (isCategoryAxis) {\n            dataExtent[1] = axisDataLen > 0 ? axisDataLen - 1 : NaN;\n        }\n\n        if (!axisModel.get('scale', true)) {\n            dataExtent[0] > 0 && (dataExtent[0] = 0);\n            dataExtent[1] < 0 && (dataExtent[1] = 0);\n        }\n\n        // For value axis, if min/max/scale are not set, we just use the extent obtained\n        // by series data, which may be a little different from the extent calculated by\n        // `axisHelper.getScaleExtent`. But the different just affects the experience a\n        // little when zooming. So it will not be fixed until some users require it strongly.\n\n        return dataExtent;\n    }\n\n    function setAxisModel(axisProxy, isRestore) {\n        var axisModel = axisProxy.getAxisModel();\n\n        var percentWindow = axisProxy._percentWindow;\n        var valueWindow = axisProxy._valueWindow;\n\n        if (!percentWindow) {\n            return;\n        }\n\n        // [0, 500]: arbitrary value, guess axis extent.\n        var precision = numberUtil.getPixelPrecision(valueWindow, [0, 500]);\n        // isRestore or isFull\n        var useOrigin = isRestore || (percentWindow[0] === 0 && percentWindow[1] === 100);\n\n        axisModel.setRange(\n            useOrigin ? null : +valueWindow[0].toFixed(precision),\n            useOrigin ? null : +valueWindow[1].toFixed(precision)\n        );\n    }\n\n    function setMinMaxSpan(axisProxy) {\n        var minMaxSpan = axisProxy._minMaxSpan = {};\n        var dataZoomModel = axisProxy._dataZoomModel;\n\n        each(['min', 'max'], function (minMax) {\n            minMaxSpan[minMax + 'Span'] = dataZoomModel.get(minMax + 'Span');\n\n            // minValueSpan and maxValueSpan has higher priority than minSpan and maxSpan\n            var valueSpan = dataZoomModel.get(minMax + 'ValueSpan');\n            if (valueSpan != null) {\n                minMaxSpan[minMax + 'ValueSpan'] = valueSpan;\n\n                valueSpan = axisProxy.getAxisModel().axis.scale.parse(valueSpan);\n                if (valueSpan != null) {\n                    minMaxSpan[minMax + 'Span'] = numberUtil.linearMap(\n                        valueSpan, axisProxy._dataExtent, [0, 100], true\n                    );\n                }\n            }\n        });\n    }\n\n    module.exports = AxisProxy;\n\n\n\n/***/ }),\n/* 597 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @file Data zoom model\n */\n\n\n    module.exports = __webpack_require__(496).extend({\n\n        type: 'dataZoom.inside',\n\n        /**\n         * @protected\n         */\n        defaultOption: {\n            disabled: false,   // Whether disable this inside zoom.\n            zoomLock: false,   // Whether disable zoom but only pan.\n            zoomOnMouseWheel: true, // Can be: true / false / 'shift' / 'ctrl' / 'alt'.\n            moveOnMouseMove: true,   // Can be: true / false / 'shift' / 'ctrl' / 'alt'.\n            preventDefaultMouseMove: true\n        }\n    });\n\n\n/***/ }),\n/* 598 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var DataZoomView = __webpack_require__(497);\n    var zrUtil = __webpack_require__(453);\n    var sliderMove = __webpack_require__(526);\n    var roams = __webpack_require__(603);\n    var bind = zrUtil.bind;\n\n    var InsideZoomView = DataZoomView.extend({\n\n        type: 'dataZoom.inside',\n\n        /**\n         * @override\n         */\n        init: function (ecModel, api) {\n            /**\n             * 'throttle' is used in this.dispatchAction, so we save range\n             * to avoid missing some 'pan' info.\n             * @private\n             * @type {Array.<number>}\n             */\n            this._range;\n        },\n\n        /**\n         * @override\n         */\n        render: function (dataZoomModel, ecModel, api, payload) {\n            InsideZoomView.superApply(this, 'render', arguments);\n\n            // Notice: origin this._range should be maintained, and should not be re-fetched\n            // from dataZoomModel when payload.type is 'dataZoom', otherwise 'pan' or 'zoom'\n            // info will be missed because of 'throttle' of this.dispatchAction.\n            if (roams.shouldRecordRange(payload, dataZoomModel.id)) {\n                this._range = dataZoomModel.getPercentRange();\n            }\n\n            // Reset controllers.\n            zrUtil.each(this.getTargetCoordInfo(), function (coordInfoList, coordSysName) {\n\n                var allCoordIds = zrUtil.map(coordInfoList, function (coordInfo) {\n                    return roams.generateCoordId(coordInfo.model);\n                });\n\n                zrUtil.each(coordInfoList, function (coordInfo) {\n                    var coordModel = coordInfo.model;\n                    var dataZoomOption = dataZoomModel.option;\n\n                    roams.register(\n                        api,\n                        {\n                            coordId: roams.generateCoordId(coordModel),\n                            allCoordIds: allCoordIds,\n                            containsPoint: function (e, x, y) {\n                                return coordModel.coordinateSystem.containPoint([x, y]);\n                            },\n                            dataZoomId: dataZoomModel.id,\n                            throttleRate: dataZoomModel.get('throttle', true),\n                            panGetRange: bind(this._onPan, this, coordInfo, coordSysName),\n                            zoomGetRange: bind(this._onZoom, this, coordInfo, coordSysName),\n                            zoomLock: dataZoomOption.zoomLock,\n                            disabled: dataZoomOption.disabled,\n                            roamControllerOpt: {\n                                zoomOnMouseWheel: dataZoomOption.zoomOnMouseWheel,\n                                moveOnMouseMove: dataZoomOption.moveOnMouseMove,\n                                preventDefaultMouseMove: dataZoomOption.preventDefaultMouseMove\n                            }\n                        }\n                    );\n                }, this);\n\n            }, this);\n        },\n\n        /**\n         * @override\n         */\n        dispose: function () {\n            roams.unregister(this.api, this.dataZoomModel.id);\n            InsideZoomView.superApply(this, 'dispose', arguments);\n            this._range = null;\n        },\n\n        /**\n         * @private\n         */\n        _onPan: function (coordInfo, coordSysName, controller, dx, dy, oldX, oldY, newX, newY) {\n            var range = this._range.slice();\n\n            // Calculate transform by the first axis.\n            var axisModel = coordInfo.axisModels[0];\n            if (!axisModel) {\n                return;\n            }\n\n            var directionInfo = getDirectionInfo[coordSysName](\n                [oldX, oldY], [newX, newY], axisModel, controller, coordInfo\n            );\n\n            var percentDelta = directionInfo.signal\n                * (range[1] - range[0])\n                * directionInfo.pixel / directionInfo.pixelLength;\n\n            sliderMove(percentDelta, range, [0, 100], 'all');\n\n            return (this._range = range);\n        },\n\n        /**\n         * @private\n         */\n        _onZoom: function (coordInfo, coordSysName, controller, scale, mouseX, mouseY) {\n            var range = this._range.slice();\n\n            // Calculate transform by the first axis.\n            var axisModel = coordInfo.axisModels[0];\n            if (!axisModel) {\n                return;\n            }\n\n            var directionInfo = getDirectionInfo[coordSysName](\n                null, [mouseX, mouseY], axisModel, controller, coordInfo\n            );\n            var percentPoint = (\n                directionInfo.signal > 0\n                    ? (directionInfo.pixelStart + directionInfo.pixelLength - directionInfo.pixel)\n                    : (directionInfo.pixel - directionInfo.pixelStart)\n                ) / directionInfo.pixelLength * (range[1] - range[0]) + range[0];\n\n            scale = Math.max(1 / scale, 0);\n            range[0] = (range[0] - percentPoint) * scale + percentPoint;\n            range[1] = (range[1] - percentPoint) * scale + percentPoint;\n\n            // Restrict range.\n            var minMaxSpan = this.dataZoomModel.findRepresentativeAxisProxy().getMinMaxSpan();\n            sliderMove(0, range, [0, 100], 0, minMaxSpan.minSpan, minMaxSpan.maxSpan);\n\n            return (this._range = range);\n        }\n\n    });\n\n    var getDirectionInfo = {\n\n        grid: function (oldPoint, newPoint, axisModel, controller, coordInfo) {\n            var axis = axisModel.axis;\n            var ret = {};\n            var rect = coordInfo.model.coordinateSystem.getRect();\n            oldPoint = oldPoint || [0, 0];\n\n            if (axis.dim === 'x') {\n                ret.pixel = newPoint[0] - oldPoint[0];\n                ret.pixelLength = rect.width;\n                ret.pixelStart = rect.x;\n                ret.signal = axis.inverse ? 1 : -1;\n            }\n            else { // axis.dim === 'y'\n                ret.pixel = newPoint[1] - oldPoint[1];\n                ret.pixelLength = rect.height;\n                ret.pixelStart = rect.y;\n                ret.signal = axis.inverse ? -1 : 1;\n            }\n\n            return ret;\n        },\n\n        polar: function (oldPoint, newPoint, axisModel, controller, coordInfo) {\n            var axis = axisModel.axis;\n            var ret = {};\n            var polar = coordInfo.model.coordinateSystem;\n            var radiusExtent = polar.getRadiusAxis().getExtent();\n            var angleExtent = polar.getAngleAxis().getExtent();\n\n            oldPoint = oldPoint ? polar.pointToCoord(oldPoint) : [0, 0];\n            newPoint = polar.pointToCoord(newPoint);\n\n            if (axisModel.mainType === 'radiusAxis') {\n                ret.pixel = newPoint[0] - oldPoint[0];\n                // ret.pixelLength = Math.abs(radiusExtent[1] - radiusExtent[0]);\n                // ret.pixelStart = Math.min(radiusExtent[0], radiusExtent[1]);\n                ret.pixelLength = radiusExtent[1] - radiusExtent[0];\n                ret.pixelStart = radiusExtent[0];\n                ret.signal = axis.inverse ? 1 : -1;\n            }\n            else { // 'angleAxis'\n                ret.pixel = newPoint[1] - oldPoint[1];\n                // ret.pixelLength = Math.abs(angleExtent[1] - angleExtent[0]);\n                // ret.pixelStart = Math.min(angleExtent[0], angleExtent[1]);\n                ret.pixelLength = angleExtent[1] - angleExtent[0];\n                ret.pixelStart = angleExtent[0];\n                ret.signal = axis.inverse ? -1 : 1;\n            }\n\n            return ret;\n        },\n\n        singleAxis: function (oldPoint, newPoint, axisModel, controller, coordInfo) {\n            var axis = axisModel.axis;\n            var rect = coordInfo.model.coordinateSystem.getRect();\n            var ret = {};\n\n            oldPoint = oldPoint || [0, 0];\n\n            if (axis.orient === 'horizontal') {\n                ret.pixel = newPoint[0] - oldPoint[0];\n                ret.pixelLength = rect.width;\n                ret.pixelStart = rect.x;\n                ret.signal = axis.inverse ? 1 : -1;\n            }\n            else { // 'vertical'\n                ret.pixel = newPoint[1] - oldPoint[1];\n                ret.pixelLength = rect.height;\n                ret.pixelStart = rect.y;\n                ret.signal = axis.inverse ? -1 : 1;\n            }\n\n            return ret;\n        }\n    };\n\n    module.exports = InsideZoomView;\n\n\n/***/ }),\n/* 599 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @file Data zoom model\n */\n\n\n    var DataZoomModel = __webpack_require__(496);\n\n    var SliderZoomModel = DataZoomModel.extend({\n\n        type: 'dataZoom.slider',\n\n        layoutMode: 'box',\n\n        /**\n         * @protected\n         */\n        defaultOption: {\n            show: true,\n\n            // ph => placeholder. Using placehoder here because\n            // deault value can only be drived in view stage.\n            right: 'ph',  // Default align to grid rect.\n            top: 'ph',    // Default align to grid rect.\n            width: 'ph',  // Default align to grid rect.\n            height: 'ph', // Default align to grid rect.\n            left: null,   // Default align to grid rect.\n            bottom: null, // Default align to grid rect.\n\n            backgroundColor: 'rgba(47,69,84,0)',    // Background of slider zoom component.\n            // dataBackgroundColor: '#ddd',         // Background coor of data shadow and border of box,\n                                                    // highest priority, remain for compatibility of\n                                                    // previous version, but not recommended any more.\n            dataBackground: {\n                lineStyle: {\n                    color: '#2f4554',\n                    width: 0.5,\n                    opacity: 0.3\n                },\n                areaStyle: {\n                    color: 'rgba(47,69,84,0.3)',\n                    opacity: 0.3\n                }\n            },\n            borderColor: '#ddd',                    // border color of the box. For compatibility,\n                                                    // if dataBackgroundColor is set, borderColor\n                                                    // is ignored.\n\n            fillerColor: 'rgba(167,183,204,0.4)',     // Color of selected area.\n            // handleColor: 'rgba(89,170,216,0.95)',     // Color of handle.\n            // handleIcon: 'path://M4.9,17.8c0-1.4,4.5-10.5,5.5-12.4c0-0.1,0.6-1.1,0.9-1.1c0.4,0,0.9,1,0.9,1.1c1.1,2.2,5.4,11,5.4,12.4v17.8c0,1.5-0.6,2.1-1.3,2.1H6.1c-0.7,0-1.3-0.6-1.3-2.1V17.8z',\n            handleIcon: 'M8.2,13.6V3.9H6.3v9.7H3.1v14.9h3.3v9.7h1.8v-9.7h3.3V13.6H8.2z M9.7,24.4H4.8v-1.4h4.9V24.4z M9.7,19.1H4.8v-1.4h4.9V19.1z',\n            // Percent of the slider height\n            handleSize: '100%',\n\n            handleStyle: {\n                color: '#a7b7cc'\n            },\n\n            labelPrecision: null,\n            labelFormatter: null,\n            showDetail: true,\n            showDataShadow: 'auto',                 // Default auto decision.\n            realtime: true,\n            zoomLock: false,                        // Whether disable zoom.\n            textStyle: {\n                color: '#333'\n            }\n        }\n\n    });\n\n    module.exports = SliderZoomModel;\n\n\n\n/***/ }),\n/* 600 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(453);\n    var graphic = __webpack_require__(454);\n    var throttle = __webpack_require__(485);\n    var DataZoomView = __webpack_require__(497);\n    var Rect = graphic.Rect;\n    var numberUtil = __webpack_require__(457);\n    var linearMap = numberUtil.linearMap;\n    var layout = __webpack_require__(471);\n    var sliderMove = __webpack_require__(526);\n    var eventTool = __webpack_require__(470);\n\n    var asc = numberUtil.asc;\n    var bind = zrUtil.bind;\n    // var mathMax = Math.max;\n    var each = zrUtil.each;\n\n    // Constants\n    var DEFAULT_LOCATION_EDGE_GAP = 7;\n    var DEFAULT_FRAME_BORDER_WIDTH = 1;\n    var DEFAULT_FILLER_SIZE = 30;\n    var HORIZONTAL = 'horizontal';\n    var VERTICAL = 'vertical';\n    var LABEL_GAP = 5;\n    var SHOW_DATA_SHADOW_SERIES_TYPE = ['line', 'bar', 'candlestick', 'scatter'];\n\n    var SliderZoomView = DataZoomView.extend({\n\n        type: 'dataZoom.slider',\n\n        init: function (ecModel, api) {\n\n            /**\n             * @private\n             * @type {Object}\n             */\n            this._displayables = {};\n\n            /**\n             * @private\n             * @type {string}\n             */\n            this._orient;\n\n            /**\n             * [0, 100]\n             * @private\n             */\n            this._range;\n\n            /**\n             * [coord of the first handle, coord of the second handle]\n             * @private\n             */\n            this._handleEnds;\n\n            /**\n             * [length, thick]\n             * @private\n             * @type {Array.<number>}\n             */\n            this._size;\n\n            /**\n             * @private\n             * @type {number}\n             */\n            this._handleWidth;\n\n            /**\n             * @private\n             * @type {number}\n             */\n            this._handleHeight;\n\n            /**\n             * @private\n             */\n            this._location;\n\n            /**\n             * @private\n             */\n            this._dragging;\n\n            /**\n             * @private\n             */\n            this._dataShadowInfo;\n\n            this.api = api;\n        },\n\n        /**\n         * @override\n         */\n        render: function (dataZoomModel, ecModel, api, payload) {\n            SliderZoomView.superApply(this, 'render', arguments);\n\n            throttle.createOrUpdate(\n                this,\n                '_dispatchZoomAction',\n                this.dataZoomModel.get('throttle'),\n                'fixRate'\n            );\n\n            this._orient = dataZoomModel.get('orient');\n\n            if (this.dataZoomModel.get('show') === false) {\n                this.group.removeAll();\n                return;\n            }\n\n            // Notice: this._resetInterval() should not be executed when payload.type\n            // is 'dataZoom', origin this._range should be maintained, otherwise 'pan'\n            // or 'zoom' info will be missed because of 'throttle' of this.dispatchAction,\n            if (!payload || payload.type !== 'dataZoom' || payload.from !== this.uid) {\n                this._buildView();\n            }\n\n            this._updateView();\n        },\n\n        /**\n         * @override\n         */\n        remove: function () {\n            SliderZoomView.superApply(this, 'remove', arguments);\n            throttle.clear(this, '_dispatchZoomAction');\n        },\n\n        /**\n         * @override\n         */\n        dispose: function () {\n            SliderZoomView.superApply(this, 'dispose', arguments);\n            throttle.clear(this, '_dispatchZoomAction');\n        },\n\n        _buildView: function () {\n            var thisGroup = this.group;\n\n            thisGroup.removeAll();\n\n            this._resetLocation();\n            this._resetInterval();\n\n            var barGroup = this._displayables.barGroup = new graphic.Group();\n\n            this._renderBackground();\n\n            this._renderHandle();\n\n            this._renderDataShadow();\n\n            thisGroup.add(barGroup);\n\n            this._positionGroup();\n        },\n\n        /**\n         * @private\n         */\n        _resetLocation: function () {\n            var dataZoomModel = this.dataZoomModel;\n            var api = this.api;\n\n            // If some of x/y/width/height are not specified,\n            // auto-adapt according to target grid.\n            var coordRect = this._findCoordRect();\n            var ecSize = {width: api.getWidth(), height: api.getHeight()};\n            // Default align by coordinate system rect.\n            var positionInfo = this._orient === HORIZONTAL\n                ? {\n                    // Why using 'right', because right should be used in vertical,\n                    // and it is better to be consistent for dealing with position param merge.\n                    right: ecSize.width - coordRect.x - coordRect.width,\n                    top: (ecSize.height - DEFAULT_FILLER_SIZE - DEFAULT_LOCATION_EDGE_GAP),\n                    width: coordRect.width,\n                    height: DEFAULT_FILLER_SIZE\n                }\n                : { // vertical\n                    right: DEFAULT_LOCATION_EDGE_GAP,\n                    top: coordRect.y,\n                    width: DEFAULT_FILLER_SIZE,\n                    height: coordRect.height\n                };\n\n            // Do not write back to option and replace value 'ph', because\n            // the 'ph' value should be recalculated when resize.\n            var layoutParams = layout.getLayoutParams(dataZoomModel.option);\n\n            // Replace the placeholder value.\n            zrUtil.each(['right', 'top', 'width', 'height'], function (name) {\n                if (layoutParams[name] === 'ph') {\n                    layoutParams[name] = positionInfo[name];\n                }\n            });\n\n            var layoutRect = layout.getLayoutRect(\n                layoutParams,\n                ecSize,\n                dataZoomModel.padding\n            );\n\n            this._location = {x: layoutRect.x, y: layoutRect.y};\n            this._size = [layoutRect.width, layoutRect.height];\n            this._orient === VERTICAL && this._size.reverse();\n        },\n\n        /**\n         * @private\n         */\n        _positionGroup: function () {\n            var thisGroup = this.group;\n            var location = this._location;\n            var orient = this._orient;\n\n            // Just use the first axis to determine mapping.\n            var targetAxisModel = this.dataZoomModel.getFirstTargetAxisModel();\n            var inverse = targetAxisModel && targetAxisModel.get('inverse');\n\n            var barGroup = this._displayables.barGroup;\n            var otherAxisInverse = (this._dataShadowInfo || {}).otherAxisInverse;\n\n            // Transform barGroup.\n            barGroup.attr(\n                (orient === HORIZONTAL && !inverse)\n                ? {scale: otherAxisInverse ? [1, 1] : [1, -1]}\n                : (orient === HORIZONTAL && inverse)\n                ? {scale: otherAxisInverse ? [-1, 1] : [-1, -1]}\n                : (orient === VERTICAL && !inverse)\n                ? {scale: otherAxisInverse ? [1, -1] : [1, 1], rotation: Math.PI / 2}\n                // Dont use Math.PI, considering shadow direction.\n                : {scale: otherAxisInverse ? [-1, -1] : [-1, 1], rotation: Math.PI / 2}\n            );\n\n            // Position barGroup\n            var rect = thisGroup.getBoundingRect([barGroup]);\n            thisGroup.attr('position', [location.x - rect.x, location.y - rect.y]);\n        },\n\n        /**\n         * @private\n         */\n        _getViewExtent: function () {\n            return [0, this._size[0]];\n        },\n\n        _renderBackground: function () {\n            var dataZoomModel = this.dataZoomModel;\n            var size = this._size;\n            var barGroup = this._displayables.barGroup;\n\n            barGroup.add(new Rect({\n                silent: true,\n                shape: {\n                    x: 0, y: 0, width: size[0], height: size[1]\n                },\n                style: {\n                    fill: dataZoomModel.get('backgroundColor')\n                },\n                z2: -40\n            }));\n\n            // Click panel, over shadow, below handles.\n            barGroup.add(new Rect({\n                shape: {\n                    x: 0, y: 0, width: size[0], height: size[1]\n                },\n                style: {\n                    fill: 'transparent'\n                },\n                z2: 0,\n                onclick: zrUtil.bind(this._onClickPanelClick, this)\n            }));\n        },\n\n        _renderDataShadow: function () {\n            var info = this._dataShadowInfo = this._prepareDataShadowInfo();\n\n            if (!info) {\n                return;\n            }\n\n            var size = this._size;\n            var seriesModel = info.series;\n            var data = seriesModel.getRawData();\n            var otherDim = seriesModel.getShadowDim\n                ? seriesModel.getShadowDim() // @see candlestick\n                : info.otherDim;\n\n            if (otherDim == null) {\n                return;\n            }\n\n            var otherDataExtent = data.getDataExtent(otherDim);\n            // Nice extent.\n            var otherOffset = (otherDataExtent[1] - otherDataExtent[0]) * 0.3;\n            otherDataExtent = [\n                otherDataExtent[0] - otherOffset,\n                otherDataExtent[1] + otherOffset\n            ];\n            var otherShadowExtent = [0, size[1]];\n\n            var thisShadowExtent = [0, size[0]];\n\n            var areaPoints = [[size[0], 0], [0, 0]];\n            var linePoints = [];\n            var step = thisShadowExtent[1] / (data.count() - 1);\n            var thisCoord = 0;\n\n            // Optimize for large data shadow\n            var stride = Math.round(data.count() / size[0]);\n            var lastIsEmpty;\n            data.each([otherDim], function (value, index) {\n                if (stride > 0 && (index % stride)) {\n                    thisCoord += step;\n                    return;\n                }\n\n                // FIXME\n                // Should consider axis.min/axis.max when drawing dataShadow.\n\n                // FIXME\n                // 应该使用统一的空判断？还是在list里进行空判断？\n                var isEmpty = value == null || isNaN(value) || value === '';\n                // See #4235.\n                var otherCoord = isEmpty\n                    ? 0 : linearMap(value, otherDataExtent, otherShadowExtent, true);\n\n                // Attempt to draw data shadow precisely when there are empty value.\n                if (isEmpty && !lastIsEmpty && index) {\n                    areaPoints.push([areaPoints[areaPoints.length - 1][0], 0]);\n                    linePoints.push([linePoints[linePoints.length - 1][0], 0]);\n                }\n                else if (!isEmpty && lastIsEmpty) {\n                    areaPoints.push([thisCoord, 0]);\n                    linePoints.push([thisCoord, 0]);\n                }\n\n                areaPoints.push([thisCoord, otherCoord]);\n                linePoints.push([thisCoord, otherCoord]);\n\n                thisCoord += step;\n                lastIsEmpty = isEmpty;\n            });\n\n            var dataZoomModel = this.dataZoomModel;\n            // var dataBackgroundModel = dataZoomModel.getModel('dataBackground');\n            this._displayables.barGroup.add(new graphic.Polygon({\n                shape: {points: areaPoints},\n                style: zrUtil.defaults(\n                    {fill: dataZoomModel.get('dataBackgroundColor')},\n                    dataZoomModel.getModel('dataBackground.areaStyle').getAreaStyle()\n                ),\n                silent: true,\n                z2: -20\n            }));\n            this._displayables.barGroup.add(new graphic.Polyline({\n                shape: {points: linePoints},\n                style: dataZoomModel.getModel('dataBackground.lineStyle').getLineStyle(),\n                silent: true,\n                z2: -19\n            }));\n        },\n\n        _prepareDataShadowInfo: function () {\n            var dataZoomModel = this.dataZoomModel;\n            var showDataShadow = dataZoomModel.get('showDataShadow');\n\n            if (showDataShadow === false) {\n                return;\n            }\n\n            // Find a representative series.\n            var result;\n            var ecModel = this.ecModel;\n\n            dataZoomModel.eachTargetAxis(function (dimNames, axisIndex) {\n                var seriesModels = dataZoomModel\n                    .getAxisProxy(dimNames.name, axisIndex)\n                    .getTargetSeriesModels();\n\n                zrUtil.each(seriesModels, function (seriesModel) {\n                    if (result) {\n                        return;\n                    }\n\n                    if (showDataShadow !== true && zrUtil.indexOf(\n                            SHOW_DATA_SHADOW_SERIES_TYPE, seriesModel.get('type')\n                        ) < 0\n                    ) {\n                        return;\n                    }\n\n                    var thisAxis = ecModel.getComponent(dimNames.axis, axisIndex).axis;\n                    var otherDim = getOtherDim(dimNames.name);\n                    var otherAxisInverse;\n                    var coordSys = seriesModel.coordinateSystem;\n                    if (otherDim != null && coordSys.getOtherAxis) {\n                        otherAxisInverse = coordSys.getOtherAxis(thisAxis).inverse;\n                    }\n\n                    result = {\n                        thisAxis: thisAxis,\n                        series: seriesModel,\n                        thisDim: dimNames.name,\n                        otherDim: otherDim,\n                        otherAxisInverse: otherAxisInverse\n                    };\n\n                }, this);\n\n            }, this);\n\n            return result;\n        },\n\n        _renderHandle: function () {\n            var displaybles = this._displayables;\n            var handles = displaybles.handles = [];\n            var handleLabels = displaybles.handleLabels = [];\n            var barGroup = this._displayables.barGroup;\n            var size = this._size;\n            var dataZoomModel = this.dataZoomModel;\n\n            barGroup.add(displaybles.filler = new Rect({\n                draggable: true,\n                cursor: 'move',\n                drift: bind(this._onDragMove, this, 'all'),\n                onmousemove: function (e) {\n                    // Fot mobile devicem, prevent screen slider on the button.\n                    eventTool.stop(e.event);\n                },\n                ondragstart: bind(this._showDataInfo, this, true),\n                ondragend: bind(this._onDragEnd, this),\n                onmouseover: bind(this._showDataInfo, this, true),\n                onmouseout: bind(this._showDataInfo, this, false),\n                style: {\n                    fill: dataZoomModel.get('fillerColor'),\n                    textPosition : 'inside'\n                }\n            }));\n\n            // Frame border.\n            barGroup.add(new Rect(graphic.subPixelOptimizeRect({\n                silent: true,\n                shape: {\n                    x: 0,\n                    y: 0,\n                    width: size[0],\n                    height: size[1]\n                },\n                style: {\n                    stroke: dataZoomModel.get('dataBackgroundColor')\n                        || dataZoomModel.get('borderColor'),\n                    lineWidth: DEFAULT_FRAME_BORDER_WIDTH,\n                    fill: 'rgba(0,0,0,0)'\n                }\n            })));\n\n            var iconStr = dataZoomModel.get('handleIcon');\n            each([0, 1], function (handleIndex) {\n                var iconOpt = {\n                    style: {\n                        strokeNoScale: true\n                    },\n                    rectHover: true,\n                    cursor: this._orient === 'vertical' ? 'ns-resize' : 'ew-resize',\n                    draggable: true,\n                    drift: bind(this._onDragMove, this, handleIndex),\n                    onmousemove: function (e) {\n                        // Fot mobile devicem, prevent screen slider on the button.\n                        eventTool.stop(e.event);\n                    },\n                    ondragend: bind(this._onDragEnd, this),\n                    onmouseover: bind(this._showDataInfo, this, true),\n                    onmouseout: bind(this._showDataInfo, this, false)\n                };\n                var iconStyle = {x: -1, y: 0, width: 2, height: 2};\n\n                var path = iconStr.indexOf('image://') === 0\n                    ? (\n                        iconStyle.image = iconStr.slice(8),\n                        iconOpt.style = iconStyle,\n                        new graphic.Image(iconOpt)\n                    )\n                    : graphic.makePath(\n                        iconStr.replace('path://', ''),\n                        iconOpt,\n                        iconStyle,\n                        'center'\n                    );\n\n                var bRect = path.getBoundingRect();\n                this._handleHeight = numberUtil.parsePercent(dataZoomModel.get('handleSize'), this._size[1]);\n                this._handleWidth = bRect.width / bRect.height * this._handleHeight;\n\n                path.setStyle(dataZoomModel.getModel('handleStyle').getItemStyle());\n                var handleColor = dataZoomModel.get('handleColor');\n                // Compatitable with previous version\n                if (handleColor != null) {\n                    path.style.fill = handleColor;\n                }\n\n                barGroup.add(handles[handleIndex] = path);\n\n                var textStyleModel = dataZoomModel.textStyleModel;\n\n                this.group.add(\n                    handleLabels[handleIndex] = new graphic.Text({\n                    silent: true,\n                    invisible: true,\n                    style: {\n                        x: 0, y: 0, text: '',\n                        textVerticalAlign: 'middle',\n                        textAlign: 'center',\n                        fill: textStyleModel.getTextColor(),\n                        textFont: textStyleModel.getFont()\n                    },\n                    z2: 10\n                }));\n\n            }, this);\n        },\n\n        /**\n         * @private\n         */\n        _resetInterval: function () {\n            var range = this._range = this.dataZoomModel.getPercentRange();\n            var viewExtent = this._getViewExtent();\n\n            this._handleEnds = [\n                linearMap(range[0], [0, 100], viewExtent, true),\n                linearMap(range[1], [0, 100], viewExtent, true)\n            ];\n        },\n\n        /**\n         * @private\n         * @param {(number|string)} handleIndex 0 or 1 or 'all'\n         * @param {number} delta\n         */\n        _updateInterval: function (handleIndex, delta) {\n            var dataZoomModel = this.dataZoomModel;\n            var handleEnds = this._handleEnds;\n            var viewExtend = this._getViewExtent();\n            var minMaxSpan = dataZoomModel.findRepresentativeAxisProxy().getMinMaxSpan();\n            var percentExtent = [0, 100];\n\n            sliderMove(\n                delta,\n                handleEnds,\n                viewExtend,\n                dataZoomModel.get('zoomLock') ? 'all' : handleIndex,\n                minMaxSpan.minSpan != null\n                    ? linearMap(minMaxSpan.minSpan, percentExtent, viewExtend, true) : null,\n                minMaxSpan.maxSpan != null\n                    ? linearMap(minMaxSpan.maxSpan, percentExtent, viewExtend, true) : null\n            );\n\n            this._range = asc([\n                linearMap(handleEnds[0], viewExtend, percentExtent, true),\n                linearMap(handleEnds[1], viewExtend, percentExtent, true)\n            ]);\n        },\n\n        /**\n         * @private\n         */\n        _updateView: function (nonRealtime) {\n            var displaybles = this._displayables;\n            var handleEnds = this._handleEnds;\n            var handleInterval = asc(handleEnds.slice());\n            var size = this._size;\n\n            each([0, 1], function (handleIndex) {\n                // Handles\n                var handle = displaybles.handles[handleIndex];\n                var handleHeight = this._handleHeight;\n                handle.attr({\n                    scale: [handleHeight / 2, handleHeight / 2],\n                    position: [handleEnds[handleIndex], size[1] / 2 - handleHeight / 2]\n                });\n            }, this);\n\n            // Filler\n            displaybles.filler.setShape({\n                x: handleInterval[0],\n                y: 0,\n                width: handleInterval[1] - handleInterval[0],\n                height: size[1]\n            });\n\n            this._updateDataInfo(nonRealtime);\n        },\n\n        /**\n         * @private\n         */\n        _updateDataInfo: function (nonRealtime) {\n            var dataZoomModel = this.dataZoomModel;\n            var displaybles = this._displayables;\n            var handleLabels = displaybles.handleLabels;\n            var orient = this._orient;\n            var labelTexts = ['', ''];\n\n            // FIXME\n            // date型，支持formatter，autoformatter（ec2 date.getAutoFormatter）\n            if (dataZoomModel.get('showDetail')) {\n                var axisProxy = dataZoomModel.findRepresentativeAxisProxy();\n\n                if (axisProxy) {\n                    var axis = axisProxy.getAxisModel().axis;\n                    var range = this._range;\n\n                    var dataInterval = nonRealtime\n                        // See #4434, data and axis are not processed and reset yet in non-realtime mode.\n                        ? axisProxy.calculateDataWindow({\n                            start: range[0], end: range[1]\n                        }).valueWindow\n                        : axisProxy.getDataValueWindow();\n\n                    labelTexts = [\n                        this._formatLabel(dataInterval[0], axis),\n                        this._formatLabel(dataInterval[1], axis)\n                    ];\n                }\n            }\n\n            var orderedHandleEnds = asc(this._handleEnds.slice());\n\n            setLabel.call(this, 0);\n            setLabel.call(this, 1);\n\n            function setLabel(handleIndex) {\n                // Label\n                // Text should not transform by barGroup.\n                // Ignore handlers transform\n                var barTransform = graphic.getTransform(\n                    displaybles.handles[handleIndex].parent, this.group\n                );\n                var direction = graphic.transformDirection(\n                    handleIndex === 0 ? 'right' : 'left', barTransform\n                );\n                var offset = this._handleWidth / 2 + LABEL_GAP;\n                var textPoint = graphic.applyTransform(\n                    [\n                        orderedHandleEnds[handleIndex] + (handleIndex === 0 ? -offset : offset),\n                        this._size[1] / 2\n                    ],\n                    barTransform\n                );\n                handleLabels[handleIndex].setStyle({\n                    x: textPoint[0],\n                    y: textPoint[1],\n                    textVerticalAlign: orient === HORIZONTAL ? 'middle' : direction,\n                    textAlign: orient === HORIZONTAL ? direction : 'center',\n                    text: labelTexts[handleIndex]\n                });\n            }\n        },\n\n        /**\n         * @private\n         */\n        _formatLabel: function (value, axis) {\n            var dataZoomModel = this.dataZoomModel;\n            var labelFormatter = dataZoomModel.get('labelFormatter');\n\n            var labelPrecision = dataZoomModel.get('labelPrecision');\n            if (labelPrecision == null || labelPrecision === 'auto') {\n                labelPrecision = axis.getPixelPrecision();\n            }\n\n            var valueStr = (value == null || isNaN(value))\n                ? ''\n                // FIXME Glue code\n                : (axis.type === 'category' || axis.type === 'time')\n                    ? axis.scale.getLabel(Math.round(value))\n                    // param of toFixed should less then 20.\n                    : value.toFixed(Math.min(labelPrecision, 20));\n\n            return zrUtil.isFunction(labelFormatter)\n                ? labelFormatter(value, valueStr)\n                : zrUtil.isString(labelFormatter)\n                ? labelFormatter.replace('{value}', valueStr)\n                : valueStr;\n        },\n\n        /**\n         * @private\n         * @param {boolean} showOrHide true: show, false: hide\n         */\n        _showDataInfo: function (showOrHide) {\n            // Always show when drgging.\n            showOrHide = this._dragging || showOrHide;\n\n            var handleLabels = this._displayables.handleLabels;\n            handleLabels[0].attr('invisible', !showOrHide);\n            handleLabels[1].attr('invisible', !showOrHide);\n        },\n\n        _onDragMove: function (handleIndex, dx, dy) {\n            this._dragging = true;\n\n            // Transform dx, dy to bar coordination.\n            var barTransform = this._displayables.barGroup.getLocalTransform();\n            var vertex = graphic.applyTransform([dx, dy], barTransform, true);\n\n            this._updateInterval(handleIndex, vertex[0]);\n\n            var realtime = this.dataZoomModel.get('realtime');\n\n            this._updateView(!realtime);\n\n            if (realtime) {\n                realtime && this._dispatchZoomAction();\n            }\n        },\n\n        _onDragEnd: function () {\n            this._dragging = false;\n            this._showDataInfo(false);\n            this._dispatchZoomAction();\n        },\n\n        _onClickPanelClick: function (e) {\n            var size = this._size;\n            var localPoint = this._displayables.barGroup.transformCoordToLocal(e.offsetX, e.offsetY);\n\n            if (localPoint[0] < 0 || localPoint[0] > size[0]\n                || localPoint[1] < 0 || localPoint[1] > size[1]\n            ) {\n                return;\n            }\n\n            var handleEnds = this._handleEnds;\n            var center = (handleEnds[0] + handleEnds[1]) / 2;\n\n            this._updateInterval('all', localPoint[0] - center);\n            this._updateView();\n            this._dispatchZoomAction();\n        },\n\n        /**\n         * This action will be throttled.\n         * @private\n         */\n        _dispatchZoomAction: function () {\n            var range = this._range;\n\n            this.api.dispatchAction({\n                type: 'dataZoom',\n                from: this.uid,\n                dataZoomId: this.dataZoomModel.id,\n                start: range[0],\n                end: range[1]\n            });\n        },\n\n        /**\n         * @private\n         */\n        _findCoordRect: function () {\n            // Find the grid coresponding to the first axis referred by dataZoom.\n            var rect;\n            each(this.getTargetCoordInfo(), function (coordInfoList) {\n                if (!rect && coordInfoList.length) {\n                    var coordSys = coordInfoList[0].model.coordinateSystem;\n                    rect = coordSys.getRect && coordSys.getRect();\n                }\n            });\n            if (!rect) {\n                var width = this.api.getWidth();\n                var height = this.api.getHeight();\n                rect = {\n                    x: width * 0.2,\n                    y: height * 0.2,\n                    width: width * 0.6,\n                    height: height * 0.6\n                };\n            }\n\n            return rect;\n        }\n\n    });\n\n    function getOtherDim(thisDim) {\n        // FIXME\n        // 这个逻辑和getOtherAxis里一致，但是写在这里是否不好\n        var map = {x: 'y', y: 'x', radius: 'angle', angle: 'radius'};\n        return map[thisDim];\n    }\n\n    module.exports = SliderZoomView;\n\n\n\n/***/ }),\n/* 601 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @file Data zoom action\n */\n\n\n    var zrUtil = __webpack_require__(453);\n    var helper = __webpack_require__(498);\n    var echarts = __webpack_require__(455);\n\n\n    echarts.registerAction('dataZoom', function (payload, ecModel) {\n\n        var linkedNodesFinder = helper.createLinkedNodesFinder(\n            zrUtil.bind(ecModel.eachComponent, ecModel, 'dataZoom'),\n            helper.eachAxisDim,\n            function (model, dimNames) {\n                return model.get(dimNames.axisIndex);\n            }\n        );\n\n        var effectedModels = [];\n\n        ecModel.eachComponent(\n            {mainType: 'dataZoom', query: payload},\n            function (model, index) {\n                effectedModels.push.apply(\n                    effectedModels, linkedNodesFinder(model).nodes\n                );\n            }\n        );\n\n        zrUtil.each(effectedModels, function (dataZoomModel, index) {\n            dataZoomModel.setRawRange({\n                start: payload.start,\n                end: payload.end,\n                startValue: payload.startValue,\n                endValue: payload.endValue\n            });\n        });\n\n    });\n\n\n\n/***/ }),\n/* 602 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @file Data zoom processor\n */\n\n\n    var echarts = __webpack_require__(455);\n\n    echarts.registerProcessor(function (ecModel, api) {\n\n        ecModel.eachComponent('dataZoom', function (dataZoomModel) {\n            // We calculate window and reset axis here but not in model\n            // init stage and not after action dispatch handler, because\n            // reset should be called after seriesData.restoreData.\n            dataZoomModel.eachTargetAxis(resetSingleAxis);\n\n            // Caution: data zoom filtering is order sensitive when using\n            // percent range and no min/max/scale set on axis.\n            // For example, we have dataZoom definition:\n            // [\n            //      {xAxisIndex: 0, start: 30, end: 70},\n            //      {yAxisIndex: 0, start: 20, end: 80}\n            // ]\n            // In this case, [20, 80] of y-dataZoom should be based on data\n            // that have filtered by x-dataZoom using range of [30, 70],\n            // but should not be based on full raw data. Thus sliding\n            // x-dataZoom will change both ranges of xAxis and yAxis,\n            // while sliding y-dataZoom will only change the range of yAxis.\n            // So we should filter x-axis after reset x-axis immediately,\n            // and then reset y-axis and filter y-axis.\n            dataZoomModel.eachTargetAxis(filterSingleAxis);\n        });\n\n        ecModel.eachComponent('dataZoom', function (dataZoomModel) {\n            // Fullfill all of the range props so that user\n            // is able to get them from chart.getOption().\n            var axisProxy = dataZoomModel.findRepresentativeAxisProxy();\n            var percentRange = axisProxy.getDataPercentWindow();\n            var valueRange = axisProxy.getDataValueWindow();\n\n            dataZoomModel.setRawRange({\n                start: percentRange[0],\n                end: percentRange[1],\n                startValue: valueRange[0],\n                endValue: valueRange[1]\n            }, true);\n        });\n    });\n\n    function resetSingleAxis(dimNames, axisIndex, dataZoomModel) {\n        dataZoomModel.getAxisProxy(dimNames.name, axisIndex).reset(dataZoomModel);\n    }\n\n    function filterSingleAxis(dimNames, axisIndex, dataZoomModel) {\n        dataZoomModel.getAxisProxy(dimNames.name, axisIndex).filterData(dataZoomModel);\n    }\n\n\n\n\n/***/ }),\n/* 603 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @file Roam controller manager.\n */\n\n\n    // Only create one roam controller for each coordinate system.\n    // one roam controller might be refered by two inside data zoom\n    // components (for example, one for x and one for y). When user\n    // pan or zoom, only dispatch one action for those data zoom\n    // components.\n\n    var zrUtil = __webpack_require__(453);\n    var RoamController = __webpack_require__(606);\n    var throttle = __webpack_require__(485);\n    var curry = zrUtil.curry;\n\n    var ATTR = '\\0_ec_dataZoom_roams';\n\n    var roams = {\n\n        /**\n         * @public\n         * @param {module:echarts/ExtensionAPI} api\n         * @param {Object} dataZoomInfo\n         * @param {string} dataZoomInfo.coordId\n         * @param {Function} dataZoomInfo.containsPoint\n         * @param {Array.<string>} dataZoomInfo.allCoordIds\n         * @param {string} dataZoomInfo.dataZoomId\n         * @param {number} dataZoomInfo.throttleRate\n         * @param {Function} dataZoomInfo.panGetRange\n         * @param {Function} dataZoomInfo.zoomGetRange\n         * @param {boolean} [dataZoomInfo.zoomLock]\n         * @param {boolean} [dataZoomInfo.disabled]\n         */\n        register: function (api, dataZoomInfo) {\n            var store = giveStore(api);\n            var theDataZoomId = dataZoomInfo.dataZoomId;\n            var theCoordId = dataZoomInfo.coordId;\n\n            // Do clean when a dataZoom changes its target coordnate system.\n            // Avoid memory leak, dispose all not-used-registered.\n            zrUtil.each(store, function (record, coordId) {\n                var dataZoomInfos = record.dataZoomInfos;\n                if (dataZoomInfos[theDataZoomId]\n                    && zrUtil.indexOf(dataZoomInfo.allCoordIds, theCoordId) < 0\n                ) {\n                    delete dataZoomInfos[theDataZoomId];\n                    record.count--;\n                }\n            });\n\n            cleanStore(store);\n\n            var record = store[theCoordId];\n            // Create if needed.\n            if (!record) {\n                record = store[theCoordId] = {\n                    coordId: theCoordId,\n                    dataZoomInfos: {},\n                    count: 0\n                };\n                record.controller = createController(api, record);\n                record.dispatchAction = zrUtil.curry(dispatchAction, api);\n            }\n\n            // Update reference of dataZoom.\n            !(record.dataZoomInfos[theDataZoomId]) && record.count++;\n            record.dataZoomInfos[theDataZoomId] = dataZoomInfo;\n\n            var controllerParams = mergeControllerParams(record.dataZoomInfos);\n            record.controller.enable(controllerParams.controlType, controllerParams.opt);\n\n            // Consider resize, area should be always updated.\n            record.controller.setPointerChecker(dataZoomInfo.containsPoint);\n\n            // Update throttle.\n            throttle.createOrUpdate(\n                record,\n                'dispatchAction',\n                dataZoomInfo.throttleRate,\n                'fixRate'\n            );\n        },\n\n        /**\n         * @public\n         * @param {module:echarts/ExtensionAPI} api\n         * @param {string} dataZoomId\n         */\n        unregister: function (api, dataZoomId) {\n            var store = giveStore(api);\n\n            zrUtil.each(store, function (record) {\n                record.controller.dispose();\n                var dataZoomInfos = record.dataZoomInfos;\n                if (dataZoomInfos[dataZoomId]) {\n                    delete dataZoomInfos[dataZoomId];\n                    record.count--;\n                }\n            });\n\n            cleanStore(store);\n        },\n\n        /**\n         * @public\n         */\n        shouldRecordRange: function (payload, dataZoomId) {\n            if (payload && payload.type === 'dataZoom' && payload.batch) {\n                for (var i = 0, len = payload.batch.length; i < len; i++) {\n                    if (payload.batch[i].dataZoomId === dataZoomId) {\n                        return false;\n                    }\n                }\n            }\n            return true;\n        },\n\n        /**\n         * @public\n         */\n        generateCoordId: function (coordModel) {\n            return coordModel.type + '\\0_' + coordModel.id;\n        }\n    };\n\n    /**\n     * Key: coordId, value: {dataZoomInfos: [], count, controller}\n     * @type {Array.<Object>}\n     */\n    function giveStore(api) {\n        // Mount store on zrender instance, so that we do not\n        // need to worry about dispose.\n        var zr = api.getZr();\n        return zr[ATTR] || (zr[ATTR] = {});\n    }\n\n    function createController(api, newRecord) {\n        var controller = new RoamController(api.getZr());\n        controller.on('pan', curry(onPan, newRecord));\n        controller.on('zoom', curry(onZoom, newRecord));\n\n        return controller;\n    }\n\n    function cleanStore(store) {\n        zrUtil.each(store, function (record, coordId) {\n            if (!record.count) {\n                record.controller.dispose();\n                delete store[coordId];\n            }\n        });\n    }\n\n    function onPan(record, dx, dy, oldX, oldY, newX, newY) {\n        wrapAndDispatch(record, function (info) {\n            return info.panGetRange(record.controller, dx, dy, oldX, oldY, newX, newY);\n        });\n    }\n\n    function onZoom(record, scale, mouseX, mouseY) {\n        wrapAndDispatch(record, function (info) {\n            return info.zoomGetRange(record.controller, scale, mouseX, mouseY);\n        });\n    }\n\n    function wrapAndDispatch(record, getRange) {\n        var batch = [];\n\n        zrUtil.each(record.dataZoomInfos, function (info) {\n            var range = getRange(info);\n            !info.disabled && range && batch.push({\n                dataZoomId: info.dataZoomId,\n                start: range[0],\n                end: range[1]\n            });\n        });\n\n        record.dispatchAction(batch);\n    }\n\n    /**\n     * This action will be throttled.\n     */\n    function dispatchAction(api, batch) {\n        api.dispatchAction({\n            type: 'dataZoom',\n            batch: batch\n        });\n    }\n\n    /**\n     * Merge roamController settings when multiple dataZooms share one roamController.\n     */\n    function mergeControllerParams(dataZoomInfos) {\n        var controlType;\n        var opt = {};\n        var typePriority = {\n            'true': 2,\n            'move': 1,\n            'false': 0,\n            'undefined': -1\n        };\n        zrUtil.each(dataZoomInfos, function (dataZoomInfo) {\n            var oneType = dataZoomInfo.disabled ? false : dataZoomInfo.zoomLock ? 'move' : true;\n            typePriority[oneType] > typePriority[controlType] && (controlType = oneType);\n            // Do not support that different 'shift'/'ctrl'/'alt' setting used in one coord sys.\n            zrUtil.extend(opt, dataZoomInfo.roamControllerOpt);\n        });\n\n        return {\n            controlType: controlType,\n            opt: opt\n        };\n    }\n\n    module.exports = roams;\n\n\n\n/***/ }),\n/* 604 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    __webpack_require__(469).registerSubTypeDefaulter('dataZoom', function (option) {\n        // Default 'slider' when no type specified.\n        return 'slider';\n    });\n\n\n\n/***/ }),\n/* 605 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var graphic = __webpack_require__(454);\n    var zrUtil = __webpack_require__(453);\n    var echarts = __webpack_require__(455);\n\n    __webpack_require__(617);\n\n    __webpack_require__(587);\n\n    // Grid view\n    echarts.extendComponentView({\n\n        type: 'grid',\n\n        render: function (gridModel, ecModel) {\n            this.group.removeAll();\n            if (gridModel.get('show')) {\n                this.group.add(new graphic.Rect({\n                    shape: gridModel.coordinateSystem.getRect(),\n                    style: zrUtil.defaults({\n                        fill: gridModel.get('backgroundColor')\n                    }, gridModel.getItemStyle()),\n                    silent: true,\n                    z2: -1\n                }));\n            }\n        }\n\n    });\n\n    echarts.registerPreprocessor(function (option) {\n        // Only create grid when need\n        if (option.xAxis && option.yAxis && !option.grid) {\n            option.grid = {};\n        }\n    });\n\n\n/***/ }),\n/* 606 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module echarts/component/helper/RoamController\n */\n\n\n    var Eventful = __webpack_require__(476);\n    var zrUtil = __webpack_require__(453);\n    var eventTool = __webpack_require__(470);\n    var interactionMutex = __webpack_require__(607);\n\n    /**\n     * @alias module:echarts/component/helper/RoamController\n     * @constructor\n     * @mixin {module:zrender/mixin/Eventful}\n     *\n     * @param {module:zrender/zrender~ZRender} zr\n     */\n    function RoamController(zr) {\n\n        /**\n         * @type {Function}\n         */\n        this.pointerChecker;\n\n        /**\n         * @type {module:zrender}\n         */\n        this._zr = zr;\n\n        /**\n         * @type {Object}\n         */\n        this._opt = {};\n\n        // Avoid two roamController bind the same handler\n        var bind = zrUtil.bind;\n        var mousedownHandler = bind(mousedown, this);\n        var mousemoveHandler = bind(mousemove, this);\n        var mouseupHandler = bind(mouseup, this);\n        var mousewheelHandler = bind(mousewheel, this);\n        var pinchHandler = bind(pinch, this);\n\n        Eventful.call(this);\n\n        /**\n         * @param {Function} pointerChecker\n         *                   input: x, y\n         *                   output: boolean\n         */\n        this.setPointerChecker = function (pointerChecker) {\n            this.pointerChecker = pointerChecker;\n        };\n\n        /**\n         * Notice: only enable needed types. For example, if 'zoom'\n         * is not needed, 'zoom' should not be enabled, otherwise\n         * default mousewheel behaviour (scroll page) will be disabled.\n         *\n         * @param  {boolean|string} [controlType=true] Specify the control type,\n         *                          which can be null/undefined or true/false\n         *                          or 'pan/move' or 'zoom'/'scale'\n         * @param {Object} [opt]\n         * @param {Object} [opt.zoomOnMouseWheel=true]\n         * @param {Object} [opt.moveOnMouseMove=true]\n         * @param {Object} [opt.preventDefaultMouseMove=true] When pan.\n         */\n        this.enable = function (controlType, opt) {\n\n            // Disable previous first\n            this.disable();\n\n            this._opt = zrUtil.defaults(zrUtil.clone(opt) || {}, {\n                zoomOnMouseWheel: true,\n                moveOnMouseMove: true,\n                preventDefaultMouseMove: true\n            });\n\n            if (controlType == null) {\n                controlType = true;\n            }\n\n            if (controlType === true || (controlType === 'move' || controlType === 'pan')) {\n                zr.on('mousedown', mousedownHandler);\n                zr.on('mousemove', mousemoveHandler);\n                zr.on('mouseup', mouseupHandler);\n            }\n            if (controlType === true || (controlType === 'scale' || controlType === 'zoom')) {\n                zr.on('mousewheel', mousewheelHandler);\n                zr.on('pinch', pinchHandler);\n            }\n        };\n\n        this.disable = function () {\n            zr.off('mousedown', mousedownHandler);\n            zr.off('mousemove', mousemoveHandler);\n            zr.off('mouseup', mouseupHandler);\n            zr.off('mousewheel', mousewheelHandler);\n            zr.off('pinch', pinchHandler);\n        };\n\n        this.dispose = this.disable;\n\n        this.isDragging = function () {\n            return this._dragging;\n        };\n\n        this.isPinching = function () {\n            return this._pinching;\n        };\n    }\n\n    zrUtil.mixin(RoamController, Eventful);\n\n\n    function mousedown(e) {\n        if (e.target && e.target.draggable) {\n            return;\n        }\n\n        var x = e.offsetX;\n        var y = e.offsetY;\n\n        // Only check on mosedown, but not mousemove.\n        // Mouse can be out of target when mouse moving.\n        if (this.pointerChecker && this.pointerChecker(e, x, y)) {\n            this._x = x;\n            this._y = y;\n            this._dragging = true;\n        }\n    }\n\n    function mousemove(e) {\n        if (!checkKeyBinding(this, 'moveOnMouseMove', e) || !this._dragging) {\n            return;\n        }\n\n        if (e.gestureEvent === 'pinch') {\n            return;\n        }\n\n        if (interactionMutex.isTaken(this._zr, 'globalPan')) {\n            return;\n        }\n\n        var x = e.offsetX;\n        var y = e.offsetY;\n\n        var oldX = this._x;\n        var oldY = this._y;\n\n        var dx = x - oldX;\n        var dy = y - oldY;\n\n        this._x = x;\n        this._y = y;\n\n        this._opt.preventDefaultMouseMove && eventTool.stop(e.event);\n\n        this.trigger('pan', dx, dy, oldX, oldY, x, y);\n    }\n\n    function mouseup(e) {\n        this._dragging = false;\n    }\n\n    function mousewheel(e) {\n        // wheelDelta maybe -0 in chrome mac.\n        if (!checkKeyBinding(this, 'zoomOnMouseWheel', e) || e.wheelDelta === 0) {\n            return;\n        }\n\n        // Convenience:\n        // Mac and VM Windows on Mac: scroll up: zoom out.\n        // Windows: scroll up: zoom in.\n        var zoomDelta = e.wheelDelta > 0 ? 1.1 : 1 / 1.1;\n        zoom.call(this, e, zoomDelta, e.offsetX, e.offsetY);\n    }\n\n    function pinch(e) {\n        if (interactionMutex.isTaken(this._zr, 'globalPan')) {\n            return;\n        }\n        var zoomDelta = e.pinchScale > 1 ? 1.1 : 1 / 1.1;\n        zoom.call(this, e, zoomDelta, e.pinchX, e.pinchY);\n    }\n\n    function zoom(e, zoomDelta, zoomX, zoomY) {\n        if (this.pointerChecker && this.pointerChecker(e, zoomX, zoomY)) {\n            // When mouse is out of roamController rect,\n            // default befavoius should not be be disabled, otherwise\n            // page sliding is disabled, contrary to expectation.\n            eventTool.stop(e.event);\n\n            this.trigger('zoom', zoomDelta, zoomX, zoomY);\n        }\n    }\n\n    function checkKeyBinding(roamController, prop, e) {\n        var setting = roamController._opt[prop];\n        return setting\n            && (!zrUtil.isString(setting) || e.event[setting + 'Key']);\n    }\n\n    module.exports = RoamController;\n\n\n/***/ }),\n/* 607 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var ATTR = '\\0_ec_interaction_mutex';\n\n    var interactionMutex = {\n\n        take: function (zr, resourceKey, userKey) {\n            var store = getStore(zr);\n            store[resourceKey] = userKey;\n        },\n\n        release: function (zr, resourceKey, userKey) {\n            var store = getStore(zr);\n            var uKey = store[resourceKey];\n\n            if (uKey === userKey) {\n                store[resourceKey] = null;\n            }\n        },\n\n        isTaken: function (zr, resourceKey) {\n            return !!getStore(zr)[resourceKey];\n        }\n    };\n\n    function getStore(zr) {\n        return zr[ATTR] || (zr[ATTR] = {});\n    }\n\n    /**\n     * payload: {\n     *     type: 'takeGlobalCursor',\n     *     key: 'dataZoomSelect', or 'brush', or ...,\n     *         If no userKey, release global cursor.\n     * }\n     */\n    __webpack_require__(455).registerAction(\n        {type: 'takeGlobalCursor', event: 'globalCursorTaken', update: 'update'},\n        function () {}\n    );\n\n    module.exports = interactionMutex;\n\n\n/***/ }),\n/* 608 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// FIXME Better way to pack data in graphic element\n\n\n    __webpack_require__(589);\n\n    __webpack_require__(610);\n\n    __webpack_require__(611);\n\n\n    // Show tip action\n    /**\n     * @action\n     * @property {string} type\n     * @property {number} seriesIndex\n     * @property {number} dataIndex\n     * @property {number} [x]\n     * @property {number} [y]\n     */\n    __webpack_require__(455).registerAction(\n        {\n            type: 'showTip',\n            event: 'showTip',\n            update: 'tooltip:manuallyShowTip'\n        },\n        // noop\n        function () {}\n    );\n    // Hide tip action\n    __webpack_require__(455).registerAction(\n        {\n            type: 'hideTip',\n            event: 'hideTip',\n            update: 'tooltip:manuallyHideTip'\n        },\n        // noop\n        function () {}\n    );\n\n\n/***/ }),\n/* 609 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module echarts/component/tooltip/TooltipContent\n */\n\n\n    var zrUtil = __webpack_require__(453);\n    var zrColor = __webpack_require__(477);\n    var eventUtil = __webpack_require__(470);\n    var formatUtil = __webpack_require__(461);\n    var each = zrUtil.each;\n    var toCamelCase = formatUtil.toCamelCase;\n    var env = __webpack_require__(460);\n\n    var vendors = ['', '-webkit-', '-moz-', '-o-'];\n\n    var gCssText = 'position:absolute;display:block;border-style:solid;white-space:nowrap;z-index:9999999;';\n\n    /**\n     * @param {number} duration\n     * @return {string}\n     * @inner\n     */\n    function assembleTransition(duration) {\n        var transitionCurve = 'cubic-bezier(0.23, 1, 0.32, 1)';\n        var transitionText = 'left ' + duration + 's ' + transitionCurve + ','\n                            + 'top ' + duration + 's ' + transitionCurve;\n        return zrUtil.map(vendors, function (vendorPrefix) {\n            return vendorPrefix + 'transition:' + transitionText;\n        }).join(';');\n    }\n\n    /**\n     * @param {Object} textStyle\n     * @return {string}\n     * @inner\n     */\n    function assembleFont(textStyleModel) {\n        var cssText = [];\n\n        var fontSize = textStyleModel.get('fontSize');\n        var color = textStyleModel.getTextColor();\n\n        color && cssText.push('color:' + color);\n\n        cssText.push('font:' + textStyleModel.getFont());\n\n        fontSize &&\n            cssText.push('line-height:' + Math.round(fontSize * 3 / 2) + 'px');\n\n        each(['decoration', 'align'], function (name) {\n            var val = textStyleModel.get(name);\n            val && cssText.push('text-' + name + ':' + val);\n        });\n\n        return cssText.join(';');\n    }\n\n    /**\n     * @param {Object} tooltipModel\n     * @return {string}\n     * @inner\n     */\n    function assembleCssText(tooltipModel) {\n\n        var cssText = [];\n\n        var transitionDuration = tooltipModel.get('transitionDuration');\n        var backgroundColor = tooltipModel.get('backgroundColor');\n        var textStyleModel = tooltipModel.getModel('textStyle');\n        var padding = tooltipModel.get('padding');\n\n        // Animation transition. Do not animate when transitionDuration is 0.\n        transitionDuration &&\n            cssText.push(assembleTransition(transitionDuration));\n\n        if (backgroundColor) {\n            if (env.canvasSupported) {\n                cssText.push('background-Color:' + backgroundColor);\n            }\n            else {\n                // for ie\n                cssText.push(\n                    'background-Color:#' + zrColor.toHex(backgroundColor)\n                );\n                cssText.push('filter:alpha(opacity=70)');\n            }\n        }\n\n        // Border style\n        each(['width', 'color', 'radius'], function (name) {\n            var borderName = 'border-' + name;\n            var camelCase = toCamelCase(borderName);\n            var val = tooltipModel.get(camelCase);\n            val != null &&\n                cssText.push(borderName + ':' + val + (name === 'color' ? '' : 'px'));\n        });\n\n        // Text style\n        cssText.push(assembleFont(textStyleModel));\n\n        // Padding\n        if (padding != null) {\n            cssText.push('padding:' + formatUtil.normalizeCssArray(padding).join('px ') + 'px');\n        }\n\n        return cssText.join(';') + ';';\n    }\n\n    /**\n     * @alias module:echarts/component/tooltip/TooltipContent\n     * @constructor\n     */\n    function TooltipContent(container, api) {\n        var el = document.createElement('div');\n        var zr = this._zr = api.getZr();\n\n        this.el = el;\n\n        this._x = api.getWidth() / 2;\n        this._y = api.getHeight() / 2;\n\n        container.appendChild(el);\n\n        this._container = container;\n\n        this._show = false;\n\n        /**\n         * @private\n         */\n        this._hideTimeout;\n\n        var self = this;\n        el.onmouseenter = function () {\n            // clear the timeout in hideLater and keep showing tooltip\n            if (self._enterable) {\n                clearTimeout(self._hideTimeout);\n                self._show = true;\n            }\n            self._inContent = true;\n        };\n        el.onmousemove = function (e) {\n            e = e || window.event;\n            if (!self._enterable) {\n                // Try trigger zrender event to avoid mouse\n                // in and out shape too frequently\n                var handler = zr.handler;\n                eventUtil.normalizeEvent(container, e, true);\n                handler.dispatch('mousemove', e);\n            }\n        };\n        el.onmouseleave = function () {\n            if (self._enterable) {\n                if (self._show) {\n                    self.hideLater(self._hideDelay);\n                }\n            }\n            self._inContent = false;\n        };\n    }\n\n    TooltipContent.prototype = {\n\n        constructor: TooltipContent,\n\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _enterable: true,\n\n        /**\n         * Update when tooltip is rendered\n         */\n        update: function () {\n            // FIXME\n            // Move this logic to ec main?\n            var container = this._container;\n            var stl = container.currentStyle\n                || document.defaultView.getComputedStyle(container);\n            var domStyle = container.style;\n            if (domStyle.position !== 'absolute' && stl.position !== 'absolute') {\n                domStyle.position = 'relative';\n            }\n            // Hide the tooltip\n            // PENDING\n            // this.hide();\n        },\n\n        show: function (tooltipModel) {\n            clearTimeout(this._hideTimeout);\n            var el = this.el;\n\n            el.style.cssText = gCssText + assembleCssText(tooltipModel)\n                // http://stackoverflow.com/questions/21125587/css3-transition-not-working-in-chrome-anymore\n                + ';left:' + this._x + 'px;top:' + this._y + 'px;'\n                + (tooltipModel.get('extraCssText') || '');\n\n            el.style.display = el.innerHTML ?  'block' : 'none';\n\n            this._show = true;\n        },\n\n        setContent: function (content) {\n            this.el.innerHTML = content == null ? '' : content;\n        },\n\n        setEnterable: function (enterable) {\n            this._enterable = enterable;\n        },\n\n        getSize: function () {\n            var el = this.el;\n            return [el.clientWidth, el.clientHeight];\n        },\n\n        moveTo: function (x, y) {\n            // xy should be based on canvas root. But tooltipContent is\n            // the sibling of canvas root. So padding of ec container\n            // should be considered here.\n            var zr = this._zr;\n            var viewportRoot;\n            if (zr && zr.painter && (viewportRoot = zr.painter.getViewportRoot())) {\n                x += viewportRoot.offsetLeft || 0;\n                y += viewportRoot.offsetTop || 0;\n            }\n\n            var style = this.el.style;\n            style.left = x + 'px';\n            style.top = y + 'px';\n\n            this._x = x;\n            this._y = y;\n        },\n\n        hide: function () {\n            this.el.style.display = 'none';\n            this._show = false;\n        },\n\n        hideLater: function (time) {\n            if (this._show && !(this._inContent && this._enterable)) {\n                if (time) {\n                    this._hideDelay = time;\n                    // Set show false to avoid invoke hideLater mutiple times\n                    this._show = false;\n                    this._hideTimeout = setTimeout(zrUtil.bind(this.hide, this), time);\n                }\n                else {\n                    this.hide();\n                }\n            }\n        },\n\n        isShow: function () {\n            return this._show;\n        }\n    };\n\n    module.exports = TooltipContent;\n\n\n/***/ }),\n/* 610 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    __webpack_require__(455).extendComponentModel({\n\n        type: 'tooltip',\n\n        dependencies: ['axisPointer'],\n\n        defaultOption: {\n            zlevel: 0,\n\n            z: 8,\n\n            show: true,\n\n            // tooltip主体内容\n            showContent: true,\n\n            // 'trigger' only works on coordinate system.\n            // 'item' | 'axis' | 'none'\n            trigger: 'item',\n\n            // 'click' | 'mousemove' | 'none'\n            triggerOn: 'mousemove|click',\n\n            alwaysShowContent: false,\n\n            displayMode: 'single', // 'single' | 'multipleByCoordSys'\n\n            // 位置 {Array} | {Function}\n            // position: null\n            // Consider triggered from axisPointer handle, verticalAlign should be 'middle'\n            // align: null,\n            // verticalAlign: null,\n\n            // 是否约束 content 在 viewRect 中。默认 false 是为了兼容以前版本。\n            confine: false,\n\n            // 内容格式器：{string}（Template） ¦ {Function}\n            // formatter: null\n\n            showDelay: 0,\n\n            // 隐藏延迟，单位ms\n            hideDelay: 100,\n\n            // 动画变换时间，单位s\n            transitionDuration: 0.4,\n\n            enterable: false,\n\n            // 提示背景颜色，默认为透明度为0.7的黑色\n            backgroundColor: 'rgba(50,50,50,0.7)',\n\n            // 提示边框颜色\n            borderColor: '#333',\n\n            // 提示边框圆角，单位px，默认为4\n            borderRadius: 4,\n\n            // 提示边框线宽，单位px，默认为0（无边框）\n            borderWidth: 0,\n\n            // 提示内边距，单位px，默认各方向内边距为5，\n            // 接受数组分别设定上右下左边距，同css\n            padding: 5,\n\n            // Extra css text\n            extraCssText: '',\n\n            // 坐标轴指示器，坐标轴触发有效\n            axisPointer: {\n                // 默认为直线\n                // 可选为：'line' | 'shadow' | 'cross'\n                type: 'line',\n\n                // type 为 line 的时候有效，指定 tooltip line 所在的轴，可选\n                // 可选 'x' | 'y' | 'angle' | 'radius' | 'auto'\n                // 默认 'auto'，会选择类型为 cateogry 的轴，对于双数值轴，笛卡尔坐标系会默认选择 x 轴\n                // 极坐标系会默认选择 angle 轴\n                axis: 'auto',\n\n                animation: 'auto',\n                animationDurationUpdate: 200,\n                animationEasingUpdate: 'exponentialOut',\n\n                crossStyle: {\n                    color: '#999',\n                    width: 1,\n                    type: 'dashed',\n\n                    // TODO formatter\n                    textStyle: {}\n                }\n\n                // lineStyle and shadowStyle should not be specified here,\n                // otherwise it will always override those styles on option.axisPointer.\n            },\n            textStyle: {\n                color: '#fff',\n                fontSize: 14\n            }\n        }\n    });\n\n\n/***/ }),\n/* 611 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var TooltipContent = __webpack_require__(609);\n    var zrUtil = __webpack_require__(453);\n    var formatUtil = __webpack_require__(461);\n    var numberUtil = __webpack_require__(457);\n    var graphic = __webpack_require__(454);\n    var findPointFromSeries = __webpack_require__(523);\n    var layoutUtil = __webpack_require__(471);\n    var env = __webpack_require__(460);\n    var Model = __webpack_require__(463);\n    var globalListener = __webpack_require__(524);\n    var axisHelper = __webpack_require__(472);\n    var axisPointerViewHelper = __webpack_require__(525);\n\n    var bind = zrUtil.bind;\n    var each = zrUtil.each;\n    var parsePercent = numberUtil.parsePercent;\n\n\n    var proxyRect = new graphic.Rect({\n        shape: {x: -1, y: -1, width: 2, height: 2}\n    });\n\n    __webpack_require__(455).extendComponentView({\n\n        type: 'tooltip',\n\n        init: function (ecModel, api) {\n            if (env.node) {\n                return;\n            }\n            var tooltipContent = new TooltipContent(api.getDom(), api);\n            this._tooltipContent = tooltipContent;\n        },\n\n        render: function (tooltipModel, ecModel, api) {\n            if (env.node) {\n                return;\n            }\n\n            // Reset\n            this.group.removeAll();\n\n            /**\n             * @private\n             * @type {module:echarts/component/tooltip/TooltipModel}\n             */\n            this._tooltipModel = tooltipModel;\n\n            /**\n             * @private\n             * @type {module:echarts/model/Global}\n             */\n            this._ecModel = ecModel;\n\n            /**\n             * @private\n             * @type {module:echarts/ExtensionAPI}\n             */\n            this._api = api;\n\n            /**\n             * Should be cleaned when render.\n             * @private\n             * @type {Array.<Array.<Object>>}\n             */\n            this._lastDataByCoordSys = null;\n\n            /**\n             * @private\n             * @type {boolean}\n             */\n            this._alwaysShowContent = tooltipModel.get('alwaysShowContent');\n\n            var tooltipContent = this._tooltipContent;\n            tooltipContent.update();\n            tooltipContent.setEnterable(tooltipModel.get('enterable'));\n\n            this._initGlobalListener();\n\n            this._keepShow();\n        },\n\n        _initGlobalListener: function () {\n            var tooltipModel = this._tooltipModel;\n            var triggerOn = tooltipModel.get('triggerOn');\n\n            globalListener.register(\n                'itemTooltip',\n                this._api,\n                bind(function (currTrigger, e, dispatchAction) {\n                    // If 'none', it is not controlled by mouse totally.\n                    if (triggerOn !== 'none') {\n                        if (triggerOn.indexOf(currTrigger) >= 0) {\n                            this._tryShow(e, dispatchAction);\n                        }\n                        else if (currTrigger === 'leave') {\n                            this._hide(dispatchAction);\n                        }\n                    }\n                }, this)\n            );\n        },\n\n        _keepShow: function () {\n            var tooltipModel = this._tooltipModel;\n            var ecModel = this._ecModel;\n            var api = this._api;\n\n            // Try to keep the tooltip show when refreshing\n            if (this._lastX != null\n                && this._lastY != null\n                // When user is willing to control tooltip totally using API,\n                // self.manuallyShowTip({x, y}) might cause tooltip hide,\n                // which is not expected.\n                && tooltipModel.get('triggerOn') !== 'none'\n            ) {\n                var self = this;\n                clearTimeout(this._refreshUpdateTimeout);\n                this._refreshUpdateTimeout = setTimeout(function () {\n                    // Show tip next tick after other charts are rendered\n                    // In case highlight action has wrong result\n                    // FIXME\n                    self.manuallyShowTip(tooltipModel, ecModel, api, {\n                        x: self._lastX,\n                        y: self._lastY\n                    });\n                });\n            }\n        },\n\n        /**\n         * Show tip manually by\n         * dispatchAction({\n         *     type: 'showTip',\n         *     x: 10,\n         *     y: 10\n         * });\n         * Or\n         * dispatchAction({\n         *      type: 'showTip',\n         *      seriesIndex: 0,\n         *      dataIndex or dataIndexInside or name\n         * });\n         *\n         *  TODO Batch\n         */\n        manuallyShowTip: function (tooltipModel, ecModel, api, payload) {\n            if (payload.from === this.uid || env.node) {\n                return;\n            }\n\n            var dispatchAction = makeDispatchAction(payload, api);\n\n            // Reset ticket\n            this._ticket = '';\n\n            // When triggered from axisPointer.\n            var dataByCoordSys = payload.dataByCoordSys;\n\n            if (payload.tooltip && payload.x != null && payload.y != null) {\n                var el = proxyRect;\n                el.position = [payload.x, payload.y];\n                el.update();\n                el.tooltip = payload.tooltip;\n                // Manually show tooltip while view is not using zrender elements.\n                this._tryShow({\n                    offsetX: payload.x,\n                    offsetY: payload.y,\n                    target: el\n                }, dispatchAction);\n            }\n            else if (dataByCoordSys) {\n                this._tryShow({\n                    offsetX: payload.x,\n                    offsetY: payload.y,\n                    position: payload.position,\n                    event: {},\n                    dataByCoordSys: payload.dataByCoordSys,\n                    tooltipOption: payload.tooltipOption\n                }, dispatchAction);\n            }\n            else if (payload.seriesIndex != null) {\n\n                if (this._manuallyAxisShowTip(tooltipModel, ecModel, api, payload)) {\n                    return;\n                }\n\n                var pointInfo = findPointFromSeries(payload, ecModel);\n                var cx = pointInfo.point[0];\n                var cy = pointInfo.point[1];\n                if (cx != null && cy != null) {\n                    this._tryShow({\n                        offsetX: cx,\n                        offsetY: cy,\n                        position: payload.position,\n                        target: pointInfo.el,\n                        event: {}\n                    }, dispatchAction);\n                }\n            }\n            else if (payload.x != null && payload.y != null) {\n                // FIXME\n                // should wrap dispatchAction like `axisPointer/globalListener` ?\n                api.dispatchAction({\n                    type: 'updateAxisPointer',\n                    x: payload.x,\n                    y: payload.y\n                });\n\n                this._tryShow({\n                    offsetX: payload.x,\n                    offsetY: payload.y,\n                    position: payload.position,\n                    target: api.getZr().findHover(payload.x, payload.y).target,\n                    event: {}\n                }, dispatchAction);\n            }\n        },\n\n        manuallyHideTip: function (tooltipModel, ecModel, api, payload) {\n            var tooltipContent = this._tooltipContent;\n\n            if (!this._alwaysShowContent) {\n                tooltipContent.hideLater(this._tooltipModel.get('hideDelay'));\n            }\n\n            this._lastX = this._lastY = null;\n\n            if (payload.from !== this.uid) {\n                this._hide(makeDispatchAction(payload, api));\n            }\n        },\n\n        // Be compatible with previous design, that is, when tooltip.type is 'axis' and\n        // dispatchAction 'showTip' with seriesIndex and dataIndex will trigger axis pointer\n        // and tooltip.\n        _manuallyAxisShowTip: function (tooltipModel, ecModel, api, payload) {\n            var seriesIndex = payload.seriesIndex;\n            var dataIndex = payload.dataIndex;\n            var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo;\n\n            if (seriesIndex == null || dataIndex == null || coordSysAxesInfo == null) {\n                return;\n            }\n\n            var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n            if (!seriesModel) {\n                return;\n            }\n\n            var data = seriesModel.getData();\n            var tooltipModel = buildTooltipModel([\n                data.getItemModel(dataIndex),\n                seriesModel,\n                (seriesModel.coordinateSystem || {}).model,\n                tooltipModel\n            ]);\n\n            if (tooltipModel.get('trigger') !== 'axis') {\n                return;\n            }\n\n            api.dispatchAction({\n                type: 'updateAxisPointer',\n                seriesIndex: seriesIndex,\n                dataIndex: dataIndex,\n                position: payload.position\n            });\n\n            return true;\n        },\n\n        _tryShow: function (e, dispatchAction) {\n            var el = e.target;\n            var tooltipModel = this._tooltipModel;\n\n            if (!tooltipModel) {\n                return;\n            }\n\n            // Save mouse x, mouse y. So we can try to keep showing the tip if chart is refreshed\n            this._lastX = e.offsetX;\n            this._lastY = e.offsetY;\n\n            var dataByCoordSys = e.dataByCoordSys;\n            if (dataByCoordSys && dataByCoordSys.length) {\n                this._showAxisTooltip(dataByCoordSys, e);\n            }\n            // Always show item tooltip if mouse is on the element with dataIndex\n            else if (el && el.dataIndex != null) {\n                this._lastDataByCoordSys = null;\n                this._showSeriesItemTooltip(e, el, dispatchAction);\n            }\n            // Tooltip provided directly. Like legend.\n            else if (el && el.tooltip) {\n                this._lastDataByCoordSys = null;\n                this._showComponentItemTooltip(e, el, dispatchAction);\n            }\n            else {\n                this._lastDataByCoordSys = null;\n                this._hide(dispatchAction);\n            }\n        },\n\n        _showOrMove: function (tooltipModel, cb) {\n            // showDelay is used in this case: tooltip.enterable is set\n            // as true. User intent to move mouse into tooltip and click\n            // something. `showDelay` makes it easyer to enter the content\n            // but tooltip do not move immediately.\n            var delay = tooltipModel.get('showDelay');\n            cb = zrUtil.bind(cb, this);\n            clearTimeout(this._showTimout);\n            delay > 0\n                ? (this._showTimout = setTimeout(cb, delay))\n                : cb();\n        },\n\n        _showAxisTooltip: function (dataByCoordSys, e) {\n            var ecModel = this._ecModel;\n            var globalTooltipModel = this._tooltipModel;\n            var point = [e.offsetX, e.offsetY];\n            var singleDefaultHTML = [];\n            var singleParamsList = [];\n            var singleTooltipModel = buildTooltipModel([\n                e.tooltipOption,\n                globalTooltipModel\n            ]);\n\n            each(dataByCoordSys, function (itemCoordSys) {\n                // var coordParamList = [];\n                // var coordDefaultHTML = [];\n                // var coordTooltipModel = buildTooltipModel([\n                //     e.tooltipOption,\n                //     itemCoordSys.tooltipOption,\n                //     ecModel.getComponent(itemCoordSys.coordSysMainType, itemCoordSys.coordSysIndex),\n                //     globalTooltipModel\n                // ]);\n                // var displayMode = coordTooltipModel.get('displayMode');\n                // var paramsList = displayMode === 'single' ? singleParamsList : [];\n\n                each(itemCoordSys.dataByAxis, function (item) {\n                    var axisModel = ecModel.getComponent(item.axisDim + 'Axis', item.axisIndex);\n                    var axisValue = item.value;\n                    var seriesDefaultHTML = [];\n\n                    if (!axisModel || axisValue == null) {\n                        return;\n                    }\n\n                    var valueLabel = axisPointerViewHelper.getValueLabel(\n                        axisValue, axisModel.axis, ecModel,\n                        item.seriesDataIndices,\n                        item.valueLabelOpt\n                    );\n\n                    zrUtil.each(item.seriesDataIndices, function (idxItem) {\n                        var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n                        var dataIndex = idxItem.dataIndexInside;\n                        var dataParams = series && series.getDataParams(dataIndex);\n                        dataParams.axisDim = item.axisDim;\n                        dataParams.axisIndex = item.axisIndex;\n                        dataParams.axisType = item.axisType;\n                        dataParams.axisId = item.axisId;\n                        dataParams.axisValue = axisHelper.getAxisRawValue(axisModel.axis, axisValue);\n                        dataParams.axisValueLabel = valueLabel;\n\n                        if (dataParams) {\n                            singleParamsList.push(dataParams);\n                            seriesDefaultHTML.push(series.formatTooltip(dataIndex, true));\n                        }\n                    });\n\n                    // Default tooltip content\n                    // FIXME\n                    // (1) shold be the first data which has name?\n                    // (2) themeRiver, firstDataIndex is array, and first line is unnecessary.\n                    var firstLine = valueLabel;\n                    singleDefaultHTML.push(\n                        (firstLine ? formatUtil.encodeHTML(firstLine) + '<br />' : '')\n                        + seriesDefaultHTML.join('<br />')\n                    );\n                });\n            }, this);\n\n            // In most case, the second axis is shown upper than the first one.\n            singleDefaultHTML.reverse();\n            singleDefaultHTML = singleDefaultHTML.join('<br /><br />');\n\n            var positionExpr = e.position;\n            this._showOrMove(singleTooltipModel, function () {\n                if (this._updateContentNotChangedOnAxis(dataByCoordSys)) {\n                    this._updatePosition(\n                        singleTooltipModel,\n                        positionExpr,\n                        point[0], point[1],\n                        this._tooltipContent,\n                        singleParamsList\n                    );\n                }\n                else {\n                    this._showTooltipContent(\n                        singleTooltipModel, singleDefaultHTML, singleParamsList, Math.random(),\n                        point[0], point[1], positionExpr\n                    );\n                }\n            });\n\n            // Do not trigger events here, because this branch only be entered\n            // from dispatchAction.\n        },\n\n        _showSeriesItemTooltip: function (e, el, dispatchAction) {\n            var ecModel = this._ecModel;\n            // Use dataModel in element if possible\n            // Used when mouseover on a element like markPoint or edge\n            // In which case, the data is not main data in series.\n            var seriesIndex = el.seriesIndex;\n            var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n\n            // For example, graph link.\n            var dataModel = el.dataModel || seriesModel;\n            var dataIndex = el.dataIndex;\n            var dataType = el.dataType;\n            var data = dataModel.getData();\n\n            var tooltipModel = buildTooltipModel([\n                data.getItemModel(dataIndex),\n                dataModel,\n                seriesModel && (seriesModel.coordinateSystem || {}).model,\n                this._tooltipModel\n            ]);\n\n            var tooltipTrigger = tooltipModel.get('trigger');\n            if (tooltipTrigger != null && tooltipTrigger !== 'item') {\n                return;\n            }\n\n            var params = dataModel.getDataParams(dataIndex, dataType);\n            var defaultHtml = dataModel.formatTooltip(dataIndex, false, dataType);\n            var asyncTicket = 'item_' + dataModel.name + '_' + dataIndex;\n\n            this._showOrMove(tooltipModel, function () {\n                this._showTooltipContent(\n                    tooltipModel, defaultHtml, params, asyncTicket,\n                    e.offsetX, e.offsetY, e.position, e.target\n                );\n            });\n\n            // FIXME\n            // duplicated showtip if manuallyShowTip is called from dispatchAction.\n            dispatchAction({\n                type: 'showTip',\n                dataIndexInside: dataIndex,\n                dataIndex: data.getRawIndex(dataIndex),\n                seriesIndex: seriesIndex,\n                from: this.uid\n            });\n        },\n\n        _showComponentItemTooltip: function (e, el, dispatchAction) {\n            var tooltipOpt = el.tooltip;\n            if (typeof tooltipOpt === 'string') {\n                var content = tooltipOpt;\n                tooltipOpt = {\n                    content: content,\n                    // Fixed formatter\n                    formatter: content\n                };\n            }\n            var subTooltipModel = new Model(tooltipOpt, this._tooltipModel, this._ecModel);\n            var defaultHtml = subTooltipModel.get('content');\n            var asyncTicket = Math.random();\n\n            // Do not check whether `trigger` is 'none' here, because `trigger`\n            // only works on cooridinate system. In fact, we have not found case\n            // that requires setting `trigger` nothing on component yet.\n\n            this._showOrMove(subTooltipModel, function () {\n                this._showTooltipContent(\n                    subTooltipModel, defaultHtml, subTooltipModel.get('formatterParams') || {},\n                    asyncTicket, e.offsetX, e.offsetY, e.position, el\n                );\n            });\n\n            // If not dispatch showTip, tip may be hide triggered by axis.\n            dispatchAction({\n                type: 'showTip',\n                from: this.uid\n            });\n        },\n\n        _showTooltipContent: function (\n            tooltipModel, defaultHtml, params, asyncTicket, x, y, positionExpr, el\n        ) {\n            // Reset ticket\n            this._ticket = '';\n\n            if (!tooltipModel.get('showContent') || !tooltipModel.get('show')) {\n                return;\n            }\n\n            var tooltipContent = this._tooltipContent;\n\n            var formatter = tooltipModel.get('formatter');\n            positionExpr = positionExpr || tooltipModel.get('position');\n            var html = defaultHtml;\n\n            if (formatter && typeof formatter === 'string') {\n                html = formatUtil.formatTpl(formatter, params, true);\n            }\n            else if (typeof formatter === 'function') {\n                var callback = bind(function (cbTicket, html) {\n                    if (cbTicket === this._ticket) {\n                        tooltipContent.setContent(html);\n                        this._updatePosition(\n                            tooltipModel, positionExpr, x, y, tooltipContent, params, el\n                        );\n                    }\n                }, this);\n                this._ticket = asyncTicket;\n                html = formatter(params, asyncTicket, callback);\n            }\n\n            tooltipContent.setContent(html);\n            tooltipContent.show(tooltipModel);\n\n            this._updatePosition(\n                tooltipModel, positionExpr, x, y, tooltipContent, params, el\n            );\n        },\n\n        /**\n         * @param  {string|Function|Array.<number>} positionExpr\n         * @param  {number} x Mouse x\n         * @param  {number} y Mouse y\n         * @param  {boolean} confine Whether confine tooltip content in view rect.\n         * @param  {Object|<Array.<Object>} params\n         * @param  {module:zrender/Element} el target element\n         * @param  {module:echarts/ExtensionAPI} api\n         * @return {Array.<number>}\n         */\n        _updatePosition: function (tooltipModel, positionExpr, x, y, content, params, el) {\n            var viewWidth = this._api.getWidth();\n            var viewHeight = this._api.getHeight();\n            positionExpr = positionExpr || tooltipModel.get('position');\n\n            var contentSize = content.getSize();\n            var align = tooltipModel.get('align');\n            var vAlign = tooltipModel.get('verticalAlign');\n            var rect = el && el.getBoundingRect().clone();\n            el && rect.applyTransform(el.transform);\n\n            if (typeof positionExpr === 'function') {\n                // Callback of position can be an array or a string specify the position\n                positionExpr = positionExpr([x, y], params, content.el, rect, {\n                    viewSize: [viewWidth, viewHeight],\n                    contentSize: contentSize.slice()\n                });\n            }\n\n            if (zrUtil.isArray(positionExpr)) {\n                x = parsePercent(positionExpr[0], viewWidth);\n                y = parsePercent(positionExpr[1], viewHeight);\n            }\n            else if (zrUtil.isObject(positionExpr)) {\n                positionExpr.width = contentSize[0];\n                positionExpr.height = contentSize[1];\n                var layoutRect = layoutUtil.getLayoutRect(\n                    positionExpr, {width: viewWidth, height: viewHeight}\n                );\n                x = layoutRect.x;\n                y = layoutRect.y;\n                align = null;\n                // When positionExpr is left/top/right/bottom,\n                // align and verticalAlign will not work.\n                vAlign = null;\n            }\n            // Specify tooltip position by string 'top' 'bottom' 'left' 'right' around graphic element\n            else if (typeof positionExpr === 'string' && el) {\n                var pos = calcTooltipPosition(\n                    positionExpr, rect, contentSize\n                );\n                x = pos[0];\n                y = pos[1];\n            }\n            else {\n                var pos = refixTooltipPosition(\n                    x, y, content.el, viewWidth, viewHeight, align ? null : 20, vAlign ? null : 20\n                );\n                x = pos[0];\n                y = pos[1];\n            }\n\n            align && (x -= isCenterAlign(align) ? contentSize[0] / 2 : align === 'right' ? contentSize[0] : 0);\n            vAlign && (y -= isCenterAlign(vAlign) ? contentSize[1] / 2 : vAlign === 'bottom' ? contentSize[1] : 0);\n\n            if (tooltipModel.get('confine')) {\n                var pos = confineTooltipPosition(\n                    x, y, content.el, viewWidth, viewHeight\n                );\n                x = pos[0];\n                y = pos[1];\n            }\n\n            content.moveTo(x, y);\n        },\n\n        // FIXME\n        // Should we remove this but leave this to user?\n        _updateContentNotChangedOnAxis: function (dataByCoordSys) {\n            var lastCoordSys = this._lastDataByCoordSys;\n            var contentNotChanged = !!lastCoordSys\n                && lastCoordSys.length === dataByCoordSys.length;\n\n            contentNotChanged && each(lastCoordSys, function (lastItemCoordSys, indexCoordSys) {\n                var lastDataByAxis = lastItemCoordSys.dataByAxis || {};\n                var thisItemCoordSys = dataByCoordSys[indexCoordSys] || {};\n                var thisDataByAxis = thisItemCoordSys.dataByAxis || [];\n                contentNotChanged &= lastDataByAxis.length === thisDataByAxis.length;\n\n                contentNotChanged && each(lastDataByAxis, function (lastItem, indexAxis) {\n                    var thisItem = thisDataByAxis[indexAxis] || {};\n                    var lastIndices = lastItem.seriesDataIndices || [];\n                    var newIndices = thisItem.seriesDataIndices || [];\n\n                    contentNotChanged &=\n                        lastItem.value === thisItem.value\n                        && lastItem.axisType === thisItem.axisType\n                        && lastItem.axisId === thisItem.axisId\n                        && lastIndices.length === newIndices.length;\n\n                    contentNotChanged && each(lastIndices, function (lastIdxItem, j) {\n                        var newIdxItem = newIndices[j];\n                        contentNotChanged &=\n                            lastIdxItem.seriesIndex === newIdxItem.seriesIndex\n                            && lastIdxItem.dataIndex === newIdxItem.dataIndex;\n                    });\n                });\n            });\n\n            this._lastDataByCoordSys = dataByCoordSys;\n\n            return !!contentNotChanged;\n        },\n\n        _hide: function (dispatchAction) {\n            // Do not directly hideLater here, because this behavior may be prevented\n            // in dispatchAction when showTip is dispatched.\n\n            // FIXME\n            // duplicated hideTip if manuallyHideTip is called from dispatchAction.\n            this._lastDataByCoordSys = null;\n            dispatchAction({\n                type: 'hideTip',\n                from: this.uid\n            });\n        },\n\n        dispose: function (ecModel, api) {\n            if (env.node) {\n                return;\n            }\n            this._tooltipContent.hide();\n            globalListener.unregister('itemTooltip', api);\n        }\n    });\n\n\n    /**\n     * @param {Array.<Object|module:echarts/model/Model>} modelCascade\n     * From top to bottom. (the last one should be globalTooltipModel);\n     */\n    function buildTooltipModel(modelCascade) {\n        var resultModel = modelCascade.pop();\n        while (modelCascade.length) {\n            var tooltipOpt = modelCascade.pop();\n            if (tooltipOpt) {\n                if (tooltipOpt instanceof Model) {\n                    tooltipOpt = tooltipOpt.get('tooltip', true);\n                }\n                // In each data item tooltip can be simply write:\n                // {\n                //  value: 10,\n                //  tooltip: 'Something you need to know'\n                // }\n                if (typeof tooltipOpt === 'string') {\n                    tooltipOpt = {formatter: tooltipOpt};\n                }\n                resultModel = new Model(tooltipOpt, resultModel, resultModel.ecModel);\n            }\n        }\n        return resultModel;\n    }\n\n    function makeDispatchAction(payload, api) {\n        return payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n    }\n\n    function refixTooltipPosition(x, y, el, viewWidth, viewHeight, gapH, gapV) {\n        var width = el.clientWidth;\n        var height = el.clientHeight;\n\n        if (gapH != null) {\n            if (x + width + gapH > viewWidth) {\n                x -= width + gapH;\n            }\n            else {\n                x += gapH;\n            }\n        }\n        if (gapV != null) {\n            if (y + height + gapV > viewHeight) {\n                y -= height + gapV;\n            }\n            else {\n                y += gapV;\n            }\n        }\n        return [x, y];\n    }\n\n    function confineTooltipPosition(x, y, el, viewWidth, viewHeight) {\n        var width = el.clientWidth;\n        var height = el.clientHeight;\n\n        x = Math.min(x + width, viewWidth) - width;\n        y = Math.min(y + height, viewHeight) - height;\n        x = Math.max(x, 0);\n        y = Math.max(y, 0);\n\n        return [x, y];\n    }\n\n    function calcTooltipPosition(position, rect, contentSize) {\n        var domWidth = contentSize[0];\n        var domHeight = contentSize[1];\n        var gap = 5;\n        var x = 0;\n        var y = 0;\n        var rectWidth = rect.width;\n        var rectHeight = rect.height;\n        switch (position) {\n            case 'inside':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n                break;\n            case 'top':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y - domHeight - gap;\n                break;\n            case 'bottom':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y + rectHeight + gap;\n                break;\n            case 'left':\n                x = rect.x - domWidth - gap;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n                break;\n            case 'right':\n                x = rect.x + rectWidth + gap;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n        }\n        return [x, y];\n    }\n\n    function isCenterAlign(align) {\n        return align === 'center' || align === 'middle';\n    }\n\n\n\n/***/ }),\n/* 612 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(453);\n\n    var defaultOption = {\n        show: true,\n        zlevel: 0,                  // 一级层叠\n        z: 0,                       // 二级层叠\n        // 反向坐标轴\n        inverse: false,\n\n        // 坐标轴名字，默认为空\n        name: '',\n        // 坐标轴名字位置，支持'start' | 'middle' | 'end'\n        nameLocation: 'end',\n        // 坐标轴名字旋转，degree。\n        nameRotate: null, // Adapt to axis rotate, when nameLocation is 'middle'.\n        nameTruncate: {\n            maxWidth: null,\n            ellipsis: '...',\n            placeholder: '.'\n        },\n        // 坐标轴文字样式，默认取全局样式\n        nameTextStyle: {},\n        // 文字与轴线距离\n        nameGap: 15,\n\n        silent: false, // Default false to support tooltip.\n        triggerEvent: false, // Default false to avoid legacy user event listener fail.\n\n        tooltip: {\n            show: false\n        },\n\n        axisPointer: {},\n\n        // 坐标轴线\n        axisLine: {\n            // 默认显示，属性show控制显示与否\n            show: true,\n            onZero: true,\n            // 属性lineStyle控制线条样式\n            lineStyle: {\n                color: '#333',\n                width: 1,\n                type: 'solid'\n            }\n        },\n        // 坐标轴小标记\n        axisTick: {\n            // 属性show控制显示与否，默认显示\n            show: true,\n            // 控制小标记是否在grid里\n            inside: false,\n            // 属性length控制线长\n            length: 5,\n            // 属性lineStyle控制线条样式\n            lineStyle: {\n                width: 1\n            }\n        },\n        // 坐标轴文本标签，详见axis.axisLabel\n        axisLabel: {\n            show: true,\n            // 控制文本标签是否在grid里\n            inside: false,\n            rotate: 0,\n            showMinLabel: null, // true | false | null (auto)\n            showMaxLabel: null, // true | false | null (auto)\n            margin: 8,\n            // formatter: null,\n            // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n            textStyle: {\n                fontSize: 12\n            }\n        },\n        // 分隔线\n        splitLine: {\n            // 默认显示，属性show控制显示与否\n            show: true,\n            // 属性lineStyle（详见lineStyle）控制线条样式\n            lineStyle: {\n                color: ['#ccc'],\n                width: 1,\n                type: 'solid'\n            }\n        },\n        // 分隔区域\n        splitArea: {\n            // 默认不显示，属性show控制显示与否\n            show: false,\n            // 属性areaStyle（详见areaStyle）控制区域样式\n            areaStyle: {\n                color: ['rgba(250,250,250,0.3)','rgba(200,200,200,0.3)']\n            }\n        }\n    };\n\n    var categoryAxis = zrUtil.merge({\n        // 类目起始和结束两端空白策略\n        boundaryGap: true,\n        // splitArea: {\n            // show: false\n        // },\n        splitLine: {\n            show: false\n        },\n        // 坐标轴小标记\n        axisTick: {\n            // If tick is align with label when boundaryGap is true\n            alignWithLabel: false,\n            interval: 'auto'\n        },\n        // 坐标轴文本标签，详见axis.axisLabel\n        axisLabel: {\n            interval: 'auto'\n        }\n    }, defaultOption);\n\n    var valueAxis = zrUtil.merge({\n        // 数值起始和结束两端空白策略\n        boundaryGap: [0, 0],\n        // 最小值, 设置成 'dataMin' 则从数据中计算最小值\n        // min: null,\n        // 最大值，设置成 'dataMax' 则从数据中计算最大值\n        // max: null,\n        // Readonly prop, specifies start value of the range when using data zoom.\n        // rangeStart: null\n        // Readonly prop, specifies end value of the range when using data zoom.\n        // rangeEnd: null\n        // 脱离0值比例，放大聚焦到最终_min，_max区间\n        // scale: false,\n        // 分割段数，默认为5\n        splitNumber: 5\n        // Minimum interval\n        // minInterval: null\n    }, defaultOption);\n\n    // FIXME\n    var timeAxis = zrUtil.defaults({\n        scale: true,\n        min: 'dataMin',\n        max: 'dataMax'\n    }, valueAxis);\n\n    var logAxis = zrUtil.defaults({\n        scale: true,\n        logBase: 10\n    }, valueAxis);\n\n    module.exports = {\n        categoryAxis: categoryAxis,\n        valueAxis: valueAxis,\n        timeAxis: timeAxis,\n        logAxis: logAxis\n    };\n\n\n/***/ }),\n/* 613 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var axisDefault = __webpack_require__(612);\n    var zrUtil = __webpack_require__(453);\n    var ComponentModel = __webpack_require__(469);\n    var layout = __webpack_require__(471);\n\n    // FIXME axisType is fixed ?\n    var AXIS_TYPES = ['value', 'category', 'time', 'log'];\n\n    /**\n     * Generate sub axis model class\n     * @param {string} axisName 'x' 'y' 'radius' 'angle' 'parallel'\n     * @param {module:echarts/model/Component} BaseAxisModelClass\n     * @param {Function} axisTypeDefaulter\n     * @param {Object} [extraDefaultOption]\n     */\n    module.exports = function (axisName, BaseAxisModelClass, axisTypeDefaulter, extraDefaultOption) {\n\n        zrUtil.each(AXIS_TYPES, function (axisType) {\n\n            BaseAxisModelClass.extend({\n\n                type: axisName + 'Axis.' + axisType,\n\n                mergeDefaultAndTheme: function (option, ecModel) {\n                    var layoutMode = this.layoutMode;\n                    var inputPositionParams = layoutMode\n                        ? layout.getLayoutParams(option) : {};\n\n                    var themeModel = ecModel.getTheme();\n                    zrUtil.merge(option, themeModel.get(axisType + 'Axis'));\n                    zrUtil.merge(option, this.getDefaultOption());\n\n                    option.type = axisTypeDefaulter(axisName, option);\n\n                    if (layoutMode) {\n                        layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n                    }\n                },\n\n                defaultOption: zrUtil.mergeAll(\n                    [\n                        {},\n                        axisDefault[axisType + 'Axis'],\n                        extraDefaultOption\n                    ],\n                    true\n                )\n            });\n        });\n\n        ComponentModel.registerSubTypeDefaulter(\n            axisName + 'Axis',\n            zrUtil.curry(axisTypeDefaulter, axisName)\n        );\n    };\n\n\n/***/ }),\n/* 614 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(453);\n    var Axis = __webpack_require__(527);\n\n    /**\n     * Extend axis 2d\n     * @constructor module:echarts/coord/cartesian/Axis2D\n     * @extends {module:echarts/coord/cartesian/Axis}\n     * @param {string} dim\n     * @param {*} scale\n     * @param {Array.<number>} coordExtent\n     * @param {string} axisType\n     * @param {string} position\n     */\n    var Axis2D = function (dim, scale, coordExtent, axisType, position) {\n        Axis.call(this, dim, scale, coordExtent);\n        /**\n         * Axis type\n         *  - 'category'\n         *  - 'value'\n         *  - 'time'\n         *  - 'log'\n         * @type {string}\n         */\n        this.type = axisType || 'value';\n\n        /**\n         * Axis position\n         *  - 'top'\n         *  - 'bottom'\n         *  - 'left'\n         *  - 'right'\n         */\n        this.position = position || 'bottom';\n    };\n\n    Axis2D.prototype = {\n\n        constructor: Axis2D,\n\n        /**\n         * Index of axis, can be used as key\n         */\n        index: 0,\n        /**\n         * If axis is on the zero position of the other axis\n         * @type {boolean}\n         */\n        onZero: false,\n\n        /**\n         * Axis model\n         * @param {module:echarts/coord/cartesian/AxisModel}\n         */\n        model: null,\n\n        isHorizontal: function () {\n            var position = this.position;\n            return position === 'top' || position === 'bottom';\n        },\n\n        /**\n         * Each item cooresponds to this.getExtent(), which\n         * means globalExtent[0] may greater than globalExtent[1],\n         * unless `asc` is input.\n         *\n         * @param {boolean} [asc]\n         * @return {Array.<number>}\n         */\n        getGlobalExtent: function (asc) {\n            var ret = this.getExtent();\n            ret[0] = this.toGlobalCoord(ret[0]);\n            ret[1] = this.toGlobalCoord(ret[1]);\n            asc && ret[0] > ret[1] && ret.reverse();\n            return ret;\n        },\n\n        getOtherAxis: function () {\n            this.grid.getOtherAxis();\n        },\n\n        /**\n         * If label is ignored.\n         * Automatically used when axis is category and label can not be all shown\n         * @param  {number}  idx\n         * @return {boolean}\n         */\n        isLabelIgnored: function (idx) {\n            if (this.type === 'category') {\n                var labelInterval = this.getLabelInterval();\n                return ((typeof labelInterval === 'function')\n                    && !labelInterval(idx, this.scale.getLabel(idx)))\n                    || idx % (labelInterval + 1);\n            }\n        },\n\n        /**\n         * @override\n         */\n        pointToData: function (point, clamp) {\n            return this.coordToData(this.toLocalCoord(point[this.dim === 'x' ? 0 : 1]), clamp);\n        },\n\n        /**\n         * Transform global coord to local coord,\n         * i.e. var localCoord = axis.toLocalCoord(80);\n         * designate by module:echarts/coord/cartesian/Grid.\n         * @type {Function}\n         */\n        toLocalCoord: null,\n\n        /**\n         * Transform global coord to local coord,\n         * i.e. var globalCoord = axis.toLocalCoord(40);\n         * designate by module:echarts/coord/cartesian/Grid.\n         * @type {Function}\n         */\n        toGlobalCoord: null\n\n    };\n    zrUtil.inherits(Axis2D, Axis);\n\n    module.exports = Axis2D;\n\n\n/***/ }),\n/* 615 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Cartesian coordinate system\n * @module  echarts/coord/Cartesian\n *\n */\n\n\n    var zrUtil = __webpack_require__(453);\n\n    function dimAxisMapper(dim) {\n        return this._axes[dim];\n    }\n\n    /**\n     * @alias module:echarts/coord/Cartesian\n     * @constructor\n     */\n    var Cartesian = function (name) {\n        this._axes = {};\n\n        this._dimList = [];\n\n        /**\n         * @type {string}\n         */\n        this.name = name || '';\n    };\n\n    Cartesian.prototype = {\n\n        constructor: Cartesian,\n\n        type: 'cartesian',\n\n        /**\n         * Get axis\n         * @param  {number|string} dim\n         * @return {module:echarts/coord/Cartesian~Axis}\n         */\n        getAxis: function (dim) {\n            return this._axes[dim];\n        },\n\n        /**\n         * Get axes list\n         * @return {Array.<module:echarts/coord/Cartesian~Axis>}\n         */\n        getAxes: function () {\n            return zrUtil.map(this._dimList, dimAxisMapper, this);\n        },\n\n        /**\n         * Get axes list by given scale type\n         */\n        getAxesByScale: function (scaleType) {\n            scaleType = scaleType.toLowerCase();\n            return zrUtil.filter(\n                this.getAxes(),\n                function (axis) {\n                    return axis.scale.type === scaleType;\n                }\n            );\n        },\n\n        /**\n         * Add axis\n         * @param {module:echarts/coord/Cartesian.Axis}\n         */\n        addAxis: function (axis) {\n            var dim = axis.dim;\n\n            this._axes[dim] = axis;\n\n            this._dimList.push(dim);\n        },\n\n        /**\n         * Convert data to coord in nd space\n         * @param {Array.<number>|Object.<string, number>} val\n         * @return {Array.<number>|Object.<string, number>}\n         */\n        dataToCoord: function (val) {\n            return this._dataCoordConvert(val, 'dataToCoord');\n        },\n\n        /**\n         * Convert coord in nd space to data\n         * @param  {Array.<number>|Object.<string, number>} val\n         * @return {Array.<number>|Object.<string, number>}\n         */\n        coordToData: function (val) {\n            return this._dataCoordConvert(val, 'coordToData');\n        },\n\n        _dataCoordConvert: function (input, method) {\n            var dimList = this._dimList;\n\n            var output = input instanceof Array ? [] : {};\n\n            for (var i = 0; i < dimList.length; i++) {\n                var dim = dimList[i];\n                var axis = this._axes[dim];\n\n                output[dim] = axis[method](input[dim]);\n            }\n\n            return output;\n        }\n    };\n\n    module.exports = Cartesian;\n\n\n/***/ }),\n/* 616 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(453);\n    var Cartesian = __webpack_require__(615);\n\n    function Cartesian2D(name) {\n\n        Cartesian.call(this, name);\n    }\n\n    Cartesian2D.prototype = {\n\n        constructor: Cartesian2D,\n\n        type: 'cartesian2d',\n\n        /**\n         * @type {Array.<string>}\n         * @readOnly\n         */\n        dimensions: ['x', 'y'],\n\n        /**\n         * Base axis will be used on stacking.\n         *\n         * @return {module:echarts/coord/cartesian/Axis2D}\n         */\n        getBaseAxis: function () {\n            return this.getAxesByScale('ordinal')[0]\n                || this.getAxesByScale('time')[0]\n                || this.getAxis('x');\n        },\n\n        /**\n         * If contain point\n         * @param {Array.<number>} point\n         * @return {boolean}\n         */\n        containPoint: function (point) {\n            var axisX = this.getAxis('x');\n            var axisY = this.getAxis('y');\n            return axisX.contain(axisX.toLocalCoord(point[0]))\n                && axisY.contain(axisY.toLocalCoord(point[1]));\n        },\n\n        /**\n         * If contain data\n         * @param {Array.<number>} data\n         * @return {boolean}\n         */\n        containData: function (data) {\n            return this.getAxis('x').containData(data[0])\n                && this.getAxis('y').containData(data[1]);\n        },\n\n        /**\n         * Convert series data to an array of points\n         * @param {module:echarts/data/List} data\n         * @param {boolean} stack\n         * @return {Array}\n         *  Return array of points. For example:\n         *  `[[10, 10], [20, 20], [30, 30]]`\n         */\n        dataToPoints: function (data, stack) {\n            return data.mapArray(['x', 'y'], function (x, y) {\n                return this.dataToPoint([x, y]);\n            }, stack, this);\n        },\n\n        /**\n         * @param {Array.<number>} data\n         * @param {boolean} [clamp=false]\n         * @return {Array.<number>}\n         */\n        dataToPoint: function (data, clamp) {\n            var xAxis = this.getAxis('x');\n            var yAxis = this.getAxis('y');\n            return [\n                xAxis.toGlobalCoord(xAxis.dataToCoord(data[0], clamp)),\n                yAxis.toGlobalCoord(yAxis.dataToCoord(data[1], clamp))\n            ];\n        },\n\n        /**\n         * @param {Array.<number>} point\n         * @param {boolean} [clamp=false]\n         * @return {Array.<number>}\n         */\n        pointToData: function (point, clamp) {\n            var xAxis = this.getAxis('x');\n            var yAxis = this.getAxis('y');\n            return [\n                xAxis.coordToData(xAxis.toLocalCoord(point[0]), clamp),\n                yAxis.coordToData(yAxis.toLocalCoord(point[1]), clamp)\n            ];\n        },\n\n        /**\n         * Get other axis\n         * @param {module:echarts/coord/cartesian/Axis2D} axis\n         */\n        getOtherAxis: function (axis) {\n            return this.getAxis(axis.dim === 'x' ? 'y' : 'x');\n        }\n\n    };\n\n    zrUtil.inherits(Cartesian2D, Cartesian);\n\n    module.exports = Cartesian2D;\n\n\n/***/ }),\n/* 617 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Grid is a region which contains at most 4 cartesian systems\n *\n * TODO Default cartesian\n */\nvar factory = exports;\n\n    var layout = __webpack_require__(471);\n    var axisHelper = __webpack_require__(472);\n\n    var zrUtil = __webpack_require__(453);\n    var Cartesian2D = __webpack_require__(616);\n    var Axis2D = __webpack_require__(614);\n\n    var each = zrUtil.each;\n\n    var ifAxisCrossZero = axisHelper.ifAxisCrossZero;\n    var niceScaleExtent = axisHelper.niceScaleExtent;\n\n    // 依赖 GridModel, AxisModel 做预处理\n    __webpack_require__(618);\n\n    /**\n     * Check if the axis is used in the specified grid\n     * @inner\n     */\n    function isAxisUsedInTheGrid(axisModel, gridModel, ecModel) {\n        return axisModel.getCoordSysModel() === gridModel;\n    }\n\n    function getLabelUnionRect(axis) {\n        var axisModel = axis.model;\n        var labels = axisModel.getFormattedLabels();\n        var textStyleModel = axisModel.getModel('axisLabel.textStyle');\n        var rect;\n        var step = 1;\n        var labelCount = labels.length;\n        if (labelCount > 40) {\n            // Simple optimization for large amount of labels\n            step = Math.ceil(labelCount / 40);\n        }\n        for (var i = 0; i < labelCount; i += step) {\n            if (!axis.isLabelIgnored(i)) {\n                var singleRect = textStyleModel.getTextRect(labels[i]);\n                // FIXME consider label rotate\n                rect ? rect.union(singleRect) : (rect = singleRect);\n            }\n        }\n        return rect;\n    }\n\n    function Grid(gridModel, ecModel, api) {\n        /**\n         * @type {Object.<string, module:echarts/coord/cartesian/Cartesian2D>}\n         * @private\n         */\n        this._coordsMap = {};\n\n        /**\n         * @type {Array.<module:echarts/coord/cartesian/Cartesian>}\n         * @private\n         */\n        this._coordsList = [];\n\n        /**\n         * @type {Object.<string, module:echarts/coord/cartesian/Axis2D>}\n         * @private\n         */\n        this._axesMap = {};\n\n        /**\n         * @type {Array.<module:echarts/coord/cartesian/Axis2D>}\n         * @private\n         */\n        this._axesList = [];\n\n        this._initCartesian(gridModel, ecModel, api);\n\n        this.model = gridModel;\n    }\n\n    var gridProto = Grid.prototype;\n\n    gridProto.type = 'grid';\n\n    gridProto.axisPointerEnabled = true;\n\n    gridProto.getRect = function () {\n        return this._rect;\n    };\n\n    gridProto.update = function (ecModel, api) {\n\n        var axesMap = this._axesMap;\n\n        this._updateScale(ecModel, this.model);\n\n        function ifAxisCanNotOnZero(otherAxisDim) {\n            var axes = axesMap[otherAxisDim];\n            for (var idx in axes) {\n                if (axes.hasOwnProperty(idx)) {\n                    var axis = axes[idx];\n                    if (axis && (\n                        axis.type === 'category' || axis.type === 'time' || !ifAxisCrossZero(axis)\n                    )) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        }\n\n        each(axesMap.x, function (xAxis) {\n            niceScaleExtent(xAxis.scale, xAxis.model);\n        });\n        each(axesMap.y, function (yAxis) {\n            niceScaleExtent(yAxis.scale, yAxis.model);\n        });\n        // Fix configuration\n        each(axesMap.x, function (xAxis) {\n            // onZero can not be enabled in these two situations\n            // 1. When any other axis is a category axis\n            // 2. When any other axis not across 0 point\n            if (ifAxisCanNotOnZero('y')) {\n                xAxis.onZero = false;\n            }\n        });\n        each(axesMap.y, function (yAxis) {\n            if (ifAxisCanNotOnZero('x')) {\n                yAxis.onZero = false;\n            }\n        });\n\n        // Resize again if containLabel is enabled\n        // FIXME It may cause getting wrong grid size in data processing stage\n        this.resize(this.model, api);\n    };\n\n    /**\n     * Resize the grid\n     * @param {module:echarts/coord/cartesian/GridModel} gridModel\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    gridProto.resize = function (gridModel, api, ignoreContainLabel) {\n\n        var gridRect = layout.getLayoutRect(\n            gridModel.getBoxLayoutParams(), {\n                width: api.getWidth(),\n                height: api.getHeight()\n            });\n\n        this._rect = gridRect;\n\n        var axesList = this._axesList;\n\n        adjustAxes();\n\n        // Minus label size\n        if (!ignoreContainLabel && gridModel.get('containLabel')) {\n            each(axesList, function (axis) {\n                if (!axis.model.get('axisLabel.inside')) {\n                    var labelUnionRect = getLabelUnionRect(axis);\n                    if (labelUnionRect) {\n                        var dim = axis.isHorizontal() ? 'height' : 'width';\n                        var margin = axis.model.get('axisLabel.margin');\n                        gridRect[dim] -= labelUnionRect[dim] + margin;\n                        if (axis.position === 'top') {\n                            gridRect.y += labelUnionRect.height + margin;\n                        }\n                        else if (axis.position === 'left')  {\n                            gridRect.x += labelUnionRect.width + margin;\n                        }\n                    }\n                }\n            });\n\n            adjustAxes();\n        }\n\n        function adjustAxes() {\n            each(axesList, function (axis) {\n                var isHorizontal = axis.isHorizontal();\n                var extent = isHorizontal ? [0, gridRect.width] : [0, gridRect.height];\n                var idx = axis.inverse ? 1 : 0;\n                axis.setExtent(extent[idx], extent[1 - idx]);\n                updateAxisTransfrom(axis, isHorizontal ? gridRect.x : gridRect.y);\n            });\n        }\n    };\n\n    /**\n     * @param {string} axisType\n     * @param {ndumber} [axisIndex]\n     */\n    gridProto.getAxis = function (axisType, axisIndex) {\n        var axesMapOnDim = this._axesMap[axisType];\n        if (axesMapOnDim != null) {\n            if (axisIndex == null) {\n                // Find first axis\n                for (var name in axesMapOnDim) {\n                    if (axesMapOnDim.hasOwnProperty(name)) {\n                        return axesMapOnDim[name];\n                    }\n                }\n            }\n            return axesMapOnDim[axisIndex];\n        }\n    };\n\n    /**\n     * @return {Array.<module:echarts/coord/Axis>}\n     */\n    gridProto.getAxes = function () {\n        return this._axesList.slice();\n    };\n\n    /**\n     * Usage:\n     *      grid.getCartesian(xAxisIndex, yAxisIndex);\n     *      grid.getCartesian(xAxisIndex);\n     *      grid.getCartesian(null, yAxisIndex);\n     *      grid.getCartesian({xAxisIndex: ..., yAxisIndex: ...});\n     *\n     * @param {number|Object} [xAxisIndex]\n     * @param {number} [yAxisIndex]\n     */\n    gridProto.getCartesian = function (xAxisIndex, yAxisIndex) {\n        if (xAxisIndex != null && yAxisIndex != null) {\n            var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n            return this._coordsMap[key];\n        }\n\n        if (zrUtil.isObject(xAxisIndex)) {\n            yAxisIndex = xAxisIndex.yAxisIndex;\n            xAxisIndex = xAxisIndex.xAxisIndex;\n        }\n        // When only xAxisIndex or yAxisIndex given, find its first cartesian.\n        for (var i = 0, coordList = this._coordsList; i < coordList.length; i++) {\n            if (coordList[i].getAxis('x').index === xAxisIndex\n                || coordList[i].getAxis('y').index === yAxisIndex\n            ) {\n                return coordList[i];\n            }\n        }\n    };\n\n    gridProto.getCartesians = function () {\n        return this._coordsList.slice();\n    };\n\n    /**\n     * @implements\n     * see {module:echarts/CoodinateSystem}\n     */\n    gridProto.convertToPixel = function (ecModel, finder, value) {\n        var target = this._findConvertTarget(ecModel, finder);\n\n        return target.cartesian\n            ? target.cartesian.dataToPoint(value)\n            : target.axis\n            ? target.axis.toGlobalCoord(target.axis.dataToCoord(value))\n            : null;\n    };\n\n    /**\n     * @implements\n     * see {module:echarts/CoodinateSystem}\n     */\n    gridProto.convertFromPixel = function (ecModel, finder, value) {\n        var target = this._findConvertTarget(ecModel, finder);\n\n        return target.cartesian\n            ? target.cartesian.pointToData(value)\n            : target.axis\n            ? target.axis.coordToData(target.axis.toLocalCoord(value))\n            : null;\n    };\n\n    /**\n     * @inner\n     */\n    gridProto._findConvertTarget = function (ecModel, finder) {\n        var seriesModel = finder.seriesModel;\n        var xAxisModel = finder.xAxisModel\n            || (seriesModel && seriesModel.getReferringComponents('xAxis')[0]);\n        var yAxisModel = finder.yAxisModel\n            || (seriesModel && seriesModel.getReferringComponents('yAxis')[0]);\n        var gridModel = finder.gridModel;\n        var coordsList = this._coordsList;\n        var cartesian;\n        var axis;\n\n        if (seriesModel) {\n            cartesian = seriesModel.coordinateSystem;\n            zrUtil.indexOf(coordsList, cartesian) < 0 && (cartesian = null);\n        }\n        else if (xAxisModel && yAxisModel) {\n            cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n        }\n        else if (xAxisModel) {\n            axis = this.getAxis('x', xAxisModel.componentIndex);\n        }\n        else if (yAxisModel) {\n            axis = this.getAxis('y', yAxisModel.componentIndex);\n        }\n        // Lowest priority.\n        else if (gridModel) {\n            var grid = gridModel.coordinateSystem;\n            if (grid === this) {\n                cartesian = this._coordsList[0];\n            }\n        }\n\n        return {cartesian: cartesian, axis: axis};\n    };\n\n    /**\n     * @implements\n     * see {module:echarts/CoodinateSystem}\n     */\n    gridProto.containPoint = function (point) {\n        var coord = this._coordsList[0];\n        if (coord) {\n            return coord.containPoint(point);\n        }\n    };\n\n    /**\n     * Initialize cartesian coordinate systems\n     * @private\n     */\n    gridProto._initCartesian = function (gridModel, ecModel, api) {\n        var axisPositionUsed = {\n            left: false,\n            right: false,\n            top: false,\n            bottom: false\n        };\n\n        var axesMap = {\n            x: {},\n            y: {}\n        };\n        var axesCount = {\n            x: 0,\n            y: 0\n        };\n\n        /// Create axis\n        ecModel.eachComponent('xAxis', createAxisCreator('x'), this);\n        ecModel.eachComponent('yAxis', createAxisCreator('y'), this);\n\n        if (!axesCount.x || !axesCount.y) {\n            // Roll back when there no either x or y axis\n            this._axesMap = {};\n            this._axesList = [];\n            return;\n        }\n\n        this._axesMap = axesMap;\n\n        /// Create cartesian2d\n        each(axesMap.x, function (xAxis, xAxisIndex) {\n            each(axesMap.y, function (yAxis, yAxisIndex) {\n                var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n                var cartesian = new Cartesian2D(key);\n\n                cartesian.grid = this;\n                cartesian.model = gridModel;\n\n                this._coordsMap[key] = cartesian;\n                this._coordsList.push(cartesian);\n\n                cartesian.addAxis(xAxis);\n                cartesian.addAxis(yAxis);\n            }, this);\n        }, this);\n\n        function createAxisCreator(axisType) {\n            return function (axisModel, idx) {\n                if (!isAxisUsedInTheGrid(axisModel, gridModel, ecModel)) {\n                    return;\n                }\n\n                var axisPosition = axisModel.get('position');\n                if (axisType === 'x') {\n                    // Fix position\n                    if (axisPosition !== 'top' && axisPosition !== 'bottom') {\n                        // Default bottom of X\n                        axisPosition = 'bottom';\n                        if (axisPositionUsed[axisPosition]) {\n                            axisPosition = axisPosition === 'top' ? 'bottom' : 'top';\n                        }\n                    }\n                }\n                else {\n                    // Fix position\n                    if (axisPosition !== 'left' && axisPosition !== 'right') {\n                        // Default left of Y\n                        axisPosition = 'left';\n                        if (axisPositionUsed[axisPosition]) {\n                            axisPosition = axisPosition === 'left' ? 'right' : 'left';\n                        }\n                    }\n                }\n                axisPositionUsed[axisPosition] = true;\n\n                var axis = new Axis2D(\n                    axisType, axisHelper.createScaleByModel(axisModel),\n                    [0, 0],\n                    axisModel.get('type'),\n                    axisPosition\n                );\n\n                var isCategory = axis.type === 'category';\n                axis.onBand = isCategory && axisModel.get('boundaryGap');\n                axis.inverse = axisModel.get('inverse');\n\n                axis.onZero = axisModel.get('axisLine.onZero');\n\n                // Inject axis into axisModel\n                axisModel.axis = axis;\n\n                // Inject axisModel into axis\n                axis.model = axisModel;\n\n                // Inject grid info axis\n                axis.grid = this;\n\n                // Index of axis, can be used as key\n                axis.index = idx;\n\n                this._axesList.push(axis);\n\n                axesMap[axisType][idx] = axis;\n                axesCount[axisType]++;\n            };\n        }\n    };\n\n    /**\n     * Update cartesian properties from series\n     * @param  {module:echarts/model/Option} option\n     * @private\n     */\n    gridProto._updateScale = function (ecModel, gridModel) {\n        // Reset scale\n        zrUtil.each(this._axesList, function (axis) {\n            axis.scale.setExtent(Infinity, -Infinity);\n        });\n        ecModel.eachSeries(function (seriesModel) {\n            if (isCartesian2D(seriesModel)) {\n                var axesModels = findAxesModels(seriesModel, ecModel);\n                var xAxisModel = axesModels[0];\n                var yAxisModel = axesModels[1];\n\n                if (!isAxisUsedInTheGrid(xAxisModel, gridModel, ecModel)\n                    || !isAxisUsedInTheGrid(yAxisModel, gridModel, ecModel)\n                 ) {\n                    return;\n                }\n\n                var cartesian = this.getCartesian(\n                    xAxisModel.componentIndex, yAxisModel.componentIndex\n                );\n                var data = seriesModel.getData();\n                var xAxis = cartesian.getAxis('x');\n                var yAxis = cartesian.getAxis('y');\n\n                if (data.type === 'list') {\n                    unionExtent(data, xAxis, seriesModel);\n                    unionExtent(data, yAxis, seriesModel);\n                }\n            }\n        }, this);\n\n        function unionExtent(data, axis, seriesModel) {\n            each(seriesModel.coordDimToDataDim(axis.dim), function (dim) {\n                axis.scale.unionExtentFromData(data, dim);\n            });\n        }\n    };\n\n    /**\n     * @param {string} [dim] 'x' or 'y' or 'auto' or null/undefined\n     * @return {Object} {baseAxes: [], otherAxes: []}\n     */\n    gridProto.getTooltipAxes = function (dim) {\n        var baseAxes = [];\n        var otherAxes = [];\n\n        each(this.getCartesians(), function (cartesian) {\n            var baseAxis = (dim != null && dim !== 'auto')\n                ? cartesian.getAxis(dim) : cartesian.getBaseAxis();\n            var otherAxis = cartesian.getOtherAxis(baseAxis);\n            zrUtil.indexOf(baseAxes, baseAxis) < 0 && baseAxes.push(baseAxis);\n            zrUtil.indexOf(otherAxes, otherAxis) < 0 && otherAxes.push(otherAxis);\n        });\n\n        return {baseAxes: baseAxes, otherAxes: otherAxes};\n    };\n\n    /**\n     * @inner\n     */\n    function updateAxisTransfrom(axis, coordBase) {\n        var axisExtent = axis.getExtent();\n        var axisExtentSum = axisExtent[0] + axisExtent[1];\n\n        // Fast transform\n        axis.toGlobalCoord = axis.dim === 'x'\n            ? function (coord) {\n                return coord + coordBase;\n            }\n            : function (coord) {\n                return axisExtentSum - coord + coordBase;\n            };\n        axis.toLocalCoord = axis.dim === 'x'\n            ? function (coord) {\n                return coord - coordBase;\n            }\n            : function (coord) {\n                return axisExtentSum - coord + coordBase;\n            };\n    }\n\n    var axesTypes = ['xAxis', 'yAxis'];\n    /**\n     * @inner\n     */\n    function findAxesModels(seriesModel, ecModel) {\n        return zrUtil.map(axesTypes, function (axisType) {\n            var axisModel = seriesModel.getReferringComponents(axisType)[0];\n\n            if (__DEV__) {\n                if (!axisModel) {\n                    throw new Error(axisType + ' \"' + zrUtil.retrieve(\n                        seriesModel.get(axisType + 'Index'),\n                        seriesModel.get(axisType + 'Id'),\n                        0\n                    ) + '\" not found');\n                }\n            }\n            return axisModel;\n        });\n    }\n\n    /**\n     * @inner\n     */\n    function isCartesian2D(seriesModel) {\n        return seriesModel.get('coordinateSystem') === 'cartesian2d';\n    }\n\n    Grid.create = function (ecModel, api) {\n        var grids = [];\n        ecModel.eachComponent('grid', function (gridModel, idx) {\n            var grid = new Grid(gridModel, ecModel, api);\n            grid.name = 'grid_' + idx;\n            // dataSampling requires axis extent, so resize\n            // should be performed in create stage.\n            grid.resize(gridModel, api, true);\n\n            gridModel.coordinateSystem = grid;\n\n            grids.push(grid);\n        });\n\n        // Inject the coordinateSystems into seriesModel\n        ecModel.eachSeries(function (seriesModel) {\n            if (!isCartesian2D(seriesModel)) {\n                return;\n            }\n\n            var axesModels = findAxesModels(seriesModel, ecModel);\n            var xAxisModel = axesModels[0];\n            var yAxisModel = axesModels[1];\n\n            var gridModel = xAxisModel.getCoordSysModel();\n\n            if (__DEV__) {\n                if (!gridModel) {\n                    throw new Error(\n                        'Grid \"' + zrUtil.retrieve(\n                            xAxisModel.get('gridIndex'),\n                            xAxisModel.get('gridId'),\n                            0\n                        ) + '\" not found'\n                    );\n                }\n                if (xAxisModel.getCoordSysModel() !== yAxisModel.getCoordSysModel()) {\n                    throw new Error('xAxis and yAxis must use the same grid');\n                }\n            }\n\n            var grid = gridModel.coordinateSystem;\n\n            seriesModel.coordinateSystem = grid.getCartesian(\n                xAxisModel.componentIndex, yAxisModel.componentIndex\n            );\n        });\n\n        return grids;\n    };\n\n    // For deciding which dimensions to use when creating list data\n    Grid.dimensions = Grid.prototype.dimensions = Cartesian2D.prototype.dimensions;\n\n    __webpack_require__(495).register('cartesian2d', Grid);\n\n    module.exports = Grid;\n\n\n/***/ }),\n/* 618 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// Grid 是在有直角坐标系的时候必须要存在的\n// 所以这里也要被 Cartesian2D 依赖\n\n\n    __webpack_require__(529);\n\n    var ComponentModel = __webpack_require__(469);\n\n    module.exports = ComponentModel.extend({\n\n        type: 'grid',\n\n        dependencies: ['xAxis', 'yAxis'],\n\n        layoutMode: 'box',\n\n        /**\n         * @type {module:echarts/coord/cartesian/Grid}\n         */\n        coordinateSystem: null,\n\n        defaultOption: {\n            show: false,\n            zlevel: 0,\n            z: 0,\n            left: '10%',\n            top: 60,\n            right: '10%',\n            bottom: 60,\n            // If grid size contain label\n            containLabel: false,\n            // width: {totalWidth} - left - right,\n            // height: {totalHeight} - top - bottom,\n            backgroundColor: 'rgba(0,0,0,0)',\n            borderWidth: 1,\n            borderColor: '#ccc'\n        }\n    });\n\n\n/***/ }),\n/* 619 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    function defaultKeyGetter(item) {\n        return item;\n    }\n\n    function DataDiffer(oldArr, newArr, oldKeyGetter, newKeyGetter) {\n        this._old = oldArr;\n        this._new = newArr;\n\n        this._oldKeyGetter = oldKeyGetter || defaultKeyGetter;\n        this._newKeyGetter = newKeyGetter || defaultKeyGetter;\n    }\n\n    DataDiffer.prototype = {\n\n        constructor: DataDiffer,\n\n        /**\n         * Callback function when add a data\n         */\n        add: function (func) {\n            this._add = func;\n            return this;\n        },\n\n        /**\n         * Callback function when update a data\n         */\n        update: function (func) {\n            this._update = func;\n            return this;\n        },\n\n        /**\n         * Callback function when remove a data\n         */\n        remove: function (func) {\n            this._remove = func;\n            return this;\n        },\n\n        execute: function () {\n            var oldArr = this._old;\n            var newArr = this._new;\n            var oldKeyGetter = this._oldKeyGetter;\n            var newKeyGetter = this._newKeyGetter;\n\n            var oldDataIndexMap = {};\n            var newDataIndexMap = {};\n            var oldDataKeyArr = [];\n            var newDataKeyArr = [];\n            var i;\n\n            initIndexMap(oldArr, oldDataIndexMap, oldDataKeyArr, oldKeyGetter);\n            initIndexMap(newArr, newDataIndexMap, newDataKeyArr, newKeyGetter);\n\n            // Travel by inverted order to make sure order consistency\n            // when duplicate keys exists (consider newDataIndex.pop() below).\n            // For performance consideration, these code below do not look neat.\n            for (i = 0; i < oldArr.length; i++) {\n                var key = oldDataKeyArr[i];\n                var idx = newDataIndexMap[key];\n\n                // idx can never be empty array here. see 'set null' logic below.\n                if (idx != null) {\n                    // Consider there is duplicate key (for example, use dataItem.name as key).\n                    // We should make sure every item in newArr and oldArr can be visited.\n                    var len = idx.length;\n                    if (len) {\n                        len === 1 && (newDataIndexMap[key] = null);\n                        idx = idx.unshift();\n                    }\n                    else {\n                        newDataIndexMap[key] = null;\n                    }\n                    this._update && this._update(idx, i);\n                }\n                else {\n                    this._remove && this._remove(i);\n                }\n            }\n\n            for (var i = 0; i < newDataKeyArr.length; i++) {\n                var key = newDataKeyArr[i];\n                if (newDataIndexMap.hasOwnProperty(key)) {\n                    var idx = newDataIndexMap[key];\n                    if (idx == null) {\n                        continue;\n                    }\n                    // idx can never be empty array here. see 'set null' logic above.\n                    if (!idx.length) {\n                        this._add && this._add(idx);\n                    }\n                    else {\n                        for (var j = 0, len = idx.length; j < len; j++) {\n                            this._add && this._add(idx[j]);\n                        }\n                    }\n                }\n            }\n        }\n    };\n\n    function initIndexMap(arr, map, keyArr, keyGetter) {\n        for (var i = 0; i < arr.length; i++) {\n            // Add prefix to avoid conflict with Object.prototype.\n            var key = '_ec_' + keyGetter(arr[i], i);\n            var existence = map[key];\n            if (existence == null) {\n                keyArr.push(key);\n                map[key] = i;\n            }\n            else {\n                if (!existence.length) {\n                    map[key] = existence = [existence];\n                }\n                existence.push(i);\n            }\n        }\n    }\n\n    module.exports = DataDiffer;\n\n\n/***/ }),\n/* 620 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var createListFromArray = __webpack_require__(519);\n    var symbolUtil = __webpack_require__(512);\n    var axisHelper = __webpack_require__(472);\n    var axisModelCommonMixin = __webpack_require__(528);\n    var Model = __webpack_require__(463);\n    var util = __webpack_require__(453);\n\n    module.exports = {\n        /**\n         * Create a muti dimension List structure from seriesModel.\n         * @param  {module:echarts/model/Model} seriesModel\n         * @return {module:echarts/data/List} list\n         */\n        createList: function (seriesModel) {\n            var data = seriesModel.get('data');\n            return createListFromArray(data, seriesModel, seriesModel.ecModel);\n        },\n\n        /**\n         * @see {module:echarts/data/helper/completeDimensions}\n         */\n        completeDimensions: __webpack_require__(531),\n\n        /**\n         * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n         * @see http://echarts.baidu.com/option.html#series-scatter.symbol\n         * @param {string} symbolDesc\n         * @param {number} x\n         * @param {number} y\n         * @param {number} w\n         * @param {number} h\n         * @param {string} color\n         */\n        createSymbol: symbolUtil.createSymbol,\n\n        /**\n         * Create scale\n         * @param {Array.<number>} dataExtent\n         * @param {Object|module:echarts/Model} option\n         */\n        createScale: function (dataExtent, option) {\n            var axisModel = option;\n            if (!(option instanceof Model)) {\n                axisModel = new Model(option);\n                util.mixin(axisModel, axisModelCommonMixin);\n            }\n\n            var scale = axisHelper.createScaleByModel(axisModel);\n            scale.setExtent(dataExtent[0], dataExtent[1]);\n\n            axisHelper.niceScaleExtent(scale, axisModel);\n            return scale;\n        },\n\n        /**\n         * Mixin common methods to axis model,\n         *\n         * Inlcude methods\n         * `getFormattedLabels() => Array.<string>`\n         * `getCategories() => Array.<string>`\n         * `getMin(origin: boolean) => number`\n         * `getMax(origin: boolean) => number`\n         * `getNeedCrossZero() => boolean`\n         * `setRange(start: number, end: number)`\n         * `resetRange()`\n         */\n        mixinAxisModelCommonMethods: function (Model) {\n            util.mixin(Model, axisModelCommonMixin);\n        }\n    };\n\n\n/***/ }),\n/* 621 */\n/***/ (function(module, exports) {\n\n\n\n    module.exports = function (seriesType, ecModel) {\n        ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n            var data = seriesModel.getData();\n            var coordSys = seriesModel.coordinateSystem;\n\n            if (!coordSys) {\n                return;\n            }\n\n            var dims = [];\n            var coordDims = coordSys.dimensions;\n            for (var i = 0; i < coordDims.length; i++) {\n                dims.push(seriesModel.coordDimToDataDim(coordSys.dimensions[i])[0]);\n            }\n\n            if (dims.length === 1) {\n                data.each(dims[0], function (x, idx) {\n                    // Also {Array.<number>}, not undefined to avoid if...else... statement\n                    data.setItemLayout(idx, isNaN(x) ? [NaN, NaN] : coordSys.dataToPoint(x));\n                });\n            }\n            else if (dims.length === 2) {\n                data.each(dims, function (x, y, idx) {\n                    // Also {Array.<number>}, not undefined to avoid if...else... statement\n                    data.setItemLayout(\n                        idx, (isNaN(x) || isNaN(y)) ? [NaN, NaN] : coordSys.dataToPoint([x, y])\n                    );\n                }, true);\n            }\n        });\n    };\n\n\n\n/***/ }),\n/* 622 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var graphic = __webpack_require__(454);\n    var zrUtil = __webpack_require__(453);\n    var PI = Math.PI;\n    /**\n     * @param {module:echarts/ExtensionAPI} api\n     * @param {Object} [opts]\n     * @param {string} [opts.text]\n     * @param {string} [opts.color]\n     * @param {string} [opts.textColor]\n     * @return {module:zrender/Element}\n     */\n    module.exports = function (api, opts) {\n        opts = opts || {};\n        zrUtil.defaults(opts, {\n            text: 'loading',\n            color: '#c23531',\n            textColor: '#000',\n            maskColor: 'rgba(255, 255, 255, 0.8)',\n            zlevel: 0\n        });\n        var mask = new graphic.Rect({\n            style: {\n                fill: opts.maskColor\n            },\n            zlevel: opts.zlevel,\n            z: 10000\n        });\n        var arc = new graphic.Arc({\n            shape: {\n                startAngle: -PI / 2,\n                endAngle: -PI / 2 + 0.1,\n                r: 10\n            },\n            style: {\n                stroke: opts.color,\n                lineCap: 'round',\n                lineWidth: 5\n            },\n            zlevel: opts.zlevel,\n            z: 10001\n        });\n        var labelRect = new graphic.Rect({\n            style: {\n                fill: 'none',\n                text: opts.text,\n                textPosition: 'right',\n                textDistance: 10,\n                textFill: opts.textColor\n            },\n            zlevel: opts.zlevel,\n            z: 10001\n        });\n\n        arc.animateShape(true)\n            .when(1000, {\n                endAngle: PI * 3 / 2\n            })\n            .start('circularInOut');\n        arc.animateShape(true)\n            .when(1000, {\n                startAngle: PI * 3 / 2\n            })\n            .delay(300)\n            .start('circularInOut');\n\n        var group = new graphic.Group();\n        group.add(arc);\n        group.add(labelRect);\n        group.add(mask);\n        // Inject resize\n        group.resize = function () {\n            var cx = api.getWidth() / 2;\n            var cy = api.getHeight() / 2;\n            arc.setShape({\n                cx: cx,\n                cy: cy\n            });\n            var r = arc.shape.r;\n            labelRect.setShape({\n                x: cx - r,\n                y: cy - r,\n                width: r * 2,\n                height: r * 2\n            });\n\n            mask.setShape({\n                x: 0,\n                y: 0,\n                width: api.getWidth(),\n                height: api.getHeight()\n            });\n        };\n        group.resize();\n        return group;\n    };\n\n\n/***/ }),\n/* 623 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * ECharts global model\n *\n * @module {echarts/model/Global}\n */\n\n\n\n    /**\n     * Caution: If the mechanism should be changed some day, these cases\n     * should be considered:\n     *\n     * (1) In `merge option` mode, if using the same option to call `setOption`\n     * many times, the result should be the same (try our best to ensure that).\n     * (2) In `merge option` mode, if a component has no id/name specified, it\n     * will be merged by index, and the result sequence of the components is\n     * consistent to the original sequence.\n     * (3) `reset` feature (in toolbox). Find detailed info in comments about\n     * `mergeOption` in module:echarts/model/OptionManager.\n     */\n\n    var zrUtil = __webpack_require__(453);\n    var modelUtil = __webpack_require__(456);\n    var Model = __webpack_require__(463);\n    var each = zrUtil.each;\n    var filter = zrUtil.filter;\n    var map = zrUtil.map;\n    var isArray = zrUtil.isArray;\n    var indexOf = zrUtil.indexOf;\n    var isObject = zrUtil.isObject;\n\n    var ComponentModel = __webpack_require__(469);\n\n    var globalDefault = __webpack_require__(625);\n\n    var OPTION_INNER_KEY = '\\0_ec_inner';\n\n    /**\n     * @alias module:echarts/model/Global\n     *\n     * @param {Object} option\n     * @param {module:echarts/model/Model} parentModel\n     * @param {Object} theme\n     */\n    var GlobalModel = Model.extend({\n\n        constructor: GlobalModel,\n\n        init: function (option, parentModel, theme, optionManager) {\n            theme = theme || {};\n\n            this.option = null; // Mark as not initialized.\n\n            /**\n             * @type {module:echarts/model/Model}\n             * @private\n             */\n            this._theme = new Model(theme);\n\n            /**\n             * @type {module:echarts/model/OptionManager}\n             */\n            this._optionManager = optionManager;\n        },\n\n        setOption: function (option, optionPreprocessorFuncs) {\n            zrUtil.assert(\n                !(OPTION_INNER_KEY in option),\n                'please use chart.getOption()'\n            );\n\n            this._optionManager.setOption(option, optionPreprocessorFuncs);\n\n            this.resetOption(null);\n        },\n\n        /**\n         * @param {string} type null/undefined: reset all.\n         *                      'recreate': force recreate all.\n         *                      'timeline': only reset timeline option\n         *                      'media': only reset media query option\n         * @return {boolean} Whether option changed.\n         */\n        resetOption: function (type) {\n            var optionChanged = false;\n            var optionManager = this._optionManager;\n\n            if (!type || type === 'recreate') {\n                var baseOption = optionManager.mountOption(type === 'recreate');\n\n                if (!this.option || type === 'recreate') {\n                    initBase.call(this, baseOption);\n                }\n                else {\n                    this.restoreData();\n                    this.mergeOption(baseOption);\n                }\n                optionChanged = true;\n            }\n\n            if (type === 'timeline' || type === 'media') {\n                this.restoreData();\n            }\n\n            if (!type || type === 'recreate' || type === 'timeline') {\n                var timelineOption = optionManager.getTimelineOption(this);\n                timelineOption && (this.mergeOption(timelineOption), optionChanged = true);\n            }\n\n            if (!type || type === 'recreate' || type === 'media') {\n                var mediaOptions = optionManager.getMediaOption(this, this._api);\n                if (mediaOptions.length) {\n                    each(mediaOptions, function (mediaOption) {\n                        this.mergeOption(mediaOption, optionChanged = true);\n                    }, this);\n                }\n            }\n\n            return optionChanged;\n        },\n\n        /**\n         * @protected\n         */\n        mergeOption: function (newOption) {\n            var option = this.option;\n            var componentsMap = this._componentsMap;\n            var newCptTypes = [];\n\n            // 如果不存在对应的 component model 则直接 merge\n            each(newOption, function (componentOption, mainType) {\n                if (componentOption == null) {\n                    return;\n                }\n\n                if (!ComponentModel.hasClass(mainType)) {\n                    option[mainType] = option[mainType] == null\n                        ? zrUtil.clone(componentOption)\n                        : zrUtil.merge(option[mainType], componentOption, true);\n                }\n                else {\n                    newCptTypes.push(mainType);\n                }\n            });\n\n            // FIXME OPTION 同步是否要改回原来的\n            ComponentModel.topologicalTravel(\n                newCptTypes, ComponentModel.getAllClassMainTypes(), visitComponent, this\n            );\n\n            this._seriesIndices = this._seriesIndices || [];\n\n            function visitComponent(mainType, dependencies) {\n                var newCptOptionList = modelUtil.normalizeToArray(newOption[mainType]);\n\n                var mapResult = modelUtil.mappingToExists(\n                    componentsMap.get(mainType), newCptOptionList\n                );\n\n                modelUtil.makeIdAndName(mapResult);\n\n                // Set mainType and complete subType.\n                each(mapResult, function (item, index) {\n                    var opt = item.option;\n                    if (isObject(opt)) {\n                        item.keyInfo.mainType = mainType;\n                        item.keyInfo.subType = determineSubType(mainType, opt, item.exist);\n                    }\n                });\n\n                var dependentModels = getComponentsByTypes(\n                    componentsMap, dependencies\n                );\n\n                option[mainType] = [];\n                componentsMap.set(mainType, []);\n\n                each(mapResult, function (resultItem, index) {\n                    var componentModel = resultItem.exist;\n                    var newCptOption = resultItem.option;\n\n                    zrUtil.assert(\n                        isObject(newCptOption) || componentModel,\n                        'Empty component definition'\n                    );\n\n                    // Consider where is no new option and should be merged using {},\n                    // see removeEdgeAndAdd in topologicalTravel and\n                    // ComponentModel.getAllClassMainTypes.\n                    if (!newCptOption) {\n                        componentModel.mergeOption({}, this);\n                        componentModel.optionUpdated({}, false);\n                    }\n                    else {\n                        var ComponentModelClass = ComponentModel.getClass(\n                            mainType, resultItem.keyInfo.subType, true\n                        );\n\n                        if (componentModel && componentModel instanceof ComponentModelClass) {\n                            componentModel.name = resultItem.keyInfo.name;\n                            componentModel.mergeOption(newCptOption, this);\n                            componentModel.optionUpdated(newCptOption, false);\n                        }\n                        else {\n                            // PENDING Global as parent ?\n                            var extraOpt = zrUtil.extend(\n                                {\n                                    dependentModels: dependentModels,\n                                    componentIndex: index\n                                },\n                                resultItem.keyInfo\n                            );\n                            componentModel = new ComponentModelClass(\n                                newCptOption, this, this, extraOpt\n                            );\n                            zrUtil.extend(componentModel, extraOpt);\n                            componentModel.init(newCptOption, this, this, extraOpt);\n                            // Call optionUpdated after init.\n                            // newCptOption has been used as componentModel.option\n                            // and may be merged with theme and default, so pass null\n                            // to avoid confusion.\n                            componentModel.optionUpdated(null, true);\n                        }\n                    }\n\n                    componentsMap.get(mainType)[index] = componentModel;\n                    option[mainType][index] = componentModel.option;\n                }, this);\n\n                // Backup series for filtering.\n                if (mainType === 'series') {\n                    this._seriesIndices = createSeriesIndices(componentsMap.get('series'));\n                }\n            }\n        },\n\n        /**\n         * Get option for output (cloned option and inner info removed)\n         * @public\n         * @return {Object}\n         */\n        getOption: function () {\n            var option = zrUtil.clone(this.option);\n\n            each(option, function (opts, mainType) {\n                if (ComponentModel.hasClass(mainType)) {\n                    var opts = modelUtil.normalizeToArray(opts);\n                    for (var i = opts.length - 1; i >= 0; i--) {\n                        // Remove options with inner id.\n                        if (modelUtil.isIdInner(opts[i])) {\n                            opts.splice(i, 1);\n                        }\n                    }\n                    option[mainType] = opts;\n                }\n            });\n\n            delete option[OPTION_INNER_KEY];\n\n            return option;\n        },\n\n        /**\n         * @return {module:echarts/model/Model}\n         */\n        getTheme: function () {\n            return this._theme;\n        },\n\n        /**\n         * @param {string} mainType\n         * @param {number} [idx=0]\n         * @return {module:echarts/model/Component}\n         */\n        getComponent: function (mainType, idx) {\n            var list = this._componentsMap.get(mainType);\n            if (list) {\n                return list[idx || 0];\n            }\n        },\n\n        /**\n         * If none of index and id and name used, return all components with mainType.\n         * @param {Object} condition\n         * @param {string} condition.mainType\n         * @param {string} [condition.subType] If ignore, only query by mainType\n         * @param {number|Array.<number>} [condition.index] Either input index or id or name.\n         * @param {string|Array.<string>} [condition.id] Either input index or id or name.\n         * @param {string|Array.<string>} [condition.name] Either input index or id or name.\n         * @return {Array.<module:echarts/model/Component>}\n         */\n        queryComponents: function (condition) {\n            var mainType = condition.mainType;\n            if (!mainType) {\n                return [];\n            }\n\n            var index = condition.index;\n            var id = condition.id;\n            var name = condition.name;\n\n            var cpts = this._componentsMap.get(mainType);\n\n            if (!cpts || !cpts.length) {\n                return [];\n            }\n\n            var result;\n\n            if (index != null) {\n                if (!isArray(index)) {\n                    index = [index];\n                }\n                result = filter(map(index, function (idx) {\n                    return cpts[idx];\n                }), function (val) {\n                    return !!val;\n                });\n            }\n            else if (id != null) {\n                var isIdArray = isArray(id);\n                result = filter(cpts, function (cpt) {\n                    return (isIdArray && indexOf(id, cpt.id) >= 0)\n                        || (!isIdArray && cpt.id === id);\n                });\n            }\n            else if (name != null) {\n                var isNameArray = isArray(name);\n                result = filter(cpts, function (cpt) {\n                    return (isNameArray && indexOf(name, cpt.name) >= 0)\n                        || (!isNameArray && cpt.name === name);\n                });\n            }\n            else {\n                // Return all components with mainType\n                result = cpts.slice();\n            }\n\n            return filterBySubType(result, condition);\n        },\n\n        /**\n         * The interface is different from queryComponents,\n         * which is convenient for inner usage.\n         *\n         * @usage\n         * var result = findComponents(\n         *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}}\n         * );\n         * var result = findComponents(\n         *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}}\n         * );\n         * var result = findComponents(\n         *     {mainType: 'series'},\n         *     function (model, index) {...}\n         * );\n         * // result like [component0, componnet1, ...]\n         *\n         * @param {Object} condition\n         * @param {string} condition.mainType Mandatory.\n         * @param {string} [condition.subType] Optional.\n         * @param {Object} [condition.query] like {xxxIndex, xxxId, xxxName},\n         *        where xxx is mainType.\n         *        If query attribute is null/undefined or has no index/id/name,\n         *        do not filtering by query conditions, which is convenient for\n         *        no-payload situations or when target of action is global.\n         * @param {Function} [condition.filter] parameter: component, return boolean.\n         * @return {Array.<module:echarts/model/Component>}\n         */\n        findComponents: function (condition) {\n            var query = condition.query;\n            var mainType = condition.mainType;\n\n            var queryCond = getQueryCond(query);\n            var result = queryCond\n                ? this.queryComponents(queryCond)\n                : this._componentsMap.get(mainType);\n\n            return doFilter(filterBySubType(result, condition));\n\n            function getQueryCond(q) {\n                var indexAttr = mainType + 'Index';\n                var idAttr = mainType + 'Id';\n                var nameAttr = mainType + 'Name';\n                return q && (\n                        q[indexAttr] != null\n                        || q[idAttr] != null\n                        || q[nameAttr] != null\n                    )\n                    ? {\n                        mainType: mainType,\n                        // subType will be filtered finally.\n                        index: q[indexAttr],\n                        id: q[idAttr],\n                        name: q[nameAttr]\n                    }\n                    : null;\n            }\n\n            function doFilter(res) {\n                return condition.filter\n                     ? filter(res, condition.filter)\n                     : res;\n            }\n        },\n\n        /**\n         * @usage\n         * eachComponent('legend', function (legendModel, index) {\n         *     ...\n         * });\n         * eachComponent(function (componentType, model, index) {\n         *     // componentType does not include subType\n         *     // (componentType is 'xxx' but not 'xxx.aa')\n         * });\n         * eachComponent(\n         *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}},\n         *     function (model, index) {...}\n         * );\n         * eachComponent(\n         *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}},\n         *     function (model, index) {...}\n         * );\n         *\n         * @param {string|Object=} mainType When mainType is object, the definition\n         *                                  is the same as the method 'findComponents'.\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachComponent: function (mainType, cb, context) {\n            var componentsMap = this._componentsMap;\n\n            if (typeof mainType === 'function') {\n                context = cb;\n                cb = mainType;\n                componentsMap.each(function (components, componentType) {\n                    each(components, function (component, index) {\n                        cb.call(context, componentType, component, index);\n                    });\n                });\n            }\n            else if (zrUtil.isString(mainType)) {\n                each(componentsMap.get(mainType), cb, context);\n            }\n            else if (isObject(mainType)) {\n                var queryResult = this.findComponents(mainType);\n                each(queryResult, cb, context);\n            }\n        },\n\n        /**\n         * @param {string} name\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeriesByName: function (name) {\n            var series = this._componentsMap.get('series');\n            return filter(series, function (oneSeries) {\n                return oneSeries.name === name;\n            });\n        },\n\n        /**\n         * @param {number} seriesIndex\n         * @return {module:echarts/model/Series}\n         */\n        getSeriesByIndex: function (seriesIndex) {\n            return this._componentsMap.get('series')[seriesIndex];\n        },\n\n        /**\n         * @param {string} subType\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeriesByType: function (subType) {\n            var series = this._componentsMap.get('series');\n            return filter(series, function (oneSeries) {\n                return oneSeries.subType === subType;\n            });\n        },\n\n        /**\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeries: function () {\n            return this._componentsMap.get('series').slice();\n        },\n\n        /**\n         * After filtering, series may be different\n         * frome raw series.\n         *\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachSeries: function (cb, context) {\n            assertSeriesInitialized(this);\n            each(this._seriesIndices, function (rawSeriesIndex) {\n                var series = this._componentsMap.get('series')[rawSeriesIndex];\n                cb.call(context, series, rawSeriesIndex);\n            }, this);\n        },\n\n        /**\n         * Iterate raw series before filtered.\n         *\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachRawSeries: function (cb, context) {\n            each(this._componentsMap.get('series'), cb, context);\n        },\n\n        /**\n         * After filtering, series may be different.\n         * frome raw series.\n         *\n         * @parma {string} subType\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachSeriesByType: function (subType, cb, context) {\n            assertSeriesInitialized(this);\n            each(this._seriesIndices, function (rawSeriesIndex) {\n                var series = this._componentsMap.get('series')[rawSeriesIndex];\n                if (series.subType === subType) {\n                    cb.call(context, series, rawSeriesIndex);\n                }\n            }, this);\n        },\n\n        /**\n         * Iterate raw series before filtered of given type.\n         *\n         * @parma {string} subType\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachRawSeriesByType: function (subType, cb, context) {\n            return each(this.getSeriesByType(subType), cb, context);\n        },\n\n        /**\n         * @param {module:echarts/model/Series} seriesModel\n         */\n        isSeriesFiltered: function (seriesModel) {\n            assertSeriesInitialized(this);\n            return zrUtil.indexOf(this._seriesIndices, seriesModel.componentIndex) < 0;\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getCurrentSeriesIndices: function () {\n            return (this._seriesIndices || []).slice();\n        },\n\n        /**\n         * @param {Function} cb\n         * @param {*} context\n         */\n        filterSeries: function (cb, context) {\n            assertSeriesInitialized(this);\n            var filteredSeries = filter(\n                this._componentsMap.get('series'), cb, context\n            );\n            this._seriesIndices = createSeriesIndices(filteredSeries);\n        },\n\n        restoreData: function () {\n            var componentsMap = this._componentsMap;\n\n            this._seriesIndices = createSeriesIndices(componentsMap.get('series'));\n\n            var componentTypes = [];\n            componentsMap.each(function (components, componentType) {\n                componentTypes.push(componentType);\n            });\n\n            ComponentModel.topologicalTravel(\n                componentTypes,\n                ComponentModel.getAllClassMainTypes(),\n                function (componentType, dependencies) {\n                    each(componentsMap.get(componentType), function (component) {\n                        component.restoreData();\n                    });\n                }\n            );\n        }\n\n    });\n\n    /**\n     * @inner\n     */\n    function mergeTheme(option, theme) {\n        zrUtil.each(theme, function (themeItem, name) {\n            // 如果有 component model 则把具体的 merge 逻辑交给该 model 处理\n            if (!ComponentModel.hasClass(name)) {\n                if (typeof themeItem === 'object') {\n                    option[name] = !option[name]\n                        ? zrUtil.clone(themeItem)\n                        : zrUtil.merge(option[name], themeItem, false);\n                }\n                else {\n                    if (option[name] == null) {\n                        option[name] = themeItem;\n                    }\n                }\n            }\n        });\n    }\n\n    function initBase(baseOption) {\n        baseOption = baseOption;\n\n        // Using OPTION_INNER_KEY to mark that this option can not be used outside,\n        // i.e. `chart.setOption(chart.getModel().option);` is forbiden.\n        this.option = {};\n        this.option[OPTION_INNER_KEY] = 1;\n\n        /**\n         * Init with series: [], in case of calling findSeries method\n         * before series initialized.\n         * @type {Object.<string, Array.<module:echarts/model/Model>>}\n         * @private\n         */\n        this._componentsMap = zrUtil.createHashMap({series: []});\n\n        /**\n         * Mapping between filtered series list and raw series list.\n         * key: filtered series indices, value: raw series indices.\n         * @type {Array.<nubmer>}\n         * @private\n         */\n        this._seriesIndices = null;\n\n        mergeTheme(baseOption, this._theme.option);\n\n        // TODO Needs clone when merging to the unexisted property\n        zrUtil.merge(baseOption, globalDefault, false);\n\n        this.mergeOption(baseOption);\n    }\n\n    /**\n     * @inner\n     * @param {Array.<string>|string} types model types\n     * @return {Object} key: {string} type, value: {Array.<Object>} models\n     */\n    function getComponentsByTypes(componentsMap, types) {\n        if (!zrUtil.isArray(types)) {\n            types = types ? [types] : [];\n        }\n\n        var ret = {};\n        each(types, function (type) {\n            ret[type] = (componentsMap.get(type) || []).slice();\n        });\n\n        return ret;\n    }\n\n    /**\n     * @inner\n     */\n    function determineSubType(mainType, newCptOption, existComponent) {\n        var subType = newCptOption.type\n            ? newCptOption.type\n            : existComponent\n            ? existComponent.subType\n            // Use determineSubType only when there is no existComponent.\n            : ComponentModel.determineSubType(mainType, newCptOption);\n\n        // tooltip, markline, markpoint may always has no subType\n        return subType;\n    }\n\n    /**\n     * @inner\n     */\n    function createSeriesIndices(seriesModels) {\n        return map(seriesModels, function (series) {\n            return series.componentIndex;\n        }) || [];\n    }\n\n    /**\n     * @inner\n     */\n    function filterBySubType(components, condition) {\n        // Using hasOwnProperty for restrict. Consider\n        // subType is undefined in user payload.\n        return condition.hasOwnProperty('subType')\n            ? filter(components, function (cpt) {\n                return cpt.subType === condition.subType;\n            })\n            : components;\n    }\n\n    /**\n     * @inner\n     */\n    function assertSeriesInitialized(ecModel) {\n        // Components that use _seriesIndices should depends on series component,\n        // which make sure that their initialization is after series.\n        if (__DEV__) {\n            if (!ecModel._seriesIndices) {\n                throw new Error('Option should contains series.');\n            }\n        }\n    }\n\n    zrUtil.mixin(GlobalModel, __webpack_require__(533));\n\n    module.exports = GlobalModel;\n\n\n/***/ }),\n/* 624 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * ECharts option manager\n *\n * @module {echarts/model/OptionManager}\n */\n\n\n\n    var zrUtil = __webpack_require__(453);\n    var modelUtil = __webpack_require__(456);\n    var ComponentModel = __webpack_require__(469);\n    var each = zrUtil.each;\n    var clone = zrUtil.clone;\n    var map = zrUtil.map;\n    var merge = zrUtil.merge;\n\n    var QUERY_REG = /^(min|max)?(.+)$/;\n\n    /**\n     * TERM EXPLANATIONS:\n     *\n     * [option]:\n     *\n     *     An object that contains definitions of components. For example:\n     *     var option = {\n     *         title: {...},\n     *         legend: {...},\n     *         visualMap: {...},\n     *         series: [\n     *             {data: [...]},\n     *             {data: [...]},\n     *             ...\n     *         ]\n     *     };\n     *\n     * [rawOption]:\n     *\n     *     An object input to echarts.setOption. 'rawOption' may be an\n     *     'option', or may be an object contains multi-options. For example:\n     *     var option = {\n     *         baseOption: {\n     *             title: {...},\n     *             legend: {...},\n     *             series: [\n     *                 {data: [...]},\n     *                 {data: [...]},\n     *                 ...\n     *             ]\n     *         },\n     *         timeline: {...},\n     *         options: [\n     *             {title: {...}, series: {data: [...]}},\n     *             {title: {...}, series: {data: [...]}},\n     *             ...\n     *         ],\n     *         media: [\n     *             {\n     *                 query: {maxWidth: 320},\n     *                 option: {series: {x: 20}, visualMap: {show: false}}\n     *             },\n     *             {\n     *                 query: {minWidth: 320, maxWidth: 720},\n     *                 option: {series: {x: 500}, visualMap: {show: true}}\n     *             },\n     *             {\n     *                 option: {series: {x: 1200}, visualMap: {show: true}}\n     *             }\n     *         ]\n     *     };\n     *\n     * @alias module:echarts/model/OptionManager\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    function OptionManager(api) {\n\n        /**\n         * @private\n         * @type {module:echarts/ExtensionAPI}\n         */\n        this._api = api;\n\n        /**\n         * @private\n         * @type {Array.<number>}\n         */\n        this._timelineOptions = [];\n\n        /**\n         * @private\n         * @type {Array.<Object>}\n         */\n        this._mediaList = [];\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._mediaDefault;\n\n        /**\n         * -1, means default.\n         * empty means no media.\n         * @private\n         * @type {Array.<number>}\n         */\n        this._currentMediaIndices = [];\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._optionBackup;\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._newBaseOption;\n    }\n\n    // timeline.notMerge is not supported in ec3. Firstly there is rearly\n    // case that notMerge is needed. Secondly supporting 'notMerge' requires\n    // rawOption cloned and backuped when timeline changed, which does no\n    // good to performance. What's more, that both timeline and setOption\n    // method supply 'notMerge' brings complex and some problems.\n    // Consider this case:\n    // (step1) chart.setOption({timeline: {notMerge: false}, ...}, false);\n    // (step2) chart.setOption({timeline: {notMerge: true}, ...}, false);\n\n    OptionManager.prototype = {\n\n        constructor: OptionManager,\n\n        /**\n         * @public\n         * @param {Object} rawOption Raw option.\n         * @param {module:echarts/model/Global} ecModel\n         * @param {Array.<Function>} optionPreprocessorFuncs\n         * @return {Object} Init option\n         */\n        setOption: function (rawOption, optionPreprocessorFuncs) {\n            rawOption = clone(rawOption, true);\n\n            // FIXME\n            // 如果 timeline options 或者 media 中设置了某个属性，而baseOption中没有设置，则进行警告。\n\n            var oldOptionBackup = this._optionBackup;\n            var newParsedOption = parseRawOption.call(\n                this, rawOption, optionPreprocessorFuncs, !oldOptionBackup\n            );\n            this._newBaseOption = newParsedOption.baseOption;\n\n            // For setOption at second time (using merge mode);\n            if (oldOptionBackup) {\n                // Only baseOption can be merged.\n                mergeOption(oldOptionBackup.baseOption, newParsedOption.baseOption);\n\n                // For simplicity, timeline options and media options do not support merge,\n                // that is, if you `setOption` twice and both has timeline options, the latter\n                // timeline opitons will not be merged to the formers, but just substitude them.\n                if (newParsedOption.timelineOptions.length) {\n                    oldOptionBackup.timelineOptions = newParsedOption.timelineOptions;\n                }\n                if (newParsedOption.mediaList.length) {\n                    oldOptionBackup.mediaList = newParsedOption.mediaList;\n                }\n                if (newParsedOption.mediaDefault) {\n                    oldOptionBackup.mediaDefault = newParsedOption.mediaDefault;\n                }\n            }\n            else {\n                this._optionBackup = newParsedOption;\n            }\n        },\n\n        /**\n         * @param {boolean} isRecreate\n         * @return {Object}\n         */\n        mountOption: function (isRecreate) {\n            var optionBackup = this._optionBackup;\n\n            // TODO\n            // 如果没有reset功能则不clone。\n\n            this._timelineOptions = map(optionBackup.timelineOptions, clone);\n            this._mediaList = map(optionBackup.mediaList, clone);\n            this._mediaDefault = clone(optionBackup.mediaDefault);\n            this._currentMediaIndices = [];\n\n            return clone(isRecreate\n                // this._optionBackup.baseOption, which is created at the first `setOption`\n                // called, and is merged into every new option by inner method `mergeOption`\n                // each time `setOption` called, can be only used in `isRecreate`, because\n                // its reliability is under suspicion. In other cases option merge is\n                // performed by `model.mergeOption`.\n                ? optionBackup.baseOption : this._newBaseOption\n            );\n        },\n\n        /**\n         * @param {module:echarts/model/Global} ecModel\n         * @return {Object}\n         */\n        getTimelineOption: function (ecModel) {\n            var option;\n            var timelineOptions = this._timelineOptions;\n\n            if (timelineOptions.length) {\n                // getTimelineOption can only be called after ecModel inited,\n                // so we can get currentIndex from timelineModel.\n                var timelineModel = ecModel.getComponent('timeline');\n                if (timelineModel) {\n                    option = clone(\n                        timelineOptions[timelineModel.getCurrentIndex()],\n                        true\n                    );\n                }\n            }\n\n            return option;\n        },\n\n        /**\n         * @param {module:echarts/model/Global} ecModel\n         * @return {Array.<Object>}\n         */\n        getMediaOption: function (ecModel) {\n            var ecWidth = this._api.getWidth();\n            var ecHeight = this._api.getHeight();\n            var mediaList = this._mediaList;\n            var mediaDefault = this._mediaDefault;\n            var indices = [];\n            var result = [];\n\n            // No media defined.\n            if (!mediaList.length && !mediaDefault) {\n                return result;\n            }\n\n            // Multi media may be applied, the latter defined media has higher priority.\n            for (var i = 0, len = mediaList.length; i < len; i++) {\n                if (applyMediaQuery(mediaList[i].query, ecWidth, ecHeight)) {\n                    indices.push(i);\n                }\n            }\n\n            // FIXME\n            // 是否mediaDefault应该强制用户设置，否则可能修改不能回归。\n            if (!indices.length && mediaDefault) {\n                indices = [-1];\n            }\n\n            if (indices.length && !indicesEquals(indices, this._currentMediaIndices)) {\n                result = map(indices, function (index) {\n                    return clone(\n                        index === -1 ? mediaDefault.option : mediaList[index].option\n                    );\n                });\n            }\n            // Otherwise return nothing.\n\n            this._currentMediaIndices = indices;\n\n            return result;\n        }\n    };\n\n    function parseRawOption(rawOption, optionPreprocessorFuncs, isNew) {\n        var timelineOptions = [];\n        var mediaList = [];\n        var mediaDefault;\n        var baseOption;\n\n        // Compatible with ec2.\n        var timelineOpt = rawOption.timeline;\n\n        if (rawOption.baseOption) {\n            baseOption = rawOption.baseOption;\n        }\n\n        // For timeline\n        if (timelineOpt || rawOption.options) {\n            baseOption = baseOption || {};\n            timelineOptions = (rawOption.options || []).slice();\n        }\n\n        // For media query\n        if (rawOption.media) {\n            baseOption = baseOption || {};\n            var media = rawOption.media;\n            each(media, function (singleMedia) {\n                if (singleMedia && singleMedia.option) {\n                    if (singleMedia.query) {\n                        mediaList.push(singleMedia);\n                    }\n                    else if (!mediaDefault) {\n                        // Use the first media default.\n                        mediaDefault = singleMedia;\n                    }\n                }\n            });\n        }\n\n        // For normal option\n        if (!baseOption) {\n            baseOption = rawOption;\n        }\n\n        // Set timelineOpt to baseOption in ec3,\n        // which is convenient for merge option.\n        if (!baseOption.timeline) {\n            baseOption.timeline = timelineOpt;\n        }\n\n        // Preprocess.\n        each([baseOption].concat(timelineOptions)\n            .concat(zrUtil.map(mediaList, function (media) {\n                return media.option;\n            })),\n            function (option) {\n                each(optionPreprocessorFuncs, function (preProcess) {\n                    preProcess(option, isNew);\n                });\n            }\n        );\n\n        return {\n            baseOption: baseOption,\n            timelineOptions: timelineOptions,\n            mediaDefault: mediaDefault,\n            mediaList: mediaList\n        };\n    }\n\n    /**\n     * @see <http://www.w3.org/TR/css3-mediaqueries/#media1>\n     * Support: width, height, aspectRatio\n     * Can use max or min as prefix.\n     */\n    function applyMediaQuery(query, ecWidth, ecHeight) {\n        var realMap = {\n            width: ecWidth,\n            height: ecHeight,\n            aspectratio: ecWidth / ecHeight // lowser case for convenientce.\n        };\n\n        var applicatable = true;\n\n        zrUtil.each(query, function (value, attr) {\n            var matched = attr.match(QUERY_REG);\n\n            if (!matched || !matched[1] || !matched[2]) {\n                return;\n            }\n\n            var operator = matched[1];\n            var realAttr = matched[2].toLowerCase();\n\n            if (!compare(realMap[realAttr], value, operator)) {\n                applicatable = false;\n            }\n        });\n\n        return applicatable;\n    }\n\n    function compare(real, expect, operator) {\n        if (operator === 'min') {\n            return real >= expect;\n        }\n        else if (operator === 'max') {\n            return real <= expect;\n        }\n        else { // Equals\n            return real === expect;\n        }\n    }\n\n    function indicesEquals(indices1, indices2) {\n        // indices is always order by asc and has only finite number.\n        return indices1.join(',') === indices2.join(',');\n    }\n\n    /**\n     * Consider case:\n     * `chart.setOption(opt1);`\n     * Then user do some interaction like dataZoom, dataView changing.\n     * `chart.setOption(opt2);`\n     * Then user press 'reset button' in toolbox.\n     *\n     * After doing that all of the interaction effects should be reset, the\n     * chart should be the same as the result of invoke\n     * `chart.setOption(opt1); chart.setOption(opt2);`.\n     *\n     * Although it is not able ensure that\n     * `chart.setOption(opt1); chart.setOption(opt2);` is equivalents to\n     * `chart.setOption(merge(opt1, opt2));` exactly,\n     * this might be the only simple way to implement that feature.\n     *\n     * MEMO: We've considered some other approaches:\n     * 1. Each model handle its self restoration but not uniform treatment.\n     *     (Too complex in logic and error-prone)\n     * 2. Use a shadow ecModel. (Performace expensive)\n     */\n    function mergeOption(oldOption, newOption) {\n        newOption = newOption || {};\n\n        each(newOption, function (newCptOpt, mainType) {\n            if (newCptOpt == null) {\n                return;\n            }\n\n            var oldCptOpt = oldOption[mainType];\n\n            if (!ComponentModel.hasClass(mainType)) {\n                oldOption[mainType] = merge(oldCptOpt, newCptOpt, true);\n            }\n            else {\n                newCptOpt = modelUtil.normalizeToArray(newCptOpt);\n                oldCptOpt = modelUtil.normalizeToArray(oldCptOpt);\n\n                var mapResult = modelUtil.mappingToExists(oldCptOpt, newCptOpt);\n\n                oldOption[mainType] = map(mapResult, function (item) {\n                    return (item.option && item.exist)\n                        ? merge(item.exist, item.option, true)\n                        : (item.exist || item.option);\n                });\n            }\n        });\n    }\n\n    module.exports = OptionManager;\n\n\n/***/ }),\n/* 625 */\n/***/ (function(module, exports) {\n\n\n    var platform = '';\n    // Navigator not exists in node\n    if (typeof navigator !== 'undefined') {\n        platform = navigator.platform || '';\n    }\n    module.exports = {\n        // 全图默认背景\n        // backgroundColor: 'rgba(0,0,0,0)',\n\n        // https://dribbble.com/shots/1065960-Infographic-Pie-chart-visualization\n        // color: ['#5793f3', '#d14a61', '#fd9c35', '#675bba', '#fec42c', '#dd4444', '#d4df5a', '#cd4870'],\n        // 浅色\n        // color: ['#bcd3bb', '#e88f70', '#edc1a5', '#9dc5c8', '#e1e8c8', '#7b7c68', '#e5b5b5', '#f0b489', '#928ea8', '#bda29a'],\n        // color: ['#cc5664', '#9bd6ec', '#ea946e', '#8acaaa', '#f1ec64', '#ee8686', '#a48dc1', '#5da6bc', '#b9dcae'],\n        // 深色\n        color: ['#c23531','#2f4554', '#61a0a8', '#d48265', '#91c7ae','#749f83',  '#ca8622', '#bda29a','#6e7074', '#546570', '#c4ccd3'],\n\n        // 默认需要 Grid 配置项\n        // grid: {},\n        // 主题，主题\n        textStyle: {\n            // color: '#000',\n            // decoration: 'none',\n            // PENDING\n            fontFamily: platform.match(/^Win/) ? 'Microsoft YaHei' : 'sans-serif',\n            // fontFamily: 'Arial, Verdana, sans-serif',\n            fontSize: 12,\n            fontStyle: 'normal',\n            fontWeight: 'normal'\n        },\n\n        // http://blogs.adobe.com/webplatform/2014/02/24/using-blend-modes-in-html-canvas/\n        // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n        // Default is source-over\n        blendMode: null,\n\n        animation: 'auto',\n        animationDuration: 1000,\n        animationDurationUpdate: 300,\n        animationEasing: 'exponentialOut',\n        animationEasingUpdate: 'cubicOut',\n\n        animationThreshold: 2000,\n        // Configuration for progressive/incremental rendering\n        progressiveThreshold: 3000,\n        progressive: 400,\n\n        // Threshold of if use single hover layer to optimize.\n        // It is recommended that `hoverLayerThreshold` is equivalent to or less than\n        // `progressiveThreshold`, otherwise hover will cause restart of progressive,\n        // which is unexpected.\n        // see example <echarts/test/heatmap-large.html>.\n        hoverLayerThreshold: 3000,\n\n        // See: module:echarts/scale/Time\n        useUTC: false\n    };\n\n\n/***/ }),\n/* 626 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    module.exports = {\n        getAreaStyle: __webpack_require__(499)(\n            [\n                ['fill', 'color'],\n                ['shadowBlur'],\n                ['shadowOffsetX'],\n                ['shadowOffsetY'],\n                ['opacity'],\n                ['shadowColor']\n            ]\n        )\n    };\n\n\n/***/ }),\n/* 627 */\n/***/ (function(module, exports) {\n\n\n\n    module.exports = {\n        getBoxLayoutParams: function () {\n            return {\n                left: this.get('left'),\n                top: this.get('top'),\n                right: this.get('right'),\n                bottom: this.get('bottom'),\n                width: this.get('width'),\n                height: this.get('height')\n            };\n        }\n    };\n\n\n/***/ }),\n/* 628 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    var getItemStyle = __webpack_require__(499)(\n        [\n            ['fill', 'color'],\n            ['stroke', 'borderColor'],\n            ['lineWidth', 'borderWidth'],\n            ['opacity'],\n            ['shadowBlur'],\n            ['shadowOffsetX'],\n            ['shadowOffsetY'],\n            ['shadowColor'],\n            ['textPosition'],\n            ['textAlign']\n        ]\n    );\n    module.exports = {\n        getItemStyle: function (excludes, includes) {\n            var style = getItemStyle.call(this, excludes, includes);\n            var lineDash = this.getBorderLineDash();\n            lineDash && (style.lineDash = lineDash);\n            return style;\n        },\n\n        getBorderLineDash: function () {\n            var lineType = this.get('borderType');\n            return (lineType === 'solid' || lineType == null) ? null\n                : (lineType === 'dashed' ? [5, 5] : [1, 1]);\n        }\n    };\n\n\n/***/ }),\n/* 629 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    var getLineStyle = __webpack_require__(499)(\n        [\n            ['lineWidth', 'width'],\n            ['stroke', 'color'],\n            ['opacity'],\n            ['shadowBlur'],\n            ['shadowOffsetX'],\n            ['shadowOffsetY'],\n            ['shadowColor']\n        ]\n    );\n    module.exports = {\n        getLineStyle: function (excludes) {\n            var style = getLineStyle.call(this, excludes);\n            var lineDash = this.getLineDash(style.lineWidth);\n            lineDash && (style.lineDash = lineDash);\n            return style;\n        },\n\n        getLineDash: function (lineWidth) {\n            if (lineWidth == null) {\n                lineWidth = 1;\n            }\n            var lineType = this.get('type');\n            var dotSize = Math.max(lineWidth, 2);\n            var dashSize = lineWidth * 4;\n            return (lineType === 'solid' || lineType == null) ? null\n                : (lineType === 'dashed' ? [dashSize, dashSize] : [dotSize, dotSize]);\n        }\n    };\n\n\n/***/ }),\n/* 630 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var textContain = __webpack_require__(473);\n    var graphicUtil = __webpack_require__(454);\n\n    module.exports = {\n        /**\n         * Get color property or get color from option.textStyle.color\n         * @return {string}\n         */\n        getTextColor: function () {\n            var ecModel = this.ecModel;\n            return this.getShallow('color')\n                || (ecModel && ecModel.get('textStyle.color'));\n        },\n\n        /**\n         * Create font string from fontStyle, fontWeight, fontSize, fontFamily\n         * @return {string}\n         */\n        getFont: function () {\n            return graphicUtil.getFont({\n                fontStyle: this.getShallow('fontStyle'),\n                fontWeight: this.getShallow('fontWeight'),\n                fontSize: this.getShallow('fontSize'),\n                fontFamily: this.getShallow('fontFamily')\n            }, this.ecModel);\n        },\n\n        getTextRect: function (text) {\n            return textContain.getBoundingRect(\n                text,\n                this.getFont(),\n                this.getShallow('align'),\n                this.getShallow('baseline')\n            );\n        },\n\n        truncateText: function (text, containerWidth, ellipsis, options) {\n            return textContain.truncateText(\n                text, containerWidth, this.getFont(), ellipsis, options\n            );\n        }\n    };\n\n\n/***/ }),\n/* 631 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// Compatitable with 2.0\n\n\n    var zrUtil = __webpack_require__(453);\n    var compatStyle = __webpack_require__(632);\n\n    function get(opt, path) {\n        path = path.split(',');\n        var obj = opt;\n        for (var i = 0; i < path.length; i++) {\n            obj = obj && obj[path[i]];\n            if (obj == null) {\n                break;\n            }\n        }\n        return obj;\n    }\n\n    function set(opt, path, val, overwrite) {\n        path = path.split(',');\n        var obj = opt;\n        var key;\n        for (var i = 0; i < path.length - 1; i++) {\n            key = path[i];\n            if (obj[key] == null) {\n                obj[key] = {};\n            }\n            obj = obj[key];\n        }\n        if (overwrite || obj[path[i]] == null) {\n            obj[path[i]] = val;\n        }\n    }\n\n    function compatLayoutProperties(option) {\n        each(LAYOUT_PROPERTIES, function (prop) {\n            if (prop[0] in option && !(prop[1] in option)) {\n                option[prop[1]] = option[prop[0]];\n            }\n        });\n    }\n\n    var LAYOUT_PROPERTIES = [\n        ['x', 'left'], ['y', 'top'], ['x2', 'right'], ['y2', 'bottom']\n    ];\n\n    var COMPATITABLE_COMPONENTS = [\n        'grid', 'geo', 'parallel', 'legend', 'toolbox', 'title', 'visualMap', 'dataZoom', 'timeline'\n    ];\n\n    var COMPATITABLE_SERIES = [\n        'bar', 'boxplot', 'candlestick', 'chord', 'effectScatter',\n        'funnel', 'gauge', 'lines', 'graph', 'heatmap', 'line', 'map', 'parallel',\n        'pie', 'radar', 'sankey', 'scatter', 'treemap'\n    ];\n\n    var each = zrUtil.each;\n\n    module.exports = function (option) {\n        each(option.series, function (seriesOpt) {\n            if (!zrUtil.isObject(seriesOpt)) {\n                return;\n            }\n\n            var seriesType = seriesOpt.type;\n\n            compatStyle(seriesOpt);\n\n            if (seriesType === 'pie' || seriesType === 'gauge') {\n                if (seriesOpt.clockWise != null) {\n                    seriesOpt.clockwise = seriesOpt.clockWise;\n                }\n            }\n            if (seriesType === 'gauge') {\n                var pointerColor = get(seriesOpt, 'pointer.color');\n                pointerColor != null\n                    && set(seriesOpt, 'itemStyle.normal.color', pointerColor);\n            }\n\n            for (var i = 0; i < COMPATITABLE_SERIES.length; i++) {\n                if (COMPATITABLE_SERIES[i] === seriesOpt.type) {\n                    compatLayoutProperties(seriesOpt);\n                    break;\n                }\n            }\n        });\n\n        // dataRange has changed to visualMap\n        if (option.dataRange) {\n            option.visualMap = option.dataRange;\n        }\n\n        each(COMPATITABLE_COMPONENTS, function (componentName) {\n            var options = option[componentName];\n            if (options) {\n                if (!zrUtil.isArray(options)) {\n                    options = [options];\n                }\n                each(options, function (option) {\n                    compatLayoutProperties(option);\n                });\n            }\n        });\n    };\n\n\n/***/ }),\n/* 632 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(453);\n\n    var POSSIBLE_STYLES = [\n        'areaStyle', 'lineStyle', 'nodeStyle', 'linkStyle',\n        'chordStyle', 'label', 'labelLine'\n    ];\n\n    function compatItemStyle(opt) {\n        var itemStyleOpt = opt && opt.itemStyle;\n        if (itemStyleOpt) {\n            zrUtil.each(POSSIBLE_STYLES, function (styleName) {\n                var normalItemStyleOpt = itemStyleOpt.normal;\n                var emphasisItemStyleOpt = itemStyleOpt.emphasis;\n                if (normalItemStyleOpt && normalItemStyleOpt[styleName]) {\n                    opt[styleName] = opt[styleName] || {};\n                    if (!opt[styleName].normal) {\n                        opt[styleName].normal = normalItemStyleOpt[styleName];\n                    }\n                    else {\n                        zrUtil.merge(opt[styleName].normal, normalItemStyleOpt[styleName]);\n                    }\n                    normalItemStyleOpt[styleName] = null;\n                }\n                if (emphasisItemStyleOpt && emphasisItemStyleOpt[styleName]) {\n                    opt[styleName] = opt[styleName] || {};\n                    if (!opt[styleName].emphasis) {\n                        opt[styleName].emphasis = emphasisItemStyleOpt[styleName];\n                    }\n                    else {\n                        zrUtil.merge(opt[styleName].emphasis, emphasisItemStyleOpt[styleName]);\n                    }\n                    emphasisItemStyleOpt[styleName] = null;\n                }\n            });\n        }\n    }\n\n    module.exports = function (seriesOpt) {\n        if (!seriesOpt) {\n            return;\n        }\n        compatItemStyle(seriesOpt);\n        compatItemStyle(seriesOpt.markPoint);\n        compatItemStyle(seriesOpt.markLine);\n        var data = seriesOpt.data;\n        if (data) {\n            for (var i = 0; i < data.length; i++) {\n                compatItemStyle(data[i]);\n            }\n            // mark point data\n            var markPoint = seriesOpt.markPoint;\n            if (markPoint && markPoint.data) {\n                var mpData = markPoint.data;\n                for (var i = 0; i < mpData.length; i++) {\n                    compatItemStyle(mpData[i]);\n                }\n            }\n            // mark line data\n            var markLine = seriesOpt.markLine;\n            if (markLine && markLine.data) {\n                var mlData = markLine.data;\n                for (var i = 0; i < mlData.length; i++) {\n                    if (zrUtil.isArray(mlData[i])) {\n                        compatItemStyle(mlData[i][0]);\n                        compatItemStyle(mlData[i][1]);\n                    }\n                    else {\n                        compatItemStyle(mlData[i]);\n                    }\n                }\n            }\n        }\n    };\n\n\n/***/ }),\n/* 633 */\n/***/ (function(module, exports) {\n\n\n    var samplers = {\n        average: function (frame) {\n            var sum = 0;\n            var count = 0;\n            for (var i = 0; i < frame.length; i++) {\n                if (!isNaN(frame[i])) {\n                    sum += frame[i];\n                    count++;\n                }\n            }\n            // Return NaN if count is 0\n            return count === 0 ? NaN : sum / count;\n        },\n        sum: function (frame) {\n            var sum = 0;\n            for (var i = 0; i < frame.length; i++) {\n                // Ignore NaN\n                sum += frame[i] || 0;\n            }\n            return sum;\n        },\n        max: function (frame) {\n            var max = -Infinity;\n            for (var i = 0; i < frame.length; i++) {\n                frame[i] > max && (max = frame[i]);\n            }\n            return max;\n        },\n        min: function (frame) {\n            var min = Infinity;\n            for (var i = 0; i < frame.length; i++) {\n                frame[i] < min && (min = frame[i]);\n            }\n            return min;\n        },\n        // TODO\n        // Median\n        nearest: function (frame) {\n            return frame[0];\n        }\n    };\n\n    var indexSampler = function (frame, value) {\n        return Math.round(frame.length / 2);\n    };\n    module.exports = function (seriesType, ecModel, api) {\n        ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n            var data = seriesModel.getData();\n            var sampling = seriesModel.get('sampling');\n            var coordSys = seriesModel.coordinateSystem;\n            // Only cartesian2d support down sampling\n            if (coordSys.type === 'cartesian2d' && sampling) {\n                var baseAxis = coordSys.getBaseAxis();\n                var valueAxis = coordSys.getOtherAxis(baseAxis);\n                var extent = baseAxis.getExtent();\n                // Coordinste system has been resized\n                var size = extent[1] - extent[0];\n                var rate = Math.round(data.count() / size);\n                if (rate > 1) {\n                    var sampler;\n                    if (typeof sampling === 'string') {\n                        sampler = samplers[sampling];\n                    }\n                    else if (typeof sampling === 'function') {\n                        sampler = sampling;\n                    }\n                    if (sampler) {\n                        data = data.downSample(\n                            valueAxis.dim, 1 / rate, sampler, indexSampler\n                        );\n                        seriesModel.setData(data);\n                    }\n                }\n            }\n        }, this);\n    };\n\n\n/***/ }),\n/* 634 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Log scale\n * @module echarts/scale/Log\n */\n\n\n    var zrUtil = __webpack_require__(453);\n    var Scale = __webpack_require__(484);\n    var numberUtil = __webpack_require__(457);\n\n    // Use some method of IntervalScale\n    var IntervalScale = __webpack_require__(500);\n\n    var scaleProto = Scale.prototype;\n    var intervalScaleProto = IntervalScale.prototype;\n\n    var getPrecisionSafe = numberUtil.getPrecisionSafe;\n    var roundingErrorFix = numberUtil.round;\n\n    var mathFloor = Math.floor;\n    var mathCeil = Math.ceil;\n    var mathPow = Math.pow;\n\n    var mathLog = Math.log;\n\n    var LogScale = Scale.extend({\n\n        type: 'log',\n\n        base: 10,\n\n        $constructor: function () {\n            Scale.apply(this, arguments);\n            this._originalScale = new IntervalScale();\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getTicks: function () {\n            var originalScale = this._originalScale;\n            var extent = this._extent;\n            var originalExtent = originalScale.getExtent();\n\n            return zrUtil.map(intervalScaleProto.getTicks.call(this), function (val) {\n                var powVal = numberUtil.round(mathPow(this.base, val));\n\n                // Fix #4158\n                powVal = (val === extent[0] && originalScale.__fixMin)\n                    ? fixRoundingError(powVal, originalExtent[0])\n                    : powVal;\n                powVal = (val === extent[1] && originalScale.__fixMax)\n                    ? fixRoundingError(powVal, originalExtent[1])\n                    : powVal;\n\n                return powVal;\n            }, this);\n        },\n\n        /**\n         * @param {number} val\n         * @return {string}\n         */\n        getLabel: intervalScaleProto.getLabel,\n\n        /**\n         * @param  {number} val\n         * @return {number}\n         */\n        scale: function (val) {\n            val = scaleProto.scale.call(this, val);\n            return mathPow(this.base, val);\n        },\n\n        /**\n         * @param {number} start\n         * @param {number} end\n         */\n        setExtent: function (start, end) {\n            var base = this.base;\n            start = mathLog(start) / mathLog(base);\n            end = mathLog(end) / mathLog(base);\n            intervalScaleProto.setExtent.call(this, start, end);\n        },\n\n        /**\n         * @return {number} end\n         */\n        getExtent: function () {\n            var base = this.base;\n            var extent = scaleProto.getExtent.call(this);\n            extent[0] = mathPow(base, extent[0]);\n            extent[1] = mathPow(base, extent[1]);\n\n            // Fix #4158\n            var originalScale = this._originalScale;\n            var originalExtent = originalScale.getExtent();\n            originalScale.__fixMin && (extent[0] = fixRoundingError(extent[0], originalExtent[0]));\n            originalScale.__fixMax && (extent[1] = fixRoundingError(extent[1], originalExtent[1]));\n\n            return extent;\n        },\n\n        /**\n         * @param  {Array.<number>} extent\n         */\n        unionExtent: function (extent) {\n            this._originalScale.unionExtent(extent);\n\n            var base = this.base;\n            extent[0] = mathLog(extent[0]) / mathLog(base);\n            extent[1] = mathLog(extent[1]) / mathLog(base);\n            scaleProto.unionExtent.call(this, extent);\n        },\n\n        /**\n         * @override\n         */\n        unionExtentFromData: function (data, dim) {\n            this.unionExtent(data.getDataExtent(dim, true, function (val) {\n                return val > 0;\n            }));\n        },\n\n        /**\n         * Update interval and extent of intervals for nice ticks\n         * @param  {number} [approxTickNum = 10] Given approx tick number\n         */\n        niceTicks: function (approxTickNum) {\n            approxTickNum = approxTickNum || 10;\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            if (span === Infinity || span <= 0) {\n                return;\n            }\n\n            var interval = numberUtil.quantity(span);\n            var err = approxTickNum / span * interval;\n\n            // Filter ticks to get closer to the desired count.\n            if (err <= 0.5) {\n                interval *= 10;\n            }\n\n            // Interval should be integer\n            while (!isNaN(interval) && Math.abs(interval) < 1 && Math.abs(interval) > 0) {\n                interval *= 10;\n            }\n\n            var niceExtent = [\n                numberUtil.round(mathCeil(extent[0] / interval) * interval),\n                numberUtil.round(mathFloor(extent[1] / interval) * interval)\n            ];\n\n            this._interval = interval;\n            this._niceExtent = niceExtent;\n        },\n\n        /**\n         * Nice extent.\n         * @override\n         */\n        niceExtent: function (opt) {\n            intervalScaleProto.niceExtent.call(this, opt);\n\n            var originalScale = this._originalScale;\n            originalScale.__fixMin = opt.fixMin;\n            originalScale.__fixMax = opt.fixMax;\n        }\n\n    });\n\n    zrUtil.each(['contain', 'normalize'], function (methodName) {\n        LogScale.prototype[methodName] = function (val) {\n            val = mathLog(val) / mathLog(this.base);\n            return scaleProto[methodName].call(this, val);\n        };\n    });\n\n    LogScale.create = function () {\n        return new LogScale();\n    };\n\n    function fixRoundingError(val, originalVal) {\n        return roundingErrorFix(val, getPrecisionSafe(originalVal));\n    }\n\n    module.exports = LogScale;\n\n\n/***/ }),\n/* 635 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Linear continuous scale\n * @module echarts/coord/scale/Ordinal\n *\n * http://en.wikipedia.org/wiki/Level_of_measurement\n */\n\n// FIXME only one data\n\n\n    var zrUtil = __webpack_require__(453);\n    var Scale = __webpack_require__(484);\n\n    var scaleProto = Scale.prototype;\n\n    var OrdinalScale = Scale.extend({\n\n        type: 'ordinal',\n\n        init: function (data, extent) {\n            this._data = data;\n            this._extent = extent || [0, data.length - 1];\n        },\n\n        parse: function (val) {\n            return typeof val === 'string'\n                ? zrUtil.indexOf(this._data, val)\n                // val might be float.\n                : Math.round(val);\n        },\n\n        contain: function (rank) {\n            rank = this.parse(rank);\n            return scaleProto.contain.call(this, rank)\n                && this._data[rank] != null;\n        },\n\n        /**\n         * Normalize given rank or name to linear [0, 1]\n         * @param {number|string} [val]\n         * @return {number}\n         */\n        normalize: function (val) {\n            return scaleProto.normalize.call(this, this.parse(val));\n        },\n\n        scale: function (val) {\n            return Math.round(scaleProto.scale.call(this, val));\n        },\n\n        /**\n         * @return {Array}\n         */\n        getTicks: function () {\n            var ticks = [];\n            var extent = this._extent;\n            var rank = extent[0];\n\n            while (rank <= extent[1]) {\n                ticks.push(rank);\n                rank++;\n            }\n\n            return ticks;\n        },\n\n        /**\n         * Get item on rank n\n         * @param {number} n\n         * @return {string}\n         */\n        getLabel: function (n) {\n            return this._data[n];\n        },\n\n        /**\n         * @return {number}\n         */\n        count: function () {\n            return this._extent[1] - this._extent[0] + 1;\n        },\n\n        /**\n         * @override\n         */\n        unionExtentFromData: function (data, dim) {\n            this.unionExtent(data.getDataExtent(dim, false));\n        },\n\n        niceTicks: zrUtil.noop,\n        niceExtent: zrUtil.noop\n    });\n\n    /**\n     * @return {module:echarts/scale/Time}\n     */\n    OrdinalScale.create = function () {\n        return new OrdinalScale();\n    };\n\n    module.exports = OrdinalScale;\n\n\n/***/ }),\n/* 636 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Interval scale\n * @module echarts/coord/scale/Time\n */\n\n\n\n    // [About UTC and local time zone]:\n    // In most cases, `number.parseDate` will treat input data string as local time\n    // (except time zone is specified in time string). And `format.formateTime` returns\n    // local time by default. option.useUTC is false by default. This design have\n    // concidered these common case:\n    // (1) Time that is persistent in server is in UTC, but it is needed to be diplayed\n    // in local time by default.\n    // (2) By default, the input data string (e.g., '2011-01-02') should be displayed\n    // as its original time, without any time difference.\n\n    var zrUtil = __webpack_require__(453);\n    var numberUtil = __webpack_require__(457);\n    var formatUtil = __webpack_require__(461);\n    var scaleHelper = __webpack_require__(534);\n\n    var IntervalScale = __webpack_require__(500);\n\n    var intervalScaleProto = IntervalScale.prototype;\n\n    var mathCeil = Math.ceil;\n    var mathFloor = Math.floor;\n    var ONE_SECOND = 1000;\n    var ONE_MINUTE = ONE_SECOND * 60;\n    var ONE_HOUR = ONE_MINUTE * 60;\n    var ONE_DAY = ONE_HOUR * 24;\n\n    // FIXME 公用？\n    var bisect = function (a, x, lo, hi) {\n        while (lo < hi) {\n            var mid = lo + hi >>> 1;\n            if (a[mid][2] < x) {\n                lo = mid + 1;\n            }\n            else {\n                hi  = mid;\n            }\n        }\n        return lo;\n    };\n\n    /**\n     * @alias module:echarts/coord/scale/Time\n     * @constructor\n     */\n    var TimeScale = IntervalScale.extend({\n        type: 'time',\n\n        /**\n         * @override\n         */\n        getLabel: function (val) {\n            var stepLvl = this._stepLvl;\n\n            var date = new Date(val);\n\n            return formatUtil.formatTime(stepLvl[0], date, this.getSetting('useUTC'));\n        },\n\n        /**\n         * @override\n         */\n        niceExtent: function (opt) {\n            var extent = this._extent;\n            // If extent start and end are same, expand them\n            if (extent[0] === extent[1]) {\n                // Expand extent\n                extent[0] -= ONE_DAY;\n                extent[1] += ONE_DAY;\n            }\n            // If there are no data and extent are [Infinity, -Infinity]\n            if (extent[1] === -Infinity && extent[0] === Infinity) {\n                var d = new Date();\n                extent[1] = new Date(d.getFullYear(), d.getMonth(), d.getDate());\n                extent[0] = extent[1] - ONE_DAY;\n            }\n\n            this.niceTicks(opt.splitNumber);\n\n            // var extent = this._extent;\n            var interval = this._interval;\n\n            if (!opt.fixMin) {\n                extent[0] = numberUtil.round(mathFloor(extent[0] / interval) * interval);\n            }\n            if (!opt.fixMax) {\n                extent[1] = numberUtil.round(mathCeil(extent[1] / interval) * interval);\n            }\n        },\n\n        /**\n         * @override\n         */\n        niceTicks: function (approxTickNum) {\n            var timezoneOffset = this.getSetting('useUTC')\n                ? 0 : numberUtil.getTimezoneOffset() * 60 * 1000;\n            approxTickNum = approxTickNum || 10;\n\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            var approxInterval = span / approxTickNum;\n            var scaleLevelsLen = scaleLevels.length;\n            var idx = bisect(scaleLevels, approxInterval, 0, scaleLevelsLen);\n\n            var level = scaleLevels[Math.min(idx, scaleLevelsLen - 1)];\n            var interval = level[2];\n            // Same with interval scale if span is much larger than 1 year\n            if (level[0] === 'year') {\n                var yearSpan = span / interval;\n\n                // From \"Nice Numbers for Graph Labels\" of Graphic Gems\n                // var niceYearSpan = numberUtil.nice(yearSpan, false);\n                var yearStep = numberUtil.nice(yearSpan / approxTickNum, true);\n\n                interval *= yearStep;\n            }\n\n            var niceExtent = [\n                Math.round(mathCeil((extent[0] - timezoneOffset) / interval) * interval + timezoneOffset),\n                Math.round(mathFloor((extent[1] - timezoneOffset)/ interval) * interval + timezoneOffset)\n            ];\n\n            scaleHelper.fixExtent(niceExtent, extent);\n\n            this._stepLvl = level;\n            // Interval will be used in getTicks\n            this._interval = interval;\n            this._niceExtent = niceExtent;\n        },\n\n        parse: function (val) {\n            // val might be float.\n            return +numberUtil.parseDate(val);\n        }\n    });\n\n    zrUtil.each(['contain', 'normalize'], function (methodName) {\n        TimeScale.prototype[methodName] = function (val) {\n            return intervalScaleProto[methodName].call(this, this.parse(val));\n        };\n    });\n\n    // Steps from d3\n    var scaleLevels = [\n        // Format       step    interval\n        ['hh:mm:ss',    1,      ONE_SECOND],           // 1s\n        ['hh:mm:ss',    5,      ONE_SECOND * 5],       // 5s\n        ['hh:mm:ss',    10,     ONE_SECOND * 10],      // 10s\n        ['hh:mm:ss',    15,     ONE_SECOND * 15],      // 15s\n        ['hh:mm:ss',    30,     ONE_SECOND * 30],      // 30s\n        ['hh:mm\\nMM-dd',1,      ONE_MINUTE],          // 1m\n        ['hh:mm\\nMM-dd',5,      ONE_MINUTE * 5],      // 5m\n        ['hh:mm\\nMM-dd',10,     ONE_MINUTE * 10],     // 10m\n        ['hh:mm\\nMM-dd',15,     ONE_MINUTE * 15],     // 15m\n        ['hh:mm\\nMM-dd',30,     ONE_MINUTE * 30],     // 30m\n        ['hh:mm\\nMM-dd',1,      ONE_HOUR],        // 1h\n        ['hh:mm\\nMM-dd',2,      ONE_HOUR * 2],    // 2h\n        ['hh:mm\\nMM-dd',6,      ONE_HOUR * 6],    // 6h\n        ['hh:mm\\nMM-dd',12,     ONE_HOUR * 12],   // 12h\n        ['MM-dd\\nyyyy', 1,      ONE_DAY],   // 1d\n        ['week',        7,      ONE_DAY * 7],        // 7d\n        ['month',       1,      ONE_DAY * 31],       // 1M\n        ['quarter',     3,      ONE_DAY * 380 / 4],  // 3M\n        ['half-year',   6,      ONE_DAY * 380 / 2],  // 6M\n        ['year',        1,      ONE_DAY * 380]       // 1Y\n    ];\n\n    /**\n     * @param {module:echarts/model/Model}\n     * @return {module:echarts/scale/Time}\n     */\n    TimeScale.create = function (model) {\n        return new TimeScale({useUTC: model.ecModel.get('useUTC')});\n    };\n\n    module.exports = TimeScale;\n\n\n/***/ }),\n/* 637 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    var Gradient = __webpack_require__(507);\n    module.exports = function (ecModel) {\n        function encodeColor(seriesModel) {\n            var colorAccessPath = (seriesModel.visualColorAccessPath || 'itemStyle.normal.color').split('.');\n            var data = seriesModel.getData();\n            var color = seriesModel.get(colorAccessPath) // Set in itemStyle\n                || seriesModel.getColorFromPalette(seriesModel.get('name'));  // Default color\n\n            // FIXME Set color function or use the platte color\n            data.setVisual('color', color);\n\n            // Only visible series has each data be visual encoded\n            if (!ecModel.isSeriesFiltered(seriesModel)) {\n                if (typeof color === 'function' && !(color instanceof Gradient)) {\n                    data.each(function (idx) {\n                        data.setItemVisual(\n                            idx, 'color', color(seriesModel.getDataParams(idx))\n                        );\n                    });\n                }\n\n                // itemStyle in each data item\n                data.each(function (idx) {\n                    var itemModel = data.getItemModel(idx);\n                    var color = itemModel.get(colorAccessPath, true);\n                    if (color != null) {\n                        data.setItemVisual(idx, 'color', color);\n                    }\n                });\n            }\n        }\n        ecModel.eachRawSeries(encodeColor);\n    };\n\n\n/***/ }),\n/* 638 */\n/***/ (function(module, exports) {\n\n\n\n    module.exports = function (seriesType, defaultSymbolType, legendSymbol, ecModel, api) {\n\n        // Encoding visual for all series include which is filtered for legend drawing\n        ecModel.eachRawSeriesByType(seriesType, function (seriesModel) {\n            var data = seriesModel.getData();\n\n            var symbolType = seriesModel.get('symbol') || defaultSymbolType;\n            var symbolSize = seriesModel.get('symbolSize');\n\n            data.setVisual({\n                legendSymbol: legendSymbol || symbolType,\n                symbol: symbolType,\n                symbolSize: symbolSize\n            });\n\n            // Only visible series has each data be visual encoded\n            if (!ecModel.isSeriesFiltered(seriesModel)) {\n                if (typeof symbolSize === 'function') {\n                    data.each(function (idx) {\n                        var rawValue = seriesModel.getRawValue(idx);\n                        // FIXME\n                        var params = seriesModel.getDataParams(idx);\n                        data.setItemVisual(idx, 'symbolSize', symbolSize(rawValue, params));\n                    });\n                }\n                data.each(function (idx) {\n                    var itemModel = data.getItemModel(idx);\n                    var itemSymbolType = itemModel.getShallow('symbol', true);\n                    var itemSymbolSize = itemModel.getShallow('symbolSize', true);\n                    // If has item symbol\n                    if (itemSymbolType != null) {\n                        data.setItemVisual(idx, 'symbol', itemSymbolType);\n                    }\n                    if (itemSymbolSize != null) {\n                        // PENDING Transform symbolSize ?\n                        data.setItemVisual(idx, 'symbolSize', itemSymbolSize);\n                    }\n                });\n            }\n        });\n    };\n\n\n/***/ }),\n/* 639 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(577);\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(417)(\"53007b78\", content, true);\n\n/***/ }),\n/* 640 */,\n/* 641 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        result = wait - timeSinceLastCall;\n\n    return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = debounce;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(78)))\n\n/***/ }),\n/* 642 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar utils = __webpack_require__(538);\n\nvar has = Object.prototype.hasOwnProperty;\n\nvar defaults = {\n    allowDots: false,\n    allowPrototypes: false,\n    arrayLimit: 20,\n    decoder: utils.decode,\n    delimiter: '&',\n    depth: 5,\n    parameterLimit: 1000,\n    plainObjects: false,\n    strictNullHandling: false\n};\n\nvar parseValues = function parseQueryStringValues(str, options) {\n    var obj = {};\n    var parts = str.split(options.delimiter, options.parameterLimit === Infinity ? undefined : options.parameterLimit);\n\n    for (var i = 0; i < parts.length; ++i) {\n        var part = parts[i];\n        var pos = part.indexOf(']=') === -1 ? part.indexOf('=') : part.indexOf(']=') + 1;\n\n        var key, val;\n        if (pos === -1) {\n            key = options.decoder(part);\n            val = options.strictNullHandling ? null : '';\n        } else {\n            key = options.decoder(part.slice(0, pos));\n            val = options.decoder(part.slice(pos + 1));\n        }\n        if (has.call(obj, key)) {\n            obj[key] = [].concat(obj[key]).concat(val);\n        } else {\n            obj[key] = val;\n        }\n    }\n\n    return obj;\n};\n\nvar parseObject = function parseObjectRecursive(chain, val, options) {\n    if (!chain.length) {\n        return val;\n    }\n\n    var root = chain.shift();\n\n    var obj;\n    if (root === '[]') {\n        obj = [];\n        obj = obj.concat(parseObject(chain, val, options));\n    } else {\n        obj = options.plainObjects ? Object.create(null) : {};\n        var cleanRoot = root.charAt(0) === '[' && root.charAt(root.length - 1) === ']' ? root.slice(1, -1) : root;\n        var index = parseInt(cleanRoot, 10);\n        if (\n            !isNaN(index) &&\n            root !== cleanRoot &&\n            String(index) === cleanRoot &&\n            index >= 0 &&\n            (options.parseArrays && index <= options.arrayLimit)\n        ) {\n            obj = [];\n            obj[index] = parseObject(chain, val, options);\n        } else {\n            obj[cleanRoot] = parseObject(chain, val, options);\n        }\n    }\n\n    return obj;\n};\n\nvar parseKeys = function parseQueryStringKeys(givenKey, val, options) {\n    if (!givenKey) {\n        return;\n    }\n\n    // Transform dot notation to bracket notation\n    var key = options.allowDots ? givenKey.replace(/\\.([^.[]+)/g, '[$1]') : givenKey;\n\n    // The regex chunks\n\n    var brackets = /(\\[[^[\\]]*])/;\n    var child = /(\\[[^[\\]]*])/g;\n\n    // Get the parent\n\n    var segment = brackets.exec(key);\n    var parent = segment ? key.slice(0, segment.index) : key;\n\n    // Stash the parent if it exists\n\n    var keys = [];\n    if (parent) {\n        // If we aren't using plain objects, optionally prefix keys\n        // that would overwrite object prototype properties\n        if (!options.plainObjects && has.call(Object.prototype, parent)) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n\n        keys.push(parent);\n    }\n\n    // Loop through children appending to the array until we hit depth\n\n    var i = 0;\n    while ((segment = child.exec(key)) !== null && i < options.depth) {\n        i += 1;\n        if (!options.plainObjects && has.call(Object.prototype, segment[1].slice(1, -1))) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n        keys.push(segment[1]);\n    }\n\n    // If there's a remainder, just add whatever is left\n\n    if (segment) {\n        keys.push('[' + key.slice(segment.index) + ']');\n    }\n\n    return parseObject(keys, val, options);\n};\n\nmodule.exports = function (str, opts) {\n    var options = opts || {};\n\n    if (options.decoder !== null && options.decoder !== undefined && typeof options.decoder !== 'function') {\n        throw new TypeError('Decoder has to be a function.');\n    }\n\n    options.delimiter = typeof options.delimiter === 'string' || utils.isRegExp(options.delimiter) ? options.delimiter : defaults.delimiter;\n    options.depth = typeof options.depth === 'number' ? options.depth : defaults.depth;\n    options.arrayLimit = typeof options.arrayLimit === 'number' ? options.arrayLimit : defaults.arrayLimit;\n    options.parseArrays = options.parseArrays !== false;\n    options.decoder = typeof options.decoder === 'function' ? options.decoder : defaults.decoder;\n    options.allowDots = typeof options.allowDots === 'boolean' ? options.allowDots : defaults.allowDots;\n    options.plainObjects = typeof options.plainObjects === 'boolean' ? options.plainObjects : defaults.plainObjects;\n    options.allowPrototypes = typeof options.allowPrototypes === 'boolean' ? options.allowPrototypes : defaults.allowPrototypes;\n    options.parameterLimit = typeof options.parameterLimit === 'number' ? options.parameterLimit : defaults.parameterLimit;\n    options.strictNullHandling = typeof options.strictNullHandling === 'boolean' ? options.strictNullHandling : defaults.strictNullHandling;\n\n    if (str === '' || str === null || typeof str === 'undefined') {\n        return options.plainObjects ? Object.create(null) : {};\n    }\n\n    var tempObj = typeof str === 'string' ? parseValues(str, options) : str;\n    var obj = options.plainObjects ? Object.create(null) : {};\n\n    // Iterate over the keys and setup the new object\n\n    var keys = Object.keys(tempObj);\n    for (var i = 0; i < keys.length; ++i) {\n        var key = keys[i];\n        var newObj = parseKeys(key, tempObj[key], options);\n        obj = utils.merge(obj, newObj, options);\n    }\n\n    return utils.compact(obj);\n};\n\n\n/***/ }),\n/* 643 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar utils = __webpack_require__(538);\nvar formats = __webpack_require__(537);\n\nvar arrayPrefixGenerators = {\n    brackets: function brackets(prefix) { // eslint-disable-line func-name-matching\n        return prefix + '[]';\n    },\n    indices: function indices(prefix, key) { // eslint-disable-line func-name-matching\n        return prefix + '[' + key + ']';\n    },\n    repeat: function repeat(prefix) { // eslint-disable-line func-name-matching\n        return prefix;\n    }\n};\n\nvar toISO = Date.prototype.toISOString;\n\nvar defaults = {\n    delimiter: '&',\n    encode: true,\n    encoder: utils.encode,\n    encodeValuesOnly: false,\n    serializeDate: function serializeDate(date) { // eslint-disable-line func-name-matching\n        return toISO.call(date);\n    },\n    skipNulls: false,\n    strictNullHandling: false\n};\n\nvar stringify = function stringify( // eslint-disable-line func-name-matching\n    object,\n    prefix,\n    generateArrayPrefix,\n    strictNullHandling,\n    skipNulls,\n    encoder,\n    filter,\n    sort,\n    allowDots,\n    serializeDate,\n    formatter,\n    encodeValuesOnly\n) {\n    var obj = object;\n    if (typeof filter === 'function') {\n        obj = filter(prefix, obj);\n    } else if (obj instanceof Date) {\n        obj = serializeDate(obj);\n    } else if (obj === null) {\n        if (strictNullHandling) {\n            return encoder && !encodeValuesOnly ? encoder(prefix) : prefix;\n        }\n\n        obj = '';\n    }\n\n    if (typeof obj === 'string' || typeof obj === 'number' || typeof obj === 'boolean' || utils.isBuffer(obj)) {\n        if (encoder) {\n            var keyValue = encodeValuesOnly ? prefix : encoder(prefix);\n            return [formatter(keyValue) + '=' + formatter(encoder(obj))];\n        }\n        return [formatter(prefix) + '=' + formatter(String(obj))];\n    }\n\n    var values = [];\n\n    if (typeof obj === 'undefined') {\n        return values;\n    }\n\n    var objKeys;\n    if (Array.isArray(filter)) {\n        objKeys = filter;\n    } else {\n        var keys = Object.keys(obj);\n        objKeys = sort ? keys.sort(sort) : keys;\n    }\n\n    for (var i = 0; i < objKeys.length; ++i) {\n        var key = objKeys[i];\n\n        if (skipNulls && obj[key] === null) {\n            continue;\n        }\n\n        if (Array.isArray(obj)) {\n            values = values.concat(stringify(\n                obj[key],\n                generateArrayPrefix(prefix, key),\n                generateArrayPrefix,\n                strictNullHandling,\n                skipNulls,\n                encoder,\n                filter,\n                sort,\n                allowDots,\n                serializeDate,\n                formatter,\n                encodeValuesOnly\n            ));\n        } else {\n            values = values.concat(stringify(\n                obj[key],\n                prefix + (allowDots ? '.' + key : '[' + key + ']'),\n                generateArrayPrefix,\n                strictNullHandling,\n                skipNulls,\n                encoder,\n                filter,\n                sort,\n                allowDots,\n                serializeDate,\n                formatter,\n                encodeValuesOnly\n            ));\n        }\n    }\n\n    return values;\n};\n\nmodule.exports = function (object, opts) {\n    var obj = object;\n    var options = opts || {};\n\n    if (options.encoder !== null && options.encoder !== undefined && typeof options.encoder !== 'function') {\n        throw new TypeError('Encoder has to be a function.');\n    }\n\n    var delimiter = typeof options.delimiter === 'undefined' ? defaults.delimiter : options.delimiter;\n    var strictNullHandling = typeof options.strictNullHandling === 'boolean' ? options.strictNullHandling : defaults.strictNullHandling;\n    var skipNulls = typeof options.skipNulls === 'boolean' ? options.skipNulls : defaults.skipNulls;\n    var encode = typeof options.encode === 'boolean' ? options.encode : defaults.encode;\n    var encoder = typeof options.encoder === 'function' ? options.encoder : defaults.encoder;\n    var sort = typeof options.sort === 'function' ? options.sort : null;\n    var allowDots = typeof options.allowDots === 'undefined' ? false : options.allowDots;\n    var serializeDate = typeof options.serializeDate === 'function' ? options.serializeDate : defaults.serializeDate;\n    var encodeValuesOnly = typeof options.encodeValuesOnly === 'boolean' ? options.encodeValuesOnly : defaults.encodeValuesOnly;\n    if (typeof options.format === 'undefined') {\n        options.format = formats.default;\n    } else if (!Object.prototype.hasOwnProperty.call(formats.formatters, options.format)) {\n        throw new TypeError('Unknown format option provided.');\n    }\n    var formatter = formats.formatters[options.format];\n    var objKeys;\n    var filter;\n\n    if (typeof options.filter === 'function') {\n        filter = options.filter;\n        obj = filter('', obj);\n    } else if (Array.isArray(options.filter)) {\n        filter = options.filter;\n        objKeys = filter;\n    }\n\n    var keys = [];\n\n    if (typeof obj !== 'object' || obj === null) {\n        return '';\n    }\n\n    var arrayFormat;\n    if (options.arrayFormat in arrayPrefixGenerators) {\n        arrayFormat = options.arrayFormat;\n    } else if ('indices' in options) {\n        arrayFormat = options.indices ? 'indices' : 'repeat';\n    } else {\n        arrayFormat = 'indices';\n    }\n\n    var generateArrayPrefix = arrayPrefixGenerators[arrayFormat];\n\n    if (!objKeys) {\n        objKeys = Object.keys(obj);\n    }\n\n    if (sort) {\n        objKeys.sort(sort);\n    }\n\n    for (var i = 0; i < objKeys.length; ++i) {\n        var key = objKeys[i];\n\n        if (skipNulls && obj[key] === null) {\n            continue;\n        }\n\n        keys = keys.concat(stringify(\n            obj[key],\n            key,\n            generateArrayPrefix,\n            strictNullHandling,\n            skipNulls,\n            encode ? encoder : null,\n            filter,\n            sort,\n            allowDots,\n            serializeDate,\n            formatter,\n            encodeValuesOnly\n        ));\n    }\n\n    return keys.join(delimiter);\n};\n\n\n/***/ }),\n/* 644 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n/* styles */\n__webpack_require__(639)\n\nvar Component = __webpack_require__(176)(\n  /* script */\n  __webpack_require__(563),\n  /* template */\n  __webpack_require__(646),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n/* 645 */,\n/* 646 */\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"echarts\"\n  })\n},staticRenderFns: []}\n\n/***/ }),\n/* 647 */,\n/* 648 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Handler\n * @module zrender/Handler\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (shenyi.914@gmail.com)\n */\n\n\n    var util = __webpack_require__(453);\n    var Draggable = __webpack_require__(682);\n\n    var Eventful = __webpack_require__(476);\n\n    var SILENT = 'silent';\n\n    function makeEventPacket(eveType, targetInfo, event) {\n        return {\n            type: eveType,\n            event: event,\n            // target can only be an element that is not silent.\n            target: targetInfo.target,\n            // topTarget can be a silent element.\n            topTarget: targetInfo.topTarget,\n            cancelBubble: false,\n            offsetX: event.zrX,\n            offsetY: event.zrY,\n            gestureEvent: event.gestureEvent,\n            pinchX: event.pinchX,\n            pinchY: event.pinchY,\n            pinchScale: event.pinchScale,\n            wheelDelta: event.zrDelta,\n            zrByTouch: event.zrByTouch\n        };\n    }\n\n    function EmptyProxy () {}\n    EmptyProxy.prototype.dispose = function () {};\n\n    var handlerNames = [\n        'click', 'dblclick', 'mousewheel', 'mouseout',\n        'mouseup', 'mousedown', 'mousemove', 'contextmenu'\n    ];\n    /**\n     * @alias module:zrender/Handler\n     * @constructor\n     * @extends module:zrender/mixin/Eventful\n     * @param {module:zrender/Storage} storage Storage instance.\n     * @param {module:zrender/Painter} painter Painter instance.\n     * @param {module:zrender/dom/HandlerProxy} proxy HandlerProxy instance.\n     * @param {HTMLElement} painterRoot painter.root (not painter.getViewportRoot()).\n     */\n    var Handler = function(storage, painter, proxy, painterRoot) {\n        Eventful.call(this);\n\n        this.storage = storage;\n\n        this.painter = painter;\n\n        this.painterRoot = painterRoot;\n\n        proxy = proxy || new EmptyProxy();\n\n        /**\n         * Proxy of event. can be Dom, WebGLSurface, etc.\n         */\n        this.proxy = proxy;\n\n        // Attach handler\n        proxy.handler = this;\n\n        /**\n         * {target, topTarget}\n         * @private\n         * @type {Object}\n         */\n        this._hovered = {};\n\n        /**\n         * @private\n         * @type {Date}\n         */\n        this._lastTouchMoment;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._lastX;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._lastY;\n\n\n        Draggable.call(this);\n\n        util.each(handlerNames, function (name) {\n            proxy.on && proxy.on(name, this[name], this);\n        }, this);\n    };\n\n    Handler.prototype = {\n\n        constructor: Handler,\n\n        mousemove: function (event) {\n            var x = event.zrX;\n            var y = event.zrY;\n\n            var lastHovered = this._hovered;\n            var hovered = this._hovered = this.findHover(x, y);\n            var hoveredTarget = hovered.target;\n            var lastHoveredTarget = lastHovered.target;\n\n            var proxy = this.proxy;\n            proxy.setCursor && proxy.setCursor(hoveredTarget ? hoveredTarget.cursor : 'default');\n\n            // Mouse out on previous hovered element\n            if (lastHoveredTarget && hoveredTarget !== lastHoveredTarget && lastHoveredTarget.__zr) {\n                this.dispatchToElement(lastHovered, 'mouseout', event);\n            }\n\n            // Mouse moving on one element\n            this.dispatchToElement(hovered, 'mousemove', event);\n\n            // Mouse over on a new element\n            if (hoveredTarget && hoveredTarget !== lastHoveredTarget) {\n                this.dispatchToElement(hovered, 'mouseover', event);\n            }\n        },\n\n        mouseout: function (event) {\n            this.dispatchToElement(this._hovered, 'mouseout', event);\n\n            // There might be some doms created by upper layer application\n            // at the same level of painter.getViewportRoot() (e.g., tooltip\n            // dom created by echarts), where 'globalout' event should not\n            // be triggered when mouse enters these doms. (But 'mouseout'\n            // should be triggered at the original hovered element as usual).\n            var element = event.toElement || event.relatedTarget;\n            var innerDom;\n            do {\n                element = element && element.parentNode;\n            }\n            while (element && element.nodeType != 9 && !(\n                innerDom = element === this.painterRoot\n            ));\n\n            !innerDom && this.trigger('globalout', {event: event});\n        },\n\n        /**\n         * Resize\n         */\n        resize: function (event) {\n            this._hovered = {};\n        },\n\n        /**\n         * Dispatch event\n         * @param {string} eventName\n         * @param {event=} eventArgs\n         */\n        dispatch: function (eventName, eventArgs) {\n            var handler = this[eventName];\n            handler && handler.call(this, eventArgs);\n        },\n\n        /**\n         * Dispose\n         */\n        dispose: function () {\n\n            this.proxy.dispose();\n\n            this.storage =\n            this.proxy =\n            this.painter = null;\n        },\n\n        /**\n         * 设置默认的cursor style\n         * @param {string} [cursorStyle='default'] 例如 crosshair\n         */\n        setCursorStyle: function (cursorStyle) {\n            var proxy = this.proxy;\n            proxy.setCursor && proxy.setCursor(cursorStyle);\n        },\n\n        /**\n         * 事件分发代理\n         *\n         * @private\n         * @param {Object} targetInfo {target, topTarget} 目标图形元素\n         * @param {string} eventName 事件名称\n         * @param {Object} event 事件对象\n         */\n        dispatchToElement: function (targetInfo, eventName, event) {\n            targetInfo = targetInfo || {};\n            var eventHandler = 'on' + eventName;\n            var eventPacket = makeEventPacket(eventName, targetInfo, event);\n\n            var el = targetInfo.target;\n            while (el) {\n                el[eventHandler]\n                    && (eventPacket.cancelBubble = el[eventHandler].call(el, eventPacket));\n\n                el.trigger(eventName, eventPacket);\n\n                el = el.parent;\n\n                if (eventPacket.cancelBubble) {\n                    break;\n                }\n            }\n\n            if (!eventPacket.cancelBubble) {\n                // 冒泡到顶级 zrender 对象\n                this.trigger(eventName, eventPacket);\n                // 分发事件到用户自定义层\n                // 用户有可能在全局 click 事件中 dispose，所以需要判断下 painter 是否存在\n                this.painter && this.painter.eachOtherLayer(function (layer) {\n                    if (typeof(layer[eventHandler]) == 'function') {\n                        layer[eventHandler].call(layer, eventPacket);\n                    }\n                    if (layer.trigger) {\n                        layer.trigger(eventName, eventPacket);\n                    }\n                });\n            }\n        },\n\n        /**\n         * @private\n         * @param {number} x\n         * @param {number} y\n         * @param {module:zrender/graphic/Displayable} exclude\n         * @return {model:zrender/Element}\n         * @method\n         */\n        findHover: function(x, y, exclude) {\n            var list = this.storage.getDisplayList();\n            var out = {};\n\n            for (var i = list.length - 1; i >= 0 ; i--) {\n                var hoverCheckResult;\n                if (list[i] !== exclude\n                    // getDisplayList may include ignored item in VML mode\n                    && !list[i].ignore\n                    && (hoverCheckResult = isHover(list[i], x, y))\n                ) {\n                    !out.topTarget && (out.topTarget = list[i]);\n                    if (hoverCheckResult !== SILENT) {\n                        out.target = list[i];\n                        break;\n                    }\n                }\n            }\n\n            return out;\n        }\n    };\n\n    // Common handlers\n    util.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n        Handler.prototype[name] = function (event) {\n            // Find hover again to avoid click event is dispatched manually. Or click is triggered without mouseover\n            var hovered = this.findHover(event.zrX, event.zrY);\n            var hoveredTarget = hovered.target;\n\n            if (name === 'mousedown') {\n                this._downel = hoveredTarget;\n                // In case click triggered before mouseup\n                this._upel = hoveredTarget;\n            }\n            else if (name === 'mosueup') {\n                this._upel = hoveredTarget;\n            }\n            else if (name === 'click') {\n                if (this._downel !== this._upel) {\n                    return;\n                }\n            }\n\n            this.dispatchToElement(hovered, name, event);\n        };\n    });\n\n    function isHover(displayable, x, y) {\n        if (displayable[displayable.rectHover ? 'rectContain' : 'contain'](x, y)) {\n            var el = displayable;\n            var isSilent;\n            while (el) {\n                // If clipped by ancestor.\n                // FIXME: If clipPath has neither stroke nor fill,\n                // el.clipPath.contain(x, y) will always return false.\n                if (el.clipPath && !el.clipPath.contain(x, y))  {\n                    return false;\n                }\n                if (el.silent) {\n                    isSilent = true;\n                }\n                el = el.parent;\n            }\n            return isSilent ? SILENT : true;\n        }\n\n        return false;\n    }\n\n    util.mixin(Handler, Eventful);\n    util.mixin(Handler, Draggable);\n\n    module.exports = Handler;\n\n\n\n/***/ }),\n/* 649 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module zrender/Layer\n * @author pissang(https://www.github.com/pissang)\n */\n\n\n    var util = __webpack_require__(453);\n    var config = __webpack_require__(486);\n    var Style = __webpack_require__(548);\n    var Pattern = __webpack_require__(547);\n\n    function returnFalse() {\n        return false;\n    }\n\n    /**\n     * 创建dom\n     *\n     * @inner\n     * @param {string} id dom id 待用\n     * @param {string} type dom type，such as canvas, div etc.\n     * @param {Painter} painter painter instance\n     * @param {number} number\n     */\n    function createDom(id, type, painter, dpr) {\n        var newDom = document.createElement(type);\n        var width = painter.getWidth();\n        var height = painter.getHeight();\n\n        var newDomStyle = newDom.style;\n        // 没append呢，请原谅我这样写，清晰~\n        newDomStyle.position = 'absolute';\n        newDomStyle.left = 0;\n        newDomStyle.top = 0;\n        newDomStyle.width = width + 'px';\n        newDomStyle.height = height + 'px';\n        newDom.width = width * dpr;\n        newDom.height = height * dpr;\n\n        // id不作为索引用，避免可能造成的重名，定义为私有属性\n        newDom.setAttribute('data-zr-dom-id', id);\n        return newDom;\n    }\n\n    /**\n     * @alias module:zrender/Layer\n     * @constructor\n     * @extends module:zrender/mixin/Transformable\n     * @param {string} id\n     * @param {module:zrender/Painter} painter\n     * @param {number} [dpr]\n     */\n    var Layer = function(id, painter, dpr) {\n        var dom;\n        dpr = dpr || config.devicePixelRatio;\n        if (typeof id === 'string') {\n            dom = createDom(id, 'canvas', painter, dpr);\n        }\n        // Not using isDom because in node it will return false\n        else if (util.isObject(id)) {\n            dom = id;\n            id = dom.id;\n        }\n        this.id = id;\n        this.dom = dom;\n\n        var domStyle = dom.style;\n        if (domStyle) { // Not in node\n            dom.onselectstart = returnFalse; // 避免页面选中的尴尬\n            domStyle['-webkit-user-select'] = 'none';\n            domStyle['user-select'] = 'none';\n            domStyle['-webkit-touch-callout'] = 'none';\n            domStyle['-webkit-tap-highlight-color'] = 'rgba(0,0,0,0)';\n            domStyle['padding'] = 0;\n            domStyle['margin'] = 0;\n            domStyle['border-width'] = 0;\n        }\n\n        this.domBack = null;\n        this.ctxBack = null;\n\n        this.painter = painter;\n\n        this.config = null;\n\n        // Configs\n        /**\n         * 每次清空画布的颜色\n         * @type {string}\n         * @default 0\n         */\n        this.clearColor = 0;\n        /**\n         * 是否开启动态模糊\n         * @type {boolean}\n         * @default false\n         */\n        this.motionBlur = false;\n        /**\n         * 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n         * @type {number}\n         * @default 0.7\n         */\n        this.lastFrameAlpha = 0.7;\n\n        /**\n         * Layer dpr\n         * @type {number}\n         */\n        this.dpr = dpr;\n    };\n\n    Layer.prototype = {\n\n        constructor: Layer,\n\n        elCount: 0,\n\n        __dirty: true,\n\n        initContext: function () {\n            this.ctx = this.dom.getContext('2d');\n\n            this.ctx.dpr = this.dpr;\n        },\n\n        createBackBuffer: function () {\n            var dpr = this.dpr;\n\n            this.domBack = createDom('back-' + this.id, 'canvas', this.painter, dpr);\n            this.ctxBack = this.domBack.getContext('2d');\n\n            if (dpr != 1) {\n                this.ctxBack.scale(dpr, dpr);\n            }\n        },\n\n        /**\n         * @param  {number} width\n         * @param  {number} height\n         */\n        resize: function (width, height) {\n            var dpr = this.dpr;\n\n            var dom = this.dom;\n            var domStyle = dom.style;\n            var domBack = this.domBack;\n\n            domStyle.width = width + 'px';\n            domStyle.height = height + 'px';\n\n            dom.width = width * dpr;\n            dom.height = height * dpr;\n\n            if (domBack) {\n                domBack.width = width * dpr;\n                domBack.height = height * dpr;\n\n                if (dpr != 1) {\n                    this.ctxBack.scale(dpr, dpr);\n                }\n            }\n        },\n\n        /**\n         * 清空该层画布\n         * @param {boolean} clearAll Clear all with out motion blur\n         */\n        clear: function (clearAll) {\n            var dom = this.dom;\n            var ctx = this.ctx;\n            var width = dom.width;\n            var height = dom.height;\n\n            var clearColor = this.clearColor;\n            var haveMotionBLur = this.motionBlur && !clearAll;\n            var lastFrameAlpha = this.lastFrameAlpha;\n\n            var dpr = this.dpr;\n\n            if (haveMotionBLur) {\n                if (!this.domBack) {\n                    this.createBackBuffer();\n                }\n\n                this.ctxBack.globalCompositeOperation = 'copy';\n                this.ctxBack.drawImage(\n                    dom, 0, 0,\n                    width / dpr,\n                    height / dpr\n                );\n            }\n\n            ctx.clearRect(0, 0, width, height);\n            if (clearColor) {\n                var clearColorGradientOrPattern;\n                // Gradient\n                if (clearColor.colorStops) {\n                    // Cache canvas gradient\n                    clearColorGradientOrPattern = clearColor.__canvasGradient || Style.getGradient(ctx, clearColor, {\n                        x: 0,\n                        y: 0,\n                        width: width,\n                        height: height\n                    });\n\n                    clearColor.__canvasGradient = clearColorGradientOrPattern;\n                }\n                // Pattern\n                else if (clearColor.image) {\n                    clearColorGradientOrPattern = Pattern.prototype.getCanvasPattern.call(clearColor, ctx);\n                }\n                ctx.save();\n                ctx.fillStyle = clearColorGradientOrPattern || clearColor;\n                ctx.fillRect(0, 0, width, height);\n                ctx.restore();\n            }\n\n            if (haveMotionBLur) {\n                var domBack = this.domBack;\n                ctx.save();\n                ctx.globalAlpha = lastFrameAlpha;\n                ctx.drawImage(domBack, 0, 0, width, height);\n                ctx.restore();\n            }\n        }\n    };\n\n    module.exports = Layer;\n\n\n/***/ }),\n/* 650 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Default canvas painter\n * @module zrender/Painter\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\n \n\n    var config = __webpack_require__(486);\n    var util = __webpack_require__(453);\n    var log = __webpack_require__(545);\n    var BoundingRect = __webpack_require__(468);\n    var timsort = __webpack_require__(505);\n\n    var Layer = __webpack_require__(649);\n\n    var requestAnimationFrame = __webpack_require__(541);\n\n    // PENDIGN\n    // Layer exceeds MAX_PROGRESSIVE_LAYER_NUMBER may have some problem when flush directly second time.\n    //\n    // Maximum progressive layer. When exceeding this number. All elements will be drawed in the last layer.\n    var MAX_PROGRESSIVE_LAYER_NUMBER = 5;\n\n    function parseInt10(val) {\n        return parseInt(val, 10);\n    }\n\n    function isLayerValid(layer) {\n        if (!layer) {\n            return false;\n        }\n\n        if (layer.__builtin__) {\n            return true;\n        }\n\n        if (typeof(layer.resize) !== 'function'\n            || typeof(layer.refresh) !== 'function'\n        ) {\n            return false;\n        }\n\n        return true;\n    }\n\n    function preProcessLayer(layer) {\n        layer.__unusedCount++;\n    }\n\n    function postProcessLayer(layer) {\n        if (layer.__unusedCount == 1) {\n            layer.clear();\n        }\n    }\n\n    var tmpRect = new BoundingRect(0, 0, 0, 0);\n    var viewRect = new BoundingRect(0, 0, 0, 0);\n    function isDisplayableCulled(el, width, height) {\n        tmpRect.copy(el.getBoundingRect());\n        if (el.transform) {\n            tmpRect.applyTransform(el.transform);\n        }\n        viewRect.width = width;\n        viewRect.height = height;\n        return !tmpRect.intersect(viewRect);\n    }\n\n    function isClipPathChanged(clipPaths, prevClipPaths) {\n        if (clipPaths == prevClipPaths) { // Can both be null or undefined\n            return false;\n        }\n\n        if (!clipPaths || !prevClipPaths || (clipPaths.length !== prevClipPaths.length)) {\n            return true;\n        }\n        for (var i = 0; i < clipPaths.length; i++) {\n            if (clipPaths[i] !== prevClipPaths[i]) {\n                return true;\n            }\n        }\n    }\n\n    function doClip(clipPaths, ctx) {\n        for (var i = 0; i < clipPaths.length; i++) {\n            var clipPath = clipPaths[i];\n\n            clipPath.setTransform(ctx);\n            ctx.beginPath();\n            clipPath.buildPath(ctx, clipPath.shape);\n            ctx.clip();\n            // Transform back\n            clipPath.restoreTransform(ctx);\n        }\n    }\n\n    function createRoot(width, height) {\n        var domRoot = document.createElement('div');\n\n        // domRoot.onselectstart = returnFalse; // 避免页面选中的尴尬\n        domRoot.style.cssText = [\n            'position:relative',\n            'overflow:hidden',\n            'width:' + width + 'px',\n            'height:' + height + 'px',\n            'padding:0',\n            'margin:0',\n            'border-width:0'\n        ].join(';') + ';';\n\n        return domRoot;\n    }\n\n    /**\n     * @alias module:zrender/Painter\n     * @constructor\n     * @param {HTMLElement} root 绘图容器\n     * @param {module:zrender/Storage} storage\n     * @param {Ojbect} opts\n     */\n    var Painter = function (root, storage, opts) {\n        // In node environment using node-canvas\n        var singleCanvas = !root.nodeName // In node ?\n            || root.nodeName.toUpperCase() === 'CANVAS';\n\n        this._opts = opts = util.extend({}, opts || {});\n\n        /**\n         * @type {number}\n         */\n        this.dpr = opts.devicePixelRatio || config.devicePixelRatio;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this._singleCanvas = singleCanvas;\n        /**\n         * 绘图容器\n         * @type {HTMLElement}\n         */\n        this.root = root;\n\n        var rootStyle = root.style;\n\n        if (rootStyle) {\n            rootStyle['-webkit-tap-highlight-color'] = 'transparent';\n            rootStyle['-webkit-user-select'] =\n            rootStyle['user-select'] =\n            rootStyle['-webkit-touch-callout'] = 'none';\n\n            root.innerHTML = '';\n        }\n\n        /**\n         * @type {module:zrender/Storage}\n         */\n        this.storage = storage;\n\n        /**\n         * @type {Array.<number>}\n         * @private\n         */\n        var zlevelList = this._zlevelList = [];\n\n        /**\n         * @type {Object.<string, module:zrender/Layer>}\n         * @private\n         */\n        var layers = this._layers = {};\n\n        /**\n         * @type {Object.<string, Object>}\n         * @type {private}\n         */\n        this._layerConfig = {};\n\n        if (!singleCanvas) {\n            this._width = this._getSize(0);\n            this._height = this._getSize(1);\n\n            var domRoot = this._domRoot = createRoot(\n                this._width, this._height\n            );\n            root.appendChild(domRoot);\n        }\n        else {\n            if (opts.width != null) {\n                root.width = opts.width;\n            }\n            if (opts.height != null) {\n                root.height = opts.height;\n            }\n            // Use canvas width and height directly\n            var width = root.width;\n            var height = root.height;\n            this._width = width;\n            this._height = height;\n\n            // Create layer if only one given canvas\n            // Device pixel ratio is fixed to 1 because given canvas has its specified width and height\n            var mainLayer = new Layer(root, this, 1);\n            mainLayer.initContext();\n            // FIXME Use canvas width and height\n            // mainLayer.resize(width, height);\n            layers[0] = mainLayer;\n            zlevelList.push(0);\n\n            this._domRoot = root;\n        }\n\n        // Layers for progressive rendering\n        this._progressiveLayers = [];\n\n        /**\n         * @type {module:zrender/Layer}\n         * @private\n         */\n        this._hoverlayer;\n\n        this._hoverElements = [];\n    };\n\n    Painter.prototype = {\n\n        constructor: Painter,\n\n        /**\n         * If painter use a single canvas\n         * @return {boolean}\n         */\n        isSingleCanvas: function () {\n            return this._singleCanvas;\n        },\n        /**\n         * @return {HTMLDivElement}\n         */\n        getViewportRoot: function () {\n            return this._domRoot;\n        },\n\n        /**\n         * 刷新\n         * @param {boolean} [paintAll=false] 强制绘制所有displayable\n         */\n        refresh: function (paintAll) {\n\n            var list = this.storage.getDisplayList(true);\n\n            var zlevelList = this._zlevelList;\n\n            this._paintList(list, paintAll);\n\n            // Paint custum layers\n            for (var i = 0; i < zlevelList.length; i++) {\n                var z = zlevelList[i];\n                var layer = this._layers[z];\n                if (!layer.__builtin__ && layer.refresh) {\n                    layer.refresh();\n                }\n            }\n\n            this.refreshHover();\n\n            if (this._progressiveLayers.length) {\n                this._startProgessive();\n            }\n\n            return this;\n        },\n\n        addHover: function (el, hoverStyle) {\n            if (el.__hoverMir) {\n                return;\n            }\n            var elMirror = new el.constructor({\n                style: el.style,\n                shape: el.shape\n            });\n            elMirror.__from = el;\n            el.__hoverMir = elMirror;\n            elMirror.setStyle(hoverStyle);\n            this._hoverElements.push(elMirror);\n        },\n\n        removeHover: function (el) {\n            var elMirror = el.__hoverMir;\n            var hoverElements = this._hoverElements;\n            var idx = util.indexOf(hoverElements, elMirror);\n            if (idx >= 0) {\n                hoverElements.splice(idx, 1);\n            }\n            el.__hoverMir = null;\n        },\n\n        clearHover: function (el) {\n            var hoverElements = this._hoverElements;\n            for (var i = 0; i < hoverElements.length; i++) {\n                var from = hoverElements[i].__from;\n                if (from) {\n                    from.__hoverMir = null;\n                }\n            }\n            hoverElements.length = 0;\n        },\n\n        refreshHover: function () {\n            var hoverElements = this._hoverElements;\n            var len = hoverElements.length;\n            var hoverLayer = this._hoverlayer;\n            hoverLayer && hoverLayer.clear();\n\n            if (!len) {\n                return;\n            }\n            timsort(hoverElements, this.storage.displayableSortFunc);\n\n            // Use a extream large zlevel\n            // FIXME?\n            if (!hoverLayer) {\n                hoverLayer = this._hoverlayer = this.getLayer(1e5);\n            }\n\n            var scope = {};\n            hoverLayer.ctx.save();\n            for (var i = 0; i < len;) {\n                var el = hoverElements[i];\n                var originalEl = el.__from;\n                // Original el is removed\n                // PENDING\n                if (!(originalEl && originalEl.__zr)) {\n                    hoverElements.splice(i, 1);\n                    originalEl.__hoverMir = null;\n                    len--;\n                    continue;\n                }\n                i++;\n\n                // Use transform\n                // FIXME style and shape ?\n                if (!originalEl.invisible) {\n                    el.transform = originalEl.transform;\n                    el.invTransform = originalEl.invTransform;\n                    el.__clipPaths = originalEl.__clipPaths;\n                    // el.\n                    this._doPaintEl(el, hoverLayer, true, scope);\n                }\n            }\n            hoverLayer.ctx.restore();\n        },\n\n        _startProgessive: function () {\n            var self = this;\n\n            if (!self._furtherProgressive) {\n                return;\n            }\n\n            // Use a token to stop progress steps triggered by\n            // previous zr.refresh calling.\n            var token = self._progressiveToken = +new Date();\n\n            self._progress++;\n            requestAnimationFrame(step);\n\n            function step() {\n                // In case refreshed or disposed\n                if (token === self._progressiveToken && self.storage) {\n\n                    self._doPaintList(self.storage.getDisplayList());\n\n                    if (self._furtherProgressive) {\n                        self._progress++;\n                        requestAnimationFrame(step);\n                    }\n                    else {\n                        self._progressiveToken = -1;\n                    }\n                }\n            }\n        },\n\n        _clearProgressive: function () {\n            this._progressiveToken = -1;\n            this._progress = 0;\n            util.each(this._progressiveLayers, function (layer) {\n                layer.__dirty && layer.clear();\n            });\n        },\n\n        _paintList: function (list, paintAll) {\n\n            if (paintAll == null) {\n                paintAll = false;\n            }\n\n            this._updateLayerStatus(list);\n\n            this._clearProgressive();\n\n            this.eachBuiltinLayer(preProcessLayer);\n\n            this._doPaintList(list, paintAll);\n\n            this.eachBuiltinLayer(postProcessLayer);\n        },\n\n        _doPaintList: function (list, paintAll) {\n            var currentLayer;\n            var currentZLevel;\n            var ctx;\n\n            // var invTransform = [];\n            var scope;\n\n            var progressiveLayerIdx = 0;\n            var currentProgressiveLayer;\n\n            var width = this._width;\n            var height = this._height;\n            var layerProgress;\n            var frame = this._progress;\n            function flushProgressiveLayer(layer) {\n                var dpr = ctx.dpr || 1;\n                ctx.save();\n                ctx.globalAlpha = 1;\n                ctx.shadowBlur = 0;\n                // Avoid layer don't clear in next progressive frame\n                currentLayer.__dirty = true;\n                ctx.setTransform(1, 0, 0, 1, 0, 0);\n                ctx.drawImage(layer.dom, 0, 0, width * dpr, height * dpr);\n                ctx.restore();\n            }\n\n            for (var i = 0, l = list.length; i < l; i++) {\n                var el = list[i];\n                var elZLevel = this._singleCanvas ? 0 : el.zlevel;\n\n                var elFrame = el.__frame;\n\n                // Flush at current context\n                // PENDING\n                if (elFrame < 0 && currentProgressiveLayer) {\n                    flushProgressiveLayer(currentProgressiveLayer);\n                    currentProgressiveLayer = null;\n                }\n\n                // Change draw layer\n                if (currentZLevel !== elZLevel) {\n                    if (ctx) {\n                        ctx.restore();\n                    }\n\n                    // Reset scope\n                    scope = {};\n\n                    // Only 0 zlevel if only has one canvas\n                    currentZLevel = elZLevel;\n                    currentLayer = this.getLayer(currentZLevel);\n\n                    if (!currentLayer.__builtin__) {\n                        log(\n                            'ZLevel ' + currentZLevel\n                            + ' has been used by unkown layer ' + currentLayer.id\n                        );\n                    }\n\n                    ctx = currentLayer.ctx;\n                    ctx.save();\n\n                    // Reset the count\n                    currentLayer.__unusedCount = 0;\n\n                    if (currentLayer.__dirty || paintAll) {\n                        currentLayer.clear();\n                    }\n                }\n\n                if (!(currentLayer.__dirty || paintAll)) {\n                    continue;\n                }\n\n                if (elFrame >= 0) {\n                    // Progressive layer changed\n                    if (!currentProgressiveLayer) {\n                        currentProgressiveLayer = this._progressiveLayers[\n                            Math.min(progressiveLayerIdx++, MAX_PROGRESSIVE_LAYER_NUMBER - 1)\n                        ];\n\n                        currentProgressiveLayer.ctx.save();\n                        currentProgressiveLayer.renderScope = {};\n\n                        if (currentProgressiveLayer\n                            && (currentProgressiveLayer.__progress > currentProgressiveLayer.__maxProgress)\n                        ) {\n                            // flushProgressiveLayer(currentProgressiveLayer);\n                            // Quick jump all progressive elements\n                            // All progressive element are not dirty, jump over and flush directly\n                            i = currentProgressiveLayer.__nextIdxNotProg - 1;\n                            // currentProgressiveLayer = null;\n                            continue;\n                        }\n\n                        layerProgress = currentProgressiveLayer.__progress;\n\n                        if (!currentProgressiveLayer.__dirty) {\n                            // Keep rendering\n                            frame = layerProgress;\n                        }\n\n                        currentProgressiveLayer.__progress = frame + 1;\n                    }\n\n                    if (elFrame === frame) {\n                        this._doPaintEl(el, currentProgressiveLayer, true, currentProgressiveLayer.renderScope);\n                    }\n                }\n                else {\n                    this._doPaintEl(el, currentLayer, paintAll, scope);\n                }\n\n                el.__dirty = false;\n            }\n\n            if (currentProgressiveLayer) {\n                flushProgressiveLayer(currentProgressiveLayer);\n            }\n\n            // Restore the lastLayer ctx\n            ctx && ctx.restore();\n            // If still has clipping state\n            // if (scope.prevElClipPaths) {\n            //     ctx.restore();\n            // }\n\n            this._furtherProgressive = false;\n            util.each(this._progressiveLayers, function (layer) {\n                if (layer.__maxProgress >= layer.__progress) {\n                    this._furtherProgressive = true;\n                }\n            }, this);\n        },\n\n        _doPaintEl: function (el, currentLayer, forcePaint, scope) {\n            var ctx = currentLayer.ctx;\n            var m = el.transform;\n            if (\n                (currentLayer.__dirty || forcePaint)\n                // Ignore invisible element\n                && !el.invisible\n                // Ignore transparent element\n                && el.style.opacity !== 0\n                // Ignore scale 0 element, in some environment like node-canvas\n                // Draw a scale 0 element can cause all following draw wrong\n                // And setTransform with scale 0 will cause set back transform failed.\n                && !(m && !m[0] && !m[3])\n                // Ignore culled element\n                && !(el.culling && isDisplayableCulled(el, this._width, this._height))\n            ) {\n\n                var clipPaths = el.__clipPaths;\n\n                // Optimize when clipping on group with several elements\n                if (scope.prevClipLayer !== currentLayer\n                    || isClipPathChanged(clipPaths, scope.prevElClipPaths)\n                ) {\n                    // If has previous clipping state, restore from it\n                    if (scope.prevElClipPaths) {\n                        scope.prevClipLayer.ctx.restore();\n                        scope.prevClipLayer = scope.prevElClipPaths = null;\n\n                        // Reset prevEl since context has been restored\n                        scope.prevEl = null;\n                    }\n                    // New clipping state\n                    if (clipPaths) {\n                        ctx.save();\n                        doClip(clipPaths, ctx);\n                        scope.prevClipLayer = currentLayer;\n                        scope.prevElClipPaths = clipPaths;\n                    }\n                }\n                el.beforeBrush && el.beforeBrush(ctx);\n\n                el.brush(ctx, scope.prevEl || null);\n                scope.prevEl = el;\n\n                el.afterBrush && el.afterBrush(ctx);\n            }\n        },\n\n        /**\n         * 获取 zlevel 所在层，如果不存在则会创建一个新的层\n         * @param {number} zlevel\n         * @return {module:zrender/Layer}\n         */\n        getLayer: function (zlevel) {\n            if (this._singleCanvas) {\n                return this._layers[0];\n            }\n\n            var layer = this._layers[zlevel];\n            if (!layer) {\n                // Create a new layer\n                layer = new Layer('zr_' + zlevel, this, this.dpr);\n                layer.__builtin__ = true;\n\n                if (this._layerConfig[zlevel]) {\n                    util.merge(layer, this._layerConfig[zlevel], true);\n                }\n\n                this.insertLayer(zlevel, layer);\n\n                // Context is created after dom inserted to document\n                // Or excanvas will get 0px clientWidth and clientHeight\n                layer.initContext();\n            }\n\n            return layer;\n        },\n\n        insertLayer: function (zlevel, layer) {\n\n            var layersMap = this._layers;\n            var zlevelList = this._zlevelList;\n            var len = zlevelList.length;\n            var prevLayer = null;\n            var i = -1;\n            var domRoot = this._domRoot;\n\n            if (layersMap[zlevel]) {\n                log('ZLevel ' + zlevel + ' has been used already');\n                return;\n            }\n            // Check if is a valid layer\n            if (!isLayerValid(layer)) {\n                log('Layer of zlevel ' + zlevel + ' is not valid');\n                return;\n            }\n\n            if (len > 0 && zlevel > zlevelList[0]) {\n                for (i = 0; i < len - 1; i++) {\n                    if (\n                        zlevelList[i] < zlevel\n                        && zlevelList[i + 1] > zlevel\n                    ) {\n                        break;\n                    }\n                }\n                prevLayer = layersMap[zlevelList[i]];\n            }\n            zlevelList.splice(i + 1, 0, zlevel);\n\n            layersMap[zlevel] = layer;\n\n            // Vitual layer will not directly show on the screen.\n            // (It can be a WebGL layer and assigned to a ZImage element)\n            // But it still under management of zrender.\n            if (!layer.virtual) {\n                if (prevLayer) {\n                    var prevDom = prevLayer.dom;\n                    if (prevDom.nextSibling) {\n                        domRoot.insertBefore(\n                            layer.dom,\n                            prevDom.nextSibling\n                        );\n                    }\n                    else {\n                        domRoot.appendChild(layer.dom);\n                    }\n                }\n                else {\n                    if (domRoot.firstChild) {\n                        domRoot.insertBefore(layer.dom, domRoot.firstChild);\n                    }\n                    else {\n                        domRoot.appendChild(layer.dom);\n                    }\n                }\n            }\n        },\n\n        // Iterate each layer\n        eachLayer: function (cb, context) {\n            var zlevelList = this._zlevelList;\n            var z;\n            var i;\n            for (i = 0; i < zlevelList.length; i++) {\n                z = zlevelList[i];\n                cb.call(context, this._layers[z], z);\n            }\n        },\n\n        // Iterate each buildin layer\n        eachBuiltinLayer: function (cb, context) {\n            var zlevelList = this._zlevelList;\n            var layer;\n            var z;\n            var i;\n            for (i = 0; i < zlevelList.length; i++) {\n                z = zlevelList[i];\n                layer = this._layers[z];\n                if (layer.__builtin__) {\n                    cb.call(context, layer, z);\n                }\n            }\n        },\n\n        // Iterate each other layer except buildin layer\n        eachOtherLayer: function (cb, context) {\n            var zlevelList = this._zlevelList;\n            var layer;\n            var z;\n            var i;\n            for (i = 0; i < zlevelList.length; i++) {\n                z = zlevelList[i];\n                layer = this._layers[z];\n                if (!layer.__builtin__) {\n                    cb.call(context, layer, z);\n                }\n            }\n        },\n\n        /**\n         * 获取所有已创建的层\n         * @param {Array.<module:zrender/Layer>} [prevLayer]\n         */\n        getLayers: function () {\n            return this._layers;\n        },\n\n        _updateLayerStatus: function (list) {\n\n            var layers = this._layers;\n            var progressiveLayers = this._progressiveLayers;\n\n            var elCountsLastFrame = {};\n            var progressiveElCountsLastFrame = {};\n\n            this.eachBuiltinLayer(function (layer, z) {\n                elCountsLastFrame[z] = layer.elCount;\n                layer.elCount = 0;\n                layer.__dirty = false;\n            });\n\n            util.each(progressiveLayers, function (layer, idx) {\n                progressiveElCountsLastFrame[idx] = layer.elCount;\n                layer.elCount = 0;\n                layer.__dirty = false;\n            });\n\n            var progressiveLayerCount = 0;\n            var currentProgressiveLayer;\n            var lastProgressiveKey;\n            var frameCount = 0;\n            for (var i = 0, l = list.length; i < l; i++) {\n                var el = list[i];\n                var zlevel = this._singleCanvas ? 0 : el.zlevel;\n                var layer = layers[zlevel];\n                var elProgress = el.progressive;\n                if (layer) {\n                    layer.elCount++;\n                    layer.__dirty = layer.__dirty || el.__dirty;\n                }\n\n                /////// Update progressive\n                if (elProgress >= 0) {\n                    // Fix wrong progressive sequence problem.\n                    if (lastProgressiveKey !== elProgress) {\n                        lastProgressiveKey = elProgress;\n                        frameCount++;\n                    }\n                    var elFrame = el.__frame = frameCount - 1;\n                    if (!currentProgressiveLayer) {\n                        var idx = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER - 1);\n                        currentProgressiveLayer = progressiveLayers[idx];\n                        if (!currentProgressiveLayer) {\n                            currentProgressiveLayer = progressiveLayers[idx] = new Layer(\n                                'progressive', this, this.dpr\n                            );\n                            currentProgressiveLayer.initContext();\n                        }\n                        currentProgressiveLayer.__maxProgress = 0;\n                    }\n                    currentProgressiveLayer.__dirty = currentProgressiveLayer.__dirty || el.__dirty;\n                    currentProgressiveLayer.elCount++;\n\n                    currentProgressiveLayer.__maxProgress = Math.max(\n                        currentProgressiveLayer.__maxProgress, elFrame\n                    );\n\n                    if (currentProgressiveLayer.__maxProgress >= currentProgressiveLayer.__progress) {\n                        // Should keep rendering this  layer because progressive rendering is not finished yet\n                        layer.__dirty = true;\n                    }\n                }\n                else {\n                    el.__frame = -1;\n\n                    if (currentProgressiveLayer) {\n                        currentProgressiveLayer.__nextIdxNotProg = i;\n                        progressiveLayerCount++;\n                        currentProgressiveLayer = null;\n                    }\n                }\n            }\n\n            if (currentProgressiveLayer) {\n                progressiveLayerCount++;\n                currentProgressiveLayer.__nextIdxNotProg = i;\n            }\n\n            // 层中的元素数量有发生变化\n            this.eachBuiltinLayer(function (layer, z) {\n                if (elCountsLastFrame[z] !== layer.elCount) {\n                    layer.__dirty = true;\n                }\n            });\n\n            progressiveLayers.length = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER);\n            util.each(progressiveLayers, function (layer, idx) {\n                if (progressiveElCountsLastFrame[idx] !== layer.elCount) {\n                    el.__dirty = true;\n                }\n                if (layer.__dirty) {\n                    layer.__progress = 0;\n                }\n            });\n        },\n\n        /**\n         * 清除hover层外所有内容\n         */\n        clear: function () {\n            this.eachBuiltinLayer(this._clearLayer);\n            return this;\n        },\n\n        _clearLayer: function (layer) {\n            layer.clear();\n        },\n\n        /**\n         * 修改指定zlevel的绘制参数\n         *\n         * @param {string} zlevel\n         * @param {Object} config 配置对象\n         * @param {string} [config.clearColor=0] 每次清空画布的颜色\n         * @param {string} [config.motionBlur=false] 是否开启动态模糊\n         * @param {number} [config.lastFrameAlpha=0.7]\n         *                 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n         */\n        configLayer: function (zlevel, config) {\n            if (config) {\n                var layerConfig = this._layerConfig;\n                if (!layerConfig[zlevel]) {\n                    layerConfig[zlevel] = config;\n                }\n                else {\n                    util.merge(layerConfig[zlevel], config, true);\n                }\n\n                var layer = this._layers[zlevel];\n\n                if (layer) {\n                    util.merge(layer, layerConfig[zlevel], true);\n                }\n            }\n        },\n\n        /**\n         * 删除指定层\n         * @param {number} zlevel 层所在的zlevel\n         */\n        delLayer: function (zlevel) {\n            var layers = this._layers;\n            var zlevelList = this._zlevelList;\n            var layer = layers[zlevel];\n            if (!layer) {\n                return;\n            }\n            layer.dom.parentNode.removeChild(layer.dom);\n            delete layers[zlevel];\n\n            zlevelList.splice(util.indexOf(zlevelList, zlevel), 1);\n        },\n\n        /**\n         * 区域大小变化后重绘\n         */\n        resize: function (width, height) {\n            var domRoot = this._domRoot;\n            // FIXME Why ?\n            domRoot.style.display = 'none';\n\n            // Save input w/h\n            var opts = this._opts;\n            width != null && (opts.width = width);\n            height != null && (opts.height = height);\n\n            width = this._getSize(0);\n            height = this._getSize(1);\n\n            domRoot.style.display = '';\n\n            // 优化没有实际改变的resize\n            if (this._width != width || height != this._height) {\n                domRoot.style.width = width + 'px';\n                domRoot.style.height = height + 'px';\n\n                for (var id in this._layers) {\n                    if (this._layers.hasOwnProperty(id)) {\n                        this._layers[id].resize(width, height);\n                    }\n                }\n                util.each(this._progressiveLayers, function (layer) {\n                    layer.resize(width, height);\n                });\n\n                this.refresh(true);\n            }\n\n            this._width = width;\n            this._height = height;\n\n            return this;\n        },\n\n        /**\n         * 清除单独的一个层\n         * @param {number} zlevel\n         */\n        clearLayer: function (zlevel) {\n            var layer = this._layers[zlevel];\n            if (layer) {\n                layer.clear();\n            }\n        },\n\n        /**\n         * 释放\n         */\n        dispose: function () {\n            this.root.innerHTML = '';\n\n            this.root =\n            this.storage =\n\n            this._domRoot =\n            this._layers = null;\n        },\n\n        /**\n         * Get canvas which has all thing rendered\n         * @param {Object} opts\n         * @param {string} [opts.backgroundColor]\n         */\n        getRenderedCanvas: function (opts) {\n            opts = opts || {};\n            if (this._singleCanvas) {\n                return this._layers[0].dom;\n            }\n\n            var imageLayer = new Layer('image', this, opts.pixelRatio || this.dpr);\n            imageLayer.initContext();\n\n            imageLayer.clearColor = opts.backgroundColor;\n            imageLayer.clear();\n\n            var displayList = this.storage.getDisplayList(true);\n\n            var scope = {};\n            var zlevel;\n\n            var self = this;\n            function findAndDrawOtherLayer(smaller, larger) {\n                var zlevelList = self._zlevelList;\n                if (smaller == null) {\n                    smaller = -Infinity;\n                }\n                var intermediateLayer;\n                for (var i = 0; i < zlevelList.length; i++) {\n                    var z = zlevelList[i];\n                    var layer = self._layers[z];\n                    if (!layer.__builtin__ && z > smaller && z < larger) {\n                        intermediateLayer = layer;\n                        break;\n                    }\n                }\n                if (intermediateLayer && intermediateLayer.renderToCanvas) {\n                    imageLayer.ctx.save();\n                    intermediateLayer.renderToCanvas(imageLayer.ctx);\n                    imageLayer.ctx.restore();\n                }\n            }\n            for (var i = 0; i < displayList.length; i++) {\n                var el = displayList[i];\n\n                if (el.zlevel !== zlevel) {\n                    findAndDrawOtherLayer(zlevel, el.zlevel);\n                    zlevel = el.zlevel;\n                }\n                this._doPaintEl(el, imageLayer, true, scope);\n            }\n\n            findAndDrawOtherLayer(zlevel, Infinity);\n\n            return imageLayer.dom;\n        },\n        /**\n         * 获取绘图区域宽度\n         */\n        getWidth: function () {\n            return this._width;\n        },\n\n        /**\n         * 获取绘图区域高度\n         */\n        getHeight: function () {\n            return this._height;\n        },\n\n        _getSize: function (whIdx) {\n            var opts = this._opts;\n            var wh = ['width', 'height'][whIdx];\n            var cwh = ['clientWidth', 'clientHeight'][whIdx];\n            var plt = ['paddingLeft', 'paddingTop'][whIdx];\n            var prb = ['paddingRight', 'paddingBottom'][whIdx];\n\n            if (opts[wh] != null && opts[wh] !== 'auto') {\n                return parseFloat(opts[wh]);\n            }\n\n            var root = this.root;\n            var stl = document.defaultView.getComputedStyle(root);\n\n            return (\n                (root[cwh] || parseInt10(stl[wh]) || parseInt10(root.style[wh]))\n                - (parseInt10(stl[plt]) || 0)\n                - (parseInt10(stl[prb]) || 0)\n            ) | 0;\n        },\n\n        pathToImage: function (path, dpr) {\n            dpr = dpr || this.dpr;\n\n            var canvas = document.createElement('canvas');\n            var ctx = canvas.getContext('2d');\n            var rect = path.getBoundingRect();\n            var style = path.style;\n            var shadowBlurSize = style.shadowBlur;\n            var shadowOffsetX = style.shadowOffsetX;\n            var shadowOffsetY = style.shadowOffsetY;\n            var lineWidth = style.hasStroke() ? style.lineWidth : 0;\n\n            var leftMargin = Math.max(lineWidth / 2, -shadowOffsetX + shadowBlurSize);\n            var rightMargin = Math.max(lineWidth / 2, shadowOffsetX + shadowBlurSize);\n            var topMargin = Math.max(lineWidth / 2, -shadowOffsetY + shadowBlurSize);\n            var bottomMargin = Math.max(lineWidth / 2, shadowOffsetY + shadowBlurSize);\n            var width = rect.width + leftMargin + rightMargin;\n            var height = rect.height + topMargin + bottomMargin;\n\n            canvas.width = width * dpr;\n            canvas.height = height * dpr;\n\n            ctx.scale(dpr, dpr);\n            ctx.clearRect(0, 0, width, height);\n            ctx.dpr = dpr;\n\n            var pathTransform = {\n                position: path.position,\n                rotation: path.rotation,\n                scale: path.scale\n            };\n            path.position = [leftMargin - rect.x, topMargin - rect.y];\n            path.rotation = 0;\n            path.scale = [1, 1];\n            path.updateTransform();\n            if (path) {\n                path.brush(ctx);\n            }\n\n            var ImageShape = __webpack_require__(546);\n            var imgShape = new ImageShape({\n                style: {\n                    x: 0,\n                    y: 0,\n                    image: canvas\n                }\n            });\n\n            if (pathTransform.position != null) {\n                imgShape.position = path.position = pathTransform.position;\n            }\n\n            if (pathTransform.rotation != null) {\n                imgShape.rotation = path.rotation = pathTransform.rotation;\n            }\n\n            if (pathTransform.scale != null) {\n                imgShape.scale = path.scale = pathTransform.scale;\n            }\n\n            return imgShape;\n        }\n    };\n\n    module.exports = Painter;\n\n\n\n/***/ }),\n/* 651 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Storage内容仓库模块\n * @module zrender/Storage\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n * @author errorrik (errorrik@gmail.com)\n * @author pissang (https://github.com/pissang/)\n */\n\n\n    var util = __webpack_require__(453);\n    var env = __webpack_require__(460);\n\n    var Group = __webpack_require__(487);\n\n    // Use timsort because in most case elements are partially sorted\n    // https://jsfiddle.net/pissang/jr4x7mdm/8/\n    var timsort = __webpack_require__(505);\n\n    function shapeCompareFunc(a, b) {\n        if (a.zlevel === b.zlevel) {\n            if (a.z === b.z) {\n                // if (a.z2 === b.z2) {\n                //     // FIXME Slow has renderidx compare\n                //     // http://stackoverflow.com/questions/20883421/sorting-in-javascript-should-every-compare-function-have-a-return-0-statement\n                //     // https://github.com/v8/v8/blob/47cce544a31ed5577ffe2963f67acb4144ee0232/src/js/array.js#L1012\n                //     return a.__renderidx - b.__renderidx;\n                // }\n                return a.z2 - b.z2;\n            }\n            return a.z - b.z;\n        }\n        return a.zlevel - b.zlevel;\n    }\n    /**\n     * 内容仓库 (M)\n     * @alias module:zrender/Storage\n     * @constructor\n     */\n    var Storage = function () {\n        this._roots = [];\n\n        this._displayList = [];\n\n        this._displayListLen = 0;\n    };\n\n    Storage.prototype = {\n\n        constructor: Storage,\n\n        /**\n         * @param  {Function} cb\n         *\n         */\n        traverse: function (cb, context) {\n            for (var i = 0; i < this._roots.length; i++) {\n                this._roots[i].traverse(cb, context);\n            }\n        },\n\n        /**\n         * 返回所有图形的绘制队列\n         * @param {boolean} [update=false] 是否在返回前更新该数组\n         * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组, 在 update 为 true 的时候有效\n         *\n         * 详见{@link module:zrender/graphic/Displayable.prototype.updateDisplayList}\n         * @return {Array.<module:zrender/graphic/Displayable>}\n         */\n        getDisplayList: function (update, includeIgnore) {\n            includeIgnore = includeIgnore || false;\n            if (update) {\n                this.updateDisplayList(includeIgnore);\n            }\n            return this._displayList;\n        },\n\n        /**\n         * 更新图形的绘制队列。\n         * 每次绘制前都会调用，该方法会先深度优先遍历整个树，更新所有Group和Shape的变换并且把所有可见的Shape保存到数组中，\n         * 最后根据绘制的优先级（zlevel > z > 插入顺序）排序得到绘制队列\n         * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组\n         */\n        updateDisplayList: function (includeIgnore) {\n            this._displayListLen = 0;\n            var roots = this._roots;\n            var displayList = this._displayList;\n            for (var i = 0, len = roots.length; i < len; i++) {\n                this._updateAndAddDisplayable(roots[i], null, includeIgnore);\n            }\n            displayList.length = this._displayListLen;\n\n            // for (var i = 0, len = displayList.length; i < len; i++) {\n            //     displayList[i].__renderidx = i;\n            // }\n\n            // displayList.sort(shapeCompareFunc);\n            env.canvasSupported && timsort(displayList, shapeCompareFunc);\n        },\n\n        _updateAndAddDisplayable: function (el, clipPaths, includeIgnore) {\n\n            if (el.ignore && !includeIgnore) {\n                return;\n            }\n\n            el.beforeUpdate();\n\n            if (el.__dirty) {\n\n                el.update();\n\n            }\n\n            el.afterUpdate();\n\n            var userSetClipPath = el.clipPath;\n            if (userSetClipPath) {\n\n                // FIXME 效率影响\n                if (clipPaths) {\n                    clipPaths = clipPaths.slice();\n                }\n                else {\n                    clipPaths = [];\n                }\n\n                var currentClipPath = userSetClipPath;\n                var parentClipPath = el;\n                // Recursively add clip path\n                while (currentClipPath) {\n                    // clipPath 的变换是基于使用这个 clipPath 的元素\n                    currentClipPath.parent = parentClipPath;\n                    currentClipPath.updateTransform();\n\n                    clipPaths.push(currentClipPath);\n\n                    parentClipPath = currentClipPath;\n                    currentClipPath = currentClipPath.clipPath;\n                }\n            }\n\n            if (el.isGroup) {\n                var children = el._children;\n\n                for (var i = 0; i < children.length; i++) {\n                    var child = children[i];\n\n                    // Force to mark as dirty if group is dirty\n                    // FIXME __dirtyPath ?\n                    if (el.__dirty) {\n                        child.__dirty = true;\n                    }\n\n                    this._updateAndAddDisplayable(child, clipPaths, includeIgnore);\n                }\n\n                // Mark group clean here\n                el.__dirty = false;\n\n            }\n            else {\n                el.__clipPaths = clipPaths;\n\n                this._displayList[this._displayListLen++] = el;\n            }\n        },\n\n        /**\n         * 添加图形(Shape)或者组(Group)到根节点\n         * @param {module:zrender/Element} el\n         */\n        addRoot: function (el) {\n            if (el.__storage === this) {\n                return;\n            }\n\n            if (el instanceof Group) {\n                el.addChildrenToStorage(this);\n            }\n\n            this.addToStorage(el);\n            this._roots.push(el);\n        },\n\n        /**\n         * 删除指定的图形(Shape)或者组(Group)\n         * @param {string|Array.<string>} [el] 如果为空清空整个Storage\n         */\n        delRoot: function (el) {\n            if (el == null) {\n                // 不指定el清空\n                for (var i = 0; i < this._roots.length; i++) {\n                    var root = this._roots[i];\n                    if (root instanceof Group) {\n                        root.delChildrenFromStorage(this);\n                    }\n                }\n\n                this._roots = [];\n                this._displayList = [];\n                this._displayListLen = 0;\n\n                return;\n            }\n\n            if (el instanceof Array) {\n                for (var i = 0, l = el.length; i < l; i++) {\n                    this.delRoot(el[i]);\n                }\n                return;\n            }\n\n\n            var idx = util.indexOf(this._roots, el);\n            if (idx >= 0) {\n                this.delFromStorage(el);\n                this._roots.splice(idx, 1);\n                if (el instanceof Group) {\n                    el.delChildrenFromStorage(this);\n                }\n            }\n        },\n\n        addToStorage: function (el) {\n            el.__storage = this;\n            el.dirty(false);\n\n            return this;\n        },\n\n        delFromStorage: function (el) {\n            if (el) {\n                el.__storage = null;\n            }\n\n            return this;\n        },\n\n        /**\n         * 清空并且释放Storage\n         */\n        dispose: function () {\n            this._renderList =\n            this._roots = null;\n        },\n\n        displayableSortFunc: shapeCompareFunc\n    };\n\n    module.exports = Storage;\n\n\n\n/***/ }),\n/* 652 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * 动画主类, 调度和管理所有动画控制器\n *\n * @module zrender/animation/Animation\n * @author pissang(https://github.com/pissang)\n */\n// TODO Additive animation\n// http://iosoteric.com/additive-animations-animatewithduration-in-ios-8/\n// https://developer.apple.com/videos/wwdc2014/#236\n\n\n    var util = __webpack_require__(453);\n    var Dispatcher = __webpack_require__(470).Dispatcher;\n\n    var requestAnimationFrame = __webpack_require__(541);\n\n    var Animator = __webpack_require__(540);\n    /**\n     * @typedef {Object} IZRenderStage\n     * @property {Function} update\n     */\n\n    /**\n     * @alias module:zrender/animation/Animation\n     * @constructor\n     * @param {Object} [options]\n     * @param {Function} [options.onframe]\n     * @param {IZRenderStage} [options.stage]\n     * @example\n     *     var animation = new Animation();\n     *     var obj = {\n     *         x: 100,\n     *         y: 100\n     *     };\n     *     animation.animate(node.position)\n     *         .when(1000, {\n     *             x: 500,\n     *             y: 500\n     *         })\n     *         .when(2000, {\n     *             x: 100,\n     *             y: 100\n     *         })\n     *         .start('spline');\n     */\n    var Animation = function (options) {\n\n        options = options || {};\n\n        this.stage = options.stage || {};\n\n        this.onframe = options.onframe || function() {};\n\n        // private properties\n        this._clips = [];\n\n        this._running = false;\n\n        this._time;\n\n        this._pausedTime;\n\n        this._pauseStart;\n\n        this._paused = false;\n\n        Dispatcher.call(this);\n    };\n\n    Animation.prototype = {\n\n        constructor: Animation,\n        /**\n         * 添加 clip\n         * @param {module:zrender/animation/Clip} clip\n         */\n        addClip: function (clip) {\n            this._clips.push(clip);\n        },\n        /**\n         * 添加 animator\n         * @param {module:zrender/animation/Animator} animator\n         */\n        addAnimator: function (animator) {\n            animator.animation = this;\n            var clips = animator.getClips();\n            for (var i = 0; i < clips.length; i++) {\n                this.addClip(clips[i]);\n            }\n        },\n        /**\n         * 删除动画片段\n         * @param {module:zrender/animation/Clip} clip\n         */\n        removeClip: function(clip) {\n            var idx = util.indexOf(this._clips, clip);\n            if (idx >= 0) {\n                this._clips.splice(idx, 1);\n            }\n        },\n\n        /**\n         * 删除动画片段\n         * @param {module:zrender/animation/Animator} animator\n         */\n        removeAnimator: function (animator) {\n            var clips = animator.getClips();\n            for (var i = 0; i < clips.length; i++) {\n                this.removeClip(clips[i]);\n            }\n            animator.animation = null;\n        },\n\n        _update: function() {\n\n            var time = new Date().getTime() - this._pausedTime;\n            var delta = time - this._time;\n            var clips = this._clips;\n            var len = clips.length;\n\n            var deferredEvents = [];\n            var deferredClips = [];\n            for (var i = 0; i < len; i++) {\n                var clip = clips[i];\n                var e = clip.step(time, delta);\n                // Throw out the events need to be called after\n                // stage.update, like destroy\n                if (e) {\n                    deferredEvents.push(e);\n                    deferredClips.push(clip);\n                }\n            }\n\n            // Remove the finished clip\n            for (var i = 0; i < len;) {\n                if (clips[i]._needsRemove) {\n                    clips[i] = clips[len - 1];\n                    clips.pop();\n                    len--;\n                }\n                else {\n                    i++;\n                }\n            }\n\n            len = deferredEvents.length;\n            for (var i = 0; i < len; i++) {\n                deferredClips[i].fire(deferredEvents[i]);\n            }\n\n            this._time = time;\n\n            this.onframe(delta);\n\n            this.trigger('frame', delta);\n\n            if (this.stage.update) {\n                this.stage.update();\n            }\n        },\n\n        _startLoop: function () {\n            var self = this;\n\n            this._running = true;\n\n            function step() {\n                if (self._running) {\n\n                    requestAnimationFrame(step);\n\n                    !self._paused && self._update();\n                }\n            }\n\n            requestAnimationFrame(step);\n        },\n\n        /**\n         * 开始运行动画\n         */\n        start: function () {\n\n            this._time = new Date().getTime();\n            this._pausedTime = 0;\n\n            this._startLoop();\n        },\n        /**\n         * 停止运行动画\n         */\n        stop: function () {\n            this._running = false;\n        },\n\n        /**\n         * Pause\n         */\n        pause: function () {\n            if (!this._paused) {\n                this._pauseStart = new Date().getTime();\n                this._paused = true;\n            }\n        },\n\n        /**\n         * Resume\n         */\n        resume: function () {\n            if (this._paused) {\n                this._pausedTime += (new Date().getTime()) - this._pauseStart;\n                this._paused = false;\n            }\n        },\n\n        /**\n         * 清除所有动画片段\n         */\n        clear: function () {\n            this._clips = [];\n        },\n        /**\n         * 对一个目标创建一个animator对象，可以指定目标中的属性使用动画\n         * @param  {Object} target\n         * @param  {Object} options\n         * @param  {boolean} [options.loop=false] 是否循环播放动画\n         * @param  {Function} [options.getter=null]\n         *         如果指定getter函数，会通过getter函数取属性值\n         * @param  {Function} [options.setter=null]\n         *         如果指定setter函数，会通过setter函数设置属性值\n         * @return {module:zrender/animation/Animation~Animator}\n         */\n        // TODO Gap\n        animate: function (target, options) {\n            options = options || {};\n\n            var animator = new Animator(\n                target,\n                options.loop,\n                options.getter,\n                options.setter\n            );\n\n            this.addAnimator(animator);\n\n            return animator;\n        }\n    };\n\n    util.mixin(Animation, Dispatcher);\n\n    module.exports = Animation;\n\n\n\n/***/ }),\n/* 653 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 动画主控制器\n * @config target 动画对象，可以是数组，如果是数组的话会批量分发onframe等事件\n * @config life(1000) 动画时长\n * @config delay(0) 动画延迟时间\n * @config loop(true)\n * @config gap(0) 循环的间隔时间\n * @config onframe\n * @config easing(optional)\n * @config ondestroy(optional)\n * @config onrestart(optional)\n *\n * TODO pause\n */\n\n\n    var easingFuncs = __webpack_require__(654);\n\n    function Clip(options) {\n\n        this._target = options.target;\n\n        // 生命周期\n        this._life = options.life || 1000;\n        // 延时\n        this._delay = options.delay || 0;\n        // 开始时间\n        // this._startTime = new Date().getTime() + this._delay;// 单位毫秒\n        this._initialized = false;\n\n        // 是否循环\n        this.loop = options.loop == null ? false : options.loop;\n\n        this.gap = options.gap || 0;\n\n        this.easing = options.easing || 'Linear';\n\n        this.onframe = options.onframe;\n        this.ondestroy = options.ondestroy;\n        this.onrestart = options.onrestart;\n\n        this._pausedTime = 0;\n        this._paused = false;\n    }\n\n    Clip.prototype = {\n\n        constructor: Clip,\n\n        step: function (globalTime, deltaTime) {\n            // Set startTime on first step, or _startTime may has milleseconds different between clips\n            // PENDING\n            if (!this._initialized) {\n                this._startTime = globalTime + this._delay;\n                this._initialized = true;\n            }\n\n            if (this._paused) {\n                this._pausedTime += deltaTime;\n                return;\n            }\n\n            var percent = (globalTime - this._startTime - this._pausedTime) / this._life;\n\n            // 还没开始\n            if (percent < 0) {\n                return;\n            }\n\n            percent = Math.min(percent, 1);\n\n            var easing = this.easing;\n            var easingFunc = typeof easing == 'string' ? easingFuncs[easing] : easing;\n            var schedule = typeof easingFunc === 'function'\n                ? easingFunc(percent)\n                : percent;\n\n            this.fire('frame', schedule);\n\n            // 结束\n            if (percent == 1) {\n                if (this.loop) {\n                    this.restart (globalTime);\n                    // 重新开始周期\n                    // 抛出而不是直接调用事件直到 stage.update 后再统一调用这些事件\n                    return 'restart';\n                }\n\n                // 动画完成将这个控制器标识为待删除\n                // 在Animation.update中进行批量删除\n                this._needsRemove = true;\n                return 'destroy';\n            }\n\n            return null;\n        },\n\n        restart: function (globalTime) {\n            var remainder = (globalTime - this._startTime - this._pausedTime) % this._life;\n            this._startTime = globalTime - remainder + this.gap;\n            this._pausedTime = 0;\n\n            this._needsRemove = false;\n        },\n\n        fire: function (eventType, arg) {\n            eventType = 'on' + eventType;\n            if (this[eventType]) {\n                this[eventType](this._target, arg);\n            }\n        },\n\n        pause: function () {\n            this._paused = true;\n        },\n\n        resume: function () {\n            this._paused = false;\n        }\n    };\n\n    module.exports = Clip;\n\n\n\n/***/ }),\n/* 654 */\n/***/ (function(module, exports) {\n\n/**\n * 缓动代码来自 https://github.com/sole/tween.js/blob/master/src/Tween.js\n * @see http://sole.github.io/tween.js/examples/03_graphs.html\n * @exports zrender/animation/easing\n */\n\n    var easing = {\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        linear: function (k) {\n            return k;\n        },\n\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quadraticIn: function (k) {\n            return k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quadraticOut: function (k) {\n            return k * (2 - k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quadraticInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k;\n            }\n            return -0.5 * (--k * (k - 2) - 1);\n        },\n\n        // 三次方的缓动（t^3）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        cubicIn: function (k) {\n            return k * k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        cubicOut: function (k) {\n            return --k * k * k + 1;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        cubicInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k;\n            }\n            return 0.5 * ((k -= 2) * k * k + 2);\n        },\n\n        // 四次方的缓动（t^4）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quarticIn: function (k) {\n            return k * k * k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quarticOut: function (k) {\n            return 1 - (--k * k * k * k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quarticInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k * k;\n            }\n            return -0.5 * ((k -= 2) * k * k * k - 2);\n        },\n\n        // 五次方的缓动（t^5）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quinticIn: function (k) {\n            return k * k * k * k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quinticOut: function (k) {\n            return --k * k * k * k * k + 1;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quinticInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k * k * k;\n            }\n            return 0.5 * ((k -= 2) * k * k * k * k + 2);\n        },\n\n        // 正弦曲线的缓动（sin(t)）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        sinusoidalIn: function (k) {\n            return 1 - Math.cos(k * Math.PI / 2);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        sinusoidalOut: function (k) {\n            return Math.sin(k * Math.PI / 2);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        sinusoidalInOut: function (k) {\n            return 0.5 * (1 - Math.cos(Math.PI * k));\n        },\n\n        // 指数曲线的缓动（2^t）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        exponentialIn: function (k) {\n            return k === 0 ? 0 : Math.pow(1024, k - 1);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        exponentialOut: function (k) {\n            return k === 1 ? 1 : 1 - Math.pow(2, -10 * k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        exponentialInOut: function (k) {\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if ((k *= 2) < 1) {\n                return 0.5 * Math.pow(1024, k - 1);\n            }\n            return 0.5 * (-Math.pow(2, -10 * (k - 1)) + 2);\n        },\n\n        // 圆形曲线的缓动（sqrt(1-t^2)）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        circularIn: function (k) {\n            return 1 - Math.sqrt(1 - k * k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        circularOut: function (k) {\n            return Math.sqrt(1 - (--k * k));\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        circularInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return -0.5 * (Math.sqrt(1 - k * k) - 1);\n            }\n            return 0.5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\n        },\n\n        // 创建类似于弹簧在停止前来回振荡的动画\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        elasticIn: function (k) {\n            var s;\n            var a = 0.1;\n            var p = 0.4;\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            }\n            else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n            return -(a * Math.pow(2, 10 * (k -= 1)) *\n                        Math.sin((k - s) * (2 * Math.PI) / p));\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        elasticOut: function (k) {\n            var s;\n            var a = 0.1;\n            var p = 0.4;\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            }\n            else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n            return (a * Math.pow(2, -10 * k) *\n                    Math.sin((k - s) * (2 * Math.PI) / p) + 1);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        elasticInOut: function (k) {\n            var s;\n            var a = 0.1;\n            var p = 0.4;\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            }\n            else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n            if ((k *= 2) < 1) {\n                return -0.5 * (a * Math.pow(2, 10 * (k -= 1))\n                    * Math.sin((k - s) * (2 * Math.PI) / p));\n            }\n            return a * Math.pow(2, -10 * (k -= 1))\n                    * Math.sin((k - s) * (2 * Math.PI) / p) * 0.5 + 1;\n\n        },\n\n        // 在某一动画开始沿指示的路径进行动画处理前稍稍收回该动画的移动\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        backIn: function (k) {\n            var s = 1.70158;\n            return k * k * ((s + 1) * k - s);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        backOut: function (k) {\n            var s = 1.70158;\n            return --k * k * ((s + 1) * k + s) + 1;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        backInOut: function (k) {\n            var s = 1.70158 * 1.525;\n            if ((k *= 2) < 1) {\n                return 0.5 * (k * k * ((s + 1) * k - s));\n            }\n            return 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\n        },\n\n        // 创建弹跳效果\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        bounceIn: function (k) {\n            return 1 - easing.bounceOut(1 - k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        bounceOut: function (k) {\n            if (k < (1 / 2.75)) {\n                return 7.5625 * k * k;\n            }\n            else if (k < (2 / 2.75)) {\n                return 7.5625 * (k -= (1.5 / 2.75)) * k + 0.75;\n            }\n            else if (k < (2.5 / 2.75)) {\n                return 7.5625 * (k -= (2.25 / 2.75)) * k + 0.9375;\n            }\n            else {\n                return 7.5625 * (k -= (2.625 / 2.75)) * k + 0.984375;\n            }\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        bounceInOut: function (k) {\n            if (k < 0.5) {\n                return easing.bounceIn(k * 2) * 0.5;\n            }\n            return easing.bounceOut(k * 2 - 1) * 0.5 + 0.5;\n        }\n    };\n\n    module.exports = easing;\n\n\n\n\n/***/ }),\n/* 655 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var normalizeRadian = __webpack_require__(542).normalizeRadian;\n    var PI2 = Math.PI * 2;\n\n    module.exports = {\n        /**\n         * 圆弧描边包含判断\n         * @param  {number}  cx\n         * @param  {number}  cy\n         * @param  {number}  r\n         * @param  {number}  startAngle\n         * @param  {number}  endAngle\n         * @param  {boolean}  anticlockwise\n         * @param  {number} lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {Boolean}\n         */\n        containStroke: function (\n            cx, cy, r, startAngle, endAngle, anticlockwise,\n            lineWidth, x, y\n        ) {\n\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n\n            x -= cx;\n            y -= cy;\n            var d = Math.sqrt(x * x + y * y);\n\n            if ((d - _l > r) || (d + _l < r)) {\n                return false;\n            }\n            if (Math.abs(startAngle - endAngle) % PI2 < 1e-4) {\n                // Is a circle\n                return true;\n            }\n            if (anticlockwise) {\n                var tmp = startAngle;\n                startAngle = normalizeRadian(endAngle);\n                endAngle = normalizeRadian(tmp);\n            } else {\n                startAngle = normalizeRadian(startAngle);\n                endAngle = normalizeRadian(endAngle);\n            }\n            if (startAngle > endAngle) {\n                endAngle += PI2;\n            }\n\n            var angle = Math.atan2(y, x);\n            if (angle < 0) {\n                angle += PI2;\n            }\n            return (angle >= startAngle && angle <= endAngle)\n                || (angle + PI2 >= startAngle && angle + PI2 <= endAngle);\n        }\n    };\n\n\n/***/ }),\n/* 656 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var curve = __webpack_require__(474);\n\n    module.exports = {\n        /**\n         * 三次贝塞尔曲线描边包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  x2\n         * @param  {number}  y2\n         * @param  {number}  x3\n         * @param  {number}  y3\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        containStroke: function(x0, y0, x1, y1, x2, y2, x3, y3, lineWidth, x, y) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l && y > y2 + _l && y > y3 + _l)\n                || (y < y0 - _l && y < y1 - _l && y < y2 - _l && y < y3 - _l)\n                || (x > x0 + _l && x > x1 + _l && x > x2 + _l && x > x3 + _l)\n                || (x < x0 - _l && x < x1 - _l && x < x2 - _l && x < x3 - _l)\n            ) {\n                return false;\n            }\n            var d = curve.cubicProjectPoint(\n                x0, y0, x1, y1, x2, y2, x3, y3,\n                x, y, null\n            );\n            return d <= _l / 2;\n        }\n    };\n\n\n/***/ }),\n/* 657 */\n/***/ (function(module, exports) {\n\n\n    module.exports = {\n        /**\n         * 线段包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        containStroke: function (x0, y0, x1, y1, lineWidth, x, y) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n            var _a = 0;\n            var _b = x0;\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l)\n                || (y < y0 - _l && y < y1 - _l)\n                || (x > x0 + _l && x > x1 + _l)\n                || (x < x0 - _l && x < x1 - _l)\n            ) {\n                return false;\n            }\n\n            if (x0 !== x1) {\n                _a = (y0 - y1) / (x0 - x1);\n                _b = (x0 * y1 - x1 * y0) / (x0 - x1) ;\n            }\n            else {\n                return Math.abs(x - x0) <= _l / 2;\n            }\n            var tmp = _a * x - y + _b;\n            var _s = tmp * tmp / (_a * _a + 1);\n            return _s <= _l / 2 * _l / 2;\n        }\n    };\n\n\n/***/ }),\n/* 658 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var CMD = __webpack_require__(488).CMD;\n    var line = __webpack_require__(657);\n    var cubic = __webpack_require__(656);\n    var quadratic = __webpack_require__(659);\n    var arc = __webpack_require__(655);\n    var normalizeRadian = __webpack_require__(542).normalizeRadian;\n    var curve = __webpack_require__(474);\n\n    var windingLine = __webpack_require__(660);\n\n    var containStroke = line.containStroke;\n\n    var PI2 = Math.PI * 2;\n\n    var EPSILON = 1e-4;\n\n    function isAroundEqual(a, b) {\n        return Math.abs(a - b) < EPSILON;\n    }\n\n    // 临时数组\n    var roots = [-1, -1, -1];\n    var extrema = [-1, -1];\n\n    function swapExtrema() {\n        var tmp = extrema[0];\n        extrema[0] = extrema[1];\n        extrema[1] = tmp;\n    }\n\n    function windingCubic(x0, y0, x1, y1, x2, y2, x3, y3, x, y) {\n        // Quick reject\n        if (\n            (y > y0 && y > y1 && y > y2 && y > y3)\n            || (y < y0 && y < y1 && y < y2 && y < y3)\n        ) {\n            return 0;\n        }\n        var nRoots = curve.cubicRootAt(y0, y1, y2, y3, y, roots);\n        if (nRoots === 0) {\n            return 0;\n        }\n        else {\n            var w = 0;\n            var nExtrema = -1;\n            var y0_, y1_;\n            for (var i = 0; i < nRoots; i++) {\n                var t = roots[i];\n\n                // Avoid winding error when intersection point is the connect point of two line of polygon\n                var unit = (t === 0 || t === 1) ? 0.5 : 1;\n\n                var x_ = curve.cubicAt(x0, x1, x2, x3, t);\n                if (x_ < x) { // Quick reject\n                    continue;\n                }\n                if (nExtrema < 0) {\n                    nExtrema = curve.cubicExtrema(y0, y1, y2, y3, extrema);\n                    if (extrema[1] < extrema[0] && nExtrema > 1) {\n                        swapExtrema();\n                    }\n                    y0_ = curve.cubicAt(y0, y1, y2, y3, extrema[0]);\n                    if (nExtrema > 1) {\n                        y1_ = curve.cubicAt(y0, y1, y2, y3, extrema[1]);\n                    }\n                }\n                if (nExtrema == 2) {\n                    // 分成三段单调函数\n                    if (t < extrema[0]) {\n                        w += y0_ < y0 ? unit : -unit;\n                    }\n                    else if (t < extrema[1]) {\n                        w += y1_ < y0_ ? unit : -unit;\n                    }\n                    else {\n                        w += y3 < y1_ ? unit : -unit;\n                    }\n                }\n                else {\n                    // 分成两段单调函数\n                    if (t < extrema[0]) {\n                        w += y0_ < y0 ? unit : -unit;\n                    }\n                    else {\n                        w += y3 < y0_ ? unit : -unit;\n                    }\n                }\n            }\n            return w;\n        }\n    }\n\n    function windingQuadratic(x0, y0, x1, y1, x2, y2, x, y) {\n        // Quick reject\n        if (\n            (y > y0 && y > y1 && y > y2)\n            || (y < y0 && y < y1 && y < y2)\n        ) {\n            return 0;\n        }\n        var nRoots = curve.quadraticRootAt(y0, y1, y2, y, roots);\n        if (nRoots === 0) {\n            return 0;\n        }\n        else {\n            var t = curve.quadraticExtremum(y0, y1, y2);\n            if (t >= 0 && t <= 1) {\n                var w = 0;\n                var y_ = curve.quadraticAt(y0, y1, y2, t);\n                for (var i = 0; i < nRoots; i++) {\n                    // Remove one endpoint.\n                    var unit = (roots[i] === 0 || roots[i] === 1) ? 0.5 : 1;\n\n                    var x_ = curve.quadraticAt(x0, x1, x2, roots[i]);\n                    if (x_ < x) {   // Quick reject\n                        continue;\n                    }\n                    if (roots[i] < t) {\n                        w += y_ < y0 ? unit : -unit;\n                    }\n                    else {\n                        w += y2 < y_ ? unit : -unit;\n                    }\n                }\n                return w;\n            }\n            else {\n                // Remove one endpoint.\n                var unit = (roots[0] === 0 || roots[0] === 1) ? 0.5 : 1;\n\n                var x_ = curve.quadraticAt(x0, x1, x2, roots[0]);\n                if (x_ < x) {   // Quick reject\n                    return 0;\n                }\n                return y2 < y0 ? unit : -unit;\n            }\n        }\n    }\n\n    // TODO\n    // Arc 旋转\n    function windingArc(\n        cx, cy, r, startAngle, endAngle, anticlockwise, x, y\n    ) {\n        y -= cy;\n        if (y > r || y < -r) {\n            return 0;\n        }\n        var tmp = Math.sqrt(r * r - y * y);\n        roots[0] = -tmp;\n        roots[1] = tmp;\n\n        var diff = Math.abs(startAngle - endAngle);\n        if (diff < 1e-4) {\n            return 0;\n        }\n        if (diff % PI2 < 1e-4) {\n            // Is a circle\n            startAngle = 0;\n            endAngle = PI2;\n            var dir = anticlockwise ? 1 : -1;\n            if (x >= roots[0] + cx && x <= roots[1] + cx) {\n                return dir;\n            } else {\n                return 0;\n            }\n        }\n\n        if (anticlockwise) {\n            var tmp = startAngle;\n            startAngle = normalizeRadian(endAngle);\n            endAngle = normalizeRadian(tmp);\n        }\n        else {\n            startAngle = normalizeRadian(startAngle);\n            endAngle = normalizeRadian(endAngle);\n        }\n        if (startAngle > endAngle) {\n            endAngle += PI2;\n        }\n\n        var w = 0;\n        for (var i = 0; i < 2; i++) {\n            var x_ = roots[i];\n            if (x_ + cx > x) {\n                var angle = Math.atan2(y, x_);\n                var dir = anticlockwise ? 1 : -1;\n                if (angle < 0) {\n                    angle = PI2 + angle;\n                }\n                if (\n                    (angle >= startAngle && angle <= endAngle)\n                    || (angle + PI2 >= startAngle && angle + PI2 <= endAngle)\n                ) {\n                    if (angle > Math.PI / 2 && angle < Math.PI * 1.5) {\n                        dir = -dir;\n                    }\n                    w += dir;\n                }\n            }\n        }\n        return w;\n    }\n\n    function containPath(data, lineWidth, isStroke, x, y) {\n        var w = 0;\n        var xi = 0;\n        var yi = 0;\n        var x0 = 0;\n        var y0 = 0;\n\n        for (var i = 0; i < data.length;) {\n            var cmd = data[i++];\n            // Begin a new subpath\n            if (cmd === CMD.M && i > 1) {\n                // Close previous subpath\n                if (!isStroke) {\n                    w += windingLine(xi, yi, x0, y0, x, y);\n                }\n                // 如果被任何一个 subpath 包含\n                // if (w !== 0) {\n                //     return true;\n                // }\n            }\n\n            if (i == 1) {\n                // 如果第一个命令是 L, C, Q\n                // 则 previous point 同绘制命令的第一个 point\n                //\n                // 第一个命令为 Arc 的情况下会在后面特殊处理\n                xi = data[i];\n                yi = data[i + 1];\n\n                x0 = xi;\n                y0 = yi;\n            }\n\n            switch (cmd) {\n                case CMD.M:\n                    // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n                    // 在 closePath 的时候使用\n                    x0 = data[i++];\n                    y0 = data[i++];\n                    xi = x0;\n                    yi = y0;\n                    break;\n                case CMD.L:\n                    if (isStroke) {\n                        if (containStroke(xi, yi, data[i], data[i + 1], lineWidth, x, y)) {\n                            return true;\n                        }\n                    }\n                    else {\n                        // NOTE 在第一个命令为 L, C, Q 的时候会计算出 NaN\n                        w += windingLine(xi, yi, data[i], data[i + 1], x, y) || 0;\n                    }\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.C:\n                    if (isStroke) {\n                        if (cubic.containStroke(xi, yi,\n                            data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n                            lineWidth, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        w += windingCubic(\n                            xi, yi,\n                            data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n                            x, y\n                        ) || 0;\n                    }\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.Q:\n                    if (isStroke) {\n                        if (quadratic.containStroke(xi, yi,\n                            data[i++], data[i++], data[i], data[i + 1],\n                            lineWidth, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        w += windingQuadratic(\n                            xi, yi,\n                            data[i++], data[i++], data[i], data[i + 1],\n                            x, y\n                        ) || 0;\n                    }\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.A:\n                    // TODO Arc 判断的开销比较大\n                    var cx = data[i++];\n                    var cy = data[i++];\n                    var rx = data[i++];\n                    var ry = data[i++];\n                    var theta = data[i++];\n                    var dTheta = data[i++];\n                    // TODO Arc 旋转\n                    var psi = data[i++];\n                    var anticlockwise = 1 - data[i++];\n                    var x1 = Math.cos(theta) * rx + cx;\n                    var y1 = Math.sin(theta) * ry + cy;\n                    // 不是直接使用 arc 命令\n                    if (i > 1) {\n                        w += windingLine(xi, yi, x1, y1, x, y);\n                    }\n                    else {\n                        // 第一个命令起点还未定义\n                        x0 = x1;\n                        y0 = y1;\n                    }\n                    // zr 使用scale来模拟椭圆, 这里也对x做一定的缩放\n                    var _x = (x - cx) * ry / rx + cx;\n                    if (isStroke) {\n                        if (arc.containStroke(\n                            cx, cy, ry, theta, theta + dTheta, anticlockwise,\n                            lineWidth, _x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        w += windingArc(\n                            cx, cy, ry, theta, theta + dTheta, anticlockwise,\n                            _x, y\n                        );\n                    }\n                    xi = Math.cos(theta + dTheta) * rx + cx;\n                    yi = Math.sin(theta + dTheta) * ry + cy;\n                    break;\n                case CMD.R:\n                    x0 = xi = data[i++];\n                    y0 = yi = data[i++];\n                    var width = data[i++];\n                    var height = data[i++];\n                    var x1 = x0 + width;\n                    var y1 = y0 + height;\n                    if (isStroke) {\n                        if (containStroke(x0, y0, x1, y0, lineWidth, x, y)\n                          || containStroke(x1, y0, x1, y1, lineWidth, x, y)\n                          || containStroke(x1, y1, x0, y1, lineWidth, x, y)\n                          || containStroke(x0, y1, x0, y0, lineWidth, x, y)\n                        ) {\n                            return true;\n                        }\n                    }\n                    else {\n                        // FIXME Clockwise ?\n                        w += windingLine(x1, y0, x1, y1, x, y);\n                        w += windingLine(x0, y1, x0, y0, x, y);\n                    }\n                    break;\n                case CMD.Z:\n                    if (isStroke) {\n                        if (containStroke(\n                            xi, yi, x0, y0, lineWidth, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        // Close a subpath\n                        w += windingLine(xi, yi, x0, y0, x, y);\n                        // 如果被任何一个 subpath 包含\n                        // FIXME subpaths may overlap\n                        // if (w !== 0) {\n                        //     return true;\n                        // }\n                    }\n                    xi = x0;\n                    yi = y0;\n                    break;\n            }\n        }\n        if (!isStroke && !isAroundEqual(yi, y0)) {\n            w += windingLine(xi, yi, x0, y0, x, y) || 0;\n        }\n        return w !== 0;\n    }\n\n    module.exports = {\n        contain: function (pathData, x, y) {\n            return containPath(pathData, 0, false, x, y);\n        },\n\n        containStroke: function (pathData, lineWidth, x, y) {\n            return containPath(pathData, lineWidth, true, x, y);\n        }\n    };\n\n\n/***/ }),\n/* 659 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var curve = __webpack_require__(474);\n\n    module.exports = {\n        /**\n         * 二次贝塞尔曲线描边包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  x2\n         * @param  {number}  y2\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        containStroke: function (x0, y0, x1, y1, x2, y2, lineWidth, x, y) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l && y > y2 + _l)\n                || (y < y0 - _l && y < y1 - _l && y < y2 - _l)\n                || (x > x0 + _l && x > x1 + _l && x > x2 + _l)\n                || (x < x0 - _l && x < x1 - _l && x < x2 - _l)\n            ) {\n                return false;\n            }\n            var d = curve.quadraticProjectPoint(\n                x0, y0, x1, y1, x2, y2,\n                x, y, null\n            );\n            return d <= _l / 2;\n        }\n    };\n\n\n/***/ }),\n/* 660 */\n/***/ (function(module, exports) {\n\n\n    module.exports = function windingLine(x0, y0, x1, y1, x, y) {\n        if ((y > y0 && y > y1) || (y < y0 && y < y1)) {\n            return 0;\n        }\n        // Ignore horizontal line\n        if (y1 === y0) {\n            return 0;\n        }\n        var dir = y1 < y0 ? 1 : -1;\n        var t = (y - y0) / (y1 - y0);\n\n        // Avoid winding error when intersection point is the connect point of two line of polygon\n        if (t === 1 || t === 0) {\n            dir = y1 < y0 ? 0.5 : -0.5;\n        }\n\n        var x_ = t * (x1 - x0) + x0;\n\n        return x_ > x ? dir : 0;\n    };\n\n\n/***/ }),\n/* 661 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Only implements needed gestures for mobile.\n */\n\n\n    var eventUtil = __webpack_require__(470);\n\n    var GestureMgr = function () {\n\n        /**\n         * @private\n         * @type {Array.<Object>}\n         */\n        this._track = [];\n    };\n\n    GestureMgr.prototype = {\n\n        constructor: GestureMgr,\n\n        recognize: function (event, target, root) {\n            this._doTrack(event, target, root);\n            return this._recognize(event);\n        },\n\n        clear: function () {\n            this._track.length = 0;\n            return this;\n        },\n\n        _doTrack: function (event, target, root) {\n            var touches = event.touches;\n\n            if (!touches) {\n                return;\n            }\n\n            var trackItem = {\n                points: [],\n                touches: [],\n                target: target,\n                event: event\n            };\n\n            for (var i = 0, len = touches.length; i < len; i++) {\n                var touch = touches[i];\n                var pos = eventUtil.clientToLocal(root, touch, {});\n                trackItem.points.push([pos.zrX, pos.zrY]);\n                trackItem.touches.push(touch);\n            }\n\n            this._track.push(trackItem);\n        },\n\n        _recognize: function (event) {\n            for (var eventName in recognizers) {\n                if (recognizers.hasOwnProperty(eventName)) {\n                    var gestureInfo = recognizers[eventName](this._track, event);\n                    if (gestureInfo) {\n                        return gestureInfo;\n                    }\n                }\n            }\n        }\n    };\n\n    function dist(pointPair) {\n        var dx = pointPair[1][0] - pointPair[0][0];\n        var dy = pointPair[1][1] - pointPair[0][1];\n\n        return Math.sqrt(dx * dx + dy * dy);\n    }\n\n    function center(pointPair) {\n        return [\n            (pointPair[0][0] + pointPair[1][0]) / 2,\n            (pointPair[0][1] + pointPair[1][1]) / 2\n        ];\n    }\n\n    var recognizers = {\n\n        pinch: function (track, event) {\n            var trackLen = track.length;\n\n            if (!trackLen) {\n                return;\n            }\n\n            var pinchEnd = (track[trackLen - 1] || {}).points;\n            var pinchPre = (track[trackLen - 2] || {}).points || pinchEnd;\n\n            if (pinchPre\n                && pinchPre.length > 1\n                && pinchEnd\n                && pinchEnd.length > 1\n            ) {\n                var pinchScale = dist(pinchEnd) / dist(pinchPre);\n                !isFinite(pinchScale) && (pinchScale = 1);\n\n                event.pinchScale = pinchScale;\n\n                var pinchCenter = center(pinchEnd);\n                event.pinchX = pinchCenter[0];\n                event.pinchY = pinchCenter[1];\n\n                return {\n                    type: 'pinch',\n                    target: track[0].target,\n                    event: event\n                };\n            }\n        }\n\n        // Only pinch currently.\n    };\n\n    module.exports = GestureMgr;\n\n\n\n/***/ }),\n/* 662 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @author Yi Shen(https://github.com/pissang)\n */\n\n\n    var vec2 = __webpack_require__(458);\n    var curve = __webpack_require__(474);\n\n    var bbox = {};\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    var mathSin = Math.sin;\n    var mathCos = Math.cos;\n\n    var start = vec2.create();\n    var end = vec2.create();\n    var extremity = vec2.create();\n\n    var PI2 = Math.PI * 2;\n    /**\n     * 从顶点数组中计算出最小包围盒，写入`min`和`max`中\n     * @module zrender/core/bbox\n     * @param {Array<Object>} points 顶点数组\n     * @param {number} min\n     * @param {number} max\n     */\n    bbox.fromPoints = function(points, min, max) {\n        if (points.length === 0) {\n            return;\n        }\n        var p = points[0];\n        var left = p[0];\n        var right = p[0];\n        var top = p[1];\n        var bottom = p[1];\n        var i;\n\n        for (i = 1; i < points.length; i++) {\n            p = points[i];\n            left = mathMin(left, p[0]);\n            right = mathMax(right, p[0]);\n            top = mathMin(top, p[1]);\n            bottom = mathMax(bottom, p[1]);\n        }\n\n        min[0] = left;\n        min[1] = top;\n        max[0] = right;\n        max[1] = bottom;\n    };\n\n    /**\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromLine = function (x0, y0, x1, y1, min, max) {\n        min[0] = mathMin(x0, x1);\n        min[1] = mathMin(y0, y1);\n        max[0] = mathMax(x0, x1);\n        max[1] = mathMax(y0, y1);\n    };\n\n    var xDim = [];\n    var yDim = [];\n    /**\n     * 从三阶贝塞尔曲线(p0, p1, p2, p3)中计算出最小包围盒，写入`min`和`max`中\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x3\n     * @param {number} y3\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromCubic = function(\n        x0, y0, x1, y1, x2, y2, x3, y3, min, max\n    ) {\n        var cubicExtrema = curve.cubicExtrema;\n        var cubicAt = curve.cubicAt;\n        var i;\n        var n = cubicExtrema(x0, x1, x2, x3, xDim);\n        min[0] = Infinity;\n        min[1] = Infinity;\n        max[0] = -Infinity;\n        max[1] = -Infinity;\n\n        for (i = 0; i < n; i++) {\n            var x = cubicAt(x0, x1, x2, x3, xDim[i]);\n            min[0] = mathMin(x, min[0]);\n            max[0] = mathMax(x, max[0]);\n        }\n        n = cubicExtrema(y0, y1, y2, y3, yDim);\n        for (i = 0; i < n; i++) {\n            var y = cubicAt(y0, y1, y2, y3, yDim[i]);\n            min[1] = mathMin(y, min[1]);\n            max[1] = mathMax(y, max[1]);\n        }\n\n        min[0] = mathMin(x0, min[0]);\n        max[0] = mathMax(x0, max[0]);\n        min[0] = mathMin(x3, min[0]);\n        max[0] = mathMax(x3, max[0]);\n\n        min[1] = mathMin(y0, min[1]);\n        max[1] = mathMax(y0, max[1]);\n        min[1] = mathMin(y3, min[1]);\n        max[1] = mathMax(y3, max[1]);\n    };\n\n    /**\n     * 从二阶贝塞尔曲线(p0, p1, p2)中计算出最小包围盒，写入`min`和`max`中\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromQuadratic = function(x0, y0, x1, y1, x2, y2, min, max) {\n        var quadraticExtremum = curve.quadraticExtremum;\n        var quadraticAt = curve.quadraticAt;\n        // Find extremities, where derivative in x dim or y dim is zero\n        var tx =\n            mathMax(\n                mathMin(quadraticExtremum(x0, x1, x2), 1), 0\n            );\n        var ty =\n            mathMax(\n                mathMin(quadraticExtremum(y0, y1, y2), 1), 0\n            );\n\n        var x = quadraticAt(x0, x1, x2, tx);\n        var y = quadraticAt(y0, y1, y2, ty);\n\n        min[0] = mathMin(x0, x2, x);\n        min[1] = mathMin(y0, y2, y);\n        max[0] = mathMax(x0, x2, x);\n        max[1] = mathMax(y0, y2, y);\n    };\n\n    /**\n     * 从圆弧中计算出最小包围盒，写入`min`和`max`中\n     * @method\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x\n     * @param {number} y\n     * @param {number} rx\n     * @param {number} ry\n     * @param {number} startAngle\n     * @param {number} endAngle\n     * @param {number} anticlockwise\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromArc = function (\n        x, y, rx, ry, startAngle, endAngle, anticlockwise, min, max\n    ) {\n        var vec2Min = vec2.min;\n        var vec2Max = vec2.max;\n\n        var diff = Math.abs(startAngle - endAngle);\n\n\n        if (diff % PI2 < 1e-4 && diff > 1e-4) {\n            // Is a circle\n            min[0] = x - rx;\n            min[1] = y - ry;\n            max[0] = x + rx;\n            max[1] = y + ry;\n            return;\n        }\n\n        start[0] = mathCos(startAngle) * rx + x;\n        start[1] = mathSin(startAngle) * ry + y;\n\n        end[0] = mathCos(endAngle) * rx + x;\n        end[1] = mathSin(endAngle) * ry + y;\n\n        vec2Min(min, start, end);\n        vec2Max(max, start, end);\n\n        // Thresh to [0, Math.PI * 2]\n        startAngle = startAngle % (PI2);\n        if (startAngle < 0) {\n            startAngle = startAngle + PI2;\n        }\n        endAngle = endAngle % (PI2);\n        if (endAngle < 0) {\n            endAngle = endAngle + PI2;\n        }\n\n        if (startAngle > endAngle && !anticlockwise) {\n            endAngle += PI2;\n        }\n        else if (startAngle < endAngle && anticlockwise) {\n            startAngle += PI2;\n        }\n        if (anticlockwise) {\n            var tmp = endAngle;\n            endAngle = startAngle;\n            startAngle = tmp;\n        }\n\n        // var number = 0;\n        // var step = (anticlockwise ? -Math.PI : Math.PI) / 2;\n        for (var angle = 0; angle < endAngle; angle += Math.PI / 2) {\n            if (angle > startAngle) {\n                extremity[0] = mathCos(angle) * rx + x;\n                extremity[1] = mathSin(angle) * ry + y;\n\n                vec2Min(min, extremity, min);\n                vec2Max(max, extremity, max);\n            }\n        }\n    };\n\n    module.exports = bbox;\n\n\n\n/***/ }),\n/* 663 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var eventTool = __webpack_require__(470);\n    var zrUtil = __webpack_require__(453);\n    var Eventful = __webpack_require__(476);\n    var env = __webpack_require__(460);\n    var GestureMgr = __webpack_require__(661);\n\n    var addEventListener = eventTool.addEventListener;\n    var removeEventListener = eventTool.removeEventListener;\n    var normalizeEvent = eventTool.normalizeEvent;\n\n    var TOUCH_CLICK_DELAY = 300;\n\n    var mouseHandlerNames = [\n        'click', 'dblclick', 'mousewheel', 'mouseout',\n        'mouseup', 'mousedown', 'mousemove', 'contextmenu'\n    ];\n\n    var touchHandlerNames = [\n        'touchstart', 'touchend', 'touchmove'\n    ];\n\n    var pointerEventNames = {\n        pointerdown: 1, pointerup: 1, pointermove: 1, pointerout: 1\n    };\n\n    var pointerHandlerNames = zrUtil.map(mouseHandlerNames, function (name) {\n        var nm = name.replace('mouse', 'pointer');\n        return pointerEventNames[nm] ? nm : name;\n    });\n\n    function eventNameFix(name) {\n        return (name === 'mousewheel' && env.browser.firefox) ? 'DOMMouseScroll' : name;\n    }\n\n    function processGesture(proxy, event, stage) {\n        var gestureMgr = proxy._gestureMgr;\n\n        stage === 'start' && gestureMgr.clear();\n\n        var gestureInfo = gestureMgr.recognize(\n            event,\n            proxy.handler.findHover(event.zrX, event.zrY, null).target,\n            proxy.dom\n        );\n\n        stage === 'end' && gestureMgr.clear();\n\n        // Do not do any preventDefault here. Upper application do that if necessary.\n        if (gestureInfo) {\n            var type = gestureInfo.type;\n            event.gestureEvent = type;\n\n            proxy.handler.dispatchToElement({target: gestureInfo.target}, type, gestureInfo.event);\n        }\n    }\n\n    // function onMSGestureChange(proxy, event) {\n    //     if (event.translationX || event.translationY) {\n    //         // mousemove is carried by MSGesture to reduce the sensitivity.\n    //         proxy.handler.dispatchToElement(event.target, 'mousemove', event);\n    //     }\n    //     if (event.scale !== 1) {\n    //         event.pinchX = event.offsetX;\n    //         event.pinchY = event.offsetY;\n    //         event.pinchScale = event.scale;\n    //         proxy.handler.dispatchToElement(event.target, 'pinch', event);\n    //     }\n    // }\n\n    /**\n     * Prevent mouse event from being dispatched after Touch Events action\n     * @see <https://github.com/deltakosh/handjs/blob/master/src/hand.base.js>\n     * 1. Mobile browsers dispatch mouse events 300ms after touchend.\n     * 2. Chrome for Android dispatch mousedown for long-touch about 650ms\n     * Result: Blocking Mouse Events for 700ms.\n     */\n    function setTouchTimer(instance) {\n        instance._touching = true;\n        clearTimeout(instance._touchTimer);\n        instance._touchTimer = setTimeout(function () {\n            instance._touching = false;\n        }, 700);\n    }\n\n\n    var domHandlers = {\n        /**\n         * Mouse move handler\n         * @inner\n         * @param {Event} event\n         */\n        mousemove: function (event) {\n            event = normalizeEvent(this.dom, event);\n\n            this.trigger('mousemove', event);\n        },\n\n        /**\n         * Mouse out handler\n         * @inner\n         * @param {Event} event\n         */\n        mouseout: function (event) {\n            event = normalizeEvent(this.dom, event);\n\n            var element = event.toElement || event.relatedTarget;\n            if (element != this.dom) {\n                while (element && element.nodeType != 9) {\n                    // 忽略包含在root中的dom引起的mouseOut\n                    if (element === this.dom) {\n                        return;\n                    }\n\n                    element = element.parentNode;\n                }\n            }\n\n            this.trigger('mouseout', event);\n        },\n\n        /**\n         * Touch开始响应函数\n         * @inner\n         * @param {Event} event\n         */\n        touchstart: function (event) {\n            // Default mouse behaviour should not be disabled here.\n            // For example, page may needs to be slided.\n            event = normalizeEvent(this.dom, event);\n\n            // Mark touch, which is useful in distinguish touch and\n            // mouse event in upper applicatoin.\n            event.zrByTouch = true;\n\n            this._lastTouchMoment = new Date();\n\n            processGesture(this, event, 'start');\n\n            // In touch device, trigger `mousemove`(`mouseover`) should\n            // be triggered, and must before `mousedown` triggered.\n            domHandlers.mousemove.call(this, event);\n\n            domHandlers.mousedown.call(this, event);\n\n            setTouchTimer(this);\n        },\n\n        /**\n         * Touch移动响应函数\n         * @inner\n         * @param {Event} event\n         */\n        touchmove: function (event) {\n\n            event = normalizeEvent(this.dom, event);\n\n            // Mark touch, which is useful in distinguish touch and\n            // mouse event in upper applicatoin.\n            event.zrByTouch = true;\n\n            processGesture(this, event, 'change');\n\n            // Mouse move should always be triggered no matter whether\n            // there is gestrue event, because mouse move and pinch may\n            // be used at the same time.\n            domHandlers.mousemove.call(this, event);\n\n            setTouchTimer(this);\n        },\n\n        /**\n         * Touch结束响应函数\n         * @inner\n         * @param {Event} event\n         */\n        touchend: function (event) {\n\n            event = normalizeEvent(this.dom, event);\n\n            // Mark touch, which is useful in distinguish touch and\n            // mouse event in upper applicatoin.\n            event.zrByTouch = true;\n\n            processGesture(this, event, 'end');\n\n            domHandlers.mouseup.call(this, event);\n\n            // Do not trigger `mouseout` here, in spite of `mousemove`(`mouseover`) is\n            // triggered in `touchstart`. This seems to be illogical, but by this mechanism,\n            // we can conveniently implement \"hover style\" in both PC and touch device just\n            // by listening to `mouseover` to add \"hover style\" and listening to `mouseout`\n            // to remove \"hover style\" on an element, without any additional code for\n            // compatibility. (`mouseout` will not be triggered in `touchend`, so \"hover\n            // style\" will remain for user view)\n\n            // click event should always be triggered no matter whether\n            // there is gestrue event. System click can not be prevented.\n            if (+new Date() - this._lastTouchMoment < TOUCH_CLICK_DELAY) {\n                domHandlers.click.call(this, event);\n            }\n\n            setTouchTimer(this);\n        },\n\n        pointerdown: function (event) {\n            domHandlers.mousedown.call(this, event);\n\n            // if (useMSGuesture(this, event)) {\n            //     this._msGesture.addPointer(event.pointerId);\n            // }\n        },\n\n        pointermove: function (event) {\n            // FIXME\n            // pointermove is so sensitive that it always triggered when\n            // tap(click) on touch screen, which affect some judgement in\n            // upper application. So, we dont support mousemove on MS touch\n            // device yet.\n            if (!isPointerFromTouch(event)) {\n                domHandlers.mousemove.call(this, event);\n            }\n        },\n\n        pointerup: function (event) {\n            domHandlers.mouseup.call(this, event);\n        },\n\n        pointerout: function (event) {\n            // pointerout will be triggered when tap on touch screen\n            // (IE11+/Edge on MS Surface) after click event triggered,\n            // which is inconsistent with the mousout behavior we defined\n            // in touchend. So we unify them.\n            // (check domHandlers.touchend for detailed explanation)\n            if (!isPointerFromTouch(event)) {\n                domHandlers.mouseout.call(this, event);\n            }\n        }\n    };\n\n    function isPointerFromTouch(event) {\n        var pointerType = event.pointerType;\n        return pointerType === 'pen' || pointerType === 'touch';\n    }\n\n    // function useMSGuesture(handlerProxy, event) {\n    //     return isPointerFromTouch(event) && !!handlerProxy._msGesture;\n    // }\n\n    // Common handlers\n    zrUtil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n        domHandlers[name] = function (event) {\n            event = normalizeEvent(this.dom, event);\n            this.trigger(name, event);\n        };\n    });\n\n    /**\n     * 为控制类实例初始化dom 事件处理函数\n     *\n     * @inner\n     * @param {module:zrender/Handler} instance 控制类实例\n     */\n    function initDomHandler(instance) {\n        zrUtil.each(touchHandlerNames, function (name) {\n            instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n        });\n\n        zrUtil.each(pointerHandlerNames, function (name) {\n            instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n        });\n\n        zrUtil.each(mouseHandlerNames, function (name) {\n            instance._handlers[name] = makeMouseHandler(domHandlers[name], instance);\n        });\n\n        function makeMouseHandler(fn, instance) {\n            return function () {\n                if (instance._touching) {\n                    return;\n                }\n                return fn.apply(instance, arguments);\n            };\n        }\n    }\n\n\n    function HandlerDomProxy(dom) {\n        Eventful.call(this);\n\n        this.dom = dom;\n\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this._touching = false;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._touchTimer;\n\n        /**\n         * @private\n         * @type {module:zrender/core/GestureMgr}\n         */\n        this._gestureMgr = new GestureMgr();\n\n        this._handlers = {};\n\n        initDomHandler(this);\n\n        if (env.pointerEventsSupported) { // Only IE11+/Edge\n            // 1. On devices that both enable touch and mouse (e.g., MS Surface and lenovo X240),\n            // IE11+/Edge do not trigger touch event, but trigger pointer event and mouse event\n            // at the same time.\n            // 2. On MS Surface, it probablely only trigger mousedown but no mouseup when tap on\n            // screen, which do not occurs in pointer event.\n            // So we use pointer event to both detect touch gesture and mouse behavior.\n            mountHandlers(pointerHandlerNames, this);\n\n            // FIXME\n            // Note: MS Gesture require CSS touch-action set. But touch-action is not reliable,\n            // which does not prevent defuault behavior occasionally (which may cause view port\n            // zoomed in but use can not zoom it back). And event.preventDefault() does not work.\n            // So we have to not to use MSGesture and not to support touchmove and pinch on MS\n            // touch screen. And we only support click behavior on MS touch screen now.\n\n            // MS Gesture Event is only supported on IE11+/Edge and on Windows 8+.\n            // We dont support touch on IE on win7.\n            // See <https://msdn.microsoft.com/en-us/library/dn433243(v=vs.85).aspx>\n            // if (typeof MSGesture === 'function') {\n            //     (this._msGesture = new MSGesture()).target = dom; // jshint ignore:line\n            //     dom.addEventListener('MSGestureChange', onMSGestureChange);\n            // }\n        }\n        else {\n            if (env.touchEventsSupported) {\n                mountHandlers(touchHandlerNames, this);\n                // Handler of 'mouseout' event is needed in touch mode, which will be mounted below.\n                // addEventListener(root, 'mouseout', this._mouseoutHandler);\n            }\n\n            // 1. Considering some devices that both enable touch and mouse event (like on MS Surface\n            // and lenovo X240, @see #2350), we make mouse event be always listened, otherwise\n            // mouse event can not be handle in those devices.\n            // 2. On MS Surface, Chrome will trigger both touch event and mouse event. How to prevent\n            // mouseevent after touch event triggered, see `setTouchTimer`.\n            mountHandlers(mouseHandlerNames, this);\n        }\n\n        function mountHandlers(handlerNames, instance) {\n            zrUtil.each(handlerNames, function (name) {\n                addEventListener(dom, eventNameFix(name), instance._handlers[name]);\n            }, instance);\n        }\n    }\n\n    var handlerDomProxyProto = HandlerDomProxy.prototype;\n    handlerDomProxyProto.dispose = function () {\n        var handlerNames = mouseHandlerNames.concat(touchHandlerNames);\n\n        for (var i = 0; i < handlerNames.length; i++) {\n            var name = handlerNames[i];\n            removeEventListener(this.dom, eventNameFix(name), this._handlers[name]);\n        }\n    };\n\n    handlerDomProxyProto.setCursor = function (cursorStyle) {\n        this.dom.style.cursor = cursorStyle || 'default';\n    };\n\n    zrUtil.mixin(HandlerDomProxy, Eventful);\n\n    module.exports = HandlerDomProxy;\n\n\n/***/ }),\n/* 664 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// CompoundPath to improve performance\n\n\n    var Path = __webpack_require__(459);\n\n    module.exports = Path.extend({\n\n        type: 'compound',\n\n        shape: {\n\n            paths: null\n        },\n\n        _updatePathDirty: function () {\n            var dirtyPath = this.__dirtyPath;\n            var paths = this.shape.paths;\n            for (var i = 0; i < paths.length; i++) {\n                // Mark as dirty if any subpath is dirty\n                dirtyPath = dirtyPath || paths[i].__dirtyPath;\n            }\n            this.__dirtyPath = dirtyPath;\n            this.__dirty = this.__dirty || dirtyPath;\n        },\n\n        beforeBrush: function () {\n            this._updatePathDirty();\n            var paths = this.shape.paths || [];\n            var scale = this.getGlobalScale();\n            // Update path scale\n            for (var i = 0; i < paths.length; i++) {\n                if (!paths[i].path) {\n                    paths[i].createPathProxy();\n                }\n                paths[i].path.setScale(scale[0], scale[1]);\n            }\n        },\n\n        buildPath: function (ctx, shape) {\n            var paths = shape.paths || [];\n            for (var i = 0; i < paths.length; i++) {\n                paths[i].buildPath(ctx, paths[i].shape, true);\n            }\n        },\n\n        afterBrush: function () {\n            var paths = this.shape.paths;\n            for (var i = 0; i < paths.length; i++) {\n                paths[i].__dirtyPath = false;\n            }\n        },\n\n        getBoundingRect: function () {\n            this._updatePathDirty();\n            return Path.prototype.getBoundingRect.call(this);\n        }\n    });\n\n\n/***/ }),\n/* 665 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(453);\n\n    var Gradient = __webpack_require__(507);\n\n    /**\n     * x, y, x2, y2 are all percent from 0 to 1\n     * @param {number} [x=0]\n     * @param {number} [y=0]\n     * @param {number} [x2=1]\n     * @param {number} [y2=0]\n     * @param {Array.<Object>} colorStops\n     * @param {boolean} [globalCoord=false]\n     */\n    var LinearGradient = function (x, y, x2, y2, colorStops, globalCoord) {\n        // Should do nothing more in this constructor. Because gradient can be\n        // declard by `color: {type: 'linear', colorStops: ...}`, where\n        // this constructor will not be called.\n\n        this.x = x == null ? 0 : x;\n\n        this.y = y == null ? 0 : y;\n\n        this.x2 = x2 == null ? 1 : x2;\n\n        this.y2 = y2 == null ? 0 : y2;\n\n        // Can be cloned\n        this.type = 'linear';\n\n        // If use global coord\n        this.global = globalCoord || false;\n\n        Gradient.call(this, colorStops);\n    };\n\n    LinearGradient.prototype = {\n\n        constructor: LinearGradient\n    };\n\n    zrUtil.inherits(LinearGradient, Gradient);\n\n    module.exports = LinearGradient;\n\n\n/***/ }),\n/* 666 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(453);\n\n    var Gradient = __webpack_require__(507);\n\n    /**\n     * x, y, r are all percent from 0 to 1\n     * @param {number} [x=0.5]\n     * @param {number} [y=0.5]\n     * @param {number} [r=0.5]\n     * @param {Array.<Object>} [colorStops]\n     * @param {boolean} [globalCoord=false]\n     */\n    var RadialGradient = function (x, y, r, colorStops, globalCoord) {\n        // Should do nothing more in this constructor. Because gradient can be\n        // declard by `color: {type: 'radial', colorStops: ...}`, where\n        // this constructor will not be called.\n\n        this.x = x == null ? 0.5 : x;\n\n        this.y = y == null ? 0.5 : y;\n\n        this.r = r == null ? 0.5 : r;\n\n        // Can be cloned\n        this.type = 'radial';\n\n        // If use global coord\n        this.global = globalCoord || false;\n\n        Gradient.call(this, colorStops);\n    };\n\n    RadialGradient.prototype = {\n\n        constructor: RadialGradient\n    };\n\n    zrUtil.inherits(RadialGradient, Gradient);\n\n    module.exports = RadialGradient;\n\n\n/***/ }),\n/* 667 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Text element\n * @module zrender/graphic/Text\n *\n * TODO Wrapping\n *\n * Text not support gradient\n */\n\n\n\n    var Displayable = __webpack_require__(506);\n    var zrUtil = __webpack_require__(453);\n    var textContain = __webpack_require__(473);\n\n    /**\n     * @alias zrender/graphic/Text\n     * @extends module:zrender/graphic/Displayable\n     * @constructor\n     * @param {Object} opts\n     */\n    var Text = function (opts) {\n        Displayable.call(this, opts);\n    };\n\n    Text.prototype = {\n\n        constructor: Text,\n\n        type: 'text',\n\n        brush: function (ctx, prevEl) {\n            var style = this.style;\n            var x = style.x || 0;\n            var y = style.y || 0;\n            // Convert to string\n            var text = style.text;\n\n            // Convert to string\n            text != null && (text += '');\n\n            // Always bind style\n            style.bind(ctx, this, prevEl);\n\n            if (text) {\n\n                this.setTransform(ctx);\n\n                var textBaseline;\n                var textAlign = style.textAlign;\n                var font = style.textFont || style.font;\n                if (style.textVerticalAlign) {\n                    var rect = textContain.getBoundingRect(\n                        text, font, style.textAlign, 'top'\n                    );\n                    // Ignore textBaseline\n                    textBaseline = 'middle';\n                    switch (style.textVerticalAlign) {\n                        case 'middle':\n                            y -= rect.height / 2 - rect.lineHeight / 2;\n                            break;\n                        case 'bottom':\n                            y -= rect.height - rect.lineHeight / 2;\n                            break;\n                        default:\n                            y += rect.lineHeight / 2;\n                    }\n                }\n                else {\n                    textBaseline = style.textBaseline;\n                }\n\n                // TODO Invalid font\n                ctx.font = font || '12px sans-serif';\n                ctx.textAlign = textAlign || 'left';\n                // Use canvas default left textAlign. Giving invalid value will cause state not change\n                if (ctx.textAlign !== textAlign) {\n                    ctx.textAlign = 'left';\n                }\n                // FIXME in text contain default is top\n                ctx.textBaseline = textBaseline || 'alphabetic';\n                // Use canvas default alphabetic baseline\n                if (ctx.textBaseline !== textBaseline) {\n                    ctx.textBaseline = 'alphabetic';\n                }\n\n                var lineHeight = textContain.measureText('国', ctx.font).width;\n\n                var textLines = text.split('\\n');\n                for (var i = 0; i < textLines.length; i++) {\n                    // Fill after stroke so the outline will not cover the main part.\n                    style.hasStroke() && ctx.strokeText(textLines[i], x, y);\n                    style.hasFill() && ctx.fillText(textLines[i], x, y);\n                    y += lineHeight;\n                }\n\n                this.restoreTransform(ctx);\n            }\n        },\n\n        getBoundingRect: function () {\n            var style = this.style;\n            if (!this._rect) {\n                var textVerticalAlign = style.textVerticalAlign;\n                var rect = textContain.getBoundingRect(\n                    style.text + '', style.textFont || style.font, style.textAlign,\n                    textVerticalAlign ? 'top' : style.textBaseline\n                );\n                switch (textVerticalAlign) {\n                    case 'middle':\n                        rect.y -= rect.height / 2;\n                        break;\n                    case 'bottom':\n                        rect.y -= rect.height;\n                        break;\n                }\n                rect.x += style.x || 0;\n                rect.y += style.y || 0;\n                if (style.hasStroke()) {\n                    var w = style.lineWidth;\n                    rect.x -= w / 2;\n                    rect.y -= w / 2;\n                    rect.width += w;\n                    rect.height += w;\n                }\n                this._rect = rect;\n            }\n\n            return this._rect;\n        }\n    };\n\n    zrUtil.inherits(Text, Displayable);\n\n    module.exports = Text;\n\n\n/***/ }),\n/* 668 */\n/***/ (function(module, exports) {\n\n\n\n    module.exports = {\n        buildPath: function (ctx, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var width = shape.width;\n            var height = shape.height;\n            var r = shape.r;\n            var r1;\n            var r2;\n            var r3;\n            var r4;\n\n            // Convert width and height to positive for better borderRadius\n            if (width < 0) {\n                x = x + width;\n                width = -width;\n            }\n            if (height < 0) {\n                y = y + height;\n                height = -height;\n            }\n\n            if (typeof r === 'number') {\n                r1 = r2 = r3 = r4 = r;\n            }\n            else if (r instanceof Array) {\n                if (r.length === 1) {\n                    r1 = r2 = r3 = r4 = r[0];\n                }\n                else if (r.length === 2) {\n                    r1 = r3 = r[0];\n                    r2 = r4 = r[1];\n                }\n                else if (r.length === 3) {\n                    r1 = r[0];\n                    r2 = r4 = r[1];\n                    r3 = r[2];\n                }\n                else {\n                    r1 = r[0];\n                    r2 = r[1];\n                    r3 = r[2];\n                    r4 = r[3];\n                }\n            }\n            else {\n                r1 = r2 = r3 = r4 = 0;\n            }\n\n            var total;\n            if (r1 + r2 > width) {\n                total = r1 + r2;\n                r1 *= width / total;\n                r2 *= width / total;\n            }\n            if (r3 + r4 > width) {\n                total = r3 + r4;\n                r3 *= width / total;\n                r4 *= width / total;\n            }\n            if (r2 + r3 > height) {\n                total = r2 + r3;\n                r2 *= height / total;\n                r3 *= height / total;\n            }\n            if (r1 + r4 > height) {\n                total = r1 + r4;\n                r1 *= height / total;\n                r4 *= height / total;\n            }\n            ctx.moveTo(x + r1, y);\n            ctx.lineTo(x + width - r2, y);\n            r2 !== 0 && ctx.quadraticCurveTo(\n                x + width, y, x + width, y + r2\n            );\n            ctx.lineTo(x + width, y + height - r3);\n            r3 !== 0 && ctx.quadraticCurveTo(\n                x + width, y + height, x + width - r3, y + height\n            );\n            ctx.lineTo(x + r4, y + height);\n            r4 !== 0 && ctx.quadraticCurveTo(\n                x, y + height, x, y + height - r4\n            );\n            ctx.lineTo(x, y + r1);\n            r1 !== 0 && ctx.quadraticCurveTo(x, y, x + r1, y);\n        }\n    };\n\n\n/***/ }),\n/* 669 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 贝塞尔平滑曲线\n * @module zrender/shape/util/smoothBezier\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n\n    var vec2 = __webpack_require__(458);\n    var v2Min = vec2.min;\n    var v2Max = vec2.max;\n    var v2Scale = vec2.scale;\n    var v2Distance = vec2.distance;\n    var v2Add = vec2.add;\n\n    /**\n     * 贝塞尔平滑曲线\n     * @alias module:zrender/shape/util/smoothBezier\n     * @param {Array} points 线段顶点数组\n     * @param {number} smooth 平滑等级, 0-1\n     * @param {boolean} isLoop\n     * @param {Array} constraint 将计算出来的控制点约束在一个包围盒内\n     *                           比如 [[0, 0], [100, 100]], 这个包围盒会与\n     *                           整个折线的包围盒做一个并集用来约束控制点。\n     * @param {Array} 计算出来的控制点数组\n     */\n    module.exports = function (points, smooth, isLoop, constraint) {\n        var cps = [];\n\n        var v = [];\n        var v1 = [];\n        var v2 = [];\n        var prevPoint;\n        var nextPoint;\n\n        var min, max;\n        if (constraint) {\n            min = [Infinity, Infinity];\n            max = [-Infinity, -Infinity];\n            for (var i = 0, len = points.length; i < len; i++) {\n                v2Min(min, min, points[i]);\n                v2Max(max, max, points[i]);\n            }\n            // 与指定的包围盒做并集\n            v2Min(min, min, constraint[0]);\n            v2Max(max, max, constraint[1]);\n        }\n\n        for (var i = 0, len = points.length; i < len; i++) {\n            var point = points[i];\n\n            if (isLoop) {\n                prevPoint = points[i ? i - 1 : len - 1];\n                nextPoint = points[(i + 1) % len];\n            }\n            else {\n                if (i === 0 || i === len - 1) {\n                    cps.push(vec2.clone(points[i]));\n                    continue;\n                }\n                else {\n                    prevPoint = points[i - 1];\n                    nextPoint = points[i + 1];\n                }\n            }\n\n            vec2.sub(v, nextPoint, prevPoint);\n\n            // use degree to scale the handle length\n            v2Scale(v, v, smooth);\n\n            var d0 = v2Distance(point, prevPoint);\n            var d1 = v2Distance(point, nextPoint);\n            var sum = d0 + d1;\n            if (sum !== 0) {\n                d0 /= sum;\n                d1 /= sum;\n            }\n\n            v2Scale(v1, v, -d0);\n            v2Scale(v2, v, d1);\n            var cp0 = v2Add([], point, v1);\n            var cp1 = v2Add([], point, v2);\n            if (constraint) {\n                v2Max(cp0, cp0, min);\n                v2Min(cp0, cp0, max);\n                v2Max(cp1, cp1, min);\n                v2Min(cp1, cp1, max);\n            }\n            cps.push(cp0);\n            cps.push(cp1);\n        }\n\n        if (isLoop) {\n            cps.push(cps.shift());\n        }\n\n        return cps;\n    };\n\n\n\n/***/ }),\n/* 670 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Catmull-Rom spline 插值折线\n * @module zrender/shape/util/smoothSpline\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n    var vec2 = __webpack_require__(458);\n\n    /**\n     * @inner\n     */\n    function interpolate(p0, p1, p2, p3, t, t2, t3) {\n        var v0 = (p2 - p0) * 0.5;\n        var v1 = (p3 - p1) * 0.5;\n        return (2 * (p1 - p2) + v0 + v1) * t3\n                + (-3 * (p1 - p2) - 2 * v0 - v1) * t2\n                + v0 * t + p1;\n    }\n\n    /**\n     * @alias module:zrender/shape/util/smoothSpline\n     * @param {Array} points 线段顶点数组\n     * @param {boolean} isLoop\n     * @return {Array}\n     */\n    module.exports = function (points, isLoop) {\n        var len = points.length;\n        var ret = [];\n\n        var distance = 0;\n        for (var i = 1; i < len; i++) {\n            distance += vec2.distance(points[i - 1], points[i]);\n        }\n\n        var segs = distance / 2;\n        segs = segs < len ? len : segs;\n        for (var i = 0; i < segs; i++) {\n            var pos = i / (segs - 1) * (isLoop ? len : len - 1);\n            var idx = Math.floor(pos);\n\n            var w = pos - idx;\n\n            var p0;\n            var p1 = points[idx % len];\n            var p2;\n            var p3;\n            if (!isLoop) {\n                p0 = points[idx === 0 ? idx : idx - 1];\n                p2 = points[idx > len - 2 ? len - 1 : idx + 1];\n                p3 = points[idx > len - 3 ? len - 1 : idx + 2];\n            }\n            else {\n                p0 = points[(idx - 1 + len) % len];\n                p2 = points[(idx + 1) % len];\n                p3 = points[(idx + 2) % len];\n            }\n\n            var w2 = w * w;\n            var w3 = w * w2;\n\n            ret.push([\n                interpolate(p0[0], p1[0], p2[0], p3[0], w, w2, w3),\n                interpolate(p0[1], p1[1], p2[1], p3[1], w, w2, w3)\n            ]);\n        }\n        return ret;\n    };\n\n\n\n/***/ }),\n/* 671 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Mixin for drawing text in a element bounding rect\n * @module zrender/mixin/RectText\n */\n\n\n\n    var textContain = __webpack_require__(473);\n    var BoundingRect = __webpack_require__(468);\n\n    var tmpRect = new BoundingRect();\n\n    var RectText = function () {};\n\n    function parsePercent(value, maxValue) {\n        if (typeof value === 'string') {\n            if (value.lastIndexOf('%') >= 0) {\n                return parseFloat(value) / 100 * maxValue;\n            }\n            return parseFloat(value);\n        }\n        return value;\n    }\n\n    RectText.prototype = {\n\n        constructor: RectText,\n\n        /**\n         * Draw text in a rect with specified position.\n         * @param  {CanvasRenderingContext} ctx\n         * @param  {Object} rect Displayable rect\n         * @return {Object} textRect Alternative precalculated text bounding rect\n         */\n        drawRectText: function (ctx, rect, textRect) {\n            var style = this.style;\n            var text = style.text;\n            // Convert to string\n            text != null && (text += '');\n            if (!text) {\n                return;\n            }\n\n            // FIXME\n            ctx.save();\n\n            var x;\n            var y;\n            var textPosition = style.textPosition;\n            var textOffset = style.textOffset;\n            var distance = style.textDistance;\n            var align = style.textAlign;\n            var font = style.textFont || style.font;\n            var baseline = style.textBaseline;\n            var verticalAlign = style.textVerticalAlign;\n            rect = style.textPositionRect || rect;\n\n            textRect = textRect || textContain.getBoundingRect(text, font, align, baseline);\n\n            // Transform rect to view space\n            var transform = this.transform;\n            if (!style.textTransform) {\n                if (transform) {\n                    tmpRect.copy(rect);\n                    tmpRect.applyTransform(transform);\n                    rect = tmpRect;\n                }\n            }\n            else {\n                this.setTransform(ctx);\n            }\n\n            // Text position represented by coord\n            if (textPosition instanceof Array) {\n                // Percent\n                x = rect.x + parsePercent(textPosition[0], rect.width);\n                y = rect.y + parsePercent(textPosition[1], rect.height);\n                align = align || 'left';\n                baseline = baseline || 'top';\n\n                if (verticalAlign) {\n                    switch (verticalAlign) {\n                        case 'middle':\n                            y -= textRect.height / 2 - textRect.lineHeight / 2;\n                            break;\n                        case 'bottom':\n                            y -= textRect.height - textRect.lineHeight / 2;\n                            break;\n                        default:\n                            y += textRect.lineHeight / 2;\n                    }\n                    // Force bseline to be middle\n                    baseline = 'middle';\n                }\n            }\n            else {\n                var res = textContain.adjustTextPositionOnRect(\n                    textPosition, rect, textRect, distance\n                );\n                x = res.x;\n                y = res.y;\n                // Default align and baseline when has textPosition\n                align = align || res.textAlign;\n                baseline = baseline || res.textBaseline;\n            }\n\n            if (textOffset) {\n                x += textOffset[0];\n                y += textOffset[1];\n            }\n\n            // Use canvas default left textAlign. Giving invalid value will cause state not change\n            ctx.textAlign = align || 'left';\n            // Use canvas default alphabetic baseline\n            ctx.textBaseline = baseline || 'alphabetic';\n\n            var textFill = style.textFill;\n            var textStroke = style.textStroke;\n            textFill && (ctx.fillStyle = textFill);\n            textStroke && (ctx.strokeStyle = textStroke);\n\n            // TODO Invalid font\n            ctx.font = font || '12px sans-serif';\n\n            // Text shadow\n            // Always set shadowBlur and shadowOffset to avoid leak from displayable\n            ctx.shadowBlur = style.textShadowBlur;\n            ctx.shadowColor = style.textShadowColor || 'transparent';\n            ctx.shadowOffsetX = style.textShadowOffsetX;\n            ctx.shadowOffsetY = style.textShadowOffsetY;\n\n            var textLines = text.split('\\n');\n\n            if (style.textRotation) {\n                transform && ctx.translate(transform[4], transform[5]);\n                ctx.rotate(style.textRotation);\n                transform && ctx.translate(-transform[4], -transform[5]);\n            }\n\n            for (var i = 0; i < textLines.length; i++) {\n                // Fill after stroke so the outline will not cover the main part.\n                textStroke && ctx.strokeText(textLines[i], x, y);\n                textFill && ctx.fillText(textLines[i], x, y);\n                y += textRect.lineHeight;\n            }\n\n            ctx.restore();\n        }\n    };\n\n    module.exports = RectText;\n\n\n/***/ }),\n/* 672 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 圆弧\n * @module zrender/graphic/shape/Arc\n */\n \n\n    module.exports = __webpack_require__(459).extend({\n\n        type: 'arc',\n\n        shape: {\n\n            cx: 0,\n\n            cy: 0,\n\n            r: 0,\n\n            startAngle: 0,\n\n            endAngle: Math.PI * 2,\n\n            clockwise: true\n        },\n\n        style: {\n\n            stroke: '#000',\n\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n\n            var x = shape.cx;\n            var y = shape.cy;\n            var r = Math.max(shape.r, 0);\n            var startAngle = shape.startAngle;\n            var endAngle = shape.endAngle;\n            var clockwise = shape.clockwise;\n\n            var unitX = Math.cos(startAngle);\n            var unitY = Math.sin(startAngle);\n\n            ctx.moveTo(unitX * r + x, unitY * r + y);\n            ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n        }\n    });\n\n\n/***/ }),\n/* 673 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * 贝塞尔曲线\n * @module zrender/shape/BezierCurve\n */\n\n\n    var curveTool = __webpack_require__(474);\n    var vec2 = __webpack_require__(458);\n    var quadraticSubdivide = curveTool.quadraticSubdivide;\n    var cubicSubdivide = curveTool.cubicSubdivide;\n    var quadraticAt = curveTool.quadraticAt;\n    var cubicAt = curveTool.cubicAt;\n    var quadraticDerivativeAt = curveTool.quadraticDerivativeAt;\n    var cubicDerivativeAt = curveTool.cubicDerivativeAt;\n\n    var out = [];\n\n    function someVectorAt(shape, t, isTangent) {\n        var cpx2 = shape.cpx2;\n        var cpy2 = shape.cpy2;\n        if (cpx2 === null || cpy2 === null) {\n            return [\n                (isTangent ? cubicDerivativeAt : cubicAt)(shape.x1, shape.cpx1, shape.cpx2, shape.x2, t),\n                (isTangent ? cubicDerivativeAt : cubicAt)(shape.y1, shape.cpy1, shape.cpy2, shape.y2, t)\n            ];\n        }\n        else {\n            return [\n                (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.x1, shape.cpx1, shape.x2, t),\n                (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.y1, shape.cpy1, shape.y2, t)\n            ];\n        }\n    }\n    module.exports = __webpack_require__(459).extend({\n\n        type: 'bezier-curve',\n\n        shape: {\n            x1: 0,\n            y1: 0,\n            x2: 0,\n            y2: 0,\n            cpx1: 0,\n            cpy1: 0,\n            // cpx2: 0,\n            // cpy2: 0\n\n            // Curve show percent, for animating\n            percent: 1\n        },\n\n        style: {\n            stroke: '#000',\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n            var x1 = shape.x1;\n            var y1 = shape.y1;\n            var x2 = shape.x2;\n            var y2 = shape.y2;\n            var cpx1 = shape.cpx1;\n            var cpy1 = shape.cpy1;\n            var cpx2 = shape.cpx2;\n            var cpy2 = shape.cpy2;\n            var percent = shape.percent;\n            if (percent === 0) {\n                return;\n            }\n\n            ctx.moveTo(x1, y1);\n\n            if (cpx2 == null || cpy2 == null) {\n                if (percent < 1) {\n                    quadraticSubdivide(\n                        x1, cpx1, x2, percent, out\n                    );\n                    cpx1 = out[1];\n                    x2 = out[2];\n                    quadraticSubdivide(\n                        y1, cpy1, y2, percent, out\n                    );\n                    cpy1 = out[1];\n                    y2 = out[2];\n                }\n\n                ctx.quadraticCurveTo(\n                    cpx1, cpy1,\n                    x2, y2\n                );\n            }\n            else {\n                if (percent < 1) {\n                    cubicSubdivide(\n                        x1, cpx1, cpx2, x2, percent, out\n                    );\n                    cpx1 = out[1];\n                    cpx2 = out[2];\n                    x2 = out[3];\n                    cubicSubdivide(\n                        y1, cpy1, cpy2, y2, percent, out\n                    );\n                    cpy1 = out[1];\n                    cpy2 = out[2];\n                    y2 = out[3];\n                }\n                ctx.bezierCurveTo(\n                    cpx1, cpy1,\n                    cpx2, cpy2,\n                    x2, y2\n                );\n            }\n        },\n\n        /**\n         * Get point at percent\n         * @param  {number} t\n         * @return {Array.<number>}\n         */\n        pointAt: function (t) {\n            return someVectorAt(this.shape, t, false);\n        },\n\n        /**\n         * Get tangent at percent\n         * @param  {number} t\n         * @return {Array.<number>}\n         */\n        tangentAt: function (t) {\n            var p = someVectorAt(this.shape, t, true);\n            return vec2.normalize(p, p);\n        }\n    });\n\n\n\n/***/ }),\n/* 674 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * 圆形\n * @module zrender/shape/Circle\n */\n\n\n\n    module.exports = __webpack_require__(459).extend({\n\n        type: 'circle',\n\n        shape: {\n            cx: 0,\n            cy: 0,\n            r: 0\n        },\n\n\n        buildPath : function (ctx, shape, inBundle) {\n            // Better stroking in ShapeBundle\n            // Always do it may have performence issue ( fill may be 2x more cost)\n            if (inBundle) {\n                ctx.moveTo(shape.cx + shape.r, shape.cy);\n            }\n            // else {\n            //     if (ctx.allocate && !ctx.data.length) {\n            //         ctx.allocate(ctx.CMD_MEM_SIZE.A);\n            //     }\n            // }\n            // Better stroking in ShapeBundle\n            // ctx.moveTo(shape.cx + shape.r, shape.cy);\n            ctx.arc(shape.cx, shape.cy, shape.r, 0, Math.PI * 2, true);\n        }\n    });\n\n\n\n/***/ }),\n/* 675 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 直线\n * @module zrender/graphic/shape/Line\n */\n\n    module.exports = __webpack_require__(459).extend({\n\n        type: 'line',\n\n        shape: {\n            // Start point\n            x1: 0,\n            y1: 0,\n            // End point\n            x2: 0,\n            y2: 0,\n\n            percent: 1\n        },\n\n        style: {\n            stroke: '#000',\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n            var x1 = shape.x1;\n            var y1 = shape.y1;\n            var x2 = shape.x2;\n            var y2 = shape.y2;\n            var percent = shape.percent;\n\n            if (percent === 0) {\n                return;\n            }\n\n            ctx.moveTo(x1, y1);\n\n            if (percent < 1) {\n                x2 = x1 * (1 - percent) + x2 * percent;\n                y2 = y1 * (1 - percent) + y2 * percent;\n            }\n            ctx.lineTo(x2, y2);\n        },\n\n        /**\n         * Get point at percent\n         * @param  {number} percent\n         * @return {Array.<number>}\n         */\n        pointAt: function (p) {\n            var shape = this.shape;\n            return [\n                shape.x1 * (1 - p) + shape.x2 * p,\n                shape.y1 * (1 - p) + shape.y2 * p\n            ];\n        }\n    });\n\n\n\n/***/ }),\n/* 676 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 多边形\n * @module zrender/shape/Polygon\n */\n\n\n    var polyHelper = __webpack_require__(549);\n\n    module.exports = __webpack_require__(459).extend({\n        \n        type: 'polygon',\n\n        shape: {\n            points: null,\n\n            smooth: false,\n\n            smoothConstraint: null\n        },\n\n        buildPath: function (ctx, shape) {\n            polyHelper.buildPath(ctx, shape, true);\n        }\n    });\n\n\n/***/ }),\n/* 677 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module zrender/graphic/shape/Polyline\n */\n\n\n    var polyHelper = __webpack_require__(549);\n\n    module.exports = __webpack_require__(459).extend({\n        \n        type: 'polyline',\n\n        shape: {\n            points: null,\n\n            smooth: false,\n\n            smoothConstraint: null\n        },\n\n        style: {\n            stroke: '#000',\n\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n            polyHelper.buildPath(ctx, shape, false);\n        }\n    });\n\n\n/***/ }),\n/* 678 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 矩形\n * @module zrender/graphic/shape/Rect\n */\n\n\n    var roundRectHelper = __webpack_require__(668);\n\n    module.exports = __webpack_require__(459).extend({\n\n        type: 'rect',\n\n        shape: {\n            // 左上、右上、右下、左下角的半径依次为r1、r2、r3、r4\n            // r缩写为1         相当于 [1, 1, 1, 1]\n            // r缩写为[1]       相当于 [1, 1, 1, 1]\n            // r缩写为[1, 2]    相当于 [1, 2, 1, 2]\n            // r缩写为[1, 2, 3] 相当于 [1, 2, 3, 2]\n            r: 0,\n\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var width = shape.width;\n            var height = shape.height;\n            if (!shape.r) {\n                ctx.rect(x, y, width, height);\n            }\n            else {\n                roundRectHelper.buildPath(ctx, shape);\n            }\n            ctx.closePath();\n            return;\n        }\n    });\n\n\n\n/***/ }),\n/* 679 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 圆环\n * @module zrender/graphic/shape/Ring\n */\n\n\n    module.exports = __webpack_require__(459).extend({\n\n        type: 'ring',\n\n        shape: {\n            cx: 0,\n            cy: 0,\n            r: 0,\n            r0: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var x = shape.cx;\n            var y = shape.cy;\n            var PI2 = Math.PI * 2;\n            ctx.moveTo(x + shape.r, y);\n            ctx.arc(x, y, shape.r, 0, PI2, false);\n            ctx.moveTo(x + shape.r0, y);\n            ctx.arc(x, y, shape.r0, 0, PI2, true);\n        }\n    });\n\n\n\n/***/ }),\n/* 680 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 扇形\n * @module zrender/graphic/shape/Sector\n */\n\n\n\n    var env = __webpack_require__(460);\n    var Path = __webpack_require__(459);\n\n    var shadowTemp = [\n        ['shadowBlur', 0],\n        ['shadowColor', '#000'],\n        ['shadowOffsetX', 0],\n        ['shadowOffsetY', 0]\n    ];\n\n    module.exports = Path.extend({\n\n        type: 'sector',\n\n        shape: {\n\n            cx: 0,\n\n            cy: 0,\n\n            r0: 0,\n\n            r: 0,\n\n            startAngle: 0,\n\n            endAngle: Math.PI * 2,\n\n            clockwise: true\n        },\n\n        brush: (env.browser.ie && env.browser.version >= 11) // version: '11.0'\n            // Fix weird bug in some version of IE11 (like 11.0.9600.17801),\n            // where exception \"unexpected call to method or property access\"\n            // might be thrown when calling ctx.fill after a path whose area size\n            // is zero is drawn and ctx.clip() is called and shadowBlur is set.\n            // (e.g.,\n            //  ctx.moveTo(10, 10);\n            //  ctx.lineTo(20, 10);\n            //  ctx.closePath();\n            //  ctx.clip();\n            //  ctx.shadowBlur = 10;\n            //  ...\n            //  ctx.fill();\n            // )\n            ? function () {\n                var clipPaths = this.__clipPaths;\n                var style = this.style;\n                var modified;\n\n                if (clipPaths) {\n                    for (var i = 0; i < clipPaths.length; i++) {\n                        var shape = clipPaths[i] && clipPaths[i].shape;\n                        if (shape && shape.startAngle === shape.endAngle) {\n                            for (var j = 0; j < shadowTemp.length; j++) {\n                                shadowTemp[j][2] = style[shadowTemp[j][0]];\n                                style[shadowTemp[j][0]] = shadowTemp[j][1];\n                            }\n                            modified = true;\n                            break;\n                        }\n                    }\n                }\n\n                Path.prototype.brush.apply(this, arguments);\n\n                if (modified) {\n                    for (var j = 0; j < shadowTemp.length; j++) {\n                        style[shadowTemp[j][0]] = shadowTemp[j][2];\n                    }\n                }\n            }\n            : Path.prototype.brush,\n\n        buildPath: function (ctx, shape) {\n\n            var x = shape.cx;\n            var y = shape.cy;\n            var r0 = Math.max(shape.r0 || 0, 0);\n            var r = Math.max(shape.r, 0);\n            var startAngle = shape.startAngle;\n            var endAngle = shape.endAngle;\n            var clockwise = shape.clockwise;\n\n            var unitX = Math.cos(startAngle);\n            var unitY = Math.sin(startAngle);\n\n            ctx.moveTo(unitX * r0 + x, unitY * r0 + y);\n\n            ctx.lineTo(unitX * r + x, unitY * r + y);\n\n            ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n\n            ctx.lineTo(\n                Math.cos(endAngle) * r0 + x,\n                Math.sin(endAngle) * r0 + y\n            );\n\n            if (r0 !== 0) {\n                ctx.arc(x, y, r0, endAngle, startAngle, clockwise);\n            }\n\n            ctx.closePath();\n        }\n    });\n\n\n\n/***/ }),\n/* 681 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * @module zrender/mixin/Animatable\n */\n\n\n    var Animator = __webpack_require__(540);\n    var util = __webpack_require__(453);\n    var isString = util.isString;\n    var isFunction = util.isFunction;\n    var isObject = util.isObject;\n    var log = __webpack_require__(545);\n\n    /**\n     * @alias modue:zrender/mixin/Animatable\n     * @constructor\n     */\n    var Animatable = function () {\n\n        /**\n         * @type {Array.<module:zrender/animation/Animator>}\n         * @readOnly\n         */\n        this.animators = [];\n    };\n\n    Animatable.prototype = {\n\n        constructor: Animatable,\n\n        /**\n         * 动画\n         *\n         * @param {string} path 需要添加动画的属性获取路径，可以通过a.b.c来获取深层的属性\n         * @param {boolean} [loop] 动画是否循环\n         * @return {module:zrender/animation/Animator}\n         * @example:\n         *     el.animate('style', false)\n         *         .when(1000, {x: 10} )\n         *         .done(function(){ // Animation done })\n         *         .start()\n         */\n        animate: function (path, loop) {\n            var target;\n            var animatingShape = false;\n            var el = this;\n            var zr = this.__zr;\n            if (path) {\n                var pathSplitted = path.split('.');\n                var prop = el;\n                // If animating shape\n                animatingShape = pathSplitted[0] === 'shape';\n                for (var i = 0, l = pathSplitted.length; i < l; i++) {\n                    if (!prop) {\n                        continue;\n                    }\n                    prop = prop[pathSplitted[i]];\n                }\n                if (prop) {\n                    target = prop;\n                }\n            }\n            else {\n                target = el;\n            }\n\n            if (!target) {\n                log(\n                    'Property \"'\n                    + path\n                    + '\" is not existed in element '\n                    + el.id\n                );\n                return;\n            }\n\n            var animators = el.animators;\n\n            var animator = new Animator(target, loop);\n\n            animator.during(function (target) {\n                el.dirty(animatingShape);\n            })\n            .done(function () {\n                // FIXME Animator will not be removed if use `Animator#stop` to stop animation\n                animators.splice(util.indexOf(animators, animator), 1);\n            });\n\n            animators.push(animator);\n\n            // If animate after added to the zrender\n            if (zr) {\n                zr.animation.addAnimator(animator);\n            }\n\n            return animator;\n        },\n\n        /**\n         * 停止动画\n         * @param {boolean} forwardToLast If move to last frame before stop\n         */\n        stopAnimation: function (forwardToLast) {\n            var animators = this.animators;\n            var len = animators.length;\n            for (var i = 0; i < len; i++) {\n                animators[i].stop(forwardToLast);\n            }\n            animators.length = 0;\n\n            return this;\n        },\n\n        /**\n         * @param {Object} target\n         * @param {number} [time=500] Time in ms\n         * @param {string} [easing='linear']\n         * @param {number} [delay=0]\n         * @param {Function} [callback]\n         *\n         * @example\n         *  // Animate position\n         *  el.animateTo({\n         *      position: [10, 10]\n         *  }, function () { // done })\n         *\n         *  // Animate shape, style and position in 100ms, delayed 100ms, with cubicOut easing\n         *  el.animateTo({\n         *      shape: {\n         *          width: 500\n         *      },\n         *      style: {\n         *          fill: 'red'\n         *      }\n         *      position: [10, 10]\n         *  }, 100, 100, 'cubicOut', function () { // done })\n         */\n         // TODO Return animation key\n        animateTo: function (target, time, delay, easing, callback) {\n            // animateTo(target, time, easing, callback);\n            if (isString(delay)) {\n                callback = easing;\n                easing = delay;\n                delay = 0;\n            }\n            // animateTo(target, time, delay, callback);\n            else if (isFunction(easing)) {\n                callback = easing;\n                easing = 'linear';\n                delay = 0;\n            }\n            // animateTo(target, time, callback);\n            else if (isFunction(delay)) {\n                callback = delay;\n                delay = 0;\n            }\n            // animateTo(target, callback)\n            else if (isFunction(time)) {\n                callback = time;\n                time = 500;\n            }\n            // animateTo(target)\n            else if (!time) {\n                time = 500;\n            }\n            // Stop all previous animations\n            this.stopAnimation();\n            this._animateToShallow('', this, target, time, delay, easing, callback);\n\n            // Animators may be removed immediately after start\n            // if there is nothing to animate\n            var animators = this.animators.slice();\n            var count = animators.length;\n            function done() {\n                count--;\n                if (!count) {\n                    callback && callback();\n                }\n            }\n\n            // No animators. This should be checked before animators[i].start(),\n            // because 'done' may be executed immediately if no need to animate.\n            if (!count) {\n                callback && callback();\n            }\n            // Start after all animators created\n            // Incase any animator is done immediately when all animation properties are not changed\n            for (var i = 0; i < animators.length; i++) {\n                animators[i]\n                    .done(done)\n                    .start(easing);\n            }\n        },\n\n        /**\n         * @private\n         * @param {string} path=''\n         * @param {Object} source=this\n         * @param {Object} target\n         * @param {number} [time=500]\n         * @param {number} [delay=0]\n         *\n         * @example\n         *  // Animate position\n         *  el._animateToShallow({\n         *      position: [10, 10]\n         *  })\n         *\n         *  // Animate shape, style and position in 100ms, delayed 100ms\n         *  el._animateToShallow({\n         *      shape: {\n         *          width: 500\n         *      },\n         *      style: {\n         *          fill: 'red'\n         *      }\n         *      position: [10, 10]\n         *  }, 100, 100)\n         */\n        _animateToShallow: function (path, source, target, time, delay) {\n            var objShallow = {};\n            var propertyCount = 0;\n            for (var name in target) {\n                if (!target.hasOwnProperty(name)) {\n                    continue;\n                }\n\n                if (source[name] != null) {\n                    if (isObject(target[name]) && !util.isArrayLike(target[name])) {\n                        this._animateToShallow(\n                            path ? path + '.' + name : name,\n                            source[name],\n                            target[name],\n                            time,\n                            delay\n                        );\n                    }\n                    else {\n                        objShallow[name] = target[name];\n                        propertyCount++;\n                    }\n                }\n                else if (target[name] != null) {\n                    // Attr directly if not has property\n                    // FIXME, if some property not needed for element ?\n                    if (!path) {\n                        this.attr(name, target[name]);\n                    }\n                    else {  // Shape or style\n                        var props = {};\n                        props[path] = {};\n                        props[path][name] = target[name];\n                        this.attr(props);\n                    }\n                }\n            }\n\n            if (propertyCount > 0) {\n                this.animate(path, false)\n                    .when(time == null ? 500 : time, objShallow)\n                    .delay(delay || 0);\n            }\n\n            return this;\n        }\n    };\n\n    module.exports = Animatable;\n\n\n/***/ }),\n/* 682 */\n/***/ (function(module, exports) {\n\n// TODO Draggable for group\n// FIXME Draggable on element which has parent rotation or scale\n\n    function Draggable() {\n\n        this.on('mousedown', this._dragStart, this);\n        this.on('mousemove', this._drag, this);\n        this.on('mouseup', this._dragEnd, this);\n        this.on('globalout', this._dragEnd, this);\n        // this._dropTarget = null;\n        // this._draggingTarget = null;\n\n        // this._x = 0;\n        // this._y = 0;\n    }\n\n    Draggable.prototype = {\n\n        constructor: Draggable,\n\n        _dragStart: function (e) {\n            var draggingTarget = e.target;\n            if (draggingTarget && draggingTarget.draggable) {\n                this._draggingTarget = draggingTarget;\n                draggingTarget.dragging = true;\n                this._x = e.offsetX;\n                this._y = e.offsetY;\n\n                this.dispatchToElement(param(draggingTarget, e), 'dragstart', e.event);\n            }\n        },\n\n        _drag: function (e) {\n            var draggingTarget = this._draggingTarget;\n            if (draggingTarget) {\n\n                var x = e.offsetX;\n                var y = e.offsetY;\n\n                var dx = x - this._x;\n                var dy = y - this._y;\n                this._x = x;\n                this._y = y;\n\n                draggingTarget.drift(dx, dy, e);\n                this.dispatchToElement(param(draggingTarget, e), 'drag', e.event);\n\n                var dropTarget = this.findHover(x, y, draggingTarget).target;\n                var lastDropTarget = this._dropTarget;\n                this._dropTarget = dropTarget;\n\n                if (draggingTarget !== dropTarget) {\n                    if (lastDropTarget && dropTarget !== lastDropTarget) {\n                        this.dispatchToElement(param(lastDropTarget, e), 'dragleave', e.event);\n                    }\n                    if (dropTarget && dropTarget !== lastDropTarget) {\n                        this.dispatchToElement(param(dropTarget, e), 'dragenter', e.event);\n                    }\n                }\n            }\n        },\n\n        _dragEnd: function (e) {\n            var draggingTarget = this._draggingTarget;\n\n            if (draggingTarget) {\n                draggingTarget.dragging = false;\n            }\n\n            this.dispatchToElement(param(draggingTarget, e), 'dragend', e.event);\n\n            if (this._dropTarget) {\n                this.dispatchToElement(param(this._dropTarget, e), 'drop', e.event);\n            }\n\n            this._draggingTarget = null;\n            this._dropTarget = null;\n        }\n\n    };\n\n    function param(target, e) {\n        return {target: target, topTarget: e && e.topTarget};\n    }\n\n    module.exports = Draggable;\n\n\n/***/ }),\n/* 683 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var Path = __webpack_require__(459);\n    var PathProxy = __webpack_require__(488);\n    var transformPath = __webpack_require__(684);\n\n    // command chars\n    var cc = [\n        'm', 'M', 'l', 'L', 'v', 'V', 'h', 'H', 'z', 'Z',\n        'c', 'C', 'q', 'Q', 't', 'T', 's', 'S', 'a', 'A'\n    ];\n\n    var mathSqrt = Math.sqrt;\n    var mathSin = Math.sin;\n    var mathCos = Math.cos;\n    var PI = Math.PI;\n\n    var vMag = function(v) {\n        return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\n    };\n    var vRatio = function(u, v) {\n        return (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v));\n    };\n    var vAngle = function(u, v) {\n        return (u[0] * v[1] < u[1] * v[0] ? -1 : 1)\n                * Math.acos(vRatio(u, v));\n    };\n\n    function processArc(x1, y1, x2, y2, fa, fs, rx, ry, psiDeg, cmd, path) {\n        var psi = psiDeg * (PI / 180.0);\n        var xp = mathCos(psi) * (x1 - x2) / 2.0\n                 + mathSin(psi) * (y1 - y2) / 2.0;\n        var yp = -1 * mathSin(psi) * (x1 - x2) / 2.0\n                 + mathCos(psi) * (y1 - y2) / 2.0;\n\n        var lambda = (xp * xp) / (rx * rx) + (yp * yp) / (ry * ry);\n\n        if (lambda > 1) {\n            rx *= mathSqrt(lambda);\n            ry *= mathSqrt(lambda);\n        }\n\n        var f = (fa === fs ? -1 : 1)\n            * mathSqrt((((rx * rx) * (ry * ry))\n                    - ((rx * rx) * (yp * yp))\n                    - ((ry * ry) * (xp * xp))) / ((rx * rx) * (yp * yp)\n                    + (ry * ry) * (xp * xp))\n                ) || 0;\n\n        var cxp = f * rx * yp / ry;\n        var cyp = f * -ry * xp / rx;\n\n        var cx = (x1 + x2) / 2.0\n                 + mathCos(psi) * cxp\n                 - mathSin(psi) * cyp;\n        var cy = (y1 + y2) / 2.0\n                + mathSin(psi) * cxp\n                + mathCos(psi) * cyp;\n\n        var theta = vAngle([ 1, 0 ], [ (xp - cxp) / rx, (yp - cyp) / ry ]);\n        var u = [ (xp - cxp) / rx, (yp - cyp) / ry ];\n        var v = [ (-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry ];\n        var dTheta = vAngle(u, v);\n\n        if (vRatio(u, v) <= -1) {\n            dTheta = PI;\n        }\n        if (vRatio(u, v) >= 1) {\n            dTheta = 0;\n        }\n        if (fs === 0 && dTheta > 0) {\n            dTheta = dTheta - 2 * PI;\n        }\n        if (fs === 1 && dTheta < 0) {\n            dTheta = dTheta + 2 * PI;\n        }\n\n        path.addData(cmd, cx, cy, rx, ry, theta, dTheta, psi, fs);\n    }\n\n    function createPathProxyFromString(data) {\n        if (!data) {\n            return [];\n        }\n\n        // command string\n        var cs = data.replace(/-/g, ' -')\n            .replace(/  /g, ' ')\n            .replace(/ /g, ',')\n            .replace(/,,/g, ',');\n\n        var n;\n        // create pipes so that we can split the data\n        for (n = 0; n < cc.length; n++) {\n            cs = cs.replace(new RegExp(cc[n], 'g'), '|' + cc[n]);\n        }\n\n        // create array\n        var arr = cs.split('|');\n        // init context point\n        var cpx = 0;\n        var cpy = 0;\n\n        var path = new PathProxy();\n        var CMD = PathProxy.CMD;\n\n        var prevCmd;\n        for (n = 1; n < arr.length; n++) {\n            var str = arr[n];\n            var c = str.charAt(0);\n            var off = 0;\n            var p = str.slice(1).replace(/e,-/g, 'e-').split(',');\n            var cmd;\n\n            if (p.length > 0 && p[0] === '') {\n                p.shift();\n            }\n\n            for (var i = 0; i < p.length; i++) {\n                p[i] = parseFloat(p[i]);\n            }\n            while (off < p.length && !isNaN(p[off])) {\n                if (isNaN(p[0])) {\n                    break;\n                }\n                var ctlPtx;\n                var ctlPty;\n\n                var rx;\n                var ry;\n                var psi;\n                var fa;\n                var fs;\n\n                var x1 = cpx;\n                var y1 = cpy;\n\n                // convert l, H, h, V, and v to L\n                switch (c) {\n                    case 'l':\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'L':\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'm':\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.M;\n                        path.addData(cmd, cpx, cpy);\n                        c = 'l';\n                        break;\n                    case 'M':\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.M;\n                        path.addData(cmd, cpx, cpy);\n                        c = 'L';\n                        break;\n                    case 'h':\n                        cpx += p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'H':\n                        cpx = p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'v':\n                        cpy += p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'V':\n                        cpy = p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'C':\n                        cmd = CMD.C;\n                        path.addData(\n                            cmd, p[off++], p[off++], p[off++], p[off++], p[off++], p[off++]\n                        );\n                        cpx = p[off - 2];\n                        cpy = p[off - 1];\n                        break;\n                    case 'c':\n                        cmd = CMD.C;\n                        path.addData(\n                            cmd,\n                            p[off++] + cpx, p[off++] + cpy,\n                            p[off++] + cpx, p[off++] + cpy,\n                            p[off++] + cpx, p[off++] + cpy\n                        );\n                        cpx += p[off - 2];\n                        cpy += p[off - 1];\n                        break;\n                    case 'S':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.C) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cmd = CMD.C;\n                        x1 = p[off++];\n                        y1 = p[off++];\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n                        break;\n                    case 's':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.C) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cmd = CMD.C;\n                        x1 = cpx + p[off++];\n                        y1 = cpy + p[off++];\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n                        break;\n                    case 'Q':\n                        x1 = p[off++];\n                        y1 = p[off++];\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, x1, y1, cpx, cpy);\n                        break;\n                    case 'q':\n                        x1 = p[off++] + cpx;\n                        y1 = p[off++] + cpy;\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, x1, y1, cpx, cpy);\n                        break;\n                    case 'T':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.Q) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n                        break;\n                    case 't':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.Q) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n                        break;\n                    case 'A':\n                        rx = p[off++];\n                        ry = p[off++];\n                        psi = p[off++];\n                        fa = p[off++];\n                        fs = p[off++];\n\n                        x1 = cpx, y1 = cpy;\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.A;\n                        processArc(\n                            x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path\n                        );\n                        break;\n                    case 'a':\n                        rx = p[off++];\n                        ry = p[off++];\n                        psi = p[off++];\n                        fa = p[off++];\n                        fs = p[off++];\n\n                        x1 = cpx, y1 = cpy;\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.A;\n                        processArc(\n                            x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path\n                        );\n                        break;\n                }\n            }\n\n            if (c === 'z' || c === 'Z') {\n                cmd = CMD.Z;\n                path.addData(cmd);\n            }\n\n            prevCmd = cmd;\n        }\n\n        path.toStatic();\n\n        return path;\n    }\n\n    // TODO Optimize double memory cost problem\n    function createPathOptions(str, opts) {\n        var pathProxy = createPathProxyFromString(str);\n        opts = opts || {};\n        opts.buildPath = function (path) {\n            if (path.setData) {\n                path.setData(pathProxy.data);\n                // Svg and vml renderer don't have context\n                var ctx = path.getContext();\n                if (ctx) {\n                    path.rebuildPath(ctx);\n                }\n            }\n            else {\n                var ctx = path;\n                pathProxy.rebuildPath(ctx);\n            }\n        };\n\n        opts.applyTransform = function (m) {\n            transformPath(pathProxy, m);\n\n            this.dirty(true);\n        };\n\n        return opts;\n    }\n\n    module.exports = {\n        /**\n         * Create a Path object from path string data\n         * http://www.w3.org/TR/SVG/paths.html#PathData\n         * @param  {Object} opts Other options\n         */\n        createFromString: function (str, opts) {\n            return new Path(createPathOptions(str, opts));\n        },\n\n        /**\n         * Create a Path class from path string data\n         * @param  {string} str\n         * @param  {Object} opts Other options\n         */\n        extendFromString: function (str, opts) {\n            return Path.extend(createPathOptions(str, opts));\n        },\n\n        /**\n         * Merge multiple paths\n         */\n        // TODO Apply transform\n        // TODO stroke dash\n        // TODO Optimize double memory cost problem\n        mergePath: function (pathEls, opts) {\n            var pathList = [];\n            var len = pathEls.length;\n            for (var i = 0; i < len; i++) {\n                var pathEl = pathEls[i];\n                if (!pathEl.path) {\n                    pathEl.createPathProxy();\n                }\n                if (pathEl.__dirtyPath) {\n                    pathEl.buildPath(pathEl.path, pathEl.shape, true);\n                }\n                pathList.push(pathEl.path);\n            }\n\n            var pathBundle = new Path(opts);\n            // Need path proxy.\n            pathBundle.createPathProxy();\n            pathBundle.buildPath = function (path) {\n                path.appendPath(pathList);\n                // Svg and vml renderer don't have context\n                var ctx = path.getContext();\n                if (ctx) {\n                    path.rebuildPath(ctx);\n                }\n            };\n\n            return pathBundle;\n        }\n    };\n\n\n/***/ }),\n/* 684 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var CMD = __webpack_require__(488).CMD;\n    var vec2 = __webpack_require__(458);\n    var v2ApplyTransform = vec2.applyTransform;\n\n    var points = [[], [], []];\n    var mathSqrt = Math.sqrt;\n    var mathAtan2 = Math.atan2;\n    function transformPath(path, m) {\n        var data = path.data;\n        var cmd;\n        var nPoint;\n        var i;\n        var j;\n        var k;\n        var p;\n\n        var M = CMD.M;\n        var C = CMD.C;\n        var L = CMD.L;\n        var R = CMD.R;\n        var A = CMD.A;\n        var Q = CMD.Q;\n\n        for (i = 0, j = 0; i < data.length;) {\n            cmd = data[i++];\n            j = i;\n            nPoint = 0;\n\n            switch (cmd) {\n                case M:\n                    nPoint = 1;\n                    break;\n                case L:\n                    nPoint = 1;\n                    break;\n                case C:\n                    nPoint = 3;\n                    break;\n                case Q:\n                    nPoint = 2;\n                    break;\n                case A:\n                    var x = m[4];\n                    var y = m[5];\n                    var sx = mathSqrt(m[0] * m[0] + m[1] * m[1]);\n                    var sy = mathSqrt(m[2] * m[2] + m[3] * m[3]);\n                    var angle = mathAtan2(-m[1] / sy, m[0] / sx);\n                    // cx\n                    data[i] *= sx;\n                    data[i++] += x;\n                    // cy\n                    data[i] *= sy;\n                    data[i++] += y;\n                    // Scale rx and ry\n                    // FIXME Assume psi is 0 here\n                    data[i++] *= sx;\n                    data[i++] *= sy;\n\n                    // Start angle\n                    data[i++] += angle;\n                    // end angle\n                    data[i++] += angle;\n                    // FIXME psi\n                    i += 2;\n                    j = i;\n                    break;\n                case R:\n                    // x0, y0\n                    p[0] = data[i++];\n                    p[1] = data[i++];\n                    v2ApplyTransform(p, p, m);\n                    data[j++] = p[0];\n                    data[j++] = p[1];\n                    // x1, y1\n                    p[0] += data[i++];\n                    p[1] += data[i++];\n                    v2ApplyTransform(p, p, m);\n                    data[j++] = p[0];\n                    data[j++] = p[1];\n            }\n\n            for (k = 0; k < nPoint; k++) {\n                var p = points[k];\n                p[0] = data[i++];\n                p[1] = data[i++];\n\n                v2ApplyTransform(p, p, m);\n                // Write back\n                data[j++] = p[0];\n                data[j++] = p[1];\n            }\n        }\n    }\n\n    module.exports = transformPath;\n\n\n/***/ }),\n/* 685 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/*!\n * ZRender, a high performance 2d drawing library.\n *\n * Copyright (c) 2013, Baidu Inc.\n * All rights reserved.\n *\n * LICENSE\n * https://github.com/ecomfe/zrender/blob/master/LICENSE.txt\n */\n// Global defines\n\n    var guid = __webpack_require__(544);\n    var env = __webpack_require__(460);\n    var zrUtil = __webpack_require__(453);\n\n    var Handler = __webpack_require__(648);\n    var Storage = __webpack_require__(651);\n    var Animation = __webpack_require__(652);\n    var HandlerProxy = __webpack_require__(663);\n\n    var useVML = !env.canvasSupported;\n\n    var painterCtors = {\n        canvas: __webpack_require__(650)\n    };\n\n    var instances = {};    // ZRender实例map索引\n\n    var zrender = {};\n\n    /**\n     * @type {string}\n     */\n    zrender.version = '3.5.2';\n\n    /**\n     * Initializing a zrender instance\n     * @param {HTMLElement} dom\n     * @param {Object} opts\n     * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n     * @param {number} [opts.devicePixelRatio]\n     * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n     * @return {module:zrender/ZRender}\n     */\n    zrender.init = function(dom, opts) {\n        var zr = new ZRender(guid(), dom, opts);\n        instances[zr.id] = zr;\n        return zr;\n    };\n\n    /**\n     * Dispose zrender instance\n     * @param {module:zrender/ZRender} zr\n     */\n    zrender.dispose = function (zr) {\n        if (zr) {\n            zr.dispose();\n        }\n        else {\n            for (var key in instances) {\n                if (instances.hasOwnProperty(key)) {\n                    instances[key].dispose();\n                }\n            }\n            instances = {};\n        }\n\n        return zrender;\n    };\n\n    /**\n     * Get zrender instance by id\n     * @param {string} id zrender instance id\n     * @return {module:zrender/ZRender}\n     */\n    zrender.getInstance = function (id) {\n        return instances[id];\n    };\n\n    zrender.registerPainter = function (name, Ctor) {\n        painterCtors[name] = Ctor;\n    };\n\n    function delInstance(id) {\n        delete instances[id];\n    }\n\n    /**\n     * @module zrender/ZRender\n     */\n    /**\n     * @constructor\n     * @alias module:zrender/ZRender\n     * @param {string} id\n     * @param {HTMLDomElement} dom\n     * @param {Object} opts\n     * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n     * @param {number} [opts.devicePixelRatio]\n     * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n     */\n    var ZRender = function(id, dom, opts) {\n\n        opts = opts || {};\n\n        /**\n         * @type {HTMLDomElement}\n         */\n        this.dom = dom;\n\n        /**\n         * @type {string}\n         */\n        this.id = id;\n\n        var self = this;\n        var storage = new Storage();\n\n        var rendererType = opts.renderer;\n        // TODO WebGL\n        if (useVML) {\n            if (!painterCtors.vml) {\n                throw new Error('You need to require \\'zrender/vml/vml\\' to support IE8');\n            }\n            rendererType = 'vml';\n        }\n        else if (!rendererType || !painterCtors[rendererType]) {\n            rendererType = 'canvas';\n        }\n        var painter = new painterCtors[rendererType](dom, storage, opts);\n\n        this.storage = storage;\n        this.painter = painter;\n\n        var handerProxy = !env.node ? new HandlerProxy(painter.getViewportRoot()) : null;\n        this.handler = new Handler(storage, painter, handerProxy, painter.root);\n\n        /**\n         * @type {module:zrender/animation/Animation}\n         */\n        this.animation = new Animation({\n            stage: {\n                update: zrUtil.bind(this.flush, this)\n            }\n        });\n        this.animation.start();\n\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this._needsRefresh;\n\n        // 修改 storage.delFromStorage, 每次删除元素之前删除动画\n        // FIXME 有点ugly\n        var oldDelFromStorage = storage.delFromStorage;\n        var oldAddToStorage = storage.addToStorage;\n\n        storage.delFromStorage = function (el) {\n            oldDelFromStorage.call(storage, el);\n\n            el && el.removeSelfFromZr(self);\n        };\n\n        storage.addToStorage = function (el) {\n            oldAddToStorage.call(storage, el);\n\n            el.addSelfToZr(self);\n        };\n    };\n\n    ZRender.prototype = {\n\n        constructor: ZRender,\n        /**\n         * 获取实例唯一标识\n         * @return {string}\n         */\n        getId: function () {\n            return this.id;\n        },\n\n        /**\n         * 添加元素\n         * @param  {module:zrender/Element} el\n         */\n        add: function (el) {\n            this.storage.addRoot(el);\n            this._needsRefresh = true;\n        },\n\n        /**\n         * 删除元素\n         * @param  {module:zrender/Element} el\n         */\n        remove: function (el) {\n            this.storage.delRoot(el);\n            this._needsRefresh = true;\n        },\n\n        /**\n         * Change configuration of layer\n         * @param {string} zLevel\n         * @param {Object} config\n         * @param {string} [config.clearColor=0] Clear color\n         * @param {string} [config.motionBlur=false] If enable motion blur\n         * @param {number} [config.lastFrameAlpha=0.7] Motion blur factor. Larger value cause longer trailer\n        */\n        configLayer: function (zLevel, config) {\n            this.painter.configLayer(zLevel, config);\n            this._needsRefresh = true;\n        },\n\n        /**\n         * Repaint the canvas immediately\n         */\n        refreshImmediately: function () {\n            // Clear needsRefresh ahead to avoid something wrong happens in refresh\n            // Or it will cause zrender refreshes again and again.\n            this._needsRefresh = false;\n            this.painter.refresh();\n            /**\n             * Avoid trigger zr.refresh in Element#beforeUpdate hook\n             */\n            this._needsRefresh = false;\n        },\n\n        /**\n         * Mark and repaint the canvas in the next frame of browser\n         */\n        refresh: function() {\n            this._needsRefresh = true;\n        },\n\n        /**\n         * Perform all refresh\n         */\n        flush: function () {\n            if (this._needsRefresh) {\n                this.refreshImmediately();\n            }\n            if (this._needsRefreshHover) {\n                this.refreshHoverImmediately();\n            }\n        },\n\n        /**\n         * Add element to hover layer\n         * @param  {module:zrender/Element} el\n         * @param {Object} style\n         */\n        addHover: function (el, style) {\n            if (this.painter.addHover) {\n                this.painter.addHover(el, style);\n                this.refreshHover();\n            }\n        },\n\n        /**\n         * Add element from hover layer\n         * @param  {module:zrender/Element} el\n         */\n        removeHover: function (el) {\n            if (this.painter.removeHover) {\n                this.painter.removeHover(el);\n                this.refreshHover();\n            }\n        },\n\n        /**\n         * Clear all hover elements in hover layer\n         * @param  {module:zrender/Element} el\n         */\n        clearHover: function () {\n            if (this.painter.clearHover) {\n                this.painter.clearHover();\n                this.refreshHover();\n            }\n        },\n\n        /**\n         * Refresh hover in next frame\n         */\n        refreshHover: function () {\n            this._needsRefreshHover = true;\n        },\n\n        /**\n         * Refresh hover immediately\n         */\n        refreshHoverImmediately: function () {\n            this._needsRefreshHover = false;\n            this.painter.refreshHover && this.painter.refreshHover();\n        },\n\n        /**\n         * Resize the canvas.\n         * Should be invoked when container size is changed\n         * @param {Object} [opts]\n         * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n         * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n         */\n        resize: function(opts) {\n            opts = opts || {};\n            this.painter.resize(opts.width, opts.height);\n            this.handler.resize();\n        },\n\n        /**\n         * Stop and clear all animation immediately\n         */\n        clearAnimation: function () {\n            this.animation.clear();\n        },\n\n        /**\n         * Get container width\n         */\n        getWidth: function() {\n            return this.painter.getWidth();\n        },\n\n        /**\n         * Get container height\n         */\n        getHeight: function() {\n            return this.painter.getHeight();\n        },\n\n        /**\n         * Export the canvas as Base64 URL\n         * @param {string} type\n         * @param {string} [backgroundColor='#fff']\n         * @return {string} Base64 URL\n         */\n        // toDataURL: function(type, backgroundColor) {\n        //     return this.painter.getRenderedCanvas({\n        //         backgroundColor: backgroundColor\n        //     }).toDataURL(type);\n        // },\n\n        /**\n         * Converting a path to image.\n         * It has much better performance of drawing image rather than drawing a vector path.\n         * @param {module:zrender/graphic/Path} e\n         * @param {number} width\n         * @param {number} height\n         */\n        pathToImage: function(e, dpr) {\n            return this.painter.pathToImage(e, dpr);\n        },\n\n        /**\n         * Set default cursor\n         * @param {string} [cursorStyle='default'] 例如 crosshair\n         */\n        setCursorStyle: function (cursorStyle) {\n            this.handler.setCursorStyle(cursorStyle);\n        },\n\n        /**\n         * Find hovered element\n         * @param {number} x\n         * @param {number} y\n         * @return {Object} {target, topTarget}\n         */\n        findHover: function (x, y) {\n            return this.handler.findHover(x, y);\n        },\n\n        /**\n         * Bind event\n         *\n         * @param {string} eventName Event name\n         * @param {Function} eventHandler Handler function\n         * @param {Object} [context] Context object\n         */\n        on: function(eventName, eventHandler, context) {\n            this.handler.on(eventName, eventHandler, context);\n        },\n\n        /**\n         * Unbind event\n         * @param {string} eventName Event name\n         * @param {Function} [eventHandler] Handler function\n         */\n        off: function(eventName, eventHandler) {\n            this.handler.off(eventName, eventHandler);\n        },\n\n        /**\n         * Trigger event manually\n         *\n         * @param {string} eventName Event name\n         * @param {event=} event Event object\n         */\n        trigger: function (eventName, event) {\n            this.handler.trigger(eventName, event);\n        },\n\n\n        /**\n         * Clear all objects and the canvas.\n         */\n        clear: function () {\n            this.storage.delRoot();\n            this.painter.clear();\n        },\n\n        /**\n         * Dispose self.\n         */\n        dispose: function () {\n            this.animation.stop();\n\n            this.clear();\n            this.storage.dispose();\n            this.painter.dispose();\n            this.handler.dispose();\n\n            this.animation =\n            this.storage =\n            this.painter =\n            this.handler = null;\n\n            delInstance(this.id);\n        }\n    };\n\n    module.exports = zrender;\n\n\n\n/***/ }),\n/* 686 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_assign__ = __webpack_require__(462);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_assign___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_assign__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__plugins_tool__ = __webpack_require__(565);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_qs__ = __webpack_require__(561);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_qs___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_qs__);\n\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n    props: {\n        info: {\n            default: function _default() {\n                return {};\n            }\n        },\n        timeData: {\n            default: function _default() {\n                return [];\n            }\n        },\n        time: {\n            default: function _default() {\n                return '';\n            }\n        }\n    },\n    data: function data() {\n        return {\n            visibleList: [],\n            time: \"\",\n            styles: {\n                top: '20px'\n            },\n            timer: null,\n            searchInfo: {\n                beginTime: '',\n\n                endTime: '',\n\n                pageType: '',\n\n                mediaName: '',\n\n                pageName: '',\n\n                adType: '',\n\n                '投放地区': '',\n\n                '投放车型': '',\n\n                '投放品牌': '',\n\n                '投放关键字': ''\n            },\n            layer: {\n                \"skuPrice\": \"\",\n                \"pSize\": \"\",\n                \"dutyUserName\": \"\",\n                \"adOrderCode\": \"\",\n                \"state\": \"\",\n                \"adCustomerName\": \"\",\n                \"singleClick\": \"\",\n                \"singleDisplay\": \"\"\n            },\n            tableList: {\n                days: []\n            }\n        };\n    },\n\n    watch: {\n        timeData: {\n            handler: function handler() {\n                this.initDate(this.time);\n                setTimeout(function () {});\n            }\n        }\n    },\n    mounted: function mounted() {\n        for (var i = 0; i < 31; i++) {\n            this.$set(this.visibleList, i, false);\n        }\n        if (this.time) {\n            this.initDate(this.time);\n        }\n    },\n\n    methods: {\n        initDate: function initDate(time) {\n            var _this = this;\n\n            var arry = this.time.split('-');\n            var dataYear = arry[0];\n            var dataMoth = arry[1];\n\n            var totalDays = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__plugins_tool__[\"a\" /* getDaysInOneMonth */])(dataYear, dataMoth);\n\n            if (totalDays < 31) {\n                var _loop = function _loop(i) {\n                    _this.$nextTick(function () {\n                        _this.$set(_this.timeData, i, \"3\");\n                    });\n                };\n\n                for (var i = totalDays; i < 31; i++) {\n                    _loop(i);\n                }\n            }\n\n            var times = new Date();\n            var year = times.getFullYear();\n            var month = times.getMonth() + 1;\n            var day = times.getDate();\n\n            for (var i = 0; i < this.timeData.length; i++) {\n                var timeName = this.timeData[i];\n                if (timeName == 'SKU_STATUS_LOCKED' || timeName == 'SKU_STATUS_SALED' || timeName == 'SKU_STATUS_RUNNING') {\n                    this.$set(this.timeData, i, \"2\");\n                }\n                if (timeName == 'SKU_STATUS_NONE' || timeName == 'SKU_STATUS_DELETE' || timeName == 'SKU_STATUS_IDLE') {\n                    this.$set(this.timeData, i, \"1\");\n                }\n\n                if (!timeName) {\n                    this.$set(this.timeData, i, \"3\");\n                }\n\n                if (new Date(year + '/' + month + '/' + day) >= new Date((time + '/' + (i + 1)).replace(/\\-/g, \"\\/\"))) {\n                    this.$set(this.timeData, i, \"3\");\n                }\n            }\n        },\n        over: function over(event) {\n            var _this2 = this;\n\n            var target = event.target.nodeName;\n            if (target.toUpperCase() === 'A') {\n                this.visibleList = [];\n\n                this.timer = setTimeout(function () {\n                    _this2.$nextTick(function () {\n                        var dateIndexs = parseInt(event.target.getAttribute('data-index'));\n                        var dateIndex = parseInt(event.target.getAttribute('data-index')) + 1;\n                        if (dateIndex < 10) {\n                            dateIndex = '0' + dateIndex;\n                        }\n\n                        _this2.$http.post('/isp-kongming/ad/positioning', {\n                            \"beginTime\": _this2.time + '-' + dateIndex,\n                            \"endTime\": _this2.time + '-' + dateIndex,\n                            \"curDate\": _this2.time + '-' + dateIndex,\n                            \"adPlaceId\": '' + _this2.info.adPlaceId\n                        }).then(function (res) {\n                            if (res.data.errorCode == 0) {\n                                _this2.layer = __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_assign___default()({}, res.data.result);\n                                _this2.layer.width = '' + _this2.layer.width;\n                                _this2.layer.height = '' + _this2.layer.height;\n                                _this2.layer.pSize = _this2.info.width + ' * ' + _this2.info.height;\n\n                                if (window.sessionStorage.getItem('viewState') == 2) {\n                                    var sk = _this2.info.adStateList;\n                                    for (var i = 0; i < sk.length; i++) {\n                                        if (sk[i].time == _this2.time) {\n                                            _this2.layer.skuPrice = sk[i].dayStatus[dateIndexs].skuPrice;\n                                        }\n                                    }\n                                } else {\n                                    var skuDatas = JSON.parse(_this2.info.adStateLists);\n                                    for (var attr in skuDatas) {\n                                        if (attr == _this2.time) {\n                                            var n = skuDatas[attr];\n                                            _this2.layer.skuPrice = n[dateIndexs].skuPrice;\n                                        }\n                                    }\n                                }\n                            } else if (res.data.errorCode == 50000) {\n                                _this2.$Modal.info({\n                                    title: '提示',\n                                    content: res.data.errorMsg,\n                                    onOk: function onOk() {\n                                        window.location.href = 'http://dev-a.yiche.com/static_common-portal/login.html';\n                                    }\n                                });\n                            } else {\n                                _this2.layer = {};\n                                _this2.layer.width = '';\n                                _this2.layer.height = '';\n                                _this2.layer.pSize = _this2.info.width + ' * ' + _this2.info.height;\n                                var _skuDatas = JSON.parse(_this2.info.adStateLists);\n                                for (var _attr in _skuDatas) {\n                                    if (_attr == _this2.time) {\n                                        var _n = _skuDatas[_attr];\n                                        _this2.layer.skuPrice = _n[dateIndexs].skuPrice;\n                                    }\n                                }\n                            }\n                        }).catch(function (err) {\n                            console.log(err);\n                        });\n\n                        var index = parseInt(event.target.getAttribute('data-index'));\n                        _this2.$set(_this2.visibleList, index, true);\n                        var y = event.clientY;\n\n                        if (y < 270) {\n                            event.target.nextElementSibling.style.top = 34 + 'px';\n                        } else {\n                            event.target.nextElementSibling.style.top = -280 + 'px';\n                        }\n                    });\n                }, 2000);\n            }\n        },\n        clear: function clear() {\n            this.visibleList = [];\n            clearTimeout(this.timer);\n        }\n    }\n});\n\n/***/ }),\n/* 687 */,\n/* 688 */,\n/* 689 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vue__ = __webpack_require__(62);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_vue__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_vue_echarts_components_ECharts_vue__ = __webpack_require__(644);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_vue_echarts_components_ECharts_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_vue_echarts_components_ECharts_vue__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_echarts_lib_chart_line__ = __webpack_require__(582);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_echarts_lib_chart_line___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_echarts_lib_chart_line__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_echarts_lib_component_tooltip__ = __webpack_require__(608);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_echarts_lib_component_tooltip___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_echarts_lib_component_tooltip__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_echarts_lib_component_dataZoom__ = __webpack_require__(595);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_echarts_lib_component_dataZoom___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_echarts_lib_component_dataZoom__);\n\n\n\n\n\n\n\n\n__WEBPACK_IMPORTED_MODULE_0_vue___default.a.component('chart', __WEBPACK_IMPORTED_MODULE_1_vue_echarts_components_ECharts_vue___default.a);\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n    data: function data() {\n        return {\n            ploar: {}\n        };\n    }\n});\n\n/***/ }),\n/* 690 */,\n/* 691 */,\n/* 692 */\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(416)(true);\n// imports\n\n\n// module\nexports.push([module.i, \".dialogTr .dateLayer{position:absolute;background:#fff;top:34px;z-index:999}.dialogTr .dialog-right{left:-320px}.dialogTr .allMoth{width:40px}.dialogTr .dateTd{position:relative;height:28px;width:20px;border:1px solid #e9e9e9}.dialogTr .dateTd.default{background:#edeff2}.dialogTr .dateTd.active{background:#a8c8ee}.dialogTr .dateTd.hasSel{background:#6a7088}.dialogTr .dateTd a{display:block;height:28px;width:26px}.dialogTr .dialogContent{position:relative;padding:0 20px 20px;min-width:320px;font-size:12px;text-align:left;background:#fff;border:1px solid #e9e9e9;box-shadow:0 4px 8px 0 rgba(0,0,0,.2)}.dialogTr .dialogContent .dialogContent-title{position:absolute;top:0;left:0;text-indent:20px;width:100%;height:34px;line-height:34px;background:#f9f9f9}.dialogTr .dialogContent .dialogContent-top{margin-top:34px;text-indent:4px;line-height:30px;border-bottom:1px solid #ccc}.dialogTr .dialogContent .dialogContent-bot{text-indent:4px;line-height:30px}\", \"\", {\"version\":3,\"sources\":[\"/Users/yiche/Desktop/company/newfe/isp_feweb/src/components/DailogRow.vue\"],\"names\":[],\"mappings\":\"AACA,qBACE,kBAAmB,AACnB,gBAAiB,AACjB,SAAU,AACV,WAAa,CACd,AACD,wBACE,WAAa,CACd,AACD,mBACE,UAAY,CACb,AACD,kBACE,kBAAmB,AACnB,YAAa,AACb,WAAY,AACZ,wBAA0B,CAC3B,AACD,0BACI,kBAAoB,CACvB,AACD,yBACI,kBAAoB,CACvB,AACD,yBACI,kBAAoB,CACvB,AACD,oBACI,cAAe,AACf,YAAa,AACb,UAAY,CACf,AACD,yBACE,kBAAmB,AACnB,oBAAqB,AACrB,gBAAiB,AACjB,eAAgB,AAChB,gBAAiB,AACjB,gBAAoB,AACpB,yBAA0B,AAC1B,qCAA2C,CAC5C,AACD,8CACI,kBAAmB,AACnB,MAAO,AACP,OAAQ,AACR,iBAAkB,AAClB,WAAY,AACZ,YAAa,AACb,iBAAkB,AAClB,kBAAoB,CACvB,AACD,4CACI,gBAAiB,AACjB,gBAAiB,AACjB,iBAAkB,AAClB,4BAA8B,CACjC,AACD,4CACI,gBAAiB,AACjB,gBAAkB,CACrB\",\"file\":\"DailogRow.vue\",\"sourcesContent\":[\"\\n.dialogTr .dateLayer {\\n  position: absolute;\\n  background: #fff;\\n  top: 34px;\\n  z-index: 999;\\n}\\n.dialogTr .dialog-right {\\n  left: -320px;\\n}\\n.dialogTr .allMoth {\\n  width: 40px;\\n}\\n.dialogTr .dateTd {\\n  position: relative;\\n  height: 28px;\\n  width: 20px;\\n  border: 1px solid #E9E9E9;\\n}\\n.dialogTr .dateTd.default {\\n    background: #EDEFF2;\\n}\\n.dialogTr .dateTd.active {\\n    background: #A8C8EE;\\n}\\n.dialogTr .dateTd.hasSel {\\n    background: #6A7088;\\n}\\n.dialogTr .dateTd a {\\n    display: block;\\n    height: 28px;\\n    width: 26px;\\n}\\n.dialogTr .dialogContent {\\n  position: relative;\\n  padding: 0 20px 20px;\\n  min-width: 320px;\\n  font-size: 12px;\\n  text-align: left;\\n  background: #FFFFFF;\\n  border: 1px solid #E9E9E9;\\n  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);\\n}\\n.dialogTr .dialogContent .dialogContent-title {\\n    position: absolute;\\n    top: 0;\\n    left: 0;\\n    text-indent: 20px;\\n    width: 100%;\\n    height: 34px;\\n    line-height: 34px;\\n    background: #F9F9F9;\\n}\\n.dialogTr .dialogContent .dialogContent-top {\\n    margin-top: 34px;\\n    text-indent: 4px;\\n    line-height: 30px;\\n    border-bottom: 1px solid #ccc;\\n}\\n.dialogTr .dialogContent .dialogContent-bot {\\n    text-indent: 4px;\\n    line-height: 30px;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n/***/ }),\n/* 693 */,\n/* 694 */,\n/* 695 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(692);\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(417)(\"06fa0d2f\", content, true);\n\n/***/ }),\n/* 696 */,\n/* 697 */,\n/* 698 */,\n/* 699 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n/* styles */\n__webpack_require__(695)\n\nvar Component = __webpack_require__(176)(\n  /* script */\n  __webpack_require__(686),\n  /* template */\n  __webpack_require__(703),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n/* 700 */,\n/* 701 */,\n/* 702 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Component = __webpack_require__(176)(\n  /* script */\n  __webpack_require__(689),\n  /* template */\n  __webpack_require__(704),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n/* 703 */\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('tr', {\n    staticClass: \"dialogTr\",\n    on: {\n      \"mouseover\": _vm.over,\n      \"mouseout\": _vm.clear\n    }\n  }, [_vm._t(\"default\"), _vm._v(\" \"), _vm._l((_vm.timeData), function(i, index) {\n    return _c('td', {\n      class: [\"dateTd\", {\n        \"default\": i == 3\n      }, {\n        \"hasSel\": i == 2\n      }]\n    }, [_c('a', {\n      attrs: {\n        \"href\": \"javascript:;\",\n        \"data-index\": index\n      }\n    }), _vm._v(\" \"), _c('div', {\n      directives: [{\n        name: \"show\",\n        rawName: \"v-show\",\n        value: (_vm.visibleList[index]),\n        expression: \"visibleList[index]\"\n      }],\n      class: [\"dateLayer\", {\n        \"dialog-right\": index > 20\n      }]\n    }, [_c('div', {\n      staticClass: \"dialogContent\",\n      slot: \"content\"\n    }, [_c('p', {\n      staticClass: \"dialogContent-title\"\n    }, [_vm._v(\"日期\")]), _vm._v(\" \"), _c('div', {\n      staticClass: \"dialogContent-top\"\n    }, [_c('p', [_vm._v(\"价格：\" + _vm._s(_vm.layer.skuPrice) + \"元/天\")]), _vm._v(\" \"), _c('p', [_vm._v(\"尺寸：\" + _vm._s(_vm.layer.width == '' ? '-' : _vm.layer.width) + \"*\" + _vm._s(_vm.layer.height == '' ? '-' : _vm.layer.height) + \"px ≤ 100k\")])]), _vm._v(\" \"), _c('div', {\n      staticClass: \"dialogContent-bot\"\n    }, [_c('p', [_vm._v(\"占用人：\" + _vm._s(_vm.layer.dutyUserName ? _vm.layer.dutyUserName : '-'))]), _vm._v(\" \"), _c('p', [_vm._v(\"订单号：\" + _vm._s(_vm.layer.adOrderCode ? _vm.layer.adOrderCode : '-'))]), _vm._v(\" \"), _c('p', [_vm._v(\"订单状态：\" + _vm._s(_vm.layer.statusName ? _vm.layer.statusName : '-'))]), _vm._v(\" \"), _c('p', {\n      staticClass: \"clear\"\n    }, [_c('span', {\n      staticClass: \"fl\"\n    }, [_vm._v(\"最终客户：\")]), _vm._v(\" \"), _c('span', {\n      staticClass: \"fl\",\n      staticStyle: {\n        \"width\": \"204px\",\n        \"text-indent\": \"0\"\n      }\n    }, [_vm._v(\"\\n                            \" + _vm._s(_vm.layer.adCustomerName ? _vm.layer.adCustomerName : '-') + \"\\n                        \")])]), _vm._v(\" \"), _c('p', [_vm._v(\"点击/曝光：\" + _vm._s(_vm.layer.singleClick ? _vm.layer.singleClick : '-') + \"/\" + _vm._s(_vm.layer.singleDisplay ? _vm.layer.singleDisplay : '-'))])])])])])\n  })], 2)\n},staticRenderFns: []}\n\n/***/ }),\n/* 704 */\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('chart', {\n    ref: \"myChart\",\n    staticStyle: {\n      \"width\": \"1104px\"\n    },\n    attrs: {\n      \"options\": _vm.polar,\n      \"id\": \"lineChart\"\n    }\n  })\n},staticRenderFns: []}\n\n/***/ }),\n/* 705 */,\n/* 706 */,\n/* 707 */,\n/* 708 */,\n/* 709 */,\n/* 710 */,\n/* 711 */,\n/* 712 */,\n/* 713 */,\n/* 714 */,\n/* 715 */,\n/* 716 */,\n/* 717 */,\n/* 718 */,\n/* 719 */,\n/* 720 */,\n/* 721 */,\n/* 722 */,\n/* 723 */,\n/* 724 */,\n/* 725 */,\n/* 726 */,\n/* 727 */,\n/* 728 */,\n/* 729 */,\n/* 730 */,\n/* 731 */,\n/* 732 */,\n/* 733 */,\n/* 734 */,\n/* 735 */,\n/* 736 */,\n/* 737 */,\n/* 738 */,\n/* 739 */,\n/* 740 */,\n/* 741 */,\n/* 742 */,\n/* 743 */,\n/* 744 */,\n/* 745 */,\n/* 746 */,\n/* 747 */,\n/* 748 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_assign__ = __webpack_require__(462);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_assign___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_assign__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_echarts_lib_echarts__ = __webpack_require__(455);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_echarts_lib_echarts___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_echarts_lib_echarts__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_component_DailogRow__ = __webpack_require__(699);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_component_DailogRow___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_component_DailogRow__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_component_LineChart__ = __webpack_require__(702);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_component_LineChart___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_component_LineChart__);\n\n\n\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n    components: {\n        DailogRow: __WEBPACK_IMPORTED_MODULE_2_component_DailogRow___default.a,\n        LineChart: __WEBPACK_IMPORTED_MODULE_3_component_LineChart___default.a\n    },\n    data: function data() {\n        return {\n            adName: '',\n            size: '',\n            result: {},\n            pageData: {},\n\n            first: [],\n\n            second: [],\n            columns: [{\n                title: '日均曝光量',\n                key: 'displayAmount'\n            }, {\n                title: '日均点击量',\n                key: 'singleClick'\n            }, {\n                title: '日均点击率',\n                key: 'clickAmountDay'\n            }, {\n                title: '节假日日均曝光量',\n                key: 'C'\n            }, {\n                title: '节假日日均点击量',\n                key: 'D'\n            }, {\n                title: '月均曝光量',\n                key: 'displayAmountMount'\n            }, {\n                title: '月均点击量',\n                key: 'displayClickMonth'\n            }, {\n                title: '月均点击率',\n                key: 'clickAmountMount'\n            }],\n            exposureList: [{\n                displayAmount: '',\n\n                singleClick: '',\n\n                clickAmountDay: '',\n                C: '0',\n                D: '0',\n                displayAmountMount: '',\n                displayClickMonth: '',\n                clickAmountMount: ''\n            }]\n        };\n    },\n    mounted: function mounted() {\n        var _this = this;\n\n        this.result = JSON.parse(window.localStorage.getItem('viewAd'));\n        window.sessionStorage.setItem('viewState', '2');\n        var time = this.$router.currentRoute.query.viewTime.split(' ')[0];\n        var month = time.split('-');\n        this.adName = this.result.name;\n        this.size = this.result.width + '*' + this.result.height;\n\n        var search = JSON.parse(window.sessionStorage.getItem('searchInfo'));\n        var currentYear = parseInt(month[0]);\n        var currenMonth = month[1];\n\n        search.beginTime = currentYear + '-' + currenMonth + '-01';\n        search.endTime = currentYear + 1 + '-' + currenMonth + '-01';\n        search.adPlaceId = this.result.adPlaceId;\n        this.$http.post('/isp-kongming/ad/kuAdPlaceBo', search).then(function (res) {\n            if (res.data.errorCode === 0) {\n                var datas = res.data.result[0];\n                datas.adStateList = _this.initResult(datas);\n                _this.pageData = __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_assign___default()({}, datas);\n                var year = __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_assign___default()([], _this.pageData.adStateList);\n                _this.first = year.slice(0, 6);\n                _this.second = year.slice(6);\n            } else {\n                _this.$Modal.info({\n                    title: '提示',\n                    content: res.data.rspMsg.errorMsg\n                });\n            }\n        }).catch(function (err) {\n            console.log(err);\n        });\n\n        this.$http.post('/isp-kongming/ad/amountSelectSum', search).then(function (res) {\n            if (res.data.errorCode === 0) {\n                var data = res.data.result;\n                _this.$set(_this.exposureList, 0, data);\n                _this.exposureList[0].C = 0;\n                _this.exposureList[0].D = 0;\n            } else {\n                _this.$Modal.info({\n                    title: '提示',\n                    content: res.data.rspMsg.errorMsg\n                });\n            }\n        }).catch(function (err) {\n            console.log(err);\n        });\n\n        var amountMonth = [];\n\n        var amoutClick = [];\n\n        var amountDisplay = [];\n\n        this.$http.post('/isp-kongming/ad/amountSelect', search).then(function (res) {\n            if (res.data.errorCode === 0) {\n                var datas = res.data.result;\n                for (var i = 0; i < datas.length; i++) {\n                    amountMonth.push(datas[i].rateTime);\n                    amoutClick.push(datas[i].clickAmount);\n                    amountDisplay.push(datas[i].displayAmount);\n                }\n            } else {\n                _this.$Modal.info({\n                    title: '提示',\n                    content: res.data.rspMsg.errorMsg\n                });\n            }\n        }).catch(function (err) {\n            console.log(err);\n        });\n\n        setTimeout(function () {\n            var polar = {\n                title: {\n                    text: ''\n                },\n\n                tooltip: {\n                    trigger: 'axis',\n                    axisPointer: {\n                        type: 'cross',\n                        animation: false,\n                        label: {\n                            backgroundColor: '#505765'\n                        }\n                    }\n                },\n                legend: {\n                    data: ['曝光量', '点击量'],\n                    x: 'left'\n                },\n                dataZoom: [{\n                    show: true,\n                    realtime: true,\n                    start: 65,\n                    end: 85\n                }, {\n                    type: 'inside',\n                    realtime: true,\n                    start: 65,\n                    end: 85\n                }],\n                xAxis: {\n                    data: amountMonth\n                },\n                yAxis: [{\n                    name: '曝光量(万)',\n                    type: 'value',\n                    max: 100\n                }, {\n                    name: '点击量',\n                    type: 'value',\n                    max: 10000\n                }],\n                series: [{\n                    name: '曝光量',\n                    type: 'line',\n                    animation: true,\n                    lineStyle: {\n                        normal: {\n                            color: '#ccc'\n                        }\n                    },\n                    symbolSize: 10,\n                    data: amountDisplay\n                }, {\n                    name: '点击量',\n                    yAxisIndex: 1,\n                    type: 'line',\n                    animation: true,\n                    lineStyle: {\n                        normal: {\n                            color: '#000'\n                        }\n                    },\n                    symbolSize: 10,\n                    data: amoutClick\n                }]\n            };\n            var myChart = __WEBPACK_IMPORTED_MODULE_1_echarts_lib_echarts___default.a.init(document.getElementById('lineChart'));\n            myChart.setOption(polar);\n        }, 200);\n    },\n\n    methods: {\n        initResult: function initResult(data) {\n            var adStateList = [];\n            var arr = [];\n            var monthList = [];\n            var adList = data.adStateList;\n\n            var obj = __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_assign___default()({}, adList);\n            for (var attr in obj) {\n                monthList.push(attr);\n                var ad = obj[attr];\n                var monthData = {};\n                var dayStates = [];\n                var skuIdList = [];\n                var total = 0;\n                monthData.time = attr;\n                monthData.dayStatus = obj[attr];\n\n                for (var j = 0; j < ad.length; j++) {\n                    dayStates[ad[j].day - 1] = ad[j].skuStatus;\n                    skuIdList[ad[j].day - 1] = ad[j].skuId;\n                    total += parseFloat(ad[j].skuPrice);\n                }\n\n                for (var k = 0; k < 31; k++) {\n                    if (dayStates[k] == 'SKU_STATUS_LOCKED' || dayStates[k] == 'SKU_STATUS_SALED' || dayStates[k] == 'SKU_STATUS_RUNNING') {\n                        dayStates[k] = '2';\n                    }\n                    if (dayStates[k] == 'SKU_STATUS_NONE' || dayStates[k] == 'SKU_STATUS_DELETE' || dayStates[k] == 'SKU_STATUS_IDLE') {\n                        dayStates[k] = '1';\n                    }\n                    if (!dayStates[k]) {\n                        dayStates[k] = '3';\n                    }\n                }\n                monthData.kprice = (total / ad.length).toFixed(2);\n                monthData.state = dayStates.join(',');\n                monthData.skuIdList = skuIdList;\n                arr.push(monthData);\n            }\n\n            monthList.sort();\n            for (var i = 0; i < monthList.length; i++) {\n                for (var _j = 0; _j < arr.length; _j++) {\n                    if (arr[_j].time == monthList[i]) {\n                        adStateList.push(arr[_j]);\n                    }\n                }\n            }\n            return adStateList;\n        }\n    }\n});\n\n/***/ }),\n/* 749 */,\n/* 750 */,\n/* 751 */,\n/* 752 */,\n/* 753 */,\n/* 754 */,\n/* 755 */,\n/* 756 */,\n/* 757 */,\n/* 758 */,\n/* 759 */,\n/* 760 */,\n/* 761 */,\n/* 762 */,\n/* 763 */,\n/* 764 */,\n/* 765 */,\n/* 766 */,\n/* 767 */,\n/* 768 */,\n/* 769 */,\n/* 770 */,\n/* 771 */,\n/* 772 */,\n/* 773 */,\n/* 774 */,\n/* 775 */,\n/* 776 */\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(416)(true);\n// imports\n\n\n// module\nexports.push([module.i, \".viewAd{padding-left:20px;width:1126px}.viewAd .info .title{font-size:14px;color:#354052;line-height:28px}.viewAd .info li{font-size:12px;color:#333;line-height:24px}.viewAd .ad-price{width:100%;text-align:center}.viewAd .ad-price .time{background:#f9f9f9}.viewAd .occupancy{margin-top:60px}.viewAd .occupancy .table-title{background:#f9f9f9}.viewAd .occupancy .title{font-size:14px;color:#354052;line-height:28px}.viewAd .dateTable{width:100%;text-align:center;font-size:12px;border:1px solid #dee1e5}.viewAd .dateTable .allMoth{width:34px}.viewAd .dateTable .dateTd{position:relative;border:1px solid #dee1e5;height:28px;width:30px}.viewAd .dateTable .dateTd.default{background:#edeff2}.viewAd .dateTable .dateTd.active{background:#a8c8ee}.viewAd .dateTable .dateTd.hasSel{background:#6a7088}\", \"\", {\"version\":3,\"sources\":[\"/Users/yiche/Desktop/company/newfe/isp_feweb/src/pages/viewAd/ViewAd.vue\"],\"names\":[],\"mappings\":\"AACA,QACE,kBAAmB,AACnB,YAAc,CACf,AACD,qBACI,eAAgB,AAChB,cAAe,AACf,gBAAkB,CACrB,AACD,iBACI,eAAgB,AAChB,WAAe,AACf,gBAAkB,CACrB,AACD,kBACI,WAAY,AACZ,iBAAmB,CACtB,AACD,wBACM,kBAAoB,CACzB,AACD,mBACI,eAAiB,CACpB,AACD,gCACM,kBAAoB,CACzB,AACD,0BACM,eAAgB,AAChB,cAAe,AACf,gBAAkB,CACvB,AACD,mBACI,WAAY,AACZ,kBAAmB,AACnB,eAAgB,AAChB,wBAA0B,CAC7B,AACD,4BACM,UAAY,CACjB,AACD,2BACM,kBAAmB,AACnB,yBAA0B,AAC1B,YAAa,AACb,UAAY,CACjB,AACD,mCACQ,kBAAoB,CAC3B,AACD,kCACQ,kBAAoB,CAC3B,AACD,kCACQ,kBAAoB,CAC3B\",\"file\":\"ViewAd.vue\",\"sourcesContent\":[\"\\n.viewAd {\\n  padding-left: 20px;\\n  width: 1126px;\\n}\\n.viewAd .info .title {\\n    font-size: 14px;\\n    color: #354052;\\n    line-height: 28px;\\n}\\n.viewAd .info li {\\n    font-size: 12px;\\n    color: #333333;\\n    line-height: 24px;\\n}\\n.viewAd .ad-price {\\n    width: 100%;\\n    text-align: center;\\n}\\n.viewAd .ad-price .time {\\n      background: #F9F9F9;\\n}\\n.viewAd .occupancy {\\n    margin-top: 60px;\\n}\\n.viewAd .occupancy .table-title {\\n      background: #F9F9F9;\\n}\\n.viewAd .occupancy .title {\\n      font-size: 14px;\\n      color: #354052;\\n      line-height: 28px;\\n}\\n.viewAd .dateTable {\\n    width: 100%;\\n    text-align: center;\\n    font-size: 12px;\\n    border: 1px solid #DEE1E5;\\n}\\n.viewAd .dateTable .allMoth {\\n      width: 34px;\\n}\\n.viewAd .dateTable .dateTd {\\n      position: relative;\\n      border: 1px solid #DEE1E5;\\n      height: 28px;\\n      width: 30px;\\n}\\n.viewAd .dateTable .dateTd.default {\\n        background: #EDEFF2;\\n}\\n.viewAd .dateTable .dateTd.active {\\n        background: #A8C8EE;\\n}\\n.viewAd .dateTable .dateTd.hasSel {\\n        background: #6A7088;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n/***/ }),\n/* 777 */,\n/* 778 */,\n/* 779 */,\n/* 780 */,\n/* 781 */,\n/* 782 */,\n/* 783 */,\n/* 784 */,\n/* 785 */,\n/* 786 */,\n/* 787 */,\n/* 788 */,\n/* 789 */,\n/* 790 */,\n/* 791 */,\n/* 792 */,\n/* 793 */,\n/* 794 */,\n/* 795 */,\n/* 796 */,\n/* 797 */,\n/* 798 */,\n/* 799 */,\n/* 800 */,\n/* 801 */,\n/* 802 */,\n/* 803 */,\n/* 804 */,\n/* 805 */,\n/* 806 */,\n/* 807 */,\n/* 808 */,\n/* 809 */,\n/* 810 */,\n/* 811 */,\n/* 812 */,\n/* 813 */,\n/* 814 */,\n/* 815 */,\n/* 816 */,\n/* 817 */,\n/* 818 */,\n/* 819 */,\n/* 820 */,\n/* 821 */,\n/* 822 */,\n/* 823 */,\n/* 824 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(776);\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(417)(\"7f422062\", content, true);\n\n/***/ }),\n/* 825 */,\n/* 826 */,\n/* 827 */,\n/* 828 */,\n/* 829 */,\n/* 830 */,\n/* 831 */,\n/* 832 */,\n/* 833 */,\n/* 834 */,\n/* 835 */,\n/* 836 */,\n/* 837 */,\n/* 838 */,\n/* 839 */,\n/* 840 */,\n/* 841 */,\n/* 842 */,\n/* 843 */,\n/* 844 */,\n/* 845 */,\n/* 846 */,\n/* 847 */,\n/* 848 */,\n/* 849 */,\n/* 850 */,\n/* 851 */,\n/* 852 */,\n/* 853 */,\n/* 854 */,\n/* 855 */,\n/* 856 */,\n/* 857 */,\n/* 858 */,\n/* 859 */,\n/* 860 */,\n/* 861 */,\n/* 862 */,\n/* 863 */,\n/* 864 */,\n/* 865 */,\n/* 866 */,\n/* 867 */,\n/* 868 */,\n/* 869 */,\n/* 870 */,\n/* 871 */,\n/* 872 */,\n/* 873 */,\n/* 874 */,\n/* 875 */,\n/* 876 */,\n/* 877 */,\n/* 878 */,\n/* 879 */,\n/* 880 */\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"viewAd\"\n  }, [_c('div', {\n    staticClass: \"info\"\n  }, [_c('p', {\n    staticClass: \"title\"\n  }, [_vm._v(\"基本信息\")]), _vm._v(\" \"), _c('ul', [_c('li', [_c('Row', [_c('Col', {\n    attrs: {\n      \"span\": \"2\"\n    }\n  }, [_vm._v(\"广告位名称：\")]), _vm._v(\" \"), _c('Col', {\n    attrs: {\n      \"span\": \"17\"\n    }\n  }, [_vm._v(_vm._s(_vm.adName))])], 1)], 1), _vm._v(\" \"), _c('li', [_c('Row', [_c('Col', {\n    attrs: {\n      \"span\": \"2\"\n    }\n  }, [_vm._v(\"广告位尺寸：\")]), _vm._v(\" \"), _c('Col', {\n    attrs: {\n      \"span\": \"17\"\n    }\n  }, [_vm._v(_vm._s(_vm.size) + \"px ≤ 100k\")])], 1)], 1), _vm._v(\" \"), _c('li', [_c('Row', [_c('Col', {\n    attrs: {\n      \"span\": \"5\"\n    }\n  }, [_vm._v(\"广告位价格：\")])], 1)], 1), _vm._v(\" \"), _c('table', {\n    staticClass: \"ad-price\",\n    attrs: {\n      \"border\": \"1\",\n      \"cellspacing\": \"0\"\n    }\n  }, [_c('tr', {\n    staticClass: \"time\"\n  }, _vm._l((_vm.first), function(i) {\n    return _c('td', [_vm._v(_vm._s(i.time))])\n  })), _vm._v(\" \"), _c('tr', _vm._l((_vm.first), function(i) {\n    return _c('td', [_vm._v(_vm._s(i.kprice) + \"元/天\")])\n  })), _vm._v(\" \"), _c('tr', {\n    staticClass: \"time\"\n  }, _vm._l((_vm.second), function(i) {\n    return _c('td', [_vm._v(_vm._s(i.time))])\n  })), _vm._v(\" \"), _c('tr', _vm._l((_vm.second), function(i) {\n    return _c('td', [_vm._v(_vm._s(i.kprice) + \"元/天\")])\n  }))])])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"occupancy\"\n  }, [_c('p', {\n    staticClass: \"title\"\n  }, [_vm._v(\"占用情况\")]), _vm._v(\" \"), _c('table', {\n    staticClass: \"dateTable hasCheck\",\n    attrs: {\n      \"border\": \"1\",\n      \"cellspacing\": \"0\"\n    }\n  }, [_c('tr', {\n    staticClass: \"table-title\"\n  }, [_c('td'), _vm._v(\" \"), _vm._l((31), function(i) {\n    return _c('td', {\n      staticClass: \"dateTd\"\n    }, [_vm._v(_vm._s(i))])\n  })], 2), _vm._v(\" \"), _vm._l((_vm.first), function(i) {\n    return _c(\"DailogRow\", {\n      tag: \"tr\",\n      attrs: {\n        \"info\": _vm.pageData,\n        \"timeData\": i.state.split(\",\"),\n        \"time\": i.time\n      }\n    }, [_c('td', [_vm._v(_vm._s(i.time))])])\n  })], 2)]), _vm._v(\" \"), (_vm.exposureList.length != 0) ? _c('div', {\n    staticClass: \"occupancy\"\n  }, [_c('p', {\n    staticClass: \"title\"\n  }, [_vm._v(\"历史曝光量（最近一年）\")]), _vm._v(\" \"), _c('Table', {\n    staticStyle: {\n      \"text-align\": \"center\"\n    },\n    attrs: {\n      \"border\": \"\",\n      \"columns\": _vm.columns,\n      \"data\": _vm.exposureList\n    }\n  })], 1) : _vm._e(), _vm._v(\" \"), _c('LineChart')], 1)\n},staticRenderFns: []}\n\n/***/ })\n]));\n\n\n// WEBPACK FOOTER //\n// static/js/1.990537f872d621f6ad76.js","\n/* styles */\nrequire(\"!!../../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"id\\\":\\\"data-v-327419e8\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!sass-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./ViewAd.vue\")\n\nvar Component = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./ViewAd.vue\"),\n  /* template */\n  require(\"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-327419e8\\\"}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./ViewAd.vue\"),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/pages/viewAd/ViewAd.vue\n// module id = 451\n// module chunks = 1","/**\n * @module zrender/core/util\n */\n\n\n    // 用于处理merge时无法遍历Date等对象的问题\n    var BUILTIN_OBJECT = {\n        '[object Function]': 1,\n        '[object RegExp]': 1,\n        '[object Date]': 1,\n        '[object Error]': 1,\n        '[object CanvasGradient]': 1,\n        '[object CanvasPattern]': 1,\n        // For node-canvas\n        '[object Image]': 1,\n        '[object Canvas]': 1\n    };\n\n    var TYPED_ARRAY = {\n        '[object Int8Array]': 1,\n        '[object Uint8Array]': 1,\n        '[object Uint8ClampedArray]': 1,\n        '[object Int16Array]': 1,\n        '[object Uint16Array]': 1,\n        '[object Int32Array]': 1,\n        '[object Uint32Array]': 1,\n        '[object Float32Array]': 1,\n        '[object Float64Array]': 1\n    };\n\n    var objToString = Object.prototype.toString;\n\n    var arrayProto = Array.prototype;\n    var nativeForEach = arrayProto.forEach;\n    var nativeFilter = arrayProto.filter;\n    var nativeSlice = arrayProto.slice;\n    var nativeMap = arrayProto.map;\n    var nativeReduce = arrayProto.reduce;\n\n    /**\n     * Those data types can be cloned:\n     *     Plain object, Array, TypedArray, number, string, null, undefined.\n     * Those data types will be assgined using the orginal data:\n     *     BUILTIN_OBJECT\n     * Instance of user defined class will be cloned to a plain object, without\n     * properties in prototype.\n     * Other data types is not supported (not sure what will happen).\n     *\n     * Caution: do not support clone Date, for performance consideration.\n     * (There might be a large number of date in `series.data`).\n     * So date should not be modified in and out of echarts.\n     *\n     * @param {*} source\n     * @return {*} new\n     */\n    function clone(source) {\n        if (source == null || typeof source != 'object') {\n            return source;\n        }\n\n        var result = source;\n        var typeStr = objToString.call(source);\n\n        if (typeStr === '[object Array]') {\n            result = [];\n            for (var i = 0, len = source.length; i < len; i++) {\n                result[i] = clone(source[i]);\n            }\n        }\n        else if (TYPED_ARRAY[typeStr]) {\n            result = source.constructor.from(source);\n        }\n        else if (!BUILTIN_OBJECT[typeStr] && !isPrimitive(source) && !isDom(source)) {\n            result = {};\n            for (var key in source) {\n                if (source.hasOwnProperty(key)) {\n                    result[key] = clone(source[key]);\n                }\n            }\n        }\n\n        return result;\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} target\n     * @param {*} source\n     * @param {boolean} [overwrite=false]\n     */\n    function merge(target, source, overwrite) {\n        // We should escapse that source is string\n        // and enter for ... in ...\n        if (!isObject(source) || !isObject(target)) {\n            return overwrite ? clone(source) : target;\n        }\n\n        for (var key in source) {\n            if (source.hasOwnProperty(key)) {\n                var targetProp = target[key];\n                var sourceProp = source[key];\n\n                if (isObject(sourceProp)\n                    && isObject(targetProp)\n                    && !isArray(sourceProp)\n                    && !isArray(targetProp)\n                    && !isDom(sourceProp)\n                    && !isDom(targetProp)\n                    && !isBuiltInObject(sourceProp)\n                    && !isBuiltInObject(targetProp)\n                    && !isPrimitive(sourceProp)\n                    && !isPrimitive(targetProp)\n                ) {\n                    // 如果需要递归覆盖，就递归调用merge\n                    merge(targetProp, sourceProp, overwrite);\n                }\n                else if (overwrite || !(key in target)) {\n                    // 否则只处理overwrite为true，或者在目标对象中没有此属性的情况\n                    // NOTE，在 target[key] 不存在的时候也是直接覆盖\n                    target[key] = clone(source[key], true);\n                }\n            }\n        }\n\n        return target;\n    }\n\n    /**\n     * @param {Array} targetAndSources The first item is target, and the rests are source.\n     * @param {boolean} [overwrite=false]\n     * @return {*} target\n     */\n    function mergeAll(targetAndSources, overwrite) {\n        var result = targetAndSources[0];\n        for (var i = 1, len = targetAndSources.length; i < len; i++) {\n            result = merge(result, targetAndSources[i], overwrite);\n        }\n        return result;\n    }\n\n    /**\n     * @param {*} target\n     * @param {*} source\n     * @memberOf module:zrender/core/util\n     */\n    function extend(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n        return target;\n    }\n\n    /**\n     * @param {*} target\n     * @param {*} source\n     * @param {boolen} [overlay=false]\n     * @memberOf module:zrender/core/util\n     */\n    function defaults(target, source, overlay) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key)\n                && (overlay ? source[key] != null : target[key] == null)\n            ) {\n                target[key] = source[key];\n            }\n        }\n        return target;\n    }\n\n    function createCanvas() {\n        return document.createElement('canvas');\n    }\n    // FIXME\n    var _ctx;\n    function getContext() {\n        if (!_ctx) {\n            // Use util.createCanvas instead of createCanvas\n            // because createCanvas may be overwritten in different environment\n            _ctx = util.createCanvas().getContext('2d');\n        }\n        return _ctx;\n    }\n\n    /**\n     * 查询数组中元素的index\n     * @memberOf module:zrender/core/util\n     */\n    function indexOf(array, value) {\n        if (array) {\n            if (array.indexOf) {\n                return array.indexOf(value);\n            }\n            for (var i = 0, len = array.length; i < len; i++) {\n                if (array[i] === value) {\n                    return i;\n                }\n            }\n        }\n        return -1;\n    }\n\n    /**\n     * 构造类继承关系\n     *\n     * @memberOf module:zrender/core/util\n     * @param {Function} clazz 源类\n     * @param {Function} baseClazz 基类\n     */\n    function inherits(clazz, baseClazz) {\n        var clazzPrototype = clazz.prototype;\n        function F() {}\n        F.prototype = baseClazz.prototype;\n        clazz.prototype = new F();\n\n        for (var prop in clazzPrototype) {\n            clazz.prototype[prop] = clazzPrototype[prop];\n        }\n        clazz.prototype.constructor = clazz;\n        clazz.superClass = baseClazz;\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Object|Function} target\n     * @param {Object|Function} sorce\n     * @param {boolean} overlay\n     */\n    function mixin(target, source, overlay) {\n        target = 'prototype' in target ? target.prototype : target;\n        source = 'prototype' in source ? source.prototype : source;\n\n        defaults(target, source, overlay);\n    }\n\n    /**\n     * Consider typed array.\n     * @param {Array|TypedArray} data\n     */\n    function isArrayLike(data) {\n        if (! data) {\n            return;\n        }\n        if (typeof data == 'string') {\n            return false;\n        }\n        return typeof data.length == 'number';\n    }\n\n    /**\n     * 数组或对象遍历\n     * @memberOf module:zrender/core/util\n     * @param {Object|Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     */\n    function each(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.forEach && obj.forEach === nativeForEach) {\n            obj.forEach(cb, context);\n        }\n        else if (obj.length === +obj.length) {\n            for (var i = 0, len = obj.length; i < len; i++) {\n                cb.call(context, obj[i], i, obj);\n            }\n        }\n        else {\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    cb.call(context, obj[key], key, obj);\n                }\n            }\n        }\n    }\n\n    /**\n     * 数组映射\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function map(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.map && obj.map === nativeMap) {\n            return obj.map(cb, context);\n        }\n        else {\n            var result = [];\n            for (var i = 0, len = obj.length; i < len; i++) {\n                result.push(cb.call(context, obj[i], i, obj));\n            }\n            return result;\n        }\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {Object} [memo]\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function reduce(obj, cb, memo, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.reduce && obj.reduce === nativeReduce) {\n            return obj.reduce(cb, memo, context);\n        }\n        else {\n            for (var i = 0, len = obj.length; i < len; i++) {\n                memo = cb.call(context, memo, obj[i], i, obj);\n            }\n            return memo;\n        }\n    }\n\n    /**\n     * 数组过滤\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function filter(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.filter && obj.filter === nativeFilter) {\n            return obj.filter(cb, context);\n        }\n        else {\n            var result = [];\n            for (var i = 0, len = obj.length; i < len; i++) {\n                if (cb.call(context, obj[i], i, obj)) {\n                    result.push(obj[i]);\n                }\n            }\n            return result;\n        }\n    }\n\n    /**\n     * 数组项查找\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function find(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        for (var i = 0, len = obj.length; i < len; i++) {\n            if (cb.call(context, obj[i], i, obj)) {\n                return obj[i];\n            }\n        }\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Function} func\n     * @param {*} context\n     * @return {Function}\n     */\n    function bind(func, context) {\n        var args = nativeSlice.call(arguments, 2);\n        return function () {\n            return func.apply(context, args.concat(nativeSlice.call(arguments)));\n        };\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Function} func\n     * @return {Function}\n     */\n    function curry(func) {\n        var args = nativeSlice.call(arguments, 1);\n        return function () {\n            return func.apply(this, args.concat(nativeSlice.call(arguments)));\n        };\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isArray(value) {\n        return objToString.call(value) === '[object Array]';\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isFunction(value) {\n        return typeof value === 'function';\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isString(value) {\n        return objToString.call(value) === '[object String]';\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isObject(value) {\n        // Avoid a V8 JIT bug in Chrome 19-20.\n        // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n        var type = typeof value;\n        return type === 'function' || (!!value && type == 'object');\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isBuiltInObject(value) {\n        return !!BUILTIN_OBJECT[objToString.call(value)];\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isDom(value) {\n        return typeof value === 'object'\n            && typeof value.nodeType === 'number'\n            && typeof value.ownerDocument === 'object';\n    }\n\n    /**\n     * Whether is exactly NaN. Notice isNaN('a') returns true.\n     * @param {*} value\n     * @return {boolean}\n     */\n    function eqNaN(value) {\n        return value !== value;\n    }\n\n    /**\n     * If value1 is not null, then return value1, otherwise judget rest of values.\n     * @memberOf module:zrender/core/util\n     * @return {*} Final value\n     */\n    function retrieve(values) {\n        for (var i = 0, len = arguments.length; i < len; i++) {\n            if (arguments[i] != null) {\n                return arguments[i];\n            }\n        }\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Array} arr\n     * @param {number} startIndex\n     * @param {number} endIndex\n     * @return {Array}\n     */\n    function slice() {\n        return Function.call.apply(nativeSlice, arguments);\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {boolean} condition\n     * @param {string} message\n     */\n    function assert(condition, message) {\n        if (!condition) {\n            throw new Error(message);\n        }\n    }\n\n    var primitiveKey = '__ec_primitive__';\n    /**\n     * Set an object as primitive to be ignored traversing children in clone or merge\n     */\n    function setAsPrimitive(obj) {\n        obj[primitiveKey] = true;\n    }\n\n    function isPrimitive(obj) {\n        return obj[primitiveKey];\n    }\n\n    /**\n     * @constructor\n     * @param {Object} obj Only apply `ownProperty`.\n     */\n    function HashMap(obj) {\n        obj && each(obj, function (value, key) {\n            this.set(key, value);\n        }, this);\n    }\n\n    // Add prefix to avoid conflict with Object.prototype.\n    var HASH_MAP_PREFIX = '_ec_';\n    var HASH_MAP_PREFIX_LENGTH = 4;\n\n    HashMap.prototype = {\n        constructor: HashMap,\n        // Do not provide `has` method to avoid defining what is `has`.\n        // (We usually treat `null` and `undefined` as the same, different\n        // from ES6 Map).\n        get: function (key) {\n            return this[HASH_MAP_PREFIX + key];\n        },\n        set: function (key, value) {\n            this[HASH_MAP_PREFIX + key] = value;\n            // Comparing with invocation chaining, `return value` is more commonly\n            // used in this case: `var someVal = map.set('a', genVal());`\n            return value;\n        },\n        // Although util.each can be performed on this hashMap directly, user\n        // should not use the exposed keys, who are prefixed.\n        each: function (cb, context) {\n            context !== void 0 && (cb = bind(cb, context));\n            for (var prefixedKey in this) {\n                this.hasOwnProperty(prefixedKey)\n                    && cb(this[prefixedKey], prefixedKey.slice(HASH_MAP_PREFIX_LENGTH));\n            }\n        },\n        // Do not use this method if performance sensitive.\n        removeKey: function (key) {\n            delete this[key];\n        }\n    };\n\n    function createHashMap(obj) {\n        return new HashMap(obj);\n    }\n\n    var util = {\n        inherits: inherits,\n        mixin: mixin,\n        clone: clone,\n        merge: merge,\n        mergeAll: mergeAll,\n        extend: extend,\n        defaults: defaults,\n        getContext: getContext,\n        createCanvas: createCanvas,\n        indexOf: indexOf,\n        slice: slice,\n        find: find,\n        isArrayLike: isArrayLike,\n        each: each,\n        map: map,\n        reduce: reduce,\n        filter: filter,\n        bind: bind,\n        curry: curry,\n        isArray: isArray,\n        isString: isString,\n        isObject: isObject,\n        isFunction: isFunction,\n        isBuiltInObject: isBuiltInObject,\n        isDom: isDom,\n        eqNaN: eqNaN,\n        retrieve: retrieve,\n        assert: assert,\n        setAsPrimitive: setAsPrimitive,\n        createHashMap: createHashMap,\n        noop: function () {}\n    };\n    module.exports = util;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/util.js\n// module id = 453\n// module chunks = 0 1 2","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var pathTool = require('zrender/lib/tool/path');\n    var Path = require('zrender/lib/graphic/Path');\n    var colorTool = require('zrender/lib/tool/color');\n    var matrix = require('zrender/lib/core/matrix');\n    var vector = require('zrender/lib/core/vector');\n    var Transformable = require('zrender/lib/mixin/Transformable');\n    var BoundingRect = require('zrender/lib/core/BoundingRect');\n\n    var round = Math.round;\n    var mathMax = Math.max;\n    var mathMin = Math.min;\n\n    var graphic = {};\n\n    graphic.Group = require('zrender/lib/container/Group');\n\n    graphic.Image = require('zrender/lib/graphic/Image');\n\n    graphic.Text = require('zrender/lib/graphic/Text');\n\n    graphic.Circle = require('zrender/lib/graphic/shape/Circle');\n\n    graphic.Sector = require('zrender/lib/graphic/shape/Sector');\n\n    graphic.Ring = require('zrender/lib/graphic/shape/Ring');\n\n    graphic.Polygon = require('zrender/lib/graphic/shape/Polygon');\n\n    graphic.Polyline = require('zrender/lib/graphic/shape/Polyline');\n\n    graphic.Rect = require('zrender/lib/graphic/shape/Rect');\n\n    graphic.Line = require('zrender/lib/graphic/shape/Line');\n\n    graphic.BezierCurve = require('zrender/lib/graphic/shape/BezierCurve');\n\n    graphic.Arc = require('zrender/lib/graphic/shape/Arc');\n\n    graphic.CompoundPath = require('zrender/lib/graphic/CompoundPath');\n\n    graphic.LinearGradient = require('zrender/lib/graphic/LinearGradient');\n\n    graphic.RadialGradient = require('zrender/lib/graphic/RadialGradient');\n\n    graphic.BoundingRect = BoundingRect;\n\n    /**\n     * Extend shape with parameters\n     */\n    graphic.extendShape = function (opts) {\n        return Path.extend(opts);\n    };\n\n    /**\n     * Extend path\n     */\n    graphic.extendPath = function (pathData, opts) {\n        return pathTool.extendFromString(pathData, opts);\n    };\n\n    /**\n     * Create a path element from path data string\n     * @param {string} pathData\n     * @param {Object} opts\n     * @param {module:zrender/core/BoundingRect} rect\n     * @param {string} [layout=cover] 'center' or 'cover'\n     */\n    graphic.makePath = function (pathData, opts, rect, layout) {\n        var path = pathTool.createFromString(pathData, opts);\n        var boundingRect = path.getBoundingRect();\n        if (rect) {\n            var aspect = boundingRect.width / boundingRect.height;\n\n            if (layout === 'center') {\n                // Set rect to center, keep width / height ratio.\n                var width = rect.height * aspect;\n                var height;\n                if (width <= rect.width) {\n                    height = rect.height;\n                }\n                else {\n                    width = rect.width;\n                    height = width / aspect;\n                }\n                var cx = rect.x + rect.width / 2;\n                var cy = rect.y + rect.height / 2;\n\n                rect.x = cx - width / 2;\n                rect.y = cy - height / 2;\n                rect.width = width;\n                rect.height = height;\n            }\n\n            graphic.resizePath(path, rect);\n        }\n        return path;\n    };\n\n    graphic.mergePath = pathTool.mergePath,\n\n    /**\n     * Resize a path to fit the rect\n     * @param {module:zrender/graphic/Path} path\n     * @param {Object} rect\n     */\n    graphic.resizePath = function (path, rect) {\n        if (!path.applyTransform) {\n            return;\n        }\n\n        var pathRect = path.getBoundingRect();\n\n        var m = pathRect.calculateTransform(rect);\n\n        path.applyTransform(m);\n    };\n\n    /**\n     * Sub pixel optimize line for canvas\n     *\n     * @param {Object} param\n     * @param {Object} [param.shape]\n     * @param {number} [param.shape.x1]\n     * @param {number} [param.shape.y1]\n     * @param {number} [param.shape.x2]\n     * @param {number} [param.shape.y2]\n     * @param {Object} [param.style]\n     * @param {number} [param.style.lineWidth]\n     * @return {Object} Modified param\n     */\n    graphic.subPixelOptimizeLine = function (param) {\n        var subPixelOptimize = graphic.subPixelOptimize;\n        var shape = param.shape;\n        var lineWidth = param.style.lineWidth;\n\n        if (round(shape.x1 * 2) === round(shape.x2 * 2)) {\n            shape.x1 = shape.x2 = subPixelOptimize(shape.x1, lineWidth, true);\n        }\n        if (round(shape.y1 * 2) === round(shape.y2 * 2)) {\n            shape.y1 = shape.y2 = subPixelOptimize(shape.y1, lineWidth, true);\n        }\n        return param;\n    };\n\n    /**\n     * Sub pixel optimize rect for canvas\n     *\n     * @param {Object} param\n     * @param {Object} [param.shape]\n     * @param {number} [param.shape.x]\n     * @param {number} [param.shape.y]\n     * @param {number} [param.shape.width]\n     * @param {number} [param.shape.height]\n     * @param {Object} [param.style]\n     * @param {number} [param.style.lineWidth]\n     * @return {Object} Modified param\n     */\n    graphic.subPixelOptimizeRect = function (param) {\n        var subPixelOptimize = graphic.subPixelOptimize;\n        var shape = param.shape;\n        var lineWidth = param.style.lineWidth;\n        var originX = shape.x;\n        var originY = shape.y;\n        var originWidth = shape.width;\n        var originHeight = shape.height;\n        shape.x = subPixelOptimize(shape.x, lineWidth, true);\n        shape.y = subPixelOptimize(shape.y, lineWidth, true);\n        shape.width = Math.max(\n            subPixelOptimize(originX + originWidth, lineWidth, false) - shape.x,\n            originWidth === 0 ? 0 : 1\n        );\n        shape.height = Math.max(\n            subPixelOptimize(originY + originHeight, lineWidth, false) - shape.y,\n            originHeight === 0 ? 0 : 1\n        );\n        return param;\n    };\n\n    /**\n     * Sub pixel optimize for canvas\n     *\n     * @param {number} position Coordinate, such as x, y\n     * @param {number} lineWidth Should be nonnegative integer.\n     * @param {boolean=} positiveOrNegative Default false (negative).\n     * @return {number} Optimized position.\n     */\n    graphic.subPixelOptimize = function (position, lineWidth, positiveOrNegative) {\n        // Assure that (position + lineWidth / 2) is near integer edge,\n        // otherwise line will be fuzzy in canvas.\n        var doubledPosition = round(position * 2);\n        return (doubledPosition + round(lineWidth)) % 2 === 0\n            ? doubledPosition / 2\n            : (doubledPosition + (positiveOrNegative ? 1 : -1)) / 2;\n    };\n\n    function hasFillOrStroke(fillOrStroke) {\n        return fillOrStroke != null && fillOrStroke != 'none';\n    }\n\n    function liftColor(color) {\n        return typeof color === 'string' ? colorTool.lift(color, -0.1) : color;\n    }\n\n    /**\n     * @private\n     */\n    function cacheElementStl(el) {\n        if (el.__hoverStlDirty) {\n            var stroke = el.style.stroke;\n            var fill = el.style.fill;\n\n            // Create hoverStyle on mouseover\n            var hoverStyle = el.__hoverStl;\n            hoverStyle.fill = hoverStyle.fill\n                || (hasFillOrStroke(fill) ? liftColor(fill) : null);\n            hoverStyle.stroke = hoverStyle.stroke\n                || (hasFillOrStroke(stroke) ? liftColor(stroke) : null);\n\n            var normalStyle = {};\n            for (var name in hoverStyle) {\n                if (hoverStyle.hasOwnProperty(name)) {\n                    normalStyle[name] = el.style[name];\n                }\n            }\n\n            el.__normalStl = normalStyle;\n\n            el.__hoverStlDirty = false;\n        }\n    }\n\n    /**\n     * @private\n     */\n    function doSingleEnterHover(el) {\n        if (el.__isHover) {\n            return;\n        }\n\n        cacheElementStl(el);\n\n        if (el.useHoverLayer) {\n            el.__zr && el.__zr.addHover(el, el.__hoverStl);\n        }\n        else {\n            el.setStyle(el.__hoverStl);\n            el.z2 += 1;\n        }\n\n        el.__isHover = true;\n    }\n\n    /**\n     * @inner\n     */\n    function doSingleLeaveHover(el) {\n        if (!el.__isHover) {\n            return;\n        }\n\n        var normalStl = el.__normalStl;\n        if (el.useHoverLayer) {\n            el.__zr && el.__zr.removeHover(el);\n        }\n        else {\n            normalStl && el.setStyle(normalStl);\n            el.z2 -= 1;\n        }\n\n        el.__isHover = false;\n    }\n\n    /**\n     * @inner\n     */\n    function doEnterHover(el) {\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    doSingleEnterHover(child);\n                }\n            })\n            : doSingleEnterHover(el);\n    }\n\n    function doLeaveHover(el) {\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    doSingleLeaveHover(child);\n                }\n            })\n            : doSingleLeaveHover(el);\n    }\n\n    /**\n     * @inner\n     */\n    function setElementHoverStl(el, hoverStl) {\n        // If element has sepcified hoverStyle, then use it instead of given hoverStyle\n        // Often used when item group has a label element and it's hoverStyle is different\n        el.__hoverStl = el.hoverStyle || hoverStl || {};\n        el.__hoverStlDirty = true;\n\n        if (el.__isHover) {\n            cacheElementStl(el);\n        }\n    }\n\n    /**\n     * @inner\n     */\n    function onElementMouseOver(e) {\n        if (this.__hoverSilentOnTouch && e.zrByTouch) {\n            return;\n        }\n\n        // Only if element is not in emphasis status\n        !this.__isEmphasis && doEnterHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function onElementMouseOut(e) {\n        if (this.__hoverSilentOnTouch && e.zrByTouch) {\n            return;\n        }\n\n        // Only if element is not in emphasis status\n        !this.__isEmphasis && doLeaveHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function enterEmphasis() {\n        this.__isEmphasis = true;\n        doEnterHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function leaveEmphasis() {\n        this.__isEmphasis = false;\n        doLeaveHover(this);\n    }\n\n    /**\n     * Set hover style of element.\n     * This method can be called repeatly without side-effects.\n     * @param {module:zrender/Element} el\n     * @param {Object} [hoverStyle]\n     * @param {Object} [opt]\n     * @param {boolean} [opt.hoverSilentOnTouch=false]\n     *        In touch device, mouseover event will be trigger on touchstart event\n     *        (see module:zrender/dom/HandlerProxy). By this mechanism, we can\n     *        conviniently use hoverStyle when tap on touch screen without additional\n     *        code for compatibility.\n     *        But if the chart/component has select feature, which usually also use\n     *        hoverStyle, there might be conflict between 'select-highlight' and\n     *        'hover-highlight' especially when roam is enabled (see geo for example).\n     *        In this case, hoverSilentOnTouch should be used to disable hover-highlight\n     *        on touch device.\n     */\n    graphic.setHoverStyle = function (el, hoverStyle, opt) {\n        el.__hoverSilentOnTouch = opt && opt.hoverSilentOnTouch;\n\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    setElementHoverStl(child, hoverStyle);\n                }\n            })\n            : setElementHoverStl(el, hoverStyle);\n\n        // Duplicated function will be auto-ignored, see Eventful.js.\n        el.on('mouseover', onElementMouseOver)\n          .on('mouseout', onElementMouseOut);\n\n        // Emphasis, normal can be triggered manually\n        el.on('emphasis', enterEmphasis)\n          .on('normal', leaveEmphasis);\n    };\n\n    /**\n     * Set text option in the style\n     * @param {Object} textStyle\n     * @param {module:echarts/model/Model} labelModel\n     * @param {string} color\n     */\n    graphic.setText = function (textStyle, labelModel, color) {\n        var labelPosition = labelModel.getShallow('position') || 'inside';\n        var labelOffset = labelModel.getShallow('offset');\n        var labelColor = labelPosition.indexOf('inside') >= 0 ? 'white' : color;\n        var textStyleModel = labelModel.getModel('textStyle');\n        zrUtil.extend(textStyle, {\n            textDistance: labelModel.getShallow('distance') || 5,\n            textFont: textStyleModel.getFont(),\n            textPosition: labelPosition,\n            textOffset: labelOffset,\n            textFill: textStyleModel.getTextColor() || labelColor\n        });\n    };\n\n    graphic.getFont = function (opt, ecModel) {\n        var gTextStyleModel = ecModel && ecModel.getModel('textStyle');\n        return [\n            // FIXME in node-canvas fontWeight is before fontStyle\n            opt.fontStyle || gTextStyleModel && gTextStyleModel.getShallow('fontStyle') || '',\n            opt.fontWeight || gTextStyleModel && gTextStyleModel.getShallow('fontWeight') || '',\n            (opt.fontSize || gTextStyleModel && gTextStyleModel.getShallow('fontSize') || 12) + 'px',\n            opt.fontFamily || gTextStyleModel && gTextStyleModel.getShallow('fontFamily') || 'sans-serif'\n        ].join(' ');\n    };\n\n    function animateOrSetProps(isUpdate, el, props, animatableModel, dataIndex, cb) {\n        if (typeof dataIndex === 'function') {\n            cb = dataIndex;\n            dataIndex = null;\n        }\n        // Do not check 'animation' property directly here. Consider this case:\n        // animation model is an `itemModel`, whose does not have `isAnimationEnabled`\n        // but its parent model (`seriesModel`) does.\n        var animationEnabled = animatableModel && animatableModel.isAnimationEnabled();\n\n        if (animationEnabled) {\n            var postfix = isUpdate ? 'Update' : '';\n            var duration = animatableModel.getShallow('animationDuration' + postfix);\n            var animationEasing = animatableModel.getShallow('animationEasing' + postfix);\n            var animationDelay = animatableModel.getShallow('animationDelay' + postfix);\n            if (typeof animationDelay === 'function') {\n                animationDelay = animationDelay(\n                    dataIndex,\n                    animatableModel.getAnimationDelayParams\n                        ? animatableModel.getAnimationDelayParams(el, dataIndex)\n                        : null\n                );\n            }\n            if (typeof duration === 'function') {\n                duration = duration(dataIndex);\n            }\n\n            duration > 0\n                ? el.animateTo(props, duration, animationDelay || 0, animationEasing, cb)\n                : (el.stopAnimation(), el.attr(props), cb && cb());\n        }\n        else {\n            el.stopAnimation();\n            el.attr(props);\n            cb && cb();\n        }\n    }\n\n    /**\n     * Update graphic element properties with or without animation according to the configuration in series\n     * @param {module:zrender/Element} el\n     * @param {Object} props\n     * @param {module:echarts/model/Model} [animatableModel]\n     * @param {number} [dataIndex]\n     * @param {Function} [cb]\n     * @example\n     *     graphic.updateProps(el, {\n     *         position: [100, 100]\n     *     }, seriesModel, dataIndex, function () { console.log('Animation done!'); });\n     *     // Or\n     *     graphic.updateProps(el, {\n     *         position: [100, 100]\n     *     }, seriesModel, function () { console.log('Animation done!'); });\n     */\n    graphic.updateProps = function (el, props, animatableModel, dataIndex, cb) {\n        animateOrSetProps(true, el, props, animatableModel, dataIndex, cb);\n    };\n\n    /**\n     * Init graphic element properties with or without animation according to the configuration in series\n     * @param {module:zrender/Element} el\n     * @param {Object} props\n     * @param {module:echarts/model/Model} [animatableModel]\n     * @param {number} [dataIndex]\n     * @param {Function} cb\n     */\n    graphic.initProps = function (el, props, animatableModel, dataIndex, cb) {\n        animateOrSetProps(false, el, props, animatableModel, dataIndex, cb);\n    };\n\n    /**\n     * Get transform matrix of target (param target),\n     * in coordinate of its ancestor (param ancestor)\n     *\n     * @param {module:zrender/mixin/Transformable} target\n     * @param {module:zrender/mixin/Transformable} [ancestor]\n     */\n    graphic.getTransform = function (target, ancestor) {\n        var mat = matrix.identity([]);\n\n        while (target && target !== ancestor) {\n            matrix.mul(mat, target.getLocalTransform(), mat);\n            target = target.parent;\n        }\n\n        return mat;\n    };\n\n    /**\n     * Apply transform to an vertex.\n     * @param {Array.<number>} target [x, y]\n     * @param {Array.<number>|TypedArray.<number>|Object} transform Can be:\n     *      + Transform matrix: like [1, 0, 0, 1, 0, 0]\n     *      + {position, rotation, scale}, the same as `zrender/Transformable`.\n     * @param {boolean=} invert Whether use invert matrix.\n     * @return {Array.<number>} [x, y]\n     */\n    graphic.applyTransform = function (target, transform, invert) {\n        if (transform && !zrUtil.isArrayLike(transform)) {\n            transform = Transformable.getLocalTransform(transform);\n        }\n\n        if (invert) {\n            transform = matrix.invert([], transform);\n        }\n        return vector.applyTransform([], target, transform);\n    };\n\n    /**\n     * @param {string} direction 'left' 'right' 'top' 'bottom'\n     * @param {Array.<number>} transform Transform matrix: like [1, 0, 0, 1, 0, 0]\n     * @param {boolean=} invert Whether use invert matrix.\n     * @return {string} Transformed direction. 'left' 'right' 'top' 'bottom'\n     */\n    graphic.transformDirection = function (direction, transform, invert) {\n\n        // Pick a base, ensure that transform result will not be (0, 0).\n        var hBase = (transform[4] === 0 || transform[5] === 0 || transform[0] === 0)\n            ? 1 : Math.abs(2 * transform[4] / transform[0]);\n        var vBase = (transform[4] === 0 || transform[5] === 0 || transform[2] === 0)\n            ? 1 : Math.abs(2 * transform[4] / transform[2]);\n\n        var vertex = [\n            direction === 'left' ? -hBase : direction === 'right' ? hBase : 0,\n            direction === 'top' ? -vBase : direction === 'bottom' ? vBase : 0\n        ];\n\n        vertex = graphic.applyTransform(vertex, transform, invert);\n\n        return Math.abs(vertex[0]) > Math.abs(vertex[1])\n            ? (vertex[0] > 0 ? 'right' : 'left')\n            : (vertex[1] > 0 ? 'bottom' : 'top');\n    };\n\n    /**\n     * Apply group transition animation from g1 to g2.\n     * If no animatableModel, no animation.\n     */\n    graphic.groupTransition = function (g1, g2, animatableModel, cb) {\n        if (!g1 || !g2) {\n            return;\n        }\n\n        function getElMap(g) {\n            var elMap = {};\n            g.traverse(function (el) {\n                if (!el.isGroup && el.anid) {\n                    elMap[el.anid] = el;\n                }\n            });\n            return elMap;\n        }\n        function getAnimatableProps(el) {\n            var obj = {\n                position: vector.clone(el.position),\n                rotation: el.rotation\n            };\n            if (el.shape) {\n                obj.shape = zrUtil.extend({}, el.shape);\n            }\n            return obj;\n        }\n        var elMap1 = getElMap(g1);\n\n        g2.traverse(function (el) {\n            if (!el.isGroup && el.anid) {\n                var oldEl = elMap1[el.anid];\n                if (oldEl) {\n                    var newProp = getAnimatableProps(el);\n                    el.attr(getAnimatableProps(oldEl));\n                    graphic.updateProps(el, newProp, animatableModel, el.dataIndex);\n                }\n                // else {\n                //     if (el.previousProps) {\n                //         graphic.updateProps\n                //     }\n                // }\n            }\n        });\n    };\n\n    /**\n     * @param {Array.<Array.<number>>} points Like: [[23, 44], [53, 66], ...]\n     * @param {Object} rect {x, y, width, height}\n     * @return {Array.<Array.<number>>} A new clipped points.\n     */\n    graphic.clipPointsByRect = function (points, rect) {\n        return zrUtil.map(points, function (point) {\n            var x = point[0];\n            x = mathMax(x, rect.x);\n            x = mathMin(x, rect.x + rect.width);\n            var y = point[1];\n            y = mathMax(y, rect.y);\n            y = mathMin(y, rect.y + rect.height);\n            return [x, y];\n        });\n    };\n\n    /**\n     * @param {Object} targetRect {x, y, width, height}\n     * @param {Object} rect {x, y, width, height}\n     * @return {Object} A new clipped rect. If rect size are negative, return undefined.\n     */\n    graphic.clipRectByRect = function (targetRect, rect) {\n        var x = mathMax(targetRect.x, rect.x);\n        var x2 = mathMin(targetRect.x + targetRect.width, rect.x + rect.width);\n        var y = mathMax(targetRect.y, rect.y);\n        var y2 = mathMin(targetRect.y + targetRect.height, rect.y + rect.height);\n\n        if (x2 >= x && y2 >= y) {\n            return {\n                x: x,\n                y: y,\n                width: x2 - x,\n                height: y2 - y\n            };\n        }\n    };\n\n    module.exports = graphic;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/graphic.js\n// module id = 454\n// module chunks = 0 1 2","// Enable DEV mode when using source code without build. which has no __DEV__ variable\n// In build process 'typeof __DEV__' will be replace with 'boolean'\n// So this code will be removed or disabled anyway after built.\nif (typeof __DEV__ === 'undefined') {\n    // In browser\n    if (typeof window !== 'undefined') {\n        window.__DEV__ = true;\n    }\n    // In node\n    else if (typeof global !== 'undefined') {\n        global.__DEV__ = true;\n    }\n}\n\n/*!\n * ECharts, a javascript interactive chart library.\n *\n * Copyright (c) 2015, Baidu Inc.\n * All rights reserved.\n *\n * LICENSE\n * https://github.com/ecomfe/echarts/blob/master/LICENSE.txt\n */\n\n/**\n * @module echarts\n */\n\n\n    var env = require('zrender/lib/core/env');\n\n    var GlobalModel = require('./model/Global');\n    var ExtensionAPI = require('./ExtensionAPI');\n    var CoordinateSystemManager = require('./CoordinateSystem');\n    var OptionManager = require('./model/OptionManager');\n\n    var ComponentModel = require('./model/Component');\n    var SeriesModel = require('./model/Series');\n\n    var ComponentView = require('./view/Component');\n    var ChartView = require('./view/Chart');\n    var graphic = require('./util/graphic');\n    var modelUtil = require('./util/model');\n    var throttle = require('./util/throttle');\n\n    var zrender = require('zrender');\n    var zrUtil = require('zrender/lib/core/util');\n    var colorTool = require('zrender/lib/tool/color');\n    var Eventful = require('zrender/lib/mixin/Eventful');\n    var timsort = require('zrender/lib/core/timsort');\n\n    var each = zrUtil.each;\n    var parseClassType = ComponentModel.parseClassType;\n\n    var PRIORITY_PROCESSOR_FILTER = 1000;\n    var PRIORITY_PROCESSOR_STATISTIC = 5000;\n\n\n    var PRIORITY_VISUAL_LAYOUT = 1000;\n    var PRIORITY_VISUAL_GLOBAL = 2000;\n    var PRIORITY_VISUAL_CHART = 3000;\n    var PRIORITY_VISUAL_COMPONENT = 4000;\n    // FIXME\n    // necessary?\n    var PRIORITY_VISUAL_BRUSH = 5000;\n\n    // Main process have three entries: `setOption`, `dispatchAction` and `resize`,\n    // where they must not be invoked nestedly, except the only case: invoke\n    // dispatchAction with updateMethod \"none\" in main process.\n    // This flag is used to carry out this rule.\n    // All events will be triggered out side main process (i.e. when !this[IN_MAIN_PROCESS]).\n    var IN_MAIN_PROCESS = '__flagInMainProcess';\n    var HAS_GRADIENT_OR_PATTERN_BG = '__hasGradientOrPatternBg';\n    var OPTION_UPDATED = '__optionUpdated';\n    var ACTION_REG = /^[a-zA-Z0-9_]+$/;\n\n    function createRegisterEventWithLowercaseName(method) {\n        return function (eventName, handler, context) {\n            // Event name is all lowercase\n            eventName = eventName && eventName.toLowerCase();\n            Eventful.prototype[method].call(this, eventName, handler, context);\n        };\n    }\n\n    /**\n     * @module echarts~MessageCenter\n     */\n    function MessageCenter() {\n        Eventful.call(this);\n    }\n    MessageCenter.prototype.on = createRegisterEventWithLowercaseName('on');\n    MessageCenter.prototype.off = createRegisterEventWithLowercaseName('off');\n    MessageCenter.prototype.one = createRegisterEventWithLowercaseName('one');\n    zrUtil.mixin(MessageCenter, Eventful);\n\n    /**\n     * @module echarts~ECharts\n     */\n    function ECharts(dom, theme, opts) {\n        opts = opts || {};\n\n        // Get theme by name\n        if (typeof theme === 'string') {\n            theme = themeStorage[theme];\n        }\n\n        /**\n         * @type {string}\n         */\n        this.id;\n        /**\n         * Group id\n         * @type {string}\n         */\n        this.group;\n        /**\n         * @type {HTMLDomElement}\n         * @private\n         */\n        this._dom = dom;\n        /**\n         * @type {module:zrender/ZRender}\n         * @private\n         */\n        var zr = this._zr = zrender.init(dom, {\n            renderer: opts.renderer || 'canvas',\n            devicePixelRatio: opts.devicePixelRatio,\n            width: opts.width,\n            height: opts.height\n        });\n\n        /**\n         * Expect 60 pfs.\n         * @type {Function}\n         * @private\n         */\n        this._throttledZrFlush = throttle.throttle(zrUtil.bind(zr.flush, zr), 17);\n\n        /**\n         * @type {Object}\n         * @private\n         */\n        this._theme = zrUtil.clone(theme);\n\n        /**\n         * @type {Array.<module:echarts/view/Chart>}\n         * @private\n         */\n        this._chartsViews = [];\n\n        /**\n         * @type {Object.<string, module:echarts/view/Chart>}\n         * @private\n         */\n        this._chartsMap = {};\n\n        /**\n         * @type {Array.<module:echarts/view/Component>}\n         * @private\n         */\n        this._componentsViews = [];\n\n        /**\n         * @type {Object.<string, module:echarts/view/Component>}\n         * @private\n         */\n        this._componentsMap = {};\n\n        /**\n         * @type {module:echarts/CoordinateSystem}\n         * @private\n         */\n        this._coordSysMgr = new CoordinateSystemManager();\n\n        /**\n         * @type {module:echarts/ExtensionAPI}\n         * @private\n         */\n        this._api = createExtensionAPI(this);\n\n        Eventful.call(this);\n\n        /**\n         * @type {module:echarts~MessageCenter}\n         * @private\n         */\n        this._messageCenter = new MessageCenter();\n\n        // Init mouse events\n        this._initEvents();\n\n        // In case some people write `window.onresize = chart.resize`\n        this.resize = zrUtil.bind(this.resize, this);\n\n        // Can't dispatch action during rendering procedure\n        this._pendingActions = [];\n        // Sort on demand\n        function prioritySortFunc(a, b) {\n            return a.prio - b.prio;\n        }\n        timsort(visualFuncs, prioritySortFunc);\n        timsort(dataProcessorFuncs, prioritySortFunc);\n\n        zr.animation.on('frame', this._onframe, this);\n\n        // ECharts instance can be used as value.\n        zrUtil.setAsPrimitive(this);\n    }\n\n    var echartsProto = ECharts.prototype;\n\n    echartsProto._onframe = function () {\n        // Lazy update\n        if (this[OPTION_UPDATED]) {\n            var silent = this[OPTION_UPDATED].silent;\n\n            this[IN_MAIN_PROCESS] = true;\n\n            updateMethods.prepareAndUpdate.call(this);\n\n            this[IN_MAIN_PROCESS] = false;\n\n            this[OPTION_UPDATED] = false;\n\n            flushPendingActions.call(this, silent);\n\n            triggerUpdatedEvent.call(this, silent);\n        }\n    };\n    /**\n     * @return {HTMLDomElement}\n     */\n    echartsProto.getDom = function () {\n        return this._dom;\n    };\n\n    /**\n     * @return {module:zrender~ZRender}\n     */\n    echartsProto.getZr = function () {\n        return this._zr;\n    };\n\n    /**\n     * Usage:\n     * chart.setOption(option, notMerge, lazyUpdate);\n     * chart.setOption(option, {\n     *     notMerge: ...,\n     *     lazyUpdate: ...,\n     *     silent: ...\n     * });\n     *\n     * @param {Object} option\n     * @param {Object|boolean} [opts] opts or notMerge.\n     * @param {boolean} [opts.notMerge=false]\n     * @param {boolean} [opts.lazyUpdate=false] Useful when setOption frequently.\n     */\n    echartsProto.setOption = function (option, notMerge, lazyUpdate) {\n        if (__DEV__) {\n            zrUtil.assert(!this[IN_MAIN_PROCESS], '`setOption` should not be called during main process.');\n        }\n\n        var silent;\n        if (zrUtil.isObject(notMerge)) {\n            lazyUpdate = notMerge.lazyUpdate;\n            silent = notMerge.silent;\n            notMerge = notMerge.notMerge;\n        }\n\n        this[IN_MAIN_PROCESS] = true;\n\n        if (!this._model || notMerge) {\n            var optionManager = new OptionManager(this._api);\n            var theme = this._theme;\n            var ecModel = this._model = new GlobalModel(null, null, theme, optionManager);\n            ecModel.init(null, null, theme, optionManager);\n        }\n\n        this._model.setOption(option, optionPreprocessorFuncs);\n\n        if (lazyUpdate) {\n            this[OPTION_UPDATED] = {silent: silent};\n            this[IN_MAIN_PROCESS] = false;\n        }\n        else {\n            updateMethods.prepareAndUpdate.call(this);\n            // Ensure zr refresh sychronously, and then pixel in canvas can be\n            // fetched after `setOption`.\n            this._zr.flush();\n\n            this[OPTION_UPDATED] = false;\n            this[IN_MAIN_PROCESS] = false;\n\n            flushPendingActions.call(this, silent);\n            triggerUpdatedEvent.call(this, silent);\n        }\n    };\n\n    /**\n     * @DEPRECATED\n     */\n    echartsProto.setTheme = function () {\n        console.log('ECharts#setTheme() is DEPRECATED in ECharts 3.0');\n    };\n\n    /**\n     * @return {module:echarts/model/Global}\n     */\n    echartsProto.getModel = function () {\n        return this._model;\n    };\n\n    /**\n     * @return {Object}\n     */\n    echartsProto.getOption = function () {\n        return this._model && this._model.getOption();\n    };\n\n    /**\n     * @return {number}\n     */\n    echartsProto.getWidth = function () {\n        return this._zr.getWidth();\n    };\n\n    /**\n     * @return {number}\n     */\n    echartsProto.getHeight = function () {\n        return this._zr.getHeight();\n    };\n\n    /**\n     * @return {number}\n     */\n    echartsProto.getDevicePixelRatio = function () {\n        return this._zr.painter.dpr || window.devicePixelRatio || 1;\n    };\n\n    /**\n     * Get canvas which has all thing rendered\n     * @param {Object} opts\n     * @param {string} [opts.backgroundColor]\n     */\n    echartsProto.getRenderedCanvas = function (opts) {\n        if (!env.canvasSupported) {\n            return;\n        }\n        opts = opts || {};\n        opts.pixelRatio = opts.pixelRatio || 1;\n        opts.backgroundColor = opts.backgroundColor\n            || this._model.get('backgroundColor');\n        var zr = this._zr;\n        var list = zr.storage.getDisplayList();\n        // Stop animations\n        zrUtil.each(list, function (el) {\n            el.stopAnimation(true);\n        });\n        return zr.painter.getRenderedCanvas(opts);\n    };\n    /**\n     * @return {string}\n     * @param {Object} opts\n     * @param {string} [opts.type='png']\n     * @param {string} [opts.pixelRatio=1]\n     * @param {string} [opts.backgroundColor]\n     * @param {string} [opts.excludeComponents]\n     */\n    echartsProto.getDataURL = function (opts) {\n        opts = opts || {};\n        var excludeComponents = opts.excludeComponents;\n        var ecModel = this._model;\n        var excludesComponentViews = [];\n        var self = this;\n\n        each(excludeComponents, function (componentType) {\n            ecModel.eachComponent({\n                mainType: componentType\n            }, function (component) {\n                var view = self._componentsMap[component.__viewId];\n                if (!view.group.ignore) {\n                    excludesComponentViews.push(view);\n                    view.group.ignore = true;\n                }\n            });\n        });\n\n        var url = this.getRenderedCanvas(opts).toDataURL(\n            'image/' + (opts && opts.type || 'png')\n        );\n\n        each(excludesComponentViews, function (view) {\n            view.group.ignore = false;\n        });\n        return url;\n    };\n\n\n    /**\n     * @return {string}\n     * @param {Object} opts\n     * @param {string} [opts.type='png']\n     * @param {string} [opts.pixelRatio=1]\n     * @param {string} [opts.backgroundColor]\n     */\n    echartsProto.getConnectedDataURL = function (opts) {\n        if (!env.canvasSupported) {\n            return;\n        }\n        var groupId = this.group;\n        var mathMin = Math.min;\n        var mathMax = Math.max;\n        var MAX_NUMBER = Infinity;\n        if (connectedGroups[groupId]) {\n            var left = MAX_NUMBER;\n            var top = MAX_NUMBER;\n            var right = -MAX_NUMBER;\n            var bottom = -MAX_NUMBER;\n            var canvasList = [];\n            var dpr = (opts && opts.pixelRatio) || 1;\n\n            zrUtil.each(instances, function (chart, id) {\n                if (chart.group === groupId) {\n                    var canvas = chart.getRenderedCanvas(\n                        zrUtil.clone(opts)\n                    );\n                    var boundingRect = chart.getDom().getBoundingClientRect();\n                    left = mathMin(boundingRect.left, left);\n                    top = mathMin(boundingRect.top, top);\n                    right = mathMax(boundingRect.right, right);\n                    bottom = mathMax(boundingRect.bottom, bottom);\n                    canvasList.push({\n                        dom: canvas,\n                        left: boundingRect.left,\n                        top: boundingRect.top\n                    });\n                }\n            });\n\n            left *= dpr;\n            top *= dpr;\n            right *= dpr;\n            bottom *= dpr;\n            var width = right - left;\n            var height = bottom - top;\n            var targetCanvas = zrUtil.createCanvas();\n            targetCanvas.width = width;\n            targetCanvas.height = height;\n            var zr = zrender.init(targetCanvas);\n\n            each(canvasList, function (item) {\n                var img = new graphic.Image({\n                    style: {\n                        x: item.left * dpr - left,\n                        y: item.top * dpr - top,\n                        image: item.dom\n                    }\n                });\n                zr.add(img);\n            });\n            zr.refreshImmediately();\n\n            return targetCanvas.toDataURL('image/' + (opts && opts.type || 'png'));\n        }\n        else {\n            return this.getDataURL(opts);\n        }\n    };\n\n    /**\n     * Convert from logical coordinate system to pixel coordinate system.\n     * See CoordinateSystem#convertToPixel.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId, geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName,\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {Array|number} result\n     */\n    echartsProto.convertToPixel = zrUtil.curry(doConvertPixel, 'convertToPixel');\n\n    /**\n     * Convert from pixel coordinate system to logical coordinate system.\n     * See CoordinateSystem#convertFromPixel.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId / geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {Array|number} result\n     */\n    echartsProto.convertFromPixel = zrUtil.curry(doConvertPixel, 'convertFromPixel');\n\n    function doConvertPixel(methodName, finder, value) {\n        var ecModel = this._model;\n        var coordSysList = this._coordSysMgr.getCoordinateSystems();\n        var result;\n\n        finder = modelUtil.parseFinder(ecModel, finder);\n\n        for (var i = 0; i < coordSysList.length; i++) {\n            var coordSys = coordSysList[i];\n            if (coordSys[methodName]\n                && (result = coordSys[methodName](ecModel, finder, value)) != null\n            ) {\n                return result;\n            }\n        }\n\n        if (__DEV__) {\n            console.warn(\n                'No coordinate system that supports ' + methodName + ' found by the given finder.'\n            );\n        }\n    }\n\n    /**\n     * Is the specified coordinate systems or components contain the given pixel point.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId / geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName,\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {boolean} result\n     */\n    echartsProto.containPixel = function (finder, value) {\n        var ecModel = this._model;\n        var result;\n\n        finder = modelUtil.parseFinder(ecModel, finder);\n\n        zrUtil.each(finder, function (models, key) {\n            key.indexOf('Models') >= 0 && zrUtil.each(models, function (model) {\n                var coordSys = model.coordinateSystem;\n                if (coordSys && coordSys.containPoint) {\n                    result |= !!coordSys.containPoint(value);\n                }\n                else if (key === 'seriesModels') {\n                    var view = this._chartsMap[model.__viewId];\n                    if (view && view.containPoint) {\n                        result |= view.containPoint(value, model);\n                    }\n                    else {\n                        if (__DEV__) {\n                            console.warn(key + ': ' + (view\n                                ? 'The found component do not support containPoint.'\n                                : 'No view mapping to the found component.'\n                            ));\n                        }\n                    }\n                }\n                else {\n                    if (__DEV__) {\n                        console.warn(key + ': containPoint is not supported');\n                    }\n                }\n            }, this);\n        }, this);\n\n        return !!result;\n    };\n\n    /**\n     * Get visual from series or data.\n     * @param {string|Object} finder\n     *        If string, e.g., 'series', means {seriesIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            dataIndex / dataIndexInside\n     *        }\n     *        If dataIndex is not specified, series visual will be fetched,\n     *        but not data item visual.\n     *        If all of seriesIndex, seriesId, seriesName are not specified,\n     *        visual will be fetched from first series.\n     * @param {string} visualType 'color', 'symbol', 'symbolSize'\n     */\n    echartsProto.getVisual = function (finder, visualType) {\n        var ecModel = this._model;\n\n        finder = modelUtil.parseFinder(ecModel, finder, {defaultMainType: 'series'});\n\n        var seriesModel = finder.seriesModel;\n\n        if (__DEV__) {\n            if (!seriesModel) {\n                console.warn('There is no specified seires model');\n            }\n        }\n\n        var data = seriesModel.getData();\n\n        var dataIndexInside = finder.hasOwnProperty('dataIndexInside')\n            ? finder.dataIndexInside\n            : finder.hasOwnProperty('dataIndex')\n            ? data.indexOfRawIndex(finder.dataIndex)\n            : null;\n\n        return dataIndexInside != null\n            ? data.getItemVisual(dataIndexInside, visualType)\n            : data.getVisual(visualType);\n    };\n\n    /**\n     * Get view of corresponding component model\n     * @param  {module:echarts/model/Component} componentModel\n     * @return {module:echarts/view/Component}\n     */\n    echartsProto.getViewOfComponentModel = function (componentModel) {\n        return this._componentsMap[componentModel.__viewId];\n    };\n\n    /**\n     * Get view of corresponding series model\n     * @param  {module:echarts/model/Series} seriesModel\n     * @return {module:echarts/view/Chart}\n     */\n    echartsProto.getViewOfSeriesModel = function (seriesModel) {\n        return this._chartsMap[seriesModel.__viewId];\n    };\n\n\n    var updateMethods = {\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        update: function (payload) {\n            // console.profile && console.profile('update');\n\n            var ecModel = this._model;\n            var api = this._api;\n            var coordSysMgr = this._coordSysMgr;\n            var zr = this._zr;\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            // Fixme First time update ?\n            ecModel.restoreData();\n\n            // TODO\n            // Save total ecModel here for undo/redo (after restoring data and before processing data).\n            // Undo (restoration of total ecModel) can be carried out in 'action' or outside API call.\n\n            // Create new coordinate system each update\n            // In LineView may save the old coordinate system and use it to get the orignal point\n            coordSysMgr.create(this._model, this._api);\n\n            processData.call(this, ecModel, api);\n\n            stackSeriesData.call(this, ecModel);\n\n            coordSysMgr.update(ecModel, api);\n\n            doVisualEncoding.call(this, ecModel, payload);\n\n            doRender.call(this, ecModel, payload);\n\n            // Set background\n            var backgroundColor = ecModel.get('backgroundColor') || 'transparent';\n\n            var painter = zr.painter;\n            // TODO all use clearColor ?\n            if (painter.isSingleCanvas && painter.isSingleCanvas()) {\n                zr.configLayer(0, {\n                    clearColor: backgroundColor\n                });\n            }\n            else {\n                // In IE8\n                if (!env.canvasSupported) {\n                    var colorArr = colorTool.parse(backgroundColor);\n                    backgroundColor = colorTool.stringify(colorArr, 'rgb');\n                    if (colorArr[3] === 0) {\n                        backgroundColor = 'transparent';\n                    }\n                }\n                if (backgroundColor.colorStops || backgroundColor.image) {\n                    // Gradient background\n                    // FIXME Fixed layer？\n                    zr.configLayer(0, {\n                        clearColor: backgroundColor\n                    });\n                    this[HAS_GRADIENT_OR_PATTERN_BG] = true;\n\n                    this._dom.style.background = 'transparent';\n                }\n                else {\n                    if (this[HAS_GRADIENT_OR_PATTERN_BG]) {\n                        zr.configLayer(0, {\n                            clearColor: null\n                        });\n                    }\n                    this[HAS_GRADIENT_OR_PATTERN_BG] = false;\n\n                    this._dom.style.background = backgroundColor;\n                }\n            }\n\n            each(postUpdateFuncs, function (func) {\n                func(ecModel, api);\n            });\n\n            // console.profile && console.profileEnd('update');\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateView: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            ecModel.eachSeries(function (seriesModel) {\n                seriesModel.getData().clearAllVisual();\n            });\n\n            doVisualEncoding.call(this, ecModel, payload);\n\n            invokeUpdateMethod.call(this, 'updateView', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateVisual: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            ecModel.eachSeries(function (seriesModel) {\n                seriesModel.getData().clearAllVisual();\n            });\n\n            doVisualEncoding.call(this, ecModel, payload, true);\n\n            invokeUpdateMethod.call(this, 'updateVisual', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateLayout: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            doLayout.call(this, ecModel, payload);\n\n            invokeUpdateMethod.call(this, 'updateLayout', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        prepareAndUpdate: function (payload) {\n            var ecModel = this._model;\n\n            prepareView.call(this, 'component', ecModel);\n\n            prepareView.call(this, 'chart', ecModel);\n\n            updateMethods.update.call(this, payload);\n        }\n    };\n\n    /**\n     * @private\n     */\n    function updateDirectly(ecIns, method, payload, mainType, subType) {\n        var ecModel = ecIns._model;\n\n        // broadcast\n        if (!mainType) {\n            each(ecIns._componentsViews.concat(ecIns._chartsViews), callView);\n            return;\n        }\n\n        var query = {};\n        query[mainType + 'Id'] = payload[mainType + 'Id'];\n        query[mainType + 'Index'] = payload[mainType + 'Index'];\n        query[mainType + 'Name'] = payload[mainType + 'Name'];\n\n        var condition = {mainType: mainType, query: query};\n        subType && (condition.subType = subType); // subType may be '' by parseClassType;\n\n        // If dispatchAction before setOption, do nothing.\n        ecModel && ecModel.eachComponent(condition, function (model, index) {\n            callView(ecIns[\n                mainType === 'series' ? '_chartsMap' : '_componentsMap'\n            ][model.__viewId]);\n        }, ecIns);\n\n        function callView(view) {\n            view && view.__alive && view[method] && view[method](\n                view.__model, ecModel, ecIns._api, payload\n            );\n        }\n    }\n\n    /**\n     * Resize the chart\n     * @param {Object} opts\n     * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n     * @param {boolean} [opts.silent=false]\n     */\n    echartsProto.resize = function (opts) {\n        if (__DEV__) {\n            zrUtil.assert(!this[IN_MAIN_PROCESS], '`resize` should not be called during main process.');\n        }\n\n        this[IN_MAIN_PROCESS] = true;\n\n        this._zr.resize(opts);\n\n        var optionChanged = this._model && this._model.resetOption('media');\n        var updateMethod = optionChanged ? 'prepareAndUpdate' : 'update';\n\n        updateMethods[updateMethod].call(this);\n\n        // Resize loading effect\n        this._loadingFX && this._loadingFX.resize();\n\n        this[IN_MAIN_PROCESS] = false;\n\n        var silent = opts && opts.silent;\n\n        flushPendingActions.call(this, silent);\n\n        triggerUpdatedEvent.call(this, silent);\n    };\n\n    /**\n     * Show loading effect\n     * @param  {string} [name='default']\n     * @param  {Object} [cfg]\n     */\n    echartsProto.showLoading = function (name, cfg) {\n        if (zrUtil.isObject(name)) {\n            cfg = name;\n            name = '';\n        }\n        name = name || 'default';\n\n        this.hideLoading();\n        if (!loadingEffects[name]) {\n            if (__DEV__) {\n                console.warn('Loading effects ' + name + ' not exists.');\n            }\n            return;\n        }\n        var el = loadingEffects[name](this._api, cfg);\n        var zr = this._zr;\n        this._loadingFX = el;\n\n        zr.add(el);\n    };\n\n    /**\n     * Hide loading effect\n     */\n    echartsProto.hideLoading = function () {\n        this._loadingFX && this._zr.remove(this._loadingFX);\n        this._loadingFX = null;\n    };\n\n    /**\n     * @param {Object} eventObj\n     * @return {Object}\n     */\n    echartsProto.makeActionFromEvent = function (eventObj) {\n        var payload = zrUtil.extend({}, eventObj);\n        payload.type = eventActionMap[eventObj.type];\n        return payload;\n    };\n\n    /**\n     * @pubilc\n     * @param {Object} payload\n     * @param {string} [payload.type] Action type\n     * @param {Object|boolean} [opt] If pass boolean, means opt.silent\n     * @param {boolean} [opt.silent=false] Whether trigger events.\n     * @param {boolean} [opt.flush=undefined]\n     *                  true: Flush immediately, and then pixel in canvas can be fetched\n     *                      immediately. Caution: it might affect performance.\n     *                  false: Not not flush.\n     *                  undefined: Auto decide whether perform flush.\n     */\n    echartsProto.dispatchAction = function (payload, opt) {\n        if (!zrUtil.isObject(opt)) {\n            opt = {silent: !!opt};\n        }\n\n        if (!actions[payload.type]) {\n            return;\n        }\n\n        // May dispatchAction in rendering procedure\n        if (this[IN_MAIN_PROCESS]) {\n            this._pendingActions.push(payload);\n            return;\n        }\n\n        doDispatchAction.call(this, payload, opt.silent);\n\n        if (opt.flush) {\n            this._zr.flush(true);\n        }\n        else if (opt.flush !== false && env.browser.weChat) {\n            // In WeChat embeded browser, `requestAnimationFrame` and `setInterval`\n            // hang when sliding page (on touch event), which cause that zr does not\n            // refresh util user interaction finished, which is not expected.\n            // But `dispatchAction` may be called too frequently when pan on touch\n            // screen, which impacts performance if do not throttle them.\n            this._throttledZrFlush();\n        }\n\n        flushPendingActions.call(this, opt.silent);\n\n        triggerUpdatedEvent.call(this, opt.silent);\n    };\n\n    function doDispatchAction(payload, silent) {\n        var payloadType = payload.type;\n        var escapeConnect = payload.escapeConnect;\n        var actionWrap = actions[payloadType];\n        var actionInfo = actionWrap.actionInfo;\n\n        var cptType = (actionInfo.update || 'update').split(':');\n        var updateMethod = cptType.pop();\n        cptType = cptType[0] != null && parseClassType(cptType[0]);\n\n        this[IN_MAIN_PROCESS] = true;\n\n        var payloads = [payload];\n        var batched = false;\n        // Batch action\n        if (payload.batch) {\n            batched = true;\n            payloads = zrUtil.map(payload.batch, function (item) {\n                item = zrUtil.defaults(zrUtil.extend({}, item), payload);\n                item.batch = null;\n                return item;\n            });\n        }\n\n        var eventObjBatch = [];\n        var eventObj;\n        var isHighDown = payloadType === 'highlight' || payloadType === 'downplay';\n\n        each(payloads, function (batchItem) {\n            // Action can specify the event by return it.\n            eventObj = actionWrap.action(batchItem, this._model, this._api);\n            // Emit event outside\n            eventObj = eventObj || zrUtil.extend({}, batchItem);\n            // Convert type to eventType\n            eventObj.type = actionInfo.event || eventObj.type;\n            eventObjBatch.push(eventObj);\n\n            // light update does not perform data process, layout and visual.\n            if (isHighDown) {\n                // method, payload, mainType, subType\n                updateDirectly(this, updateMethod, batchItem, 'series');\n            }\n            else if (cptType) {\n                updateDirectly(this, updateMethod, batchItem, cptType.main, cptType.sub);\n            }\n        }, this);\n\n        if (updateMethod !== 'none' && !isHighDown && !cptType) {\n            // Still dirty\n            if (this[OPTION_UPDATED]) {\n                // FIXME Pass payload ?\n                updateMethods.prepareAndUpdate.call(this, payload);\n                this[OPTION_UPDATED] = false;\n            }\n            else {\n                updateMethods[updateMethod].call(this, payload);\n            }\n        }\n\n        // Follow the rule of action batch\n        if (batched) {\n            eventObj = {\n                type: actionInfo.event || payloadType,\n                escapeConnect: escapeConnect,\n                batch: eventObjBatch\n            };\n        }\n        else {\n            eventObj = eventObjBatch[0];\n        }\n\n        this[IN_MAIN_PROCESS] = false;\n\n        !silent && this._messageCenter.trigger(eventObj.type, eventObj);\n    }\n\n    function flushPendingActions(silent) {\n        var pendingActions = this._pendingActions;\n        while (pendingActions.length) {\n            var payload = pendingActions.shift();\n            doDispatchAction.call(this, payload, silent);\n        }\n    }\n\n    function triggerUpdatedEvent(silent) {\n        !silent && this.trigger('updated');\n    }\n\n    /**\n     * Register event\n     * @method\n     */\n    echartsProto.on = createRegisterEventWithLowercaseName('on');\n    echartsProto.off = createRegisterEventWithLowercaseName('off');\n    echartsProto.one = createRegisterEventWithLowercaseName('one');\n\n    /**\n     * @param {string} methodName\n     * @private\n     */\n    function invokeUpdateMethod(methodName, ecModel, payload) {\n        var api = this._api;\n\n        // Update all components\n        each(this._componentsViews, function (component) {\n            var componentModel = component.__model;\n            component[methodName](componentModel, ecModel, api, payload);\n\n            updateZ(componentModel, component);\n        }, this);\n\n        // Upate all charts\n        ecModel.eachSeries(function (seriesModel, idx) {\n            var chart = this._chartsMap[seriesModel.__viewId];\n            chart[methodName](seriesModel, ecModel, api, payload);\n\n            updateZ(seriesModel, chart);\n\n            updateProgressiveAndBlend(seriesModel, chart);\n        }, this);\n\n        // If use hover layer\n        updateHoverLayerStatus(this._zr, ecModel);\n\n        // Post render\n        each(postUpdateFuncs, function (func) {\n            func(ecModel, api);\n        });\n    }\n\n    /**\n     * Prepare view instances of charts and components\n     * @param  {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function prepareView(type, ecModel) {\n        var isComponent = type === 'component';\n        var viewList = isComponent ? this._componentsViews : this._chartsViews;\n        var viewMap = isComponent ? this._componentsMap : this._chartsMap;\n        var zr = this._zr;\n\n        for (var i = 0; i < viewList.length; i++) {\n            viewList[i].__alive = false;\n        }\n\n        ecModel[isComponent ? 'eachComponent' : 'eachSeries'](function (componentType, model) {\n            if (isComponent) {\n                if (componentType === 'series') {\n                    return;\n                }\n            }\n            else {\n                model = componentType;\n            }\n\n            // Consider: id same and type changed.\n            var viewId = '_ec_' + model.id + '_' + model.type;\n            var view = viewMap[viewId];\n            if (!view) {\n                var classType = parseClassType(model.type);\n                var Clazz = isComponent\n                    ? ComponentView.getClass(classType.main, classType.sub)\n                    : ChartView.getClass(classType.sub);\n                if (Clazz) {\n                    view = new Clazz();\n                    view.init(ecModel, this._api);\n                    viewMap[viewId] = view;\n                    viewList.push(view);\n                    zr.add(view.group);\n                }\n                else {\n                    // Error\n                    return;\n                }\n            }\n\n            model.__viewId = view.__id = viewId;\n            view.__alive = true;\n            view.__model = model;\n            view.group.__ecComponentInfo = {\n                mainType: model.mainType,\n                index: model.componentIndex\n            };\n        }, this);\n\n        for (var i = 0; i < viewList.length;) {\n            var view = viewList[i];\n            if (!view.__alive) {\n                zr.remove(view.group);\n                view.dispose(ecModel, this._api);\n                viewList.splice(i, 1);\n                delete viewMap[view.__id];\n                view.__id = view.group.__ecComponentInfo = null;\n            }\n            else {\n                i++;\n            }\n        }\n    }\n\n    /**\n     * Processor data in each series\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function processData(ecModel, api) {\n        each(dataProcessorFuncs, function (process) {\n            process.func(ecModel, api);\n        });\n    }\n\n    /**\n     * @private\n     */\n    function stackSeriesData(ecModel) {\n        var stackedDataMap = {};\n        ecModel.eachSeries(function (series) {\n            var stack = series.get('stack');\n            var data = series.getData();\n            if (stack && data.type === 'list') {\n                var previousStack = stackedDataMap[stack];\n                // Avoid conflict with Object.prototype\n                if (stackedDataMap.hasOwnProperty(stack) && previousStack) {\n                    data.stackedOn = previousStack;\n                }\n                stackedDataMap[stack] = data;\n            }\n        });\n    }\n\n    /**\n     * Layout before each chart render there series, special visual encoding stage\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function doLayout(ecModel, payload) {\n        var api = this._api;\n        each(visualFuncs, function (visual) {\n            if (visual.isLayout) {\n                visual.func(ecModel, api, payload);\n            }\n        });\n    }\n\n    /**\n     * Encode visual infomation from data after data processing\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @param {object} layout\n     * @param {boolean} [excludesLayout]\n     * @private\n     */\n    function doVisualEncoding(ecModel, payload, excludesLayout) {\n        var api = this._api;\n        ecModel.clearColorPalette();\n        ecModel.eachSeries(function (seriesModel) {\n            seriesModel.clearColorPalette();\n        });\n        each(visualFuncs, function (visual) {\n            (!excludesLayout || !visual.isLayout)\n                && visual.func(ecModel, api, payload);\n        });\n    }\n\n    /**\n     * Render each chart and component\n     * @private\n     */\n    function doRender(ecModel, payload) {\n        var api = this._api;\n        // Render all components\n        each(this._componentsViews, function (componentView) {\n            var componentModel = componentView.__model;\n            componentView.render(componentModel, ecModel, api, payload);\n\n            updateZ(componentModel, componentView);\n        }, this);\n\n        each(this._chartsViews, function (chart) {\n            chart.__alive = false;\n        }, this);\n\n        // Render all charts\n        ecModel.eachSeries(function (seriesModel, idx) {\n            var chartView = this._chartsMap[seriesModel.__viewId];\n            chartView.__alive = true;\n            chartView.render(seriesModel, ecModel, api, payload);\n\n            chartView.group.silent = !!seriesModel.get('silent');\n\n            updateZ(seriesModel, chartView);\n\n            updateProgressiveAndBlend(seriesModel, chartView);\n\n        }, this);\n\n        // If use hover layer\n        updateHoverLayerStatus(this._zr, ecModel);\n\n        // Remove groups of unrendered charts\n        each(this._chartsViews, function (chart) {\n            if (!chart.__alive) {\n                chart.remove(ecModel, api);\n            }\n        }, this);\n    }\n\n    var MOUSE_EVENT_NAMES = [\n        'click', 'dblclick', 'mouseover', 'mouseout', 'mousemove',\n        'mousedown', 'mouseup', 'globalout', 'contextmenu'\n    ];\n    /**\n     * @private\n     */\n    echartsProto._initEvents = function () {\n        each(MOUSE_EVENT_NAMES, function (eveName) {\n            this._zr.on(eveName, function (e) {\n                var ecModel = this.getModel();\n                var el = e.target;\n                var params;\n\n                // no e.target when 'globalout'.\n                if (eveName === 'globalout') {\n                    params = {};\n                }\n                else if (el && el.dataIndex != null) {\n                    var dataModel = el.dataModel || ecModel.getSeriesByIndex(el.seriesIndex);\n                    params = dataModel && dataModel.getDataParams(el.dataIndex, el.dataType) || {};\n                }\n                // If element has custom eventData of components\n                else if (el && el.eventData) {\n                    params = zrUtil.extend({}, el.eventData);\n                }\n\n                if (params) {\n                    params.event = e;\n                    params.type = eveName;\n                    this.trigger(eveName, params);\n                }\n\n            }, this);\n        }, this);\n\n        each(eventActionMap, function (actionType, eventType) {\n            this._messageCenter.on(eventType, function (event) {\n                this.trigger(eventType, event);\n            }, this);\n        }, this);\n    };\n\n    /**\n     * @return {boolean}\n     */\n    echartsProto.isDisposed = function () {\n        return this._disposed;\n    };\n\n    /**\n     * Clear\n     */\n    echartsProto.clear = function () {\n        this.setOption({ series: [] }, true);\n    };\n\n    /**\n     * Dispose instance\n     */\n    echartsProto.dispose = function () {\n        if (this._disposed) {\n            if (__DEV__) {\n                console.warn('Instance ' + this.id + ' has been disposed');\n            }\n            return;\n        }\n        this._disposed = true;\n\n        var api = this._api;\n        var ecModel = this._model;\n\n        each(this._componentsViews, function (component) {\n            component.dispose(ecModel, api);\n        });\n        each(this._chartsViews, function (chart) {\n            chart.dispose(ecModel, api);\n        });\n\n        // Dispose after all views disposed\n        this._zr.dispose();\n\n        delete instances[this.id];\n    };\n\n    zrUtil.mixin(ECharts, Eventful);\n\n    function updateHoverLayerStatus(zr, ecModel) {\n        var storage = zr.storage;\n        var elCount = 0;\n        storage.traverse(function (el) {\n            if (!el.isGroup) {\n                elCount++;\n            }\n        });\n        if (elCount > ecModel.get('hoverLayerThreshold') && !env.node) {\n            storage.traverse(function (el) {\n                if (!el.isGroup) {\n                    el.useHoverLayer = true;\n                }\n            });\n        }\n    }\n\n    /**\n     * Update chart progressive and blend.\n     * @param {module:echarts/model/Series|module:echarts/model/Component} model\n     * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n     */\n    function updateProgressiveAndBlend(seriesModel, chartView) {\n        // Progressive configuration\n        var elCount = 0;\n        chartView.group.traverse(function (el) {\n            if (el.type !== 'group' && !el.ignore) {\n                elCount++;\n            }\n        });\n        var frameDrawNum = +seriesModel.get('progressive');\n        var needProgressive = elCount > seriesModel.get('progressiveThreshold') && frameDrawNum && !env.node;\n        if (needProgressive) {\n            chartView.group.traverse(function (el) {\n                // FIXME marker and other components\n                if (!el.isGroup) {\n                    el.progressive = needProgressive ?\n                        Math.floor(elCount++ / frameDrawNum) : -1;\n                    if (needProgressive) {\n                        el.stopAnimation(true);\n                    }\n                }\n            });\n        }\n\n        // Blend configration\n        var blendMode = seriesModel.get('blendMode') || null;\n        if (__DEV__) {\n            if (!env.canvasSupported && blendMode && blendMode !== 'source-over') {\n                console.warn('Only canvas support blendMode');\n            }\n        }\n        chartView.group.traverse(function (el) {\n            // FIXME marker and other components\n            if (!el.isGroup) {\n                el.setStyle('blend', blendMode);\n            }\n        });\n    }\n\n    /**\n     * @param {module:echarts/model/Series|module:echarts/model/Component} model\n     * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n     */\n    function updateZ(model, view) {\n        var z = model.get('z');\n        var zlevel = model.get('zlevel');\n        // Set z and zlevel\n        view.group.traverse(function (el) {\n            if (el.type !== 'group') {\n                z != null && (el.z = z);\n                zlevel != null && (el.zlevel = zlevel);\n            }\n        });\n    }\n\n    function createExtensionAPI(ecInstance) {\n        var coordSysMgr = ecInstance._coordSysMgr;\n        return zrUtil.extend(new ExtensionAPI(ecInstance), {\n            // Inject methods\n            getCoordinateSystems: zrUtil.bind(\n                coordSysMgr.getCoordinateSystems, coordSysMgr\n            ),\n            getComponentByElement: function (el) {\n                while (el) {\n                    var modelInfo = el.__ecComponentInfo;\n                    if (modelInfo != null) {\n                        return ecInstance._model.getComponent(modelInfo.mainType, modelInfo.index);\n                    }\n                    el = el.parent;\n                }\n            }\n        });\n    }\n\n    /**\n     * @type {Object} key: actionType.\n     * @inner\n     */\n    var actions = {};\n\n    /**\n     * Map eventType to actionType\n     * @type {Object}\n     */\n    var eventActionMap = {};\n\n    /**\n     * Data processor functions of each stage\n     * @type {Array.<Object.<string, Function>>}\n     * @inner\n     */\n    var dataProcessorFuncs = [];\n\n    /**\n     * @type {Array.<Function>}\n     * @inner\n     */\n    var optionPreprocessorFuncs = [];\n\n    /**\n     * @type {Array.<Function>}\n     * @inner\n     */\n    var postUpdateFuncs = [];\n\n    /**\n     * Visual encoding functions of each stage\n     * @type {Array.<Object.<string, Function>>}\n     * @inner\n     */\n    var visualFuncs = [];\n    /**\n     * Theme storage\n     * @type {Object.<key, Object>}\n     */\n    var themeStorage = {};\n    /**\n     * Loading effects\n     */\n    var loadingEffects = {};\n\n\n    var instances = {};\n    var connectedGroups = {};\n\n    var idBase = new Date() - 0;\n    var groupIdBase = new Date() - 0;\n    var DOM_ATTRIBUTE_KEY = '_echarts_instance_';\n\n    /**\n     * @alias module:echarts\n     */\n    var echarts = {\n        /**\n         * @type {number}\n         */\n        version: '3.6.2',\n        dependencies: {\n            zrender: '3.5.2'\n        }\n    };\n\n    function enableConnect(chart) {\n        var STATUS_PENDING = 0;\n        var STATUS_UPDATING = 1;\n        var STATUS_UPDATED = 2;\n        var STATUS_KEY = '__connectUpdateStatus';\n\n        function updateConnectedChartsStatus(charts, status) {\n            for (var i = 0; i < charts.length; i++) {\n                var otherChart = charts[i];\n                otherChart[STATUS_KEY] = status;\n            }\n        }\n\n        zrUtil.each(eventActionMap, function (actionType, eventType) {\n            chart._messageCenter.on(eventType, function (event) {\n                if (connectedGroups[chart.group] && chart[STATUS_KEY] !== STATUS_PENDING) {\n                    if (event && event.escapeConnect) {\n                        return;\n                    }\n\n                    var action = chart.makeActionFromEvent(event);\n                    var otherCharts = [];\n\n                    zrUtil.each(instances, function (otherChart) {\n                        if (otherChart !== chart && otherChart.group === chart.group) {\n                            otherCharts.push(otherChart);\n                        }\n                    });\n\n                    updateConnectedChartsStatus(otherCharts, STATUS_PENDING);\n                    each(otherCharts, function (otherChart) {\n                        if (otherChart[STATUS_KEY] !== STATUS_UPDATING) {\n                            otherChart.dispatchAction(action);\n                        }\n                    });\n                    updateConnectedChartsStatus(otherCharts, STATUS_UPDATED);\n                }\n            });\n        });\n    }\n\n    /**\n     * @param {HTMLDomElement} dom\n     * @param {Object} [theme]\n     * @param {Object} opts\n     * @param {number} [opts.devicePixelRatio] Use window.devicePixelRatio by default\n     * @param {string} [opts.renderer] Currently only 'canvas' is supported.\n     * @param {number} [opts.width] Use clientWidth of the input `dom` by default.\n     *                              Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Use clientHeight of the input `dom` by default.\n     *                               Can be 'auto' (the same as null/undefined)\n     */\n    echarts.init = function (dom, theme, opts) {\n        if (__DEV__) {\n            // Check version\n            if ((zrender.version.replace('.', '') - 0) < (echarts.dependencies.zrender.replace('.', '') - 0)) {\n                throw new Error(\n                    'ZRender ' + zrender.version\n                    + ' is too old for ECharts ' + echarts.version\n                    + '. Current version need ZRender '\n                    + echarts.dependencies.zrender + '+'\n                );\n            }\n\n            if (!dom) {\n                throw new Error('Initialize failed: invalid dom.');\n            }\n        }\n\n        var existInstance = echarts.getInstanceByDom(dom);\n        if (existInstance) {\n            if (__DEV__) {\n                console.warn('There is a chart instance already initialized on the dom.');\n            }\n            return existInstance;\n        }\n\n        if (__DEV__) {\n            if (zrUtil.isDom(dom)\n                && dom.nodeName.toUpperCase() !== 'CANVAS'\n                && (\n                    (!dom.clientWidth && (!opts || opts.width == null))\n                    || (!dom.clientHeight && (!opts || opts.height == null))\n                )\n            ) {\n                console.warn('Can\\'t get dom width or height');\n            }\n        }\n\n        var chart = new ECharts(dom, theme, opts);\n        chart.id = 'ec_' + idBase++;\n        instances[chart.id] = chart;\n\n        if (dom.setAttribute) {\n            dom.setAttribute(DOM_ATTRIBUTE_KEY, chart.id);\n        }\n        else {\n            dom[DOM_ATTRIBUTE_KEY] = chart.id;\n        }\n\n        enableConnect(chart);\n\n        return chart;\n    };\n\n    /**\n     * @return {string|Array.<module:echarts~ECharts>} groupId\n     */\n    echarts.connect = function (groupId) {\n        // Is array of charts\n        if (zrUtil.isArray(groupId)) {\n            var charts = groupId;\n            groupId = null;\n            // If any chart has group\n            zrUtil.each(charts, function (chart) {\n                if (chart.group != null) {\n                    groupId = chart.group;\n                }\n            });\n            groupId = groupId || ('g_' + groupIdBase++);\n            zrUtil.each(charts, function (chart) {\n                chart.group = groupId;\n            });\n        }\n        connectedGroups[groupId] = true;\n        return groupId;\n    };\n\n    /**\n     * @DEPRECATED\n     * @return {string} groupId\n     */\n    echarts.disConnect = function (groupId) {\n        connectedGroups[groupId] = false;\n    };\n\n    /**\n     * @return {string} groupId\n     */\n    echarts.disconnect = echarts.disConnect;\n\n    /**\n     * Dispose a chart instance\n     * @param  {module:echarts~ECharts|HTMLDomElement|string} chart\n     */\n    echarts.dispose = function (chart) {\n        if (typeof chart === 'string') {\n            chart = instances[chart];\n        }\n        else if (!(chart instanceof ECharts)){\n            // Try to treat as dom\n            chart = echarts.getInstanceByDom(chart);\n        }\n        if ((chart instanceof ECharts) && !chart.isDisposed()) {\n            chart.dispose();\n        }\n    };\n\n    /**\n     * @param  {HTMLDomElement} dom\n     * @return {echarts~ECharts}\n     */\n    echarts.getInstanceByDom = function (dom) {\n        var key;\n        if (dom.getAttribute) {\n            key = dom.getAttribute(DOM_ATTRIBUTE_KEY);\n        }\n        else {\n            key = dom[DOM_ATTRIBUTE_KEY];\n        }\n        return instances[key];\n    };\n\n    /**\n     * @param {string} key\n     * @return {echarts~ECharts}\n     */\n    echarts.getInstanceById = function (key) {\n        return instances[key];\n    };\n\n    /**\n     * Register theme\n     */\n    echarts.registerTheme = function (name, theme) {\n        themeStorage[name] = theme;\n    };\n\n    /**\n     * Register option preprocessor\n     * @param {Function} preprocessorFunc\n     */\n    echarts.registerPreprocessor = function (preprocessorFunc) {\n        optionPreprocessorFuncs.push(preprocessorFunc);\n    };\n\n    /**\n     * @param {number} [priority=1000]\n     * @param {Function} processorFunc\n     */\n    echarts.registerProcessor = function (priority, processorFunc) {\n        if (typeof priority === 'function') {\n            processorFunc = priority;\n            priority = PRIORITY_PROCESSOR_FILTER;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown processor priority');\n            }\n        }\n        dataProcessorFuncs.push({\n            prio: priority,\n            func: processorFunc\n        });\n    };\n\n    /**\n     * Register postUpdater\n     * @param {Function} postUpdateFunc\n     */\n    echarts.registerPostUpdate = function (postUpdateFunc) {\n        postUpdateFuncs.push(postUpdateFunc);\n    };\n\n    /**\n     * Usage:\n     * registerAction('someAction', 'someEvent', function () { ... });\n     * registerAction('someAction', function () { ... });\n     * registerAction(\n     *     {type: 'someAction', event: 'someEvent', update: 'updateView'},\n     *     function () { ... }\n     * );\n     *\n     * @param {(string|Object)} actionInfo\n     * @param {string} actionInfo.type\n     * @param {string} [actionInfo.event]\n     * @param {string} [actionInfo.update]\n     * @param {string} [eventName]\n     * @param {Function} action\n     */\n    echarts.registerAction = function (actionInfo, eventName, action) {\n        if (typeof eventName === 'function') {\n            action = eventName;\n            eventName = '';\n        }\n        var actionType = zrUtil.isObject(actionInfo)\n            ? actionInfo.type\n            : ([actionInfo, actionInfo = {\n                event: eventName\n            }][0]);\n\n        // Event name is all lowercase\n        actionInfo.event = (actionInfo.event || actionType).toLowerCase();\n        eventName = actionInfo.event;\n\n        // Validate action type and event name.\n        zrUtil.assert(ACTION_REG.test(actionType) && ACTION_REG.test(eventName));\n\n        if (!actions[actionType]) {\n            actions[actionType] = {action: action, actionInfo: actionInfo};\n        }\n        eventActionMap[eventName] = actionType;\n    };\n\n    /**\n     * @param {string} type\n     * @param {*} CoordinateSystem\n     */\n    echarts.registerCoordinateSystem = function (type, CoordinateSystem) {\n        CoordinateSystemManager.register(type, CoordinateSystem);\n    };\n\n    /**\n     * Get dimensions of specified coordinate system.\n     * @param {string} type\n     * @return {Array.<string|Object>}\n     */\n    echarts.getCoordinateSystemDimensions = function (type) {\n        var coordSysCreator = CoordinateSystemManager.get(type);\n        if (coordSysCreator) {\n            return coordSysCreator.getDimensionsInfo\n                    ? coordSysCreator.getDimensionsInfo()\n                    : coordSysCreator.dimensions.slice();\n        }\n    };\n\n    /**\n     * Layout is a special stage of visual encoding\n     * Most visual encoding like color are common for different chart\n     * But each chart has it's own layout algorithm\n     *\n     * @param {number} [priority=1000]\n     * @param {Function} layoutFunc\n     */\n    echarts.registerLayout = function (priority, layoutFunc) {\n        if (typeof priority === 'function') {\n            layoutFunc = priority;\n            priority = PRIORITY_VISUAL_LAYOUT;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown layout priority');\n            }\n        }\n        visualFuncs.push({\n            prio: priority,\n            func: layoutFunc,\n            isLayout: true\n        });\n    };\n\n    /**\n     * @param {number} [priority=3000]\n     * @param {Function} visualFunc\n     */\n    echarts.registerVisual = function (priority, visualFunc) {\n        if (typeof priority === 'function') {\n            visualFunc = priority;\n            priority = PRIORITY_VISUAL_CHART;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown visual priority');\n            }\n        }\n        visualFuncs.push({\n            prio: priority,\n            func: visualFunc\n        });\n    };\n\n    /**\n     * @param {string} name\n     */\n    echarts.registerLoading = function (name, loadingFx) {\n        loadingEffects[name] = loadingFx;\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendComponentModel = function (opts/*, superClass*/) {\n        // var Clazz = ComponentModel;\n        // if (superClass) {\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n        // }\n        return ComponentModel.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendComponentView = function (opts/*, superClass*/) {\n        // var Clazz = ComponentView;\n        // if (superClass) {\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentView.getClass(classType.main, classType.sub, true);\n        // }\n        return ComponentView.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendSeriesModel = function (opts/*, superClass*/) {\n        // var Clazz = SeriesModel;\n        // if (superClass) {\n        //     superClass = 'series.' + superClass.replace('series.', '');\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n        // }\n        return SeriesModel.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendChartView = function (opts/*, superClass*/) {\n        // var Clazz = ChartView;\n        // if (superClass) {\n        //     superClass = superClass.replace('series.', '');\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ChartView.getClass(classType.main, true);\n        // }\n        return ChartView.extend(opts);\n    };\n\n    /**\n     * ZRender need a canvas context to do measureText.\n     * But in node environment canvas may be created by node-canvas.\n     * So we need to specify how to create a canvas instead of using document.createElement('canvas')\n     *\n     * Be careful of using it in the browser.\n     *\n     * @param {Function} creator\n     * @example\n     *     var Canvas = require('canvas');\n     *     var echarts = require('echarts');\n     *     echarts.setCanvasCreator(function () {\n     *         // Small size is enough.\n     *         return new Canvas(32, 32);\n     *     });\n     */\n    echarts.setCanvasCreator = function (creator) {\n        zrUtil.createCanvas = creator;\n    };\n\n    echarts.registerVisual(PRIORITY_VISUAL_GLOBAL, require('./visual/seriesColor'));\n    echarts.registerPreprocessor(require('./preprocessor/backwardCompat'));\n    echarts.registerLoading('default', require('./loading/default'));\n\n    // Default action\n    echarts.registerAction({\n        type: 'highlight',\n        event: 'highlight',\n        update: 'highlight'\n    }, zrUtil.noop);\n    echarts.registerAction({\n        type: 'downplay',\n        event: 'downplay',\n        update: 'downplay'\n    }, zrUtil.noop);\n\n\n    // --------\n    // Exports\n    // --------\n    echarts.zrender = zrender;\n\n    echarts.List = require('./data/List');\n    echarts.Model = require('./model/Model');\n\n    echarts.Axis = require('./coord/Axis');\n\n    echarts.graphic = require('./util/graphic');\n    echarts.number = require('./util/number');\n    echarts.format = require('./util/format');\n    echarts.throttle = throttle.throttle;\n    echarts.matrix = require('zrender/lib/core/matrix');\n    echarts.vector = require('zrender/lib/core/vector');\n    echarts.color = require('zrender/lib/tool/color');\n\n    echarts.util = {};\n    each([\n            'map', 'each', 'filter', 'indexOf', 'inherits', 'reduce', 'filter',\n            'bind', 'curry', 'isArray', 'isString', 'isObject', 'isFunction',\n            'extend', 'defaults', 'clone', 'merge'\n        ],\n        function (name) {\n            echarts.util[name] = zrUtil[name];\n        }\n    );\n\n    echarts.helper = require('./helper');\n\n\n    // PRIORITY\n    echarts.PRIORITY = {\n        PROCESSOR: {\n            FILTER: PRIORITY_PROCESSOR_FILTER,\n            STATISTIC: PRIORITY_PROCESSOR_STATISTIC\n        },\n        VISUAL: {\n            LAYOUT: PRIORITY_VISUAL_LAYOUT,\n            GLOBAL: PRIORITY_VISUAL_GLOBAL,\n            CHART: PRIORITY_VISUAL_CHART,\n            COMPONENT: PRIORITY_VISUAL_COMPONENT,\n            BRUSH: PRIORITY_VISUAL_BRUSH\n        }\n    };\n\n    module.exports = echarts;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/echarts.js\n// module id = 455\n// module chunks = 0 1 2","\n\n    var formatUtil = require('./format');\n    var nubmerUtil = require('./number');\n    var Model = require('../model/Model');\n    var zrUtil = require('zrender/lib/core/util');\n    var each = zrUtil.each;\n    var isObject = zrUtil.isObject;\n\n    var modelUtil = {};\n\n    /**\n     * If value is not array, then translate it to array.\n     * @param  {*} value\n     * @return {Array} [value] or value\n     */\n    modelUtil.normalizeToArray = function (value) {\n        return value instanceof Array\n            ? value\n            : value == null\n            ? []\n            : [value];\n    };\n\n    /**\n     * Sync default option between normal and emphasis like `position` and `show`\n     * In case some one will write code like\n     *     label: {\n     *         normal: {\n     *             show: false,\n     *             position: 'outside',\n     *             textStyle: {\n     *                 fontSize: 18\n     *             }\n     *         },\n     *         emphasis: {\n     *             show: true\n     *         }\n     *     }\n     * @param {Object} opt\n     * @param {Array.<string>} subOpts\n     */\n     modelUtil.defaultEmphasis = function (opt, subOpts) {\n        if (opt) {\n            var emphasisOpt = opt.emphasis = opt.emphasis || {};\n            var normalOpt = opt.normal = opt.normal || {};\n\n            // Default emphasis option from normal\n            each(subOpts, function (subOptName) {\n                var val = zrUtil.retrieve(emphasisOpt[subOptName], normalOpt[subOptName]);\n                if (val != null) {\n                    emphasisOpt[subOptName] = val;\n                }\n            });\n        }\n    };\n\n    modelUtil.LABEL_OPTIONS = ['position', 'offset', 'show', 'textStyle', 'distance', 'formatter'];\n\n    /**\n     * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n     * This helper method retieves value from data.\n     * @param {string|number|Date|Array|Object} dataItem\n     * @return {number|string|Date|Array.<number|string|Date>}\n     */\n    modelUtil.getDataItemValue = function (dataItem) {\n        // Performance sensitive.\n        return dataItem && (dataItem.value == null ? dataItem : dataItem.value);\n    };\n\n    /**\n     * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n     * This helper method determine if dataItem has extra option besides value\n     * @param {string|number|Date|Array|Object} dataItem\n     */\n    modelUtil.isDataItemOption = function (dataItem) {\n        return isObject(dataItem)\n            && !(dataItem instanceof Array);\n            // // markLine data can be array\n            // && !(dataItem[0] && isObject(dataItem[0]) && !(dataItem[0] instanceof Array));\n    };\n\n    /**\n     * This helper method convert value in data.\n     * @param {string|number|Date} value\n     * @param {Object|string} [dimInfo] If string (like 'x'), dimType defaults 'number'.\n     */\n    modelUtil.converDataValue = function (value, dimInfo) {\n        // Performance sensitive.\n        var dimType = dimInfo && dimInfo.type;\n        if (dimType === 'ordinal') {\n            return value;\n        }\n\n        if (dimType === 'time'\n            // spead up when using timestamp\n            && typeof value !== 'number'\n            && value != null\n            && value !== '-'\n        ) {\n            value = +nubmerUtil.parseDate(value);\n        }\n\n        // dimType defaults 'number'.\n        // If dimType is not ordinal and value is null or undefined or NaN or '-',\n        // parse to NaN.\n        return (value == null || value === '')\n            ? NaN : +value; // If string (like '-'), using '+' parse to NaN\n    };\n\n    /**\n     * Create a model proxy to be used in tooltip for edge data, markLine data, markPoint data.\n     * @param {module:echarts/data/List} data\n     * @param {Object} opt\n     * @param {string} [opt.seriesIndex]\n     * @param {Object} [opt.name]\n     * @param {Object} [opt.mainType]\n     * @param {Object} [opt.subType]\n     */\n    modelUtil.createDataFormatModel = function (data, opt) {\n        var model = new Model();\n        zrUtil.mixin(model, modelUtil.dataFormatMixin);\n        model.seriesIndex = opt.seriesIndex;\n        model.name = opt.name || '';\n        model.mainType = opt.mainType;\n        model.subType = opt.subType;\n\n        model.getData = function () {\n            return data;\n        };\n        return model;\n    };\n\n    // PENDING A little ugly\n    modelUtil.dataFormatMixin = {\n        /**\n         * Get params for formatter\n         * @param {number} dataIndex\n         * @param {string} [dataType]\n         * @return {Object}\n         */\n        getDataParams: function (dataIndex, dataType) {\n            var data = this.getData(dataType);\n            var rawValue = this.getRawValue(dataIndex, dataType);\n            var rawDataIndex = data.getRawIndex(dataIndex);\n            var name = data.getName(dataIndex, true);\n            var itemOpt = data.getRawDataItem(dataIndex);\n            var color = data.getItemVisual(dataIndex, 'color');\n\n            return {\n                componentType: this.mainType,\n                componentSubType: this.subType,\n                seriesType: this.mainType === 'series' ? this.subType : null,\n                seriesIndex: this.seriesIndex,\n                seriesId: this.id,\n                seriesName: this.name,\n                name: name,\n                dataIndex: rawDataIndex,\n                data: itemOpt,\n                dataType: dataType,\n                value: rawValue,\n                color: color,\n                marker: formatUtil.getTooltipMarker(color),\n\n                // Param name list for mapping `a`, `b`, `c`, `d`, `e`\n                $vars: ['seriesName', 'name', 'value']\n            };\n        },\n\n        /**\n         * Format label\n         * @param {number} dataIndex\n         * @param {string} [status='normal'] 'normal' or 'emphasis'\n         * @param {string} [dataType]\n         * @param {number} [dimIndex]\n         * @param {string} [labelProp='label']\n         * @return {string}\n         */\n        getFormattedLabel: function (dataIndex, status, dataType, dimIndex, labelProp) {\n            status = status || 'normal';\n            var data = this.getData(dataType);\n            var itemModel = data.getItemModel(dataIndex);\n\n            var params = this.getDataParams(dataIndex, dataType);\n            if (dimIndex != null && (params.value instanceof Array)) {\n                params.value = params.value[dimIndex];\n            }\n\n            var formatter = itemModel.get([labelProp || 'label', status, 'formatter']);\n\n            if (typeof formatter === 'function') {\n                params.status = status;\n                return formatter(params);\n            }\n            else if (typeof formatter === 'string') {\n                return formatUtil.formatTpl(formatter, params);\n            }\n        },\n\n        /**\n         * Get raw value in option\n         * @param {number} idx\n         * @param {string} [dataType]\n         * @return {Object}\n         */\n        getRawValue: function (idx, dataType) {\n            var data = this.getData(dataType);\n            var dataItem = data.getRawDataItem(idx);\n            if (dataItem != null) {\n                return (isObject(dataItem) && !(dataItem instanceof Array))\n                    ? dataItem.value : dataItem;\n            }\n        },\n\n        /**\n         * Should be implemented.\n         * @param {number} dataIndex\n         * @param {boolean} [multipleSeries=false]\n         * @param {number} [dataType]\n         * @return {string} tooltip string\n         */\n        formatTooltip: zrUtil.noop\n    };\n\n    /**\n     * Mapping to exists for merge.\n     *\n     * @public\n     * @param {Array.<Object>|Array.<module:echarts/model/Component>} exists\n     * @param {Object|Array.<Object>} newCptOptions\n     * @return {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n     *                          index of which is the same as exists.\n     */\n    modelUtil.mappingToExists = function (exists, newCptOptions) {\n        // Mapping by the order by original option (but not order of\n        // new option) in merge mode. Because we should ensure\n        // some specified index (like xAxisIndex) is consistent with\n        // original option, which is easy to understand, espatially in\n        // media query. And in most case, merge option is used to\n        // update partial option but not be expected to change order.\n        newCptOptions = (newCptOptions || []).slice();\n\n        var result = zrUtil.map(exists || [], function (obj, index) {\n            return {exist: obj};\n        });\n\n        // Mapping by id or name if specified.\n        each(newCptOptions, function (cptOption, index) {\n            if (!isObject(cptOption)) {\n                return;\n            }\n\n            // id has highest priority.\n            for (var i = 0; i < result.length; i++) {\n                if (!result[i].option // Consider name: two map to one.\n                    && cptOption.id != null\n                    && result[i].exist.id === cptOption.id + ''\n                ) {\n                    result[i].option = cptOption;\n                    newCptOptions[index] = null;\n                    return;\n                }\n            }\n\n            for (var i = 0; i < result.length; i++) {\n                var exist = result[i].exist;\n                if (!result[i].option // Consider name: two map to one.\n                    // Can not match when both ids exist but different.\n                    && (exist.id == null || cptOption.id == null)\n                    && cptOption.name != null\n                    && !modelUtil.isIdInner(cptOption)\n                    && !modelUtil.isIdInner(exist)\n                    && exist.name === cptOption.name + ''\n                ) {\n                    result[i].option = cptOption;\n                    newCptOptions[index] = null;\n                    return;\n                }\n            }\n        });\n\n        // Otherwise mapping by index.\n        each(newCptOptions, function (cptOption, index) {\n            if (!isObject(cptOption)) {\n                return;\n            }\n\n            var i = 0;\n            for (; i < result.length; i++) {\n                var exist = result[i].exist;\n                if (!result[i].option\n                    // Existing model that already has id should be able to\n                    // mapped to (because after mapping performed model may\n                    // be assigned with a id, whish should not affect next\n                    // mapping), except those has inner id.\n                    && !modelUtil.isIdInner(exist)\n                    // Caution:\n                    // Do not overwrite id. But name can be overwritten,\n                    // because axis use name as 'show label text'.\n                    // 'exist' always has id and name and we dont\n                    // need to check it.\n                    && cptOption.id == null\n                ) {\n                    result[i].option = cptOption;\n                    break;\n                }\n            }\n\n            if (i >= result.length) {\n                result.push({option: cptOption});\n            }\n        });\n\n        return result;\n    };\n\n    /**\n     * Make id and name for mapping result (result of mappingToExists)\n     * into `keyInfo` field.\n     *\n     * @public\n     * @param {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n     *                          which order is the same as exists.\n     * @return {Array.<Object>} The input.\n     */\n    modelUtil.makeIdAndName = function (mapResult) {\n        // We use this id to hash component models and view instances\n        // in echarts. id can be specified by user, or auto generated.\n\n        // The id generation rule ensures new view instance are able\n        // to mapped to old instance when setOption are called in\n        // no-merge mode. So we generate model id by name and plus\n        // type in view id.\n\n        // name can be duplicated among components, which is convenient\n        // to specify multi components (like series) by one name.\n\n        // Ensure that each id is distinct.\n        var idMap = zrUtil.createHashMap();\n\n        each(mapResult, function (item, index) {\n            var existCpt = item.exist;\n            existCpt && idMap.set(existCpt.id, item);\n        });\n\n        each(mapResult, function (item, index) {\n            var opt = item.option;\n\n            zrUtil.assert(\n                !opt || opt.id == null || !idMap.get(opt.id) || idMap.get(opt.id) === item,\n                'id duplicates: ' + (opt && opt.id)\n            );\n\n            opt && opt.id != null && idMap.set(opt.id, item);\n            !item.keyInfo && (item.keyInfo = {});\n        });\n\n        // Make name and id.\n        each(mapResult, function (item, index) {\n            var existCpt = item.exist;\n            var opt = item.option;\n            var keyInfo = item.keyInfo;\n\n            if (!isObject(opt)) {\n                return;\n            }\n\n            // name can be overwitten. Consider case: axis.name = '20km'.\n            // But id generated by name will not be changed, which affect\n            // only in that case: setOption with 'not merge mode' and view\n            // instance will be recreated, which can be accepted.\n            keyInfo.name = opt.name != null\n                ? opt.name + ''\n                : existCpt\n                ? existCpt.name\n                : '\\0-'; // name may be displayed on screen, so use '-'.\n\n            if (existCpt) {\n                keyInfo.id = existCpt.id;\n            }\n            else if (opt.id != null) {\n                keyInfo.id = opt.id + '';\n            }\n            else {\n                // Consider this situatoin:\n                //  optionA: [{name: 'a'}, {name: 'a'}, {..}]\n                //  optionB [{..}, {name: 'a'}, {name: 'a'}]\n                // Series with the same name between optionA and optionB\n                // should be mapped.\n                var idNum = 0;\n                do {\n                    keyInfo.id = '\\0' + keyInfo.name + '\\0' + idNum++;\n                }\n                while (idMap.get(keyInfo.id));\n            }\n\n            idMap.set(keyInfo.id, item);\n        });\n    };\n\n    /**\n     * @public\n     * @param {Object} cptOption\n     * @return {boolean}\n     */\n    modelUtil.isIdInner = function (cptOption) {\n        return isObject(cptOption)\n            && cptOption.id\n            && (cptOption.id + '').indexOf('\\0_ec_\\0') === 0;\n    };\n\n    /**\n     * A helper for removing duplicate items between batchA and batchB,\n     * and in themselves, and categorize by series.\n     *\n     * @param {Array.<Object>} batchA Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n     * @param {Array.<Object>} batchB Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n     * @return {Array.<Array.<Object>, Array.<Object>>} result: [resultBatchA, resultBatchB]\n     */\n    modelUtil.compressBatches = function (batchA, batchB) {\n        var mapA = {};\n        var mapB = {};\n\n        makeMap(batchA || [], mapA);\n        makeMap(batchB || [], mapB, mapA);\n\n        return [mapToArray(mapA), mapToArray(mapB)];\n\n        function makeMap(sourceBatch, map, otherMap) {\n            for (var i = 0, len = sourceBatch.length; i < len; i++) {\n                var seriesId = sourceBatch[i].seriesId;\n                var dataIndices = modelUtil.normalizeToArray(sourceBatch[i].dataIndex);\n                var otherDataIndices = otherMap && otherMap[seriesId];\n\n                for (var j = 0, lenj = dataIndices.length; j < lenj; j++) {\n                    var dataIndex = dataIndices[j];\n\n                    if (otherDataIndices && otherDataIndices[dataIndex]) {\n                        otherDataIndices[dataIndex] = null;\n                    }\n                    else {\n                        (map[seriesId] || (map[seriesId] = {}))[dataIndex] = 1;\n                    }\n                }\n            }\n        }\n\n        function mapToArray(map, isData) {\n            var result = [];\n            for (var i in map) {\n                if (map.hasOwnProperty(i) && map[i] != null) {\n                    if (isData) {\n                        result.push(+i);\n                    }\n                    else {\n                        var dataIndices = mapToArray(map[i], true);\n                        dataIndices.length && result.push({seriesId: i, dataIndex: dataIndices});\n                    }\n                }\n            }\n            return result;\n        }\n    };\n\n    /**\n     * @param {module:echarts/data/List} data\n     * @param {Object} payload Contains dataIndex (means rawIndex) / dataIndexInside / name\n     *                         each of which can be Array or primary type.\n     * @return {number|Array.<number>} dataIndex If not found, return undefined/null.\n     */\n    modelUtil.queryDataIndex = function (data, payload) {\n        if (payload.dataIndexInside != null) {\n            return payload.dataIndexInside;\n        }\n        else if (payload.dataIndex != null) {\n            return zrUtil.isArray(payload.dataIndex)\n                ? zrUtil.map(payload.dataIndex, function (value) {\n                    return data.indexOfRawIndex(value);\n                })\n                : data.indexOfRawIndex(payload.dataIndex);\n        }\n        else if (payload.name != null) {\n            return zrUtil.isArray(payload.name)\n                ? zrUtil.map(payload.name, function (value) {\n                    return data.indexOfName(value);\n                })\n                : data.indexOfName(payload.name);\n        }\n    };\n\n    /**\n     * Enable property storage to any host object.\n     * Notice: Serialization is not supported.\n     *\n     * For example:\n     * var get = modelUitl.makeGetter();\n     *\n     * function some(hostObj) {\n     *      get(hostObj)._someProperty = 1212;\n     *      ...\n     * }\n     *\n     * @return {Function}\n     */\n    modelUtil.makeGetter = (function () {\n        var index = 0;\n        return function () {\n            var key = '\\0__ec_prop_getter_' + index++;\n            return function (hostObj) {\n                return hostObj[key] || (hostObj[key] = {});\n            };\n        };\n    })();\n\n    /**\n     * @param {module:echarts/model/Global} ecModel\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex, seriesId, seriesName,\n     *            geoIndex, geoId, geoName,\n     *            bmapIndex, bmapId, bmapName,\n     *            xAxisIndex, xAxisId, xAxisName,\n     *            yAxisIndex, yAxisId, yAxisName,\n     *            gridIndex, gridId, gridName,\n     *            ... (can be extended)\n     *        }\n     *        Each properties can be number|string|Array.<number>|Array.<string>\n     *        For example, a finder could be\n     *        {\n     *            seriesIndex: 3,\n     *            geoId: ['aa', 'cc'],\n     *            gridName: ['xx', 'rr']\n     *        }\n     *        xxxIndex can be set as 'all' (means all xxx) or 'none' (means not specify)\n     *        If nothing or null/undefined specified, return nothing.\n     * @param {Object} [opt]\n     * @param {string} [opt.defaultMainType]\n     * @param {Array.<string>} [opt.includeMainTypes]\n     * @return {Object} result like:\n     *        {\n     *            seriesModels: [seriesModel1, seriesModel2],\n     *            seriesModel: seriesModel1, // The first model\n     *            geoModels: [geoModel1, geoModel2],\n     *            geoModel: geoModel1, // The first model\n     *            ...\n     *        }\n     */\n    modelUtil.parseFinder = function (ecModel, finder, opt) {\n        if (zrUtil.isString(finder)) {\n            var obj = {};\n            obj[finder + 'Index'] = 0;\n            finder = obj;\n        }\n\n        var defaultMainType = opt && opt.defaultMainType;\n        if (defaultMainType\n            && !has(finder, defaultMainType + 'Index')\n            && !has(finder, defaultMainType + 'Id')\n            && !has(finder, defaultMainType + 'Name')\n        ) {\n            finder[defaultMainType + 'Index'] = 0;\n        }\n\n        var result = {};\n\n        each(finder, function (value, key) {\n            var value = finder[key];\n\n            // Exclude 'dataIndex' and other illgal keys.\n            if (key === 'dataIndex' || key === 'dataIndexInside') {\n                result[key] = value;\n                return;\n            }\n\n            var parsedKey = key.match(/^(\\w+)(Index|Id|Name)$/) || [];\n            var mainType = parsedKey[1];\n            var queryType = (parsedKey[2] || '').toLowerCase();\n\n            if (!mainType\n                || !queryType\n                || value == null\n                || (queryType === 'index' && value === 'none')\n                || (opt && opt.includeMainTypes && zrUtil.indexOf(opt.includeMainTypes, mainType) < 0)\n            ) {\n                return;\n            }\n\n            var queryParam = {mainType: mainType};\n            if (queryType !== 'index' || value !== 'all') {\n                queryParam[queryType] = value;\n            }\n\n            var models = ecModel.queryComponents(queryParam);\n            result[mainType + 'Models'] = models;\n            result[mainType + 'Model'] = models[0];\n        });\n\n        return result;\n    };\n\n    /**\n     * @see {module:echarts/data/helper/completeDimensions}\n     * @param {module:echarts/data/List} data\n     * @param {string|number} dataDim\n     * @return {string}\n     */\n    modelUtil.dataDimToCoordDim = function (data, dataDim) {\n        var dimensions = data.dimensions;\n        dataDim = data.getDimension(dataDim);\n        for (var i = 0; i < dimensions.length; i++) {\n            var dimItem = data.getDimensionInfo(dimensions[i]);\n            if (dimItem.name === dataDim) {\n                return dimItem.coordDim;\n            }\n        }\n    };\n\n    /**\n     * @see {module:echarts/data/helper/completeDimensions}\n     * @param {module:echarts/data/List} data\n     * @param {string} coordDim\n     * @return {Array.<string>} data dimensions on the coordDim.\n     */\n    modelUtil.coordDimToDataDim = function (data, coordDim) {\n        var dataDim = [];\n        each(data.dimensions, function (dimName) {\n            var dimItem = data.getDimensionInfo(dimName);\n            if (dimItem.coordDim === coordDim) {\n                dataDim[dimItem.coordDimIndex] = dimItem.name;\n            }\n        });\n        return dataDim;\n    };\n\n    /**\n     * @see {module:echarts/data/helper/completeDimensions}\n     * @param {module:echarts/data/List} data\n     * @param {string} otherDim Can be `otherDims`\n     *                        like 'label' or 'tooltip'.\n     * @return {Array.<string>} data dimensions on the otherDim.\n     */\n    modelUtil.otherDimToDataDim = function (data, otherDim) {\n        var dataDim = [];\n        each(data.dimensions, function (dimName) {\n            var dimItem = data.getDimensionInfo(dimName);\n            var otherDims = dimItem.otherDims;\n            var dimIndex = otherDims[otherDim];\n            if (dimIndex != null && dimIndex !== false) {\n                dataDim[dimIndex] = dimItem.name;\n            }\n        });\n        return dataDim;\n    };\n\n    function has(obj, prop) {\n        return obj && obj.hasOwnProperty(prop);\n    }\n\n    module.exports = modelUtil;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/model.js\n// module id = 456\n// module chunks = 0 1 2","/**\n * 数值处理模块\n * @module echarts/util/number\n */\n\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var number = {};\n\n    var RADIAN_EPSILON = 1e-4;\n\n    function _trim(str) {\n        return str.replace(/^\\s+/, '').replace(/\\s+$/, '');\n    }\n\n    /**\n     * Linear mapping a value from domain to range\n     * @memberOf module:echarts/util/number\n     * @param  {(number|Array.<number>)} val\n     * @param  {Array.<number>} domain Domain extent domain[0] can be bigger than domain[1]\n     * @param  {Array.<number>} range  Range extent range[0] can be bigger than range[1]\n     * @param  {boolean} clamp\n     * @return {(number|Array.<number>}\n     */\n    number.linearMap = function (val, domain, range, clamp) {\n        var subDomain = domain[1] - domain[0];\n        var subRange = range[1] - range[0];\n\n        if (subDomain === 0) {\n            return subRange === 0\n                ? range[0]\n                : (range[0] + range[1]) / 2;\n        }\n\n        // Avoid accuracy problem in edge, such as\n        // 146.39 - 62.83 === 83.55999999999999.\n        // See echarts/test/ut/spec/util/number.js#linearMap#accuracyError\n        // It is a little verbose for efficiency considering this method\n        // is a hotspot.\n        if (clamp) {\n            if (subDomain > 0) {\n                if (val <= domain[0]) {\n                    return range[0];\n                }\n                else if (val >= domain[1]) {\n                    return range[1];\n                }\n            }\n            else {\n                if (val >= domain[0]) {\n                    return range[0];\n                }\n                else if (val <= domain[1]) {\n                    return range[1];\n                }\n            }\n        }\n        else {\n            if (val === domain[0]) {\n                return range[0];\n            }\n            if (val === domain[1]) {\n                return range[1];\n            }\n        }\n\n        return (val - domain[0]) / subDomain * subRange + range[0];\n    };\n\n    /**\n     * Convert a percent string to absolute number.\n     * Returns NaN if percent is not a valid string or number\n     * @memberOf module:echarts/util/number\n     * @param {string|number} percent\n     * @param {number} all\n     * @return {number}\n     */\n    number.parsePercent = function(percent, all) {\n        switch (percent) {\n            case 'center':\n            case 'middle':\n                percent = '50%';\n                break;\n            case 'left':\n            case 'top':\n                percent = '0%';\n                break;\n            case 'right':\n            case 'bottom':\n                percent = '100%';\n                break;\n        }\n        if (typeof percent === 'string') {\n            if (_trim(percent).match(/%$/)) {\n                return parseFloat(percent) / 100 * all;\n            }\n\n            return parseFloat(percent);\n        }\n\n        return percent == null ? NaN : +percent;\n    };\n\n    /**\n     * (1) Fix rounding error of float numbers.\n     * (2) Support return string to avoid scientific notation like '3.5e-7'.\n     *\n     * @param {number} x\n     * @param {number} [precision]\n     * @param {boolean} [returnStr]\n     * @return {number|string}\n     */\n    number.round = function (x, precision, returnStr) {\n        if (precision == null) {\n            precision = 10;\n        }\n        // Avoid range error\n        precision = Math.min(Math.max(0, precision), 20);\n        x = (+x).toFixed(precision);\n        return returnStr ? x : +x;\n    };\n\n    number.asc = function (arr) {\n        arr.sort(function (a, b) {\n            return a - b;\n        });\n        return arr;\n    };\n\n    /**\n     * Get precision\n     * @param {number} val\n     */\n    number.getPrecision = function (val) {\n        val = +val;\n        if (isNaN(val)) {\n            return 0;\n        }\n        // It is much faster than methods converting number to string as follows\n        //      var tmp = val.toString();\n        //      return tmp.length - 1 - tmp.indexOf('.');\n        // especially when precision is low\n        var e = 1;\n        var count = 0;\n        while (Math.round(val * e) / e !== val) {\n            e *= 10;\n            count++;\n        }\n        return count;\n    };\n\n    /**\n     * @param {string|number} val\n     * @return {number}\n     */\n    number.getPrecisionSafe = function (val) {\n        var str = val.toString();\n\n        // Consider scientific notation: '3.4e-12' '3.4e+12'\n        var eIndex = str.indexOf('e');\n        if (eIndex > 0) {\n            var precision = +str.slice(eIndex + 1);\n            return precision < 0 ? -precision : 0;\n        }\n        else {\n            var dotIndex = str.indexOf('.');\n            return dotIndex < 0 ? 0 : str.length - 1 - dotIndex;\n        }\n    };\n\n    /**\n     * Minimal dicernible data precisioin according to a single pixel.\n     *\n     * @param {Array.<number>} dataExtent\n     * @param {Array.<number>} pixelExtent\n     * @return {number} precision\n     */\n    number.getPixelPrecision = function (dataExtent, pixelExtent) {\n        var log = Math.log;\n        var LN10 = Math.LN10;\n        var dataQuantity = Math.floor(log(dataExtent[1] - dataExtent[0]) / LN10);\n        var sizeQuantity = Math.round(log(Math.abs(pixelExtent[1] - pixelExtent[0])) / LN10);\n        // toFixed() digits argument must be between 0 and 20.\n        var precision = Math.min(Math.max(-dataQuantity + sizeQuantity, 0), 20);\n        return !isFinite(precision) ? 20 : precision;\n    };\n\n    /**\n     * Get a data of given precision, assuring the sum of percentages\n     * in valueList is 1.\n     * The largest remainer method is used.\n     * https://en.wikipedia.org/wiki/Largest_remainder_method\n     *\n     * @param {Array.<number>} valueList a list of all data\n     * @param {number} idx index of the data to be processed in valueList\n     * @param {number} precision integer number showing digits of precision\n     * @return {number} percent ranging from 0 to 100\n     */\n    number.getPercentWithPrecision = function (valueList, idx, precision) {\n        if (!valueList[idx]) {\n            return 0;\n        }\n\n        var sum = zrUtil.reduce(valueList, function (acc, val) {\n            return acc + (isNaN(val) ? 0 : val);\n        }, 0);\n        if (sum === 0) {\n            return 0;\n        }\n\n        var digits = Math.pow(10, precision);\n        var votesPerQuota = zrUtil.map(valueList, function (val) {\n            return (isNaN(val) ? 0 : val) / sum * digits * 100;\n        });\n        var targetSeats = digits * 100;\n\n        var seats = zrUtil.map(votesPerQuota, function (votes) {\n            // Assign automatic seats.\n            return Math.floor(votes);\n        });\n        var currentSum = zrUtil.reduce(seats, function (acc, val) {\n            return acc + val;\n        }, 0);\n\n        var remainder = zrUtil.map(votesPerQuota, function (votes, idx) {\n            return votes - seats[idx];\n        });\n\n        // Has remainding votes.\n        while (currentSum < targetSeats) {\n            // Find next largest remainder.\n            var max = Number.NEGATIVE_INFINITY;\n            var maxId = null;\n            for (var i = 0, len = remainder.length; i < len; ++i) {\n                if (remainder[i] > max) {\n                    max = remainder[i];\n                    maxId = i;\n                }\n            }\n\n            // Add a vote to max remainder.\n            ++seats[maxId];\n            remainder[maxId] = 0;\n            ++currentSum;\n        }\n\n        return seats[idx] / digits;\n    };\n\n    // Number.MAX_SAFE_INTEGER, ie do not support.\n    number.MAX_SAFE_INTEGER = 9007199254740991;\n\n    /**\n     * To 0 - 2 * PI, considering negative radian.\n     * @param {number} radian\n     * @return {number}\n     */\n    number.remRadian = function (radian) {\n        var pi2 = Math.PI * 2;\n        return (radian % pi2 + pi2) % pi2;\n    };\n\n    /**\n     * @param {type} radian\n     * @return {boolean}\n     */\n    number.isRadianAroundZero = function (val) {\n        return val > -RADIAN_EPSILON && val < RADIAN_EPSILON;\n    };\n\n    var TIME_REG = /^(?:(\\d{4})(?:[-\\/](\\d{1,2})(?:[-\\/](\\d{1,2})(?:[T ](\\d{1,2})(?::(\\d\\d)(?::(\\d\\d)(?:[.,](\\d+))?)?)?(Z|[\\+\\-]\\d\\d:?\\d\\d)?)?)?)?)?$/; // jshint ignore:line\n\n    /**\n     * @return {number} in minutes\n     */\n    number.getTimezoneOffset = function () {\n        return (new Date()).getTimezoneOffset();\n    };\n\n    /**\n     * @param {string|Date|number} value These values can be accepted:\n     *   + An instance of Date, represent a time in its own time zone.\n     *   + Or string in a subset of ISO 8601, only including:\n     *     + only year, month, date: '2012-03', '2012-03-01', '2012-03-01 05', '2012-03-01 05:06',\n     *     + separated with T or space: '2012-03-01T12:22:33.123', '2012-03-01 12:22:33.123',\n     *     + time zone: '2012-03-01T12:22:33Z', '2012-03-01T12:22:33+8000', '2012-03-01T12:22:33-05:00',\n     *     all of which will be treated as local time if time zone is not specified\n     *     (see <https://momentjs.com/>).\n     *   + Or other string format, including (all of which will be treated as loacal time):\n     *     '2012', '2012-3-1', '2012/3/1', '2012/03/01',\n     *     '2009/6/12 2:00', '2009/6/12 2:05:08', '2009/6/12 2:05:08.123'\n     *   + a timestamp, which represent a time in UTC.\n     * @return {Date} date\n     */\n    number.parseDate = function (value) {\n        if (value instanceof Date) {\n            return value;\n        }\n        else if (typeof value === 'string') {\n            // Different browsers parse date in different way, so we parse it manually.\n            // Some other issues:\n            // new Date('1970-01-01') is UTC,\n            // new Date('1970/01/01') and new Date('1970-1-01') is local.\n            // See issue #3623\n            var match = TIME_REG.exec(value);\n\n            if (!match) {\n                // return Invalid Date.\n                return new Date(NaN);\n            }\n\n            var timezoneOffset = number.getTimezoneOffset();\n            var timeOffset = !match[8]\n                ? 0\n                : match[8].toUpperCase() === 'Z'\n                ? timezoneOffset\n                : +match[8].slice(0, 3) * 60 + timezoneOffset;\n\n            // match[n] can only be string or undefined.\n            // But take care of '12' + 1 => '121'.\n            return new Date(\n                +match[1],\n                +(match[2] || 1) - 1,\n                +match[3] || 1,\n                +match[4] || 0,\n                +(match[5] || 0) - timeOffset,\n                +match[6] || 0,\n                +match[7] || 0\n            );\n        }\n        else if (value == null) {\n            return new Date(NaN);\n        }\n\n        return new Date(Math.round(value));\n    };\n\n    /**\n     * Quantity of a number. e.g. 0.1, 1, 10, 100\n     *\n     * @param  {number} val\n     * @return {number}\n     */\n    number.quantity = function (val) {\n        return Math.pow(10, quantityExponent(val));\n    };\n\n    function quantityExponent(val) {\n        return Math.floor(Math.log(val) / Math.LN10);\n    }\n\n    /**\n     * find a “nice” number approximately equal to x. Round the number if round = true,\n     * take ceiling if round = false. The primary observation is that the “nicest”\n     * numbers in decimal are 1, 2, and 5, and all power-of-ten multiples of these numbers.\n     *\n     * See \"Nice Numbers for Graph Labels\" of Graphic Gems.\n     *\n     * @param  {number} val Non-negative value.\n     * @param  {boolean} round\n     * @return {number}\n     */\n    number.nice = function (val, round) {\n        var exponent = quantityExponent(val);\n        var exp10 = Math.pow(10, exponent);\n        var f = val / exp10; // 1 <= f < 10\n        var nf;\n        if (round) {\n            if (f < 1.5) { nf = 1; }\n            else if (f < 2.5) { nf = 2; }\n            else if (f < 4) { nf = 3; }\n            else if (f < 7) { nf = 5; }\n            else { nf = 10; }\n        }\n        else {\n            if (f < 1) { nf = 1; }\n            else if (f < 2) { nf = 2; }\n            else if (f < 3) { nf = 3; }\n            else if (f < 5) { nf = 5; }\n            else { nf = 10; }\n        }\n        val = nf * exp10;\n\n        // Fix 3 * 0.1 === 0.30000000000000004 issue (see IEEE 754).\n        // 20 is the uppper bound of toFixed.\n        return exponent >= -20 ? +val.toFixed(exponent < 0 ? -exponent : 0) : val;\n    };\n\n    /**\n     * Order intervals asc, and split them when overlap.\n     * expect(numberUtil.reformIntervals([\n     *     {interval: [18, 62], close: [1, 1]},\n     *     {interval: [-Infinity, -70], close: [0, 0]},\n     *     {interval: [-70, -26], close: [1, 1]},\n     *     {interval: [-26, 18], close: [1, 1]},\n     *     {interval: [62, 150], close: [1, 1]},\n     *     {interval: [106, 150], close: [1, 1]},\n     *     {interval: [150, Infinity], close: [0, 0]}\n     * ])).toEqual([\n     *     {interval: [-Infinity, -70], close: [0, 0]},\n     *     {interval: [-70, -26], close: [1, 1]},\n     *     {interval: [-26, 18], close: [0, 1]},\n     *     {interval: [18, 62], close: [0, 1]},\n     *     {interval: [62, 150], close: [0, 1]},\n     *     {interval: [150, Infinity], close: [0, 0]}\n     * ]);\n     * @param {Array.<Object>} list, where `close` mean open or close\n     *        of the interval, and Infinity can be used.\n     * @return {Array.<Object>} The origin list, which has been reformed.\n     */\n    number.reformIntervals = function (list) {\n        list.sort(function (a, b) {\n            return littleThan(a, b, 0) ? -1 : 1;\n        });\n\n        var curr = -Infinity;\n        var currClose = 1;\n        for (var i = 0; i < list.length;) {\n            var interval = list[i].interval;\n            var close = list[i].close;\n\n            for (var lg = 0; lg < 2; lg++) {\n                if (interval[lg] <= curr) {\n                    interval[lg] = curr;\n                    close[lg] = !lg ? 1 - currClose : 1;\n                }\n                curr = interval[lg];\n                currClose = close[lg];\n            }\n\n            if (interval[0] === interval[1] && close[0] * close[1] !== 1) {\n                list.splice(i, 1);\n            }\n            else {\n                i++;\n            }\n        }\n\n        return list;\n\n        function littleThan(a, b, lg) {\n            return a.interval[lg] < b.interval[lg]\n                || (\n                    a.interval[lg] === b.interval[lg]\n                    && (\n                        (a.close[lg] - b.close[lg] === (!lg ? 1 : -1))\n                        || (!lg && littleThan(a, b, 1))\n                    )\n                );\n        }\n    };\n\n    /**\n     * parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n     * ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n     * subtraction forces infinities to NaN\n     *\n     * @param {*} v\n     * @return {boolean}\n     */\n    number.isNumeric = function (v) {\n        return v - parseFloat(v) >= 0;\n    };\n\n    module.exports = number;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/number.js\n// module id = 457\n// module chunks = 0 1 2","\n    var ArrayCtor = typeof Float32Array === 'undefined'\n        ? Array\n        : Float32Array;\n\n    /**\n     * @typedef {Float32Array|Array.<number>} Vector2\n     */\n    /**\n     * 二维向量类\n     * @exports zrender/tool/vector\n     */\n    var vector = {\n        /**\n         * 创建一个向量\n         * @param {number} [x=0]\n         * @param {number} [y=0]\n         * @return {Vector2}\n         */\n        create: function (x, y) {\n            var out = new ArrayCtor(2);\n            if (x == null) {\n                x = 0;\n            }\n            if (y == null) {\n                y = 0;\n            }\n            out[0] = x;\n            out[1] = y;\n            return out;\n        },\n\n        /**\n         * 复制向量数据\n         * @param {Vector2} out\n         * @param {Vector2} v\n         * @return {Vector2}\n         */\n        copy: function (out, v) {\n            out[0] = v[0];\n            out[1] = v[1];\n            return out;\n        },\n\n        /**\n         * 克隆一个向量\n         * @param {Vector2} v\n         * @return {Vector2}\n         */\n        clone: function (v) {\n            var out = new ArrayCtor(2);\n            out[0] = v[0];\n            out[1] = v[1];\n            return out;\n        },\n\n        /**\n         * 设置向量的两个项\n         * @param {Vector2} out\n         * @param {number} a\n         * @param {number} b\n         * @return {Vector2} 结果\n         */\n        set: function (out, a, b) {\n            out[0] = a;\n            out[1] = b;\n            return out;\n        },\n\n        /**\n         * 向量相加\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        add: function (out, v1, v2) {\n            out[0] = v1[0] + v2[0];\n            out[1] = v1[1] + v2[1];\n            return out;\n        },\n\n        /**\n         * 向量缩放后相加\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @param {number} a\n         */\n        scaleAndAdd: function (out, v1, v2, a) {\n            out[0] = v1[0] + v2[0] * a;\n            out[1] = v1[1] + v2[1] * a;\n            return out;\n        },\n\n        /**\n         * 向量相减\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        sub: function (out, v1, v2) {\n            out[0] = v1[0] - v2[0];\n            out[1] = v1[1] - v2[1];\n            return out;\n        },\n\n        /**\n         * 向量长度\n         * @param {Vector2} v\n         * @return {number}\n         */\n        len: function (v) {\n            return Math.sqrt(this.lenSquare(v));\n        },\n\n        /**\n         * 向量长度平方\n         * @param {Vector2} v\n         * @return {number}\n         */\n        lenSquare: function (v) {\n            return v[0] * v[0] + v[1] * v[1];\n        },\n\n        /**\n         * 向量乘法\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        mul: function (out, v1, v2) {\n            out[0] = v1[0] * v2[0];\n            out[1] = v1[1] * v2[1];\n            return out;\n        },\n\n        /**\n         * 向量除法\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        div: function (out, v1, v2) {\n            out[0] = v1[0] / v2[0];\n            out[1] = v1[1] / v2[1];\n            return out;\n        },\n\n        /**\n         * 向量点乘\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @return {number}\n         */\n        dot: function (v1, v2) {\n            return v1[0] * v2[0] + v1[1] * v2[1];\n        },\n\n        /**\n         * 向量缩放\n         * @param {Vector2} out\n         * @param {Vector2} v\n         * @param {number} s\n         */\n        scale: function (out, v, s) {\n            out[0] = v[0] * s;\n            out[1] = v[1] * s;\n            return out;\n        },\n\n        /**\n         * 向量归一化\n         * @param {Vector2} out\n         * @param {Vector2} v\n         */\n        normalize: function (out, v) {\n            var d = vector.len(v);\n            if (d === 0) {\n                out[0] = 0;\n                out[1] = 0;\n            }\n            else {\n                out[0] = v[0] / d;\n                out[1] = v[1] / d;\n            }\n            return out;\n        },\n\n        /**\n         * 计算向量间距离\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @return {number}\n         */\n        distance: function (v1, v2) {\n            return Math.sqrt(\n                (v1[0] - v2[0]) * (v1[0] - v2[0])\n                + (v1[1] - v2[1]) * (v1[1] - v2[1])\n            );\n        },\n\n        /**\n         * 向量距离平方\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @return {number}\n         */\n        distanceSquare: function (v1, v2) {\n            return (v1[0] - v2[0]) * (v1[0] - v2[0])\n                + (v1[1] - v2[1]) * (v1[1] - v2[1]);\n        },\n\n        /**\n         * 求负向量\n         * @param {Vector2} out\n         * @param {Vector2} v\n         */\n        negate: function (out, v) {\n            out[0] = -v[0];\n            out[1] = -v[1];\n            return out;\n        },\n\n        /**\n         * 插值两个点\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @param {number} t\n         */\n        lerp: function (out, v1, v2, t) {\n            out[0] = v1[0] + t * (v2[0] - v1[0]);\n            out[1] = v1[1] + t * (v2[1] - v1[1]);\n            return out;\n        },\n\n        /**\n         * 矩阵左乘向量\n         * @param {Vector2} out\n         * @param {Vector2} v\n         * @param {Vector2} m\n         */\n        applyTransform: function (out, v, m) {\n            var x = v[0];\n            var y = v[1];\n            out[0] = m[0] * x + m[2] * y + m[4];\n            out[1] = m[1] * x + m[3] * y + m[5];\n            return out;\n        },\n        /**\n         * 求两个向量最小值\n         * @param  {Vector2} out\n         * @param  {Vector2} v1\n         * @param  {Vector2} v2\n         */\n        min: function (out, v1, v2) {\n            out[0] = Math.min(v1[0], v2[0]);\n            out[1] = Math.min(v1[1], v2[1]);\n            return out;\n        },\n        /**\n         * 求两个向量最大值\n         * @param  {Vector2} out\n         * @param  {Vector2} v1\n         * @param  {Vector2} v2\n         */\n        max: function (out, v1, v2) {\n            out[0] = Math.max(v1[0], v2[0]);\n            out[1] = Math.max(v1[1], v2[1]);\n            return out;\n        }\n    };\n\n    vector.length = vector.len;\n    vector.lengthSquare = vector.lenSquare;\n    vector.dist = vector.distance;\n    vector.distSquare = vector.distanceSquare;\n\n    module.exports = vector;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/vector.js\n// module id = 458\n// module chunks = 0 1 2","/**\n * Path element\n * @module zrender/graphic/Path\n */\n\n\n\n    var Displayable = require('./Displayable');\n    var zrUtil = require('../core/util');\n    var PathProxy = require('../core/PathProxy');\n    var pathContain = require('../contain/path');\n\n    var Pattern = require('./Pattern');\n    var getCanvasPattern = Pattern.prototype.getCanvasPattern;\n\n    var abs = Math.abs;\n\n    var pathProxyForDraw = new PathProxy(true);\n    /**\n     * @alias module:zrender/graphic/Path\n     * @extends module:zrender/graphic/Displayable\n     * @constructor\n     * @param {Object} opts\n     */\n    function Path(opts) {\n        Displayable.call(this, opts);\n\n        /**\n         * @type {module:zrender/core/PathProxy}\n         * @readOnly\n         */\n        this.path = null;\n    }\n\n    Path.prototype = {\n\n        constructor: Path,\n\n        type: 'path',\n\n        __dirtyPath: true,\n\n        strokeContainThreshold: 5,\n\n        brush: function (ctx, prevEl) {\n            var style = this.style;\n            var path = this.path || pathProxyForDraw;\n            var hasStroke = style.hasStroke();\n            var hasFill = style.hasFill();\n            var fill = style.fill;\n            var stroke = style.stroke;\n            var hasFillGradient = hasFill && !!(fill.colorStops);\n            var hasStrokeGradient = hasStroke && !!(stroke.colorStops);\n            var hasFillPattern = hasFill && !!(fill.image);\n            var hasStrokePattern = hasStroke && !!(stroke.image);\n\n            style.bind(ctx, this, prevEl);\n            this.setTransform(ctx);\n\n            if (this.__dirty) {\n                var rect;\n                // Update gradient because bounding rect may changed\n                if (hasFillGradient) {\n                    rect = rect || this.getBoundingRect();\n                    this._fillGradient = style.getGradient(ctx, fill, rect);\n                }\n                if (hasStrokeGradient) {\n                    rect = rect || this.getBoundingRect();\n                    this._strokeGradient = style.getGradient(ctx, stroke, rect);\n                }\n            }\n            // Use the gradient or pattern\n            if (hasFillGradient) {\n                // PENDING If may have affect the state\n                ctx.fillStyle = this._fillGradient;\n            }\n            else if (hasFillPattern) {\n                ctx.fillStyle = getCanvasPattern.call(fill, ctx);\n            }\n            if (hasStrokeGradient) {\n                ctx.strokeStyle = this._strokeGradient;\n            }\n            else if (hasStrokePattern) {\n                ctx.strokeStyle = getCanvasPattern.call(stroke, ctx);\n            }\n\n            var lineDash = style.lineDash;\n            var lineDashOffset = style.lineDashOffset;\n\n            var ctxLineDash = !!ctx.setLineDash;\n\n            // Update path sx, sy\n            var scale = this.getGlobalScale();\n            path.setScale(scale[0], scale[1]);\n\n            // Proxy context\n            // Rebuild path in following 2 cases\n            // 1. Path is dirty\n            // 2. Path needs javascript implemented lineDash stroking.\n            //    In this case, lineDash information will not be saved in PathProxy\n            if (this.__dirtyPath\n                || (lineDash && !ctxLineDash && hasStroke)\n            ) {\n                path.beginPath(ctx);\n\n                // Setting line dash before build path\n                if (lineDash && !ctxLineDash) {\n                    path.setLineDash(lineDash);\n                    path.setLineDashOffset(lineDashOffset);\n                }\n\n                this.buildPath(path, this.shape, false);\n\n                // Clear path dirty flag\n                if (this.path) {\n                    this.__dirtyPath = false;\n                }\n            }\n            else {\n                // Replay path building\n                ctx.beginPath();\n                this.path.rebuildPath(ctx);\n            }\n\n            hasFill && path.fill(ctx);\n\n            if (lineDash && ctxLineDash) {\n                ctx.setLineDash(lineDash);\n                ctx.lineDashOffset = lineDashOffset;\n            }\n\n            hasStroke && path.stroke(ctx);\n\n            if (lineDash && ctxLineDash) {\n                // PENDING\n                // Remove lineDash\n                ctx.setLineDash([]);\n            }\n\n\n            this.restoreTransform(ctx);\n\n            // Draw rect text\n            if (style.text != null) {\n                this.drawRectText(ctx, this.getBoundingRect());\n            }\n        },\n\n        // When bundling path, some shape may decide if use moveTo to begin a new subpath or closePath\n        // Like in circle\n        buildPath: function (ctx, shapeCfg, inBundle) {},\n\n        createPathProxy: function () {\n            this.path = new PathProxy();\n        },\n\n        getBoundingRect: function () {\n            var rect = this._rect;\n            var style = this.style;\n            var needsUpdateRect = !rect;\n            if (needsUpdateRect) {\n                var path = this.path;\n                if (!path) {\n                    // Create path on demand.\n                    path = this.path = new PathProxy();\n                }\n                if (this.__dirtyPath) {\n                    path.beginPath();\n                    this.buildPath(path, this.shape, false);\n                }\n                rect = path.getBoundingRect();\n            }\n            this._rect = rect;\n\n            if (style.hasStroke()) {\n                // Needs update rect with stroke lineWidth when\n                // 1. Element changes scale or lineWidth\n                // 2. Shape is changed\n                var rectWithStroke = this._rectWithStroke || (this._rectWithStroke = rect.clone());\n                if (this.__dirty || needsUpdateRect) {\n                    rectWithStroke.copy(rect);\n                    // FIXME Must after updateTransform\n                    var w = style.lineWidth;\n                    // PENDING, Min line width is needed when line is horizontal or vertical\n                    var lineScale = style.strokeNoScale ? this.getLineScale() : 1;\n\n                    // Only add extra hover lineWidth when there are no fill\n                    if (!style.hasFill()) {\n                        w = Math.max(w, this.strokeContainThreshold || 4);\n                    }\n                    // Consider line width\n                    // Line scale can't be 0;\n                    if (lineScale > 1e-10) {\n                        rectWithStroke.width += w / lineScale;\n                        rectWithStroke.height += w / lineScale;\n                        rectWithStroke.x -= w / lineScale / 2;\n                        rectWithStroke.y -= w / lineScale / 2;\n                    }\n                }\n\n                // Return rect with stroke\n                return rectWithStroke;\n            }\n\n            return rect;\n        },\n\n        contain: function (x, y) {\n            var localPos = this.transformCoordToLocal(x, y);\n            var rect = this.getBoundingRect();\n            var style = this.style;\n            x = localPos[0];\n            y = localPos[1];\n\n            if (rect.contain(x, y)) {\n                var pathData = this.path.data;\n                if (style.hasStroke()) {\n                    var lineWidth = style.lineWidth;\n                    var lineScale = style.strokeNoScale ? this.getLineScale() : 1;\n                    // Line scale can't be 0;\n                    if (lineScale > 1e-10) {\n                        // Only add extra hover lineWidth when there are no fill\n                        if (!style.hasFill()) {\n                            lineWidth = Math.max(lineWidth, this.strokeContainThreshold);\n                        }\n                        if (pathContain.containStroke(\n                            pathData, lineWidth / lineScale, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                }\n                if (style.hasFill()) {\n                    return pathContain.contain(pathData, x, y);\n                }\n            }\n            return false;\n        },\n\n        /**\n         * @param  {boolean} dirtyPath\n         */\n        dirty: function (dirtyPath) {\n            if (dirtyPath == null) {\n                dirtyPath = true;\n            }\n            // Only mark dirty, not mark clean\n            if (dirtyPath) {\n                this.__dirtyPath = dirtyPath;\n                this._rect = null;\n            }\n\n            this.__dirty = true;\n\n            this.__zr && this.__zr.refresh();\n\n            // Used as a clipping path\n            if (this.__clipTarget) {\n                this.__clipTarget.dirty();\n            }\n        },\n\n        /**\n         * Alias for animate('shape')\n         * @param {boolean} loop\n         */\n        animateShape: function (loop) {\n            return this.animate('shape', loop);\n        },\n\n        // Overwrite attrKV\n        attrKV: function (key, value) {\n            // FIXME\n            if (key === 'shape') {\n                this.setShape(value);\n                this.__dirtyPath = true;\n                this._rect = null;\n            }\n            else {\n                Displayable.prototype.attrKV.call(this, key, value);\n            }\n        },\n\n        /**\n         * @param {Object|string} key\n         * @param {*} value\n         */\n        setShape: function (key, value) {\n            var shape = this.shape;\n            // Path from string may not have shape\n            if (shape) {\n                if (zrUtil.isObject(key)) {\n                    for (var name in key) {\n                        if (key.hasOwnProperty(name)) {\n                            shape[name] = key[name];\n                        }\n                    }\n                }\n                else {\n                    shape[key] = value;\n                }\n                this.dirty(true);\n            }\n            return this;\n        },\n\n        getLineScale: function () {\n            var m = this.transform;\n            // Get the line scale.\n            // Determinant of `m` means how much the area is enlarged by the\n            // transformation. So its square root can be used as a scale factor\n            // for width.\n            return m && abs(m[0] - 1) > 1e-10 && abs(m[3] - 1) > 1e-10\n                ? Math.sqrt(abs(m[0] * m[3] - m[2] * m[1]))\n                : 1;\n        }\n    };\n\n    /**\n     * 扩展一个 Path element, 比如星形，圆等。\n     * Extend a path element\n     * @param {Object} props\n     * @param {string} props.type Path type\n     * @param {Function} props.init Initialize\n     * @param {Function} props.buildPath Overwrite buildPath method\n     * @param {Object} [props.style] Extended default style config\n     * @param {Object} [props.shape] Extended default shape config\n     */\n    Path.extend = function (defaults) {\n        var Sub = function (opts) {\n            Path.call(this, opts);\n\n            if (defaults.style) {\n                // Extend default style\n                this.style.extendFrom(defaults.style, false);\n            }\n\n            // Extend default shape\n            var defaultShape = defaults.shape;\n            if (defaultShape) {\n                this.shape = this.shape || {};\n                var thisShape = this.shape;\n                for (var name in defaultShape) {\n                    if (\n                        ! thisShape.hasOwnProperty(name)\n                        && defaultShape.hasOwnProperty(name)\n                    ) {\n                        thisShape[name] = defaultShape[name];\n                    }\n                }\n            }\n\n            defaults.init && defaults.init.call(this, opts);\n        };\n\n        zrUtil.inherits(Sub, Path);\n\n        // FIXME 不能 extend position, rotation 等引用对象\n        for (var name in defaults) {\n            // Extending prototype values and methods\n            if (name !== 'style' && name !== 'shape') {\n                Sub.prototype[name] = defaults[name];\n            }\n        }\n\n        return Sub;\n    };\n\n    zrUtil.inherits(Path, Displayable);\n\n    module.exports = Path;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Path.js\n// module id = 459\n// module chunks = 0 1 2","/**\n * echarts设备环境识别\n *\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\n * @author firede[firede@firede.us]\n * @desc thanks zepto.\n */\n\n    var env = {};\n    if (typeof navigator === 'undefined') {\n        // In node\n        env = {\n            browser: {},\n            os: {},\n            node: true,\n            // Assume canvas is supported\n            canvasSupported: true\n        };\n    }\n    else {\n        env = detect(navigator.userAgent);\n    }\n\n    module.exports = env;\n\n    // Zepto.js\n    // (c) 2010-2013 Thomas Fuchs\n    // Zepto.js may be freely distributed under the MIT license.\n\n    function detect(ua) {\n        var os = {};\n        var browser = {};\n        // var webkit = ua.match(/Web[kK]it[\\/]{0,1}([\\d.]+)/);\n        // var android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/);\n        // var ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n        // var ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n        // var iphone = !ipad && ua.match(/(iPhone\\sOS)\\s([\\d_]+)/);\n        // var webos = ua.match(/(webOS|hpwOS)[\\s\\/]([\\d.]+)/);\n        // var touchpad = webos && ua.match(/TouchPad/);\n        // var kindle = ua.match(/Kindle\\/([\\d.]+)/);\n        // var silk = ua.match(/Silk\\/([\\d._]+)/);\n        // var blackberry = ua.match(/(BlackBerry).*Version\\/([\\d.]+)/);\n        // var bb10 = ua.match(/(BB10).*Version\\/([\\d.]+)/);\n        // var rimtabletos = ua.match(/(RIM\\sTablet\\sOS)\\s([\\d.]+)/);\n        // var playbook = ua.match(/PlayBook/);\n        // var chrome = ua.match(/Chrome\\/([\\d.]+)/) || ua.match(/CriOS\\/([\\d.]+)/);\n        var firefox = ua.match(/Firefox\\/([\\d.]+)/);\n        // var safari = webkit && ua.match(/Mobile\\//) && !chrome;\n        // var webview = ua.match(/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/) && !chrome;\n        var ie = ua.match(/MSIE\\s([\\d.]+)/)\n            // IE 11 Trident/7.0; rv:11.0\n            || ua.match(/Trident\\/.+?rv:(([\\d.]+))/);\n        var edge = ua.match(/Edge\\/([\\d.]+)/); // IE 12 and 12+\n\n        var weChat = (/micromessenger/i).test(ua);\n\n        // Todo: clean this up with a better OS/browser seperation:\n        // - discern (more) between multiple browsers on android\n        // - decide if kindle fire in silk mode is android or not\n        // - Firefox on Android doesn't specify the Android version\n        // - possibly devide in os, device and browser hashes\n\n        // if (browser.webkit = !!webkit) browser.version = webkit[1];\n\n        // if (android) os.android = true, os.version = android[2];\n        // if (iphone && !ipod) os.ios = os.iphone = true, os.version = iphone[2].replace(/_/g, '.');\n        // if (ipad) os.ios = os.ipad = true, os.version = ipad[2].replace(/_/g, '.');\n        // if (ipod) os.ios = os.ipod = true, os.version = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n        // if (webos) os.webos = true, os.version = webos[2];\n        // if (touchpad) os.touchpad = true;\n        // if (blackberry) os.blackberry = true, os.version = blackberry[2];\n        // if (bb10) os.bb10 = true, os.version = bb10[2];\n        // if (rimtabletos) os.rimtabletos = true, os.version = rimtabletos[2];\n        // if (playbook) browser.playbook = true;\n        // if (kindle) os.kindle = true, os.version = kindle[1];\n        // if (silk) browser.silk = true, browser.version = silk[1];\n        // if (!silk && os.android && ua.match(/Kindle Fire/)) browser.silk = true;\n        // if (chrome) browser.chrome = true, browser.version = chrome[1];\n        if (firefox) {\n            browser.firefox = true;\n            browser.version = firefox[1];\n        }\n        // if (safari && (ua.match(/Safari/) || !!os.ios)) browser.safari = true;\n        // if (webview) browser.webview = true;\n\n        if (ie) {\n            browser.ie = true;\n            browser.version = ie[1];\n        }\n\n        if (edge) {\n            browser.edge = true;\n            browser.version = edge[1];\n        }\n\n        // It is difficult to detect WeChat in Win Phone precisely, because ua can\n        // not be set on win phone. So we do not consider Win Phone.\n        if (weChat) {\n            browser.weChat = true;\n        }\n\n        // os.tablet = !!(ipad || playbook || (android && !ua.match(/Mobile/)) ||\n        //     (firefox && ua.match(/Tablet/)) || (ie && !ua.match(/Phone/) && ua.match(/Touch/)));\n        // os.phone  = !!(!os.tablet && !os.ipod && (android || iphone || webos ||\n        //     (chrome && ua.match(/Android/)) || (chrome && ua.match(/CriOS\\/([\\d.]+)/)) ||\n        //     (firefox && ua.match(/Mobile/)) || (ie && ua.match(/Touch/))));\n\n        return {\n            browser: browser,\n            os: os,\n            node: false,\n            // 原生canvas支持，改极端点了\n            // canvasSupported : !(browser.ie && parseFloat(browser.version) < 9)\n            canvasSupported : document.createElement('canvas').getContext ? true : false,\n            // @see <http://stackoverflow.com/questions/4817029/whats-the-best-way-to-detect-a-touch-screen-device-using-javascript>\n            // works on most browsers\n            // IE10/11 does not support touch event, and MS Edge supports them but not by\n            // default, so we dont check navigator.maxTouchPoints for them here.\n            touchEventsSupported: 'ontouchstart' in window && !browser.ie && !browser.edge,\n            // <http://caniuse.com/#search=pointer%20event>.\n            pointerEventsSupported: 'onpointerdown' in window\n                // Firefox supports pointer but not by default, only MS browsers are reliable on pointer\n                // events currently. So we dont use that on other browsers unless tested sufficiently.\n                // Although IE 10 supports pointer event, it use old style and is different from the\n                // standard. So we exclude that. (IE 10 is hardly used on touch device)\n                && (browser.edge || (browser.ie && browser.version >= 11))\n        };\n    }\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/env.js\n// module id = 460\n// module chunks = 0 1 2","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var numberUtil = require('./number');\n    var textContain = require('zrender/lib/contain/text');\n\n    var formatUtil = {};\n\n    /**\n     * 每三位默认加,格式化\n     * @param {string|number} x\n     * @return {string}\n     */\n    formatUtil.addCommas = function (x) {\n        if (isNaN(x)) {\n            return '-';\n        }\n        x = (x + '').split('.');\n        return x[0].replace(/(\\d{1,3})(?=(?:\\d{3})+(?!\\d))/g,'$1,')\n               + (x.length > 1 ? ('.' + x[1]) : '');\n    };\n\n    /**\n     * @param {string} str\n     * @param {boolean} [upperCaseFirst=false]\n     * @return {string} str\n     */\n    formatUtil.toCamelCase = function (str, upperCaseFirst) {\n        str = (str || '').toLowerCase().replace(/-(.)/g, function(match, group1) {\n            return group1.toUpperCase();\n        });\n\n        if (upperCaseFirst && str) {\n            str = str.charAt(0).toUpperCase() + str.slice(1);\n        }\n\n        return str;\n    };\n\n    /**\n     * Normalize css liked array configuration\n     * e.g.\n     *  3 => [3, 3, 3, 3]\n     *  [4, 2] => [4, 2, 4, 2]\n     *  [4, 3, 2] => [4, 3, 2, 3]\n     * @param {number|Array.<number>} val\n     */\n    formatUtil.normalizeCssArray = function (val) {\n        var len = val.length;\n        if (typeof (val) === 'number') {\n            return [val, val, val, val];\n        }\n        else if (len === 2) {\n            // vertical | horizontal\n            return [val[0], val[1], val[0], val[1]];\n        }\n        else if (len === 3) {\n            // top | horizontal | bottom\n            return [val[0], val[1], val[2], val[1]];\n        }\n        return val;\n    };\n\n    var encodeHTML = formatUtil.encodeHTML = function (source) {\n        return String(source)\n            .replace(/&/g, '&amp;')\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;')\n            .replace(/\"/g, '&quot;')\n            .replace(/'/g, '&#39;');\n    };\n\n    var TPL_VAR_ALIAS = ['a', 'b', 'c', 'd', 'e', 'f', 'g'];\n\n    var wrapVar = function (varName, seriesIdx) {\n        return '{' + varName + (seriesIdx == null ? '' : seriesIdx) + '}';\n    };\n\n    /**\n     * Template formatter\n     * @param {string} tpl\n     * @param {Array.<Object>|Object} paramsList\n     * @param {boolean} [encode=false]\n     * @return {string}\n     */\n    formatUtil.formatTpl = function (tpl, paramsList, encode) {\n        if (!zrUtil.isArray(paramsList)) {\n            paramsList = [paramsList];\n        }\n        var seriesLen = paramsList.length;\n        if (!seriesLen) {\n            return '';\n        }\n\n        var $vars = paramsList[0].$vars || [];\n        for (var i = 0; i < $vars.length; i++) {\n            var alias = TPL_VAR_ALIAS[i];\n            var val = wrapVar(alias, 0);\n            tpl = tpl.replace(wrapVar(alias), encode ? encodeHTML(val) : val);\n        }\n        for (var seriesIdx = 0; seriesIdx < seriesLen; seriesIdx++) {\n            for (var k = 0; k < $vars.length; k++) {\n                var val = paramsList[seriesIdx][$vars[k]];\n                tpl = tpl.replace(\n                    wrapVar(TPL_VAR_ALIAS[k], seriesIdx),\n                    encode ? encodeHTML(val) : val\n                );\n            }\n        }\n\n        return tpl;\n    };\n\n    /**\n     * simple Template formatter\n     *\n     * @param {string} tpl\n     * @param {Object} param\n     * @param {boolean} [encode=false]\n     * @return {string}\n     */\n    formatUtil.formatTplSimple = function (tpl, param, encode) {\n        zrUtil.each(param, function (value, key) {\n            tpl = tpl.replace(\n                '{' + key + '}',\n                encode ? encodeHTML(value) : value\n            );\n        });\n        return tpl;\n    };\n\n    /**\n     * @param {string} color\n     * @param {string} [extraCssText]\n     * @return {string}\n     */\n    formatUtil.getTooltipMarker = function (color, extraCssText) {\n        return color\n            ? '<span style=\"display:inline-block;margin-right:5px;'\n                + 'border-radius:10px;width:9px;height:9px;background-color:'\n                + formatUtil.encodeHTML(color) + ';' + (extraCssText || '') + '\"></span>'\n            : '';\n    };\n\n    /**\n     * @param {string} str\n     * @return {string}\n     * @inner\n     */\n    var s2d = function (str) {\n        return str < 10 ? ('0' + str) : str;\n    };\n\n    /**\n     * ISO Date format\n     * @param {string} tpl\n     * @param {number} value\n     * @param {boolean} [isUTC=false] Default in local time.\n     *           see `module:echarts/scale/Time`\n     *           and `module:echarts/util/number#parseDate`.\n     * @inner\n     */\n    formatUtil.formatTime = function (tpl, value, isUTC) {\n        if (tpl === 'week'\n            || tpl === 'month'\n            || tpl === 'quarter'\n            || tpl === 'half-year'\n            || tpl === 'year'\n        ) {\n            tpl = 'MM-dd\\nyyyy';\n        }\n\n        var date = numberUtil.parseDate(value);\n        var utc = isUTC ? 'UTC' : '';\n        var y = date['get' + utc + 'FullYear']();\n        var M = date['get' + utc + 'Month']() + 1;\n        var d = date['get' + utc + 'Date']();\n        var h = date['get' + utc + 'Hours']();\n        var m = date['get' + utc + 'Minutes']();\n        var s = date['get' + utc + 'Seconds']();\n\n        tpl = tpl.replace('MM', s2d(M))\n            .toLowerCase()\n            .replace('yyyy', y)\n            .replace('yy', y % 100)\n            .replace('dd', s2d(d))\n            .replace('d', d)\n            .replace('hh', s2d(h))\n            .replace('h', h)\n            .replace('mm', s2d(m))\n            .replace('m', m)\n            .replace('ss', s2d(s))\n            .replace('s', s);\n\n        return tpl;\n    };\n\n    /**\n     * Capital first\n     * @param {string} str\n     * @return {string}\n     */\n    formatUtil.capitalFirst = function (str) {\n        return str ? str.charAt(0).toUpperCase() + str.substr(1) : str;\n    };\n\n    formatUtil.truncateText = textContain.truncateText;\n\n    module.exports = formatUtil;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/format.js\n// module id = 461\n// module chunks = 0 1 2","module.exports = { \"default\": require(\"core-js/library/fn/object/assign\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/core-js/object/assign.js\n// module id = 462\n// module chunks = 1 2 3 5 6 9 10 12 18 19 20 21 22 23 24","/**\n * @module echarts/model/Model\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var clazzUtil = require('../util/clazz');\n    var env = require('zrender/lib/core/env');\n\n    /**\n     * @alias module:echarts/model/Model\n     * @constructor\n     * @param {Object} option\n     * @param {module:echarts/model/Model} [parentModel]\n     * @param {module:echarts/model/Global} [ecModel]\n     */\n    function Model(option, parentModel, ecModel) {\n        /**\n         * @type {module:echarts/model/Model}\n         * @readOnly\n         */\n        this.parentModel = parentModel;\n\n        /**\n         * @type {module:echarts/model/Global}\n         * @readOnly\n         */\n        this.ecModel = ecModel;\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        this.option = option;\n\n        // Simple optimization\n        // if (this.init) {\n        //     if (arguments.length <= 4) {\n        //         this.init(option, parentModel, ecModel, extraOpt);\n        //     }\n        //     else {\n        //         this.init.apply(this, arguments);\n        //     }\n        // }\n    }\n\n    Model.prototype = {\n\n        constructor: Model,\n\n        /**\n         * Model 的初始化函数\n         * @param {Object} option\n         */\n        init: null,\n\n        /**\n         * 从新的 Option merge\n         */\n        mergeOption: function (option) {\n            zrUtil.merge(this.option, option, true);\n        },\n\n        /**\n         * @param {string|Array.<string>} path\n         * @param {boolean} [ignoreParent=false]\n         * @return {*}\n         */\n        get: function (path, ignoreParent) {\n            if (path == null) {\n                return this.option;\n            }\n\n            return doGet(\n                this.option,\n                this.parsePath(path),\n                !ignoreParent && getParent(this, path)\n            );\n        },\n\n        /**\n         * @param {string} key\n         * @param {boolean} [ignoreParent=false]\n         * @return {*}\n         */\n        getShallow: function (key, ignoreParent) {\n            var option = this.option;\n\n            var val = option == null ? option : option[key];\n            var parentModel = !ignoreParent && getParent(this, key);\n            if (val == null && parentModel) {\n                val = parentModel.getShallow(key);\n            }\n            return val;\n        },\n\n        /**\n         * @param {string|Array.<string>} [path]\n         * @param {module:echarts/model/Model} [parentModel]\n         * @return {module:echarts/model/Model}\n         */\n        getModel: function (path, parentModel) {\n            var obj = path == null\n                ? this.option\n                : doGet(this.option, path = this.parsePath(path));\n\n            var thisParentModel;\n            parentModel = parentModel || (\n                (thisParentModel = getParent(this, path))\n                    && thisParentModel.getModel(path)\n            );\n\n            return new Model(obj, parentModel, this.ecModel);\n        },\n\n        /**\n         * If model has option\n         */\n        isEmpty: function () {\n            return this.option == null;\n        },\n\n        restoreData: function () {},\n\n        // Pending\n        clone: function () {\n            var Ctor = this.constructor;\n            return new Ctor(zrUtil.clone(this.option));\n        },\n\n        setReadOnly: function (properties) {\n            clazzUtil.setReadOnly(this, properties);\n        },\n\n        // If path is null/undefined, return null/undefined.\n        parsePath: function(path) {\n            if (typeof path === 'string') {\n                path = path.split('.');\n            }\n            return path;\n        },\n\n        /**\n         * @param {Function} getParentMethod\n         *        param {Array.<string>|string} path\n         *        return {module:echarts/model/Model}\n         */\n        customizeGetParent: function (getParentMethod) {\n            clazzUtil.set(this, 'getParent', getParentMethod);\n        },\n\n        isAnimationEnabled: function () {\n            if (!env.node) {\n                if (this.option.animation != null) {\n                    return !!this.option.animation;\n                }\n                else if (this.parentModel) {\n                    return this.parentModel.isAnimationEnabled();\n                }\n            }\n        }\n    };\n\n    function doGet(obj, pathArr, parentModel) {\n        for (var i = 0; i < pathArr.length; i++) {\n            // Ignore empty\n            if (!pathArr[i]) {\n                continue;\n            }\n            // obj could be number/string/... (like 0)\n            obj = (obj && typeof obj === 'object') ? obj[pathArr[i]] : null;\n            if (obj == null) {\n                break;\n            }\n        }\n        if (obj == null && parentModel) {\n            obj = parentModel.get(pathArr);\n        }\n        return obj;\n    }\n\n    // `path` can be null/undefined\n    function getParent(model, path) {\n        var getParentMethod = clazzUtil.get(model, 'getParent');\n        return getParentMethod ? getParentMethod.call(model, path) : model.parentModel;\n    }\n\n    // Enable Model.extend.\n    clazzUtil.enableClassExtend(Model);\n\n    var mixin = zrUtil.mixin;\n    mixin(Model, require('./mixin/lineStyle'));\n    mixin(Model, require('./mixin/areaStyle'));\n    mixin(Model, require('./mixin/textStyle'));\n    mixin(Model, require('./mixin/itemStyle'));\n\n    module.exports = Model;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/Model.js\n// module id = 463\n// module chunks = 0 1 2","require('../../modules/es6.object.assign');\nmodule.exports = require('../../modules/_core').Object.assign;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/fn/object/assign.js\n// module id = 464\n// module chunks = 1 2 3 5 6 9 10 12 18 19 20 21 22 23 24","'use strict';\n// 19.1.2.1 Object.assign(target, source, ...)\nvar getKeys  = require('./_object-keys')\n  , gOPS     = require('./_object-gops')\n  , pIE      = require('./_object-pie')\n  , toObject = require('./_to-object')\n  , IObject  = require('./_iobject')\n  , $assign  = Object.assign;\n\n// should work with symbols and should have deterministic property order (V8 bug)\nmodule.exports = !$assign || require('./_fails')(function(){\n  var A = {}\n    , B = {}\n    , S = Symbol()\n    , K = 'abcdefghijklmnopqrst';\n  A[S] = 7;\n  K.split('').forEach(function(k){ B[k] = k; });\n  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;\n}) ? function assign(target, source){ // eslint-disable-line no-unused-vars\n  var T     = toObject(target)\n    , aLen  = arguments.length\n    , index = 1\n    , getSymbols = gOPS.f\n    , isEnum     = pIE.f;\n  while(aLen > index){\n    var S      = IObject(arguments[index++])\n      , keys   = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S)\n      , length = keys.length\n      , j      = 0\n      , key;\n    while(length > j)if(isEnum.call(S, key = keys[j++]))T[key] = S[key];\n  } return T;\n} : $assign;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_object-assign.js\n// module id = 465\n// module chunks = 1 2 3 5 6 9 10 12 18 19 20 21 22 23 24","// 19.1.3.1 Object.assign(target, source)\nvar $export = require('./_export');\n\n$export($export.S + $export.F, 'Object', {assign: require('./_object-assign')});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/es6.object.assign.js\n// module id = 466\n// module chunks = 1 2 3 5 6 9 10 12 18 19 20 21 22 23 24","\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var clazz = {};\n\n    var TYPE_DELIMITER = '.';\n    var IS_CONTAINER = '___EC__COMPONENT__CONTAINER___';\n    var MEMBER_PRIFIX = '\\0ec_\\0';\n\n    /**\n     * Hide private class member.\n     * The same behavior as `host[name] = value;` (can be right-value)\n     * @public\n     */\n    clazz.set = function (host, name, value) {\n        return (host[MEMBER_PRIFIX + name] = value);\n    };\n\n    /**\n     * Hide private class member.\n     * The same behavior as `host[name];`\n     * @public\n     */\n    clazz.get = function (host, name) {\n        return host[MEMBER_PRIFIX + name];\n    };\n\n    /**\n     * For hidden private class member.\n     * The same behavior as `host.hasOwnProperty(name);`\n     * @public\n     */\n    clazz.hasOwn = function (host, name) {\n        return host.hasOwnProperty(MEMBER_PRIFIX + name);\n    };\n\n    /**\n     * Notice, parseClassType('') should returns {main: '', sub: ''}\n     * @public\n     */\n    var parseClassType = clazz.parseClassType = function (componentType) {\n        var ret = {main: '', sub: ''};\n        if (componentType) {\n            componentType = componentType.split(TYPE_DELIMITER);\n            ret.main = componentType[0] || '';\n            ret.sub = componentType[1] || '';\n        }\n        return ret;\n    };\n\n    /**\n     * @public\n     */\n    function checkClassType(componentType) {\n        zrUtil.assert(\n            /^[a-zA-Z0-9_]+([.][a-zA-Z0-9_]+)?$/.test(componentType),\n            'componentType \"' + componentType + '\" illegal'\n        );\n    }\n\n    /**\n     * @public\n     */\n    clazz.enableClassExtend = function (RootClass, mandatoryMethods) {\n\n        RootClass.$constructor = RootClass;\n        RootClass.extend = function (proto) {\n\n            if (__DEV__) {\n                zrUtil.each(mandatoryMethods, function (method) {\n                    if (!proto[method]) {\n                        console.warn(\n                            'Method `' + method + '` should be implemented'\n                            + (proto.type ? ' in ' + proto.type : '') + '.'\n                        );\n                    }\n                });\n            }\n\n            var superClass = this;\n            var ExtendedClass = function () {\n                if (!proto.$constructor) {\n                    superClass.apply(this, arguments);\n                }\n                else {\n                    proto.$constructor.apply(this, arguments);\n                }\n            };\n\n            zrUtil.extend(ExtendedClass.prototype, proto);\n\n            ExtendedClass.extend = this.extend;\n            ExtendedClass.superCall = superCall;\n            ExtendedClass.superApply = superApply;\n            zrUtil.inherits(ExtendedClass, this);\n            ExtendedClass.superClass = superClass;\n\n            return ExtendedClass;\n        };\n    };\n\n    // superCall should have class info, which can not be fetch from 'this'.\n    // Consider this case:\n    // class A has method f,\n    // class B inherits class A, overrides method f, f call superApply('f'),\n    // class C inherits class B, do not overrides method f,\n    // then when method of class C is called, dead loop occured.\n    function superCall(context, methodName) {\n        var args = zrUtil.slice(arguments, 2);\n        return this.superClass.prototype[methodName].apply(context, args);\n    }\n\n    function superApply(context, methodName, args) {\n        return this.superClass.prototype[methodName].apply(context, args);\n    }\n\n    /**\n     * @param {Object} entity\n     * @param {Object} options\n     * @param {boolean} [options.registerWhenExtend]\n     * @public\n     */\n    clazz.enableClassManagement = function (entity, options) {\n        options = options || {};\n\n        /**\n         * Component model classes\n         * key: componentType,\n         * value:\n         *     componentClass, when componentType is 'xxx'\n         *     or Object.<subKey, componentClass>, when componentType is 'xxx.yy'\n         * @type {Object}\n         */\n        var storage = {};\n\n        entity.registerClass = function (Clazz, componentType) {\n            if (componentType) {\n                checkClassType(componentType);\n                componentType = parseClassType(componentType);\n\n                if (!componentType.sub) {\n                    if (__DEV__) {\n                        if (storage[componentType.main]) {\n                            console.warn(componentType.main + ' exists.');\n                        }\n                    }\n                    storage[componentType.main] = Clazz;\n                }\n                else if (componentType.sub !== IS_CONTAINER) {\n                    var container = makeContainer(componentType);\n                    container[componentType.sub] = Clazz;\n                }\n            }\n            return Clazz;\n        };\n\n        entity.getClass = function (componentMainType, subType, throwWhenNotFound) {\n            var Clazz = storage[componentMainType];\n\n            if (Clazz && Clazz[IS_CONTAINER]) {\n                Clazz = subType ? Clazz[subType] : null;\n            }\n\n            if (throwWhenNotFound && !Clazz) {\n                throw new Error(\n                    !subType\n                        ? componentMainType + '.' + 'type should be specified.'\n                        : 'Component ' + componentMainType + '.' + (subType || '') + ' not exists. Load it first.'\n                );\n            }\n\n            return Clazz;\n        };\n\n        entity.getClassesByMainType = function (componentType) {\n            componentType = parseClassType(componentType);\n\n            var result = [];\n            var obj = storage[componentType.main];\n\n            if (obj && obj[IS_CONTAINER]) {\n                zrUtil.each(obj, function (o, type) {\n                    type !== IS_CONTAINER && result.push(o);\n                });\n            }\n            else {\n                result.push(obj);\n            }\n\n            return result;\n        };\n\n        entity.hasClass = function (componentType) {\n            // Just consider componentType.main.\n            componentType = parseClassType(componentType);\n            return !!storage[componentType.main];\n        };\n\n        /**\n         * @return {Array.<string>} Like ['aa', 'bb'], but can not be ['aa.xx']\n         */\n        entity.getAllClassMainTypes = function () {\n            var types = [];\n            zrUtil.each(storage, function (obj, type) {\n                types.push(type);\n            });\n            return types;\n        };\n\n        /**\n         * If a main type is container and has sub types\n         * @param  {string}  mainType\n         * @return {boolean}\n         */\n        entity.hasSubTypes = function (componentType) {\n            componentType = parseClassType(componentType);\n            var obj = storage[componentType.main];\n            return obj && obj[IS_CONTAINER];\n        };\n\n        entity.parseClassType = parseClassType;\n\n        function makeContainer(componentType) {\n            var container = storage[componentType.main];\n            if (!container || !container[IS_CONTAINER]) {\n                container = storage[componentType.main] = {};\n                container[IS_CONTAINER] = true;\n            }\n            return container;\n        }\n\n        if (options.registerWhenExtend) {\n            var originalExtend = entity.extend;\n            if (originalExtend) {\n                entity.extend = function (proto) {\n                    var ExtendedClass = originalExtend.call(this, proto);\n                    return entity.registerClass(ExtendedClass, proto.type);\n                };\n            }\n        }\n\n        return entity;\n    };\n\n    /**\n     * @param {string|Array.<string>} properties\n     */\n    clazz.setReadOnly = function (obj, properties) {\n        // FIXME It seems broken in IE8 simulation of IE11\n        // if (!zrUtil.isArray(properties)) {\n        //     properties = properties != null ? [properties] : [];\n        // }\n        // zrUtil.each(properties, function (prop) {\n        //     var value = obj[prop];\n\n        //     Object.defineProperty\n        //         && Object.defineProperty(obj, prop, {\n        //             value: value, writable: false\n        //         });\n        //     zrUtil.isArray(obj[prop])\n        //         && Object.freeze\n        //         && Object.freeze(obj[prop]);\n        // });\n    };\n\n    module.exports = clazz;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/clazz.js\n// module id = 467\n// module chunks = 0 1 2","'use strict';\n/**\n * @module echarts/core/BoundingRect\n */\n\n\n    var vec2 = require('./vector');\n    var matrix = require('./matrix');\n\n    var v2ApplyTransform = vec2.applyTransform;\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    /**\n     * @alias module:echarts/core/BoundingRect\n     */\n    function BoundingRect(x, y, width, height) {\n\n        if (width < 0) {\n            x = x + width;\n            width = -width;\n        }\n        if (height < 0) {\n            y = y + height;\n            height = -height;\n        }\n\n        /**\n         * @type {number}\n         */\n        this.x = x;\n        /**\n         * @type {number}\n         */\n        this.y = y;\n        /**\n         * @type {number}\n         */\n        this.width = width;\n        /**\n         * @type {number}\n         */\n        this.height = height;\n    }\n\n    BoundingRect.prototype = {\n\n        constructor: BoundingRect,\n\n        /**\n         * @param {module:echarts/core/BoundingRect} other\n         */\n        union: function (other) {\n            var x = mathMin(other.x, this.x);\n            var y = mathMin(other.y, this.y);\n\n            this.width = mathMax(\n                    other.x + other.width,\n                    this.x + this.width\n                ) - x;\n            this.height = mathMax(\n                    other.y + other.height,\n                    this.y + this.height\n                ) - y;\n            this.x = x;\n            this.y = y;\n        },\n\n        /**\n         * @param {Array.<number>} m\n         * @methods\n         */\n        applyTransform: (function () {\n            var lt = [];\n            var rb = [];\n            var lb = [];\n            var rt = [];\n            return function (m) {\n                // In case usage like this\n                // el.getBoundingRect().applyTransform(el.transform)\n                // And element has no transform\n                if (!m) {\n                    return;\n                }\n                lt[0] = lb[0] = this.x;\n                lt[1] = rt[1] = this.y;\n                rb[0] = rt[0] = this.x + this.width;\n                rb[1] = lb[1] = this.y + this.height;\n\n                v2ApplyTransform(lt, lt, m);\n                v2ApplyTransform(rb, rb, m);\n                v2ApplyTransform(lb, lb, m);\n                v2ApplyTransform(rt, rt, m);\n\n                this.x = mathMin(lt[0], rb[0], lb[0], rt[0]);\n                this.y = mathMin(lt[1], rb[1], lb[1], rt[1]);\n                var maxX = mathMax(lt[0], rb[0], lb[0], rt[0]);\n                var maxY = mathMax(lt[1], rb[1], lb[1], rt[1]);\n                this.width = maxX - this.x;\n                this.height = maxY - this.y;\n            };\n        })(),\n\n        /**\n         * Calculate matrix of transforming from self to target rect\n         * @param  {module:zrender/core/BoundingRect} b\n         * @return {Array.<number>}\n         */\n        calculateTransform: function (b) {\n            var a = this;\n            var sx = b.width / a.width;\n            var sy = b.height / a.height;\n\n            var m = matrix.create();\n\n            // 矩阵右乘\n            matrix.translate(m, m, [-a.x, -a.y]);\n            matrix.scale(m, m, [sx, sy]);\n            matrix.translate(m, m, [b.x, b.y]);\n\n            return m;\n        },\n\n        /**\n         * @param {(module:echarts/core/BoundingRect|Object)} b\n         * @return {boolean}\n         */\n        intersect: function (b) {\n            if (!b) {\n                return false;\n            }\n\n            if (!(b instanceof BoundingRect)) {\n                // Normalize negative width/height.\n                b = BoundingRect.create(b);\n            }\n\n            var a = this;\n            var ax0 = a.x;\n            var ax1 = a.x + a.width;\n            var ay0 = a.y;\n            var ay1 = a.y + a.height;\n\n            var bx0 = b.x;\n            var bx1 = b.x + b.width;\n            var by0 = b.y;\n            var by1 = b.y + b.height;\n\n            return ! (ax1 < bx0 || bx1 < ax0 || ay1 < by0 || by1 < ay0);\n        },\n\n        contain: function (x, y) {\n            var rect = this;\n            return x >= rect.x\n                && x <= (rect.x + rect.width)\n                && y >= rect.y\n                && y <= (rect.y + rect.height);\n        },\n\n        /**\n         * @return {module:echarts/core/BoundingRect}\n         */\n        clone: function () {\n            return new BoundingRect(this.x, this.y, this.width, this.height);\n        },\n\n        /**\n         * Copy from another rect\n         */\n        copy: function (other) {\n            this.x = other.x;\n            this.y = other.y;\n            this.width = other.width;\n            this.height = other.height;\n        },\n\n        plain: function () {\n            return {\n                x: this.x,\n                y: this.y,\n                width: this.width,\n                height: this.height\n            };\n        }\n    };\n\n    /**\n     * @param {Object|module:zrender/core/BoundingRect} rect\n     * @param {number} rect.x\n     * @param {number} rect.y\n     * @param {number} rect.width\n     * @param {number} rect.height\n     * @return {module:zrender/core/BoundingRect}\n     */\n    BoundingRect.create = function (rect) {\n        return new BoundingRect(rect.x, rect.y, rect.width, rect.height);\n    };\n\n    module.exports = BoundingRect;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/BoundingRect.js\n// module id = 468\n// module chunks = 0 1 2","/**\n * Component model\n *\n * @module echarts/model/Component\n */\n\n\n    var Model = require('./Model');\n    var zrUtil = require('zrender/lib/core/util');\n    var arrayPush = Array.prototype.push;\n    var componentUtil = require('../util/component');\n    var clazzUtil = require('../util/clazz');\n    var layout = require('../util/layout');\n\n    /**\n     * @alias module:echarts/model/Component\n     * @constructor\n     * @param {Object} option\n     * @param {module:echarts/model/Model} parentModel\n     * @param {module:echarts/model/Model} ecModel\n     */\n    var ComponentModel = Model.extend({\n\n        type: 'component',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        id: '',\n\n        /**\n         * @readOnly\n         */\n        name: '',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        mainType: '',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        subType: '',\n\n        /**\n         * @readOnly\n         * @type {number}\n         */\n        componentIndex: 0,\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        defaultOption: null,\n\n        /**\n         * @type {module:echarts/model/Global}\n         * @readOnly\n         */\n        ecModel: null,\n\n        /**\n         * key: componentType\n         * value:  Component model list, can not be null.\n         * @type {Object.<string, Array.<module:echarts/model/Model>>}\n         * @readOnly\n         */\n        dependentModels: [],\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        uid: null,\n\n        /**\n         * Support merge layout params.\n         * Only support 'box' now (left/right/top/bottom/width/height).\n         * @type {string|Object} Object can be {ignoreSize: true}\n         * @readOnly\n         */\n        layoutMode: null,\n\n        $constructor: function (option, parentModel, ecModel, extraOpt) {\n            Model.call(this, option, parentModel, ecModel, extraOpt);\n\n            this.uid = componentUtil.getUID('componentModel');\n        },\n\n\n        init: function (option, parentModel, ecModel, extraOpt) {\n            this.mergeDefaultAndTheme(option, ecModel);\n        },\n\n        mergeDefaultAndTheme: function (option, ecModel) {\n            var layoutMode = this.layoutMode;\n            var inputPositionParams = layoutMode\n                ? layout.getLayoutParams(option) : {};\n\n            var themeModel = ecModel.getTheme();\n            zrUtil.merge(option, themeModel.get(this.mainType));\n            zrUtil.merge(option, this.getDefaultOption());\n\n            if (layoutMode) {\n                layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n            }\n        },\n\n        mergeOption: function (option, extraOpt) {\n            zrUtil.merge(this.option, option, true);\n\n            var layoutMode = this.layoutMode;\n            if (layoutMode) {\n                layout.mergeLayoutParam(this.option, option, layoutMode);\n            }\n        },\n\n        // Hooker after init or mergeOption\n        optionUpdated: function (newCptOption, isInit) {},\n\n        getDefaultOption: function () {\n            if (!clazzUtil.hasOwn(this, '__defaultOption')) {\n                var optList = [];\n                var Class = this.constructor;\n                while (Class) {\n                    var opt = Class.prototype.defaultOption;\n                    opt && optList.push(opt);\n                    Class = Class.superClass;\n                }\n\n                var defaultOption = {};\n                for (var i = optList.length - 1; i >= 0; i--) {\n                    defaultOption = zrUtil.merge(defaultOption, optList[i], true);\n                }\n                clazzUtil.set(this, '__defaultOption', defaultOption);\n            }\n            return clazzUtil.get(this, '__defaultOption');\n        },\n\n        getReferringComponents: function (mainType) {\n            return this.ecModel.queryComponents({\n                mainType: mainType,\n                index: this.get(mainType + 'Index', true),\n                id: this.get(mainType + 'Id', true)\n            });\n        }\n\n    });\n\n    // Reset ComponentModel.extend, add preConstruct.\n    // clazzUtil.enableClassExtend(\n    //     ComponentModel,\n    //     function (option, parentModel, ecModel, extraOpt) {\n    //         // Set dependentModels, componentIndex, name, id, mainType, subType.\n    //         zrUtil.extend(this, extraOpt);\n\n    //         this.uid = componentUtil.getUID('componentModel');\n\n    //         // this.setReadOnly([\n    //         //     'type', 'id', 'uid', 'name', 'mainType', 'subType',\n    //         //     'dependentModels', 'componentIndex'\n    //         // ]);\n    //     }\n    // );\n\n    // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(\n        ComponentModel, {registerWhenExtend: true}\n    );\n    componentUtil.enableSubTypeDefaulter(ComponentModel);\n\n    // Add capability of ComponentModel.topologicalTravel.\n    componentUtil.enableTopologicalTravel(ComponentModel, getDependencies);\n\n    function getDependencies(componentType) {\n        var deps = [];\n        zrUtil.each(ComponentModel.getClassesByMainType(componentType), function (Clazz) {\n            arrayPush.apply(deps, Clazz.prototype.dependencies || []);\n        });\n        // Ensure main type\n        return zrUtil.map(deps, function (type) {\n            return clazzUtil.parseClassType(type).main;\n        });\n    }\n\n    zrUtil.mixin(ComponentModel, require('./mixin/boxLayout'));\n\n    module.exports = ComponentModel;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/Component.js\n// module id = 469\n// module chunks = 0 1 2","'use strict';\n/**\n * 事件辅助类\n * @module zrender/core/event\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n */\n\n\n    var Eventful = require('../mixin/Eventful');\n    var env = require('./env');\n\n    var isDomLevel2 = (typeof window !== 'undefined') && !!window.addEventListener;\n\n    function getBoundingClientRect(el) {\n        // BlackBerry 5, iOS 3 (original iPhone) don't have getBoundingRect\n        return el.getBoundingClientRect ? el.getBoundingClientRect() : {left: 0, top: 0};\n    }\n\n    // `calculate` is optional, default false\n    function clientToLocal(el, e, out, calculate) {\n        out = out || {};\n\n        // According to the W3C Working Draft, offsetX and offsetY should be relative\n        // to the padding edge of the target element. The only browser using this convention\n        // is IE. Webkit uses the border edge, Opera uses the content edge, and FireFox does\n        // not support the properties.\n        // (see http://www.jacklmoore.com/notes/mouse-position/)\n        // In zr painter.dom, padding edge equals to border edge.\n\n        // FIXME\n        // When mousemove event triggered on ec tooltip, target is not zr painter.dom, and\n        // offsetX/Y is relative to e.target, where the calculation of zrX/Y via offsetX/Y\n        // is too complex. So css-transfrom dont support in this case temporarily.\n        if (calculate || !env.canvasSupported) {\n            defaultGetZrXY(el, e, out);\n        }\n        // Caution: In FireFox, layerX/layerY Mouse position relative to the closest positioned\n        // ancestor element, so we should make sure el is positioned (e.g., not position:static).\n        // BTW1, Webkit don't return the same results as FF in non-simple cases (like add\n        // zoom-factor, overflow / opacity layers, transforms ...)\n        // BTW2, (ev.offsetY || ev.pageY - $(ev.target).offset().top) is not correct in preserve-3d.\n        // <https://bugs.jquery.com/ticket/8523#comment:14>\n        // BTW3, In ff, offsetX/offsetY is always 0.\n        else if (env.browser.firefox && e.layerX != null && e.layerX !== e.offsetX) {\n            out.zrX = e.layerX;\n            out.zrY = e.layerY;\n        }\n        // For IE6+, chrome, safari, opera. (When will ff support offsetX?)\n        else if (e.offsetX != null) {\n            out.zrX = e.offsetX;\n            out.zrY = e.offsetY;\n        }\n        // For some other device, e.g., IOS safari.\n        else {\n            defaultGetZrXY(el, e, out);\n        }\n\n        return out;\n    }\n\n    function defaultGetZrXY(el, e, out) {\n        // This well-known method below does not support css transform.\n        var box = getBoundingClientRect(el);\n        out.zrX = e.clientX - box.left;\n        out.zrY = e.clientY - box.top;\n    }\n\n    /**\n     * 如果存在第三方嵌入的一些dom触发的事件，或touch事件，需要转换一下事件坐标.\n     * `calculate` is optional, default false.\n     */\n    function normalizeEvent(el, e, calculate) {\n\n        e = e || window.event;\n\n        if (e.zrX != null) {\n            return e;\n        }\n\n        var eventType = e.type;\n        var isTouch = eventType && eventType.indexOf('touch') >= 0;\n\n        if (!isTouch) {\n            clientToLocal(el, e, e, calculate);\n            e.zrDelta = (e.wheelDelta) ? e.wheelDelta / 120 : -(e.detail || 0) / 3;\n        }\n        else {\n            var touch = eventType != 'touchend'\n                ? e.targetTouches[0]\n                : e.changedTouches[0];\n            touch && clientToLocal(el, touch, e, calculate);\n        }\n\n        return e;\n    }\n\n    function addEventListener(el, name, handler) {\n        if (isDomLevel2) {\n            el.addEventListener(name, handler);\n        }\n        else {\n            el.attachEvent('on' + name, handler);\n        }\n    }\n\n    function removeEventListener(el, name, handler) {\n        if (isDomLevel2) {\n            el.removeEventListener(name, handler);\n        }\n        else {\n            el.detachEvent('on' + name, handler);\n        }\n    }\n\n    /**\n     * preventDefault and stopPropagation.\n     * Notice: do not do that in zrender. Upper application\n     * do that if necessary.\n     *\n     * @memberOf module:zrender/core/event\n     * @method\n     * @param {Event} e : event对象\n     */\n    var stop = isDomLevel2\n        ? function (e) {\n            e.preventDefault();\n            e.stopPropagation();\n            e.cancelBubble = true;\n        }\n        : function (e) {\n            e.returnValue = false;\n            e.cancelBubble = true;\n        };\n\n    module.exports = {\n        clientToLocal: clientToLocal,\n        normalizeEvent: normalizeEvent,\n        addEventListener: addEventListener,\n        removeEventListener: removeEventListener,\n\n        stop: stop,\n        // 做向上兼容\n        Dispatcher: Eventful\n    };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/event.js\n// module id = 470\n// module chunks = 0 1 2","'use strict';\n// Layout helpers for each component positioning\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var BoundingRect = require('zrender/lib/core/BoundingRect');\n    var numberUtil = require('./number');\n    var formatUtil = require('./format');\n    var parsePercent = numberUtil.parsePercent;\n    var each = zrUtil.each;\n\n    var layout = {};\n\n    /**\n     * @public\n     */\n    var LOCATION_PARAMS = layout.LOCATION_PARAMS = [\n        'left', 'right', 'top', 'bottom', 'width', 'height'\n    ];\n\n    /**\n     * @public\n     */\n    var HV_NAMES = layout.HV_NAMES = [\n        ['width', 'left', 'right'],\n        ['height', 'top', 'bottom']\n    ];\n\n    function boxLayout(orient, group, gap, maxWidth, maxHeight) {\n        var x = 0;\n        var y = 0;\n        if (maxWidth == null) {\n            maxWidth = Infinity;\n        }\n        if (maxHeight == null) {\n            maxHeight = Infinity;\n        }\n        var currentLineMaxSize = 0;\n        group.eachChild(function (child, idx) {\n            var position = child.position;\n            var rect = child.getBoundingRect();\n            var nextChild = group.childAt(idx + 1);\n            var nextChildRect = nextChild && nextChild.getBoundingRect();\n            var nextX;\n            var nextY;\n            if (orient === 'horizontal') {\n                var moveX = rect.width + (nextChildRect ? (-nextChildRect.x + rect.x) : 0);\n                nextX = x + moveX;\n                // Wrap when width exceeds maxWidth or meet a `newline` group\n                if (nextX > maxWidth || child.newline) {\n                    x = 0;\n                    nextX = moveX;\n                    y += currentLineMaxSize + gap;\n                    currentLineMaxSize = rect.height;\n                }\n                else {\n                    currentLineMaxSize = Math.max(currentLineMaxSize, rect.height);\n                }\n            }\n            else {\n                var moveY = rect.height + (nextChildRect ? (-nextChildRect.y + rect.y) : 0);\n                nextY = y + moveY;\n                // Wrap when width exceeds maxHeight or meet a `newline` group\n                if (nextY > maxHeight || child.newline) {\n                    x += currentLineMaxSize + gap;\n                    y = 0;\n                    nextY = moveY;\n                    currentLineMaxSize = rect.width;\n                }\n                else {\n                    currentLineMaxSize = Math.max(currentLineMaxSize, rect.width);\n                }\n            }\n\n            if (child.newline) {\n                return;\n            }\n\n            position[0] = x;\n            position[1] = y;\n\n            orient === 'horizontal'\n                ? (x = nextX + gap)\n                : (y = nextY + gap);\n        });\n    }\n\n    /**\n     * VBox or HBox layouting\n     * @param {string} orient\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.box = boxLayout;\n\n    /**\n     * VBox layouting\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.vbox = zrUtil.curry(boxLayout, 'vertical');\n\n    /**\n     * HBox layouting\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.hbox = zrUtil.curry(boxLayout, 'horizontal');\n\n    /**\n     * If x or x2 is not specified or 'center' 'left' 'right',\n     * the width would be as long as possible.\n     * If y or y2 is not specified or 'middle' 'top' 'bottom',\n     * the height would be as long as possible.\n     *\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.x]\n     * @param {number|string} [positionInfo.y]\n     * @param {number|string} [positionInfo.x2]\n     * @param {number|string} [positionInfo.y2]\n     * @param {Object} containerRect\n     * @param {string|number} margin\n     * @return {Object} {width, height}\n     */\n    layout.getAvailableSize = function (positionInfo, containerRect, margin) {\n        var containerWidth = containerRect.width;\n        var containerHeight = containerRect.height;\n\n        var x = parsePercent(positionInfo.x, containerWidth);\n        var y = parsePercent(positionInfo.y, containerHeight);\n        var x2 = parsePercent(positionInfo.x2, containerWidth);\n        var y2 = parsePercent(positionInfo.y2, containerHeight);\n\n        (isNaN(x) || isNaN(parseFloat(positionInfo.x))) && (x = 0);\n        (isNaN(x2) || isNaN(parseFloat(positionInfo.x2))) && (x2 = containerWidth);\n        (isNaN(y) || isNaN(parseFloat(positionInfo.y))) && (y = 0);\n        (isNaN(y2) || isNaN(parseFloat(positionInfo.y2))) && (y2 = containerHeight);\n\n        margin = formatUtil.normalizeCssArray(margin || 0);\n\n        return {\n            width: Math.max(x2 - x - margin[1] - margin[3], 0),\n            height: Math.max(y2 - y - margin[0] - margin[2], 0)\n        };\n    };\n\n    /**\n     * Parse position info.\n     *\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.left]\n     * @param {number|string} [positionInfo.top]\n     * @param {number|string} [positionInfo.right]\n     * @param {number|string} [positionInfo.bottom]\n     * @param {number|string} [positionInfo.width]\n     * @param {number|string} [positionInfo.height]\n     * @param {number|string} [positionInfo.aspect] Aspect is width / height\n     * @param {Object} containerRect\n     * @param {string|number} [margin]\n     *\n     * @return {module:zrender/core/BoundingRect}\n     */\n    layout.getLayoutRect = function (\n        positionInfo, containerRect, margin\n    ) {\n        margin = formatUtil.normalizeCssArray(margin || 0);\n\n        var containerWidth = containerRect.width;\n        var containerHeight = containerRect.height;\n\n        var left = parsePercent(positionInfo.left, containerWidth);\n        var top = parsePercent(positionInfo.top, containerHeight);\n        var right = parsePercent(positionInfo.right, containerWidth);\n        var bottom = parsePercent(positionInfo.bottom, containerHeight);\n        var width = parsePercent(positionInfo.width, containerWidth);\n        var height = parsePercent(positionInfo.height, containerHeight);\n\n        var verticalMargin = margin[2] + margin[0];\n        var horizontalMargin = margin[1] + margin[3];\n        var aspect = positionInfo.aspect;\n\n        // If width is not specified, calculate width from left and right\n        if (isNaN(width)) {\n            width = containerWidth - right - horizontalMargin - left;\n        }\n        if (isNaN(height)) {\n            height = containerHeight - bottom - verticalMargin - top;\n        }\n\n        // If width and height are not given\n        // 1. Graph should not exceeds the container\n        // 2. Aspect must be keeped\n        // 3. Graph should take the space as more as possible\n        if (isNaN(width) && isNaN(height)) {\n            if (aspect > containerWidth / containerHeight) {\n                width = containerWidth * 0.8;\n            }\n            else {\n                height = containerHeight * 0.8;\n            }\n        }\n\n        if (aspect != null) {\n            // Calculate width or height with given aspect\n            if (isNaN(width)) {\n                width = aspect * height;\n            }\n            if (isNaN(height)) {\n                height = width / aspect;\n            }\n        }\n\n        // If left is not specified, calculate left from right and width\n        if (isNaN(left)) {\n            left = containerWidth - right - width - horizontalMargin;\n        }\n        if (isNaN(top)) {\n            top = containerHeight - bottom - height - verticalMargin;\n        }\n\n        // Align left and top\n        switch (positionInfo.left || positionInfo.right) {\n            case 'center':\n                left = containerWidth / 2 - width / 2 - margin[3];\n                break;\n            case 'right':\n                left = containerWidth - width - horizontalMargin;\n                break;\n        }\n        switch (positionInfo.top || positionInfo.bottom) {\n            case 'middle':\n            case 'center':\n                top = containerHeight / 2 - height / 2 - margin[0];\n                break;\n            case 'bottom':\n                top = containerHeight - height - verticalMargin;\n                break;\n        }\n        // If something is wrong and left, top, width, height are calculated as NaN\n        left = left || 0;\n        top = top || 0;\n        if (isNaN(width)) {\n            // Width may be NaN if only one value is given except width\n            width = containerWidth - left - (right || 0);\n        }\n        if (isNaN(height)) {\n            // Height may be NaN if only one value is given except height\n            height = containerHeight - top - (bottom || 0);\n        }\n\n        var rect = new BoundingRect(left + margin[3], top + margin[0], width, height);\n        rect.margin = margin;\n        return rect;\n    };\n\n\n    /**\n     * Position a zr element in viewport\n     *  Group position is specified by either\n     *  {left, top}, {right, bottom}\n     *  If all properties exists, right and bottom will be igonred.\n     *\n     * Logic:\n     *     1. Scale (against origin point in parent coord)\n     *     2. Rotate (against origin point in parent coord)\n     *     3. Traslate (with el.position by this method)\n     * So this method only fixes the last step 'Traslate', which does not affect\n     * scaling and rotating.\n     *\n     * If be called repeatly with the same input el, the same result will be gotten.\n     *\n     * @param {module:zrender/Element} el Should have `getBoundingRect` method.\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.left]\n     * @param {number|string} [positionInfo.top]\n     * @param {number|string} [positionInfo.right]\n     * @param {number|string} [positionInfo.bottom]\n     * @param {Object} containerRect\n     * @param {string|number} margin\n     * @param {Object} [opt]\n     * @param {Array.<number>} [opt.hv=[1,1]] Only horizontal or only vertical.\n     * @param {Array.<number>} [opt.boundingMode='all']\n     *        Specify how to calculate boundingRect when locating.\n     *        'all': Position the boundingRect that is transformed and uioned\n     *               both itself and its descendants.\n     *               This mode simplies confine the elements in the bounding\n     *               of their container (e.g., using 'right: 0').\n     *        'raw': Position the boundingRect that is not transformed and only itself.\n     *               This mode is useful when you want a element can overflow its\n     *               container. (Consider a rotated circle needs to be located in a corner.)\n     *               In this mode positionInfo.width/height can only be number.\n     */\n    layout.positionElement = function (el, positionInfo, containerRect, margin, opt) {\n        var h = !opt || !opt.hv || opt.hv[0];\n        var v = !opt || !opt.hv || opt.hv[1];\n        var boundingMode = opt && opt.boundingMode || 'all';\n\n        if (!h && !v) {\n            return;\n        }\n\n        var rect;\n        if (boundingMode === 'raw') {\n            rect = el.type === 'group'\n                ? new BoundingRect(0, 0, +positionInfo.width || 0, +positionInfo.height || 0)\n                : el.getBoundingRect();\n        }\n        else {\n            rect = el.getBoundingRect();\n            if (el.needLocalTransform()) {\n                var transform = el.getLocalTransform();\n                // Notice: raw rect may be inner object of el,\n                // which should not be modified.\n                rect = rect.clone();\n                rect.applyTransform(transform);\n            }\n        }\n\n        positionInfo = layout.getLayoutRect(\n            zrUtil.defaults(\n                {width: rect.width, height: rect.height},\n                positionInfo\n            ),\n            containerRect,\n            margin\n        );\n\n        // Because 'tranlate' is the last step in transform\n        // (see zrender/core/Transformable#getLocalTransfrom),\n        // we can just only modify el.position to get final result.\n        var elPos = el.position;\n        var dx = h ? positionInfo.x - rect.x : 0;\n        var dy = v ? positionInfo.y - rect.y : 0;\n\n        el.attr('position', boundingMode === 'raw' ? [dx, dy] : [elPos[0] + dx, elPos[1] + dy]);\n    };\n\n    /**\n     * @param {Object} option Contains some of the properties in HV_NAMES.\n     * @param {number} hvIdx 0: horizontal; 1: vertical.\n     */\n    layout.sizeCalculable = function (option, hvIdx) {\n        return option[HV_NAMES[hvIdx][0]] != null\n            || (option[HV_NAMES[hvIdx][1]] != null && option[HV_NAMES[hvIdx][2]] != null);\n    };\n\n    /**\n     * Consider Case:\n     * When defulat option has {left: 0, width: 100}, and we set {right: 0}\n     * through setOption or media query, using normal zrUtil.merge will cause\n     * {right: 0} does not take effect.\n     *\n     * @example\n     * ComponentModel.extend({\n     *     init: function () {\n     *         ...\n     *         var inputPositionParams = layout.getLayoutParams(option);\n     *         this.mergeOption(inputPositionParams);\n     *     },\n     *     mergeOption: function (newOption) {\n     *         newOption && zrUtil.merge(thisOption, newOption, true);\n     *         layout.mergeLayoutParam(thisOption, newOption);\n     *     }\n     * });\n     *\n     * @param {Object} targetOption\n     * @param {Object} newOption\n     * @param {Object|string} [opt]\n     * @param {boolean|Array.<boolean>} [opt.ignoreSize=false] Some component must has width and height.\n     */\n    layout.mergeLayoutParam = function (targetOption, newOption, opt) {\n        !zrUtil.isObject(opt) && (opt = {});\n\n        var ignoreSize = opt.ignoreSize;\n        !zrUtil.isArray(ignoreSize) && (ignoreSize = [ignoreSize, ignoreSize]);\n\n        var hResult = merge(HV_NAMES[0], 0);\n        var vResult = merge(HV_NAMES[1], 1);\n\n        copy(HV_NAMES[0], targetOption, hResult);\n        copy(HV_NAMES[1], targetOption, vResult);\n\n        function merge(names, hvIdx) {\n            var newParams = {};\n            var newValueCount = 0;\n            var merged = {};\n            var mergedValueCount = 0;\n            var enoughParamNumber = 2;\n\n            each(names, function (name) {\n                merged[name] = targetOption[name];\n            });\n            each(names, function (name) {\n                // Consider case: newOption.width is null, which is\n                // set by user for removing width setting.\n                hasProp(newOption, name) && (newParams[name] = merged[name] = newOption[name]);\n                hasValue(newParams, name) && newValueCount++;\n                hasValue(merged, name) && mergedValueCount++;\n            });\n\n            if (ignoreSize[hvIdx]) {\n                // Only one of left/right is premitted to exist.\n                if (hasValue(newOption, names[1])) {\n                    merged[names[2]] = null;\n                }\n                else if (hasValue(newOption, names[2])) {\n                    merged[names[1]] = null;\n                }\n                return merged;\n            }\n\n            // Case: newOption: {width: ..., right: ...},\n            // or targetOption: {right: ...} and newOption: {width: ...},\n            // There is no conflict when merged only has params count\n            // little than enoughParamNumber.\n            if (mergedValueCount === enoughParamNumber || !newValueCount) {\n                return merged;\n            }\n            // Case: newOption: {width: ..., right: ...},\n            // Than we can make sure user only want those two, and ignore\n            // all origin params in targetOption.\n            else if (newValueCount >= enoughParamNumber) {\n                return newParams;\n            }\n            else {\n                // Chose another param from targetOption by priority.\n                for (var i = 0; i < names.length; i++) {\n                    var name = names[i];\n                    if (!hasProp(newParams, name) && hasProp(targetOption, name)) {\n                        newParams[name] = targetOption[name];\n                        break;\n                    }\n                }\n                return newParams;\n            }\n        }\n\n        function hasProp(obj, name) {\n            return obj.hasOwnProperty(name);\n        }\n\n        function hasValue(obj, name) {\n            return obj[name] != null && obj[name] !== 'auto';\n        }\n\n        function copy(names, target, source) {\n            each(names, function (name) {\n                target[name] = source[name];\n            });\n        }\n    };\n\n    /**\n     * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n     * @param {Object} source\n     * @return {Object} Result contains those props.\n     */\n    layout.getLayoutParams = function (source) {\n        return layout.copyLayoutParams({}, source);\n    };\n\n    /**\n     * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n     * @param {Object} source\n     * @return {Object} Result contains those props.\n     */\n    layout.copyLayoutParams = function (target, source) {\n        source && target && each(LOCATION_PARAMS, function (name) {\n            source.hasOwnProperty(name) && (target[name] = source[name]);\n        });\n        return target;\n    };\n\n    module.exports = layout;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/layout.js\n// module id = 471\n// module chunks = 0 1 2","\n\n    var OrdinalScale = require('../scale/Ordinal');\n    var IntervalScale = require('../scale/Interval');\n    require('../scale/Time');\n    require('../scale/Log');\n    var Scale = require('../scale/Scale');\n\n    var numberUtil = require('../util/number');\n    var zrUtil = require('zrender/lib/core/util');\n    var textContain = require('zrender/lib/contain/text');\n    var axisHelper = {};\n\n    /**\n     * Get axis scale extent before niced.\n     * Item of returned array can only be number (including Infinity and NaN).\n     */\n    axisHelper.getScaleExtent = function (scale, model) {\n        var scaleType = scale.type;\n\n        var min = model.getMin();\n        var max = model.getMax();\n        var fixMin = min != null;\n        var fixMax = max != null;\n        var originalExtent = scale.getExtent();\n\n        var axisDataLen;\n        var boundaryGap;\n        var span;\n        if (scaleType === 'ordinal') {\n            axisDataLen = (model.get('data') || []).length;\n        }\n        else {\n            boundaryGap = model.get('boundaryGap');\n            if (!zrUtil.isArray(boundaryGap)) {\n                boundaryGap = [boundaryGap || 0, boundaryGap || 0];\n            }\n            if (typeof boundaryGap[0] === 'boolean') {\n                if (__DEV__) {\n                    console.warn('Boolean type for boundaryGap is only '\n                        + 'allowed for ordinal axis. Please use string in '\n                        + 'percentage instead, e.g., \"20%\". Currently, '\n                        + 'boundaryGap is set to be 0.');\n                }\n                boundaryGap = [0, 0];\n            }\n            boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], 1);\n            boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], 1);\n            span = (originalExtent[1] - originalExtent[0])\n                || Math.abs(originalExtent[0]);\n        }\n\n        // Notice: When min/max is not set (that is, when there are null/undefined,\n        // which is the most common case), these cases should be ensured:\n        // (1) For 'ordinal', show all axis.data.\n        // (2) For others:\n        //      + `boundaryGap` is applied (if min/max set, boundaryGap is\n        //      disabled).\n        //      + If `needCrossZero`, min/max should be zero, otherwise, min/max should\n        //      be the result that originalExtent enlarged by boundaryGap.\n        // (3) If no data, it should be ensured that `scale.setBlank` is set.\n\n        // FIXME\n        // (1) When min/max is 'dataMin' or 'dataMax', should boundaryGap be able to used?\n        // (2) When `needCrossZero` and all data is positive/negative, should it be ensured\n        // that the results processed by boundaryGap are positive/negative?\n\n        if (min == null) {\n            min = scaleType === 'ordinal'\n                ? (axisDataLen ? 0 : NaN)\n                : originalExtent[0] - boundaryGap[0] * span;\n        }\n        if (max == null) {\n            max = scaleType === 'ordinal'\n                ? (axisDataLen ? axisDataLen - 1 : NaN)\n                : originalExtent[1] + boundaryGap[1] * span;\n        }\n\n        if (min === 'dataMin') {\n            min = originalExtent[0];\n        }\n        if (max === 'dataMax') {\n            max = originalExtent[1];\n        }\n\n        (min == null || !isFinite(min)) && (min = NaN);\n        (max == null || !isFinite(max)) && (max = NaN);\n\n        scale.setBlank(zrUtil.eqNaN(min) || zrUtil.eqNaN(max));\n\n        // Evaluate if axis needs cross zero\n        if (model.getNeedCrossZero()) {\n            // Axis is over zero and min is not set\n            if (min > 0 && max > 0 && !fixMin) {\n                min = 0;\n            }\n            // Axis is under zero and max is not set\n            if (min < 0 && max < 0 && !fixMax) {\n                max = 0;\n            }\n        }\n\n        return [min, max];\n    };\n\n    axisHelper.niceScaleExtent = function (scale, model) {\n        var extent = axisHelper.getScaleExtent(scale, model);\n        var fixMin = model.getMin() != null;\n        var fixMax = model.getMax() != null;\n        var splitNumber = model.get('splitNumber');\n\n        if (scale.type === 'log') {\n            scale.base = model.get('logBase');\n        }\n\n        scale.setExtent(extent[0], extent[1]);\n        scale.niceExtent({\n            splitNumber: splitNumber,\n            fixMin: fixMin,\n            fixMax: fixMax,\n            minInterval: scale.type === 'interval' ? model.get('minInterval') : null\n        });\n\n        // If some one specified the min, max. And the default calculated interval\n        // is not good enough. He can specify the interval. It is often appeared\n        // in angle axis with angle 0 - 360. Interval calculated in interval scale is hard\n        // to be 60.\n        // FIXME\n        var interval = model.get('interval');\n        if (interval != null) {\n            scale.setInterval && scale.setInterval(interval);\n        }\n    };\n\n    /**\n     * @param {module:echarts/model/Model} model\n     * @param {string} [axisType] Default retrieve from model.type\n     * @return {module:echarts/scale/*}\n     */\n    axisHelper.createScaleByModel = function(model, axisType) {\n        axisType = axisType || model.get('type');\n        if (axisType) {\n            switch (axisType) {\n                // Buildin scale\n                case 'category':\n                    return new OrdinalScale(\n                        model.getCategories(), [Infinity, -Infinity]\n                    );\n                case 'value':\n                    return new IntervalScale();\n                // Extended scale, like time and log\n                default:\n                    return (Scale.getClass(axisType) || IntervalScale).create(model);\n            }\n        }\n    };\n\n    /**\n     * Check if the axis corss 0\n     */\n    axisHelper.ifAxisCrossZero = function (axis) {\n        var dataExtent = axis.scale.getExtent();\n        var min = dataExtent[0];\n        var max = dataExtent[1];\n        return !((min > 0 && max > 0) || (min < 0 && max < 0));\n    };\n\n    /**\n     * @param {Array.<number>} tickCoords In axis self coordinate.\n     * @param {Array.<string>} labels\n     * @param {string} font\n     * @param {boolean} isAxisHorizontal\n     * @return {number}\n     */\n    axisHelper.getAxisLabelInterval = function (tickCoords, labels, font, isAxisHorizontal) {\n        // FIXME\n        // 不同角的axis和label，不只是horizontal和vertical.\n\n        var textSpaceTakenRect;\n        var autoLabelInterval = 0;\n        var accumulatedLabelInterval = 0;\n\n        var step = 1;\n        if (labels.length > 40) {\n            // Simple optimization for large amount of labels\n            step = Math.floor(labels.length / 40);\n        }\n\n        for (var i = 0; i < tickCoords.length; i += step) {\n            var tickCoord = tickCoords[i];\n            var rect = textContain.getBoundingRect(\n                labels[i], font, 'center', 'top'\n            );\n            rect[isAxisHorizontal ? 'x' : 'y'] += tickCoord;\n            // FIXME Magic number 1.5\n            rect[isAxisHorizontal ? 'width' : 'height'] *= 1.3;\n            if (!textSpaceTakenRect) {\n                textSpaceTakenRect = rect.clone();\n            }\n            // There is no space for current label;\n            else if (textSpaceTakenRect.intersect(rect)) {\n                accumulatedLabelInterval++;\n                autoLabelInterval = Math.max(autoLabelInterval, accumulatedLabelInterval);\n            }\n            else {\n                textSpaceTakenRect.union(rect);\n                // Reset\n                accumulatedLabelInterval = 0;\n            }\n        }\n        if (autoLabelInterval === 0 && step > 1) {\n            return step;\n        }\n        return (autoLabelInterval + 1) * step - 1;\n    };\n\n    /**\n     * @param {Object} axis\n     * @param {Function} labelFormatter\n     * @return {Array.<string>}\n     */\n    axisHelper.getFormattedLabels = function (axis, labelFormatter) {\n        var scale = axis.scale;\n        var labels = scale.getTicksLabels();\n        var ticks = scale.getTicks();\n        if (typeof labelFormatter === 'string') {\n            labelFormatter = (function (tpl) {\n                return function (val) {\n                    return tpl.replace('{value}', val != null ? val : '');\n                };\n            })(labelFormatter);\n            // Consider empty array\n            return zrUtil.map(labels, labelFormatter);\n        }\n        else if (typeof labelFormatter === 'function') {\n            return zrUtil.map(ticks, function (tick, idx) {\n                return labelFormatter(\n                    axisHelper.getAxisRawValue(axis, tick),\n                    idx\n                );\n            }, this);\n        }\n        else {\n            return labels;\n        }\n    };\n\n    axisHelper.getAxisRawValue = function (axis, value) {\n        // In category axis with data zoom, tick is not the original\n        // index of axis.data. So tick should not be exposed to user\n        // in category axis.\n        return axis.type === 'category' ? axis.scale.getLabel(value) : value;\n    };\n\n    module.exports = axisHelper;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/axisHelper.js\n// module id = 472\n// module chunks = 0 1 2","\n\n    var textWidthCache = {};\n    var textWidthCacheCounter = 0;\n    var TEXT_CACHE_MAX = 5000;\n\n    var util = require('../core/util');\n    var BoundingRect = require('../core/BoundingRect');\n    var retrieve = util.retrieve;\n\n    function getTextWidth(text, textFont) {\n        var key = text + ':' + textFont;\n        if (textWidthCache[key]) {\n            return textWidthCache[key];\n        }\n\n        var textLines = (text + '').split('\\n');\n        var width = 0;\n\n        for (var i = 0, l = textLines.length; i < l; i++) {\n            // measureText 可以被覆盖以兼容不支持 Canvas 的环境\n            width = Math.max(textContain.measureText(textLines[i], textFont).width, width);\n        }\n\n        if (textWidthCacheCounter > TEXT_CACHE_MAX) {\n            textWidthCacheCounter = 0;\n            textWidthCache = {};\n        }\n        textWidthCacheCounter++;\n        textWidthCache[key] = width;\n\n        return width;\n    }\n\n    function getTextRect(text, textFont, textAlign, textBaseline) {\n        var textLineLen = ((text || '') + '').split('\\n').length;\n\n        var width = getTextWidth(text, textFont);\n        // FIXME 高度计算比较粗暴\n        var lineHeight = getTextWidth('国', textFont);\n        var height = textLineLen * lineHeight;\n\n        var rect = new BoundingRect(0, 0, width, height);\n        // Text has a special line height property\n        rect.lineHeight = lineHeight;\n\n        switch (textBaseline) {\n            case 'bottom':\n            case 'alphabetic':\n                rect.y -= lineHeight;\n                break;\n            case 'middle':\n                rect.y -= lineHeight / 2;\n                break;\n            // case 'hanging':\n            // case 'top':\n        }\n\n        // FIXME Right to left language\n        switch (textAlign) {\n            case 'end':\n            case 'right':\n                rect.x -= rect.width;\n                break;\n            case 'center':\n                rect.x -= rect.width / 2;\n                break;\n            // case 'start':\n            // case 'left':\n        }\n\n        return rect;\n    }\n\n    function adjustTextPositionOnRect(textPosition, rect, textRect, distance) {\n\n        var x = rect.x;\n        var y = rect.y;\n\n        var height = rect.height;\n        var width = rect.width;\n\n        var textHeight = textRect.height;\n\n        var lineHeight = textRect.lineHeight;\n        var halfHeight = height / 2 - textHeight / 2 + lineHeight;\n\n        var textAlign = 'left';\n\n        switch (textPosition) {\n            case 'left':\n                x -= distance;\n                y += halfHeight;\n                textAlign = 'right';\n                break;\n            case 'right':\n                x += distance + width;\n                y += halfHeight;\n                textAlign = 'left';\n                break;\n            case 'top':\n                x += width / 2;\n                y -= distance + textHeight - lineHeight;\n                textAlign = 'center';\n                break;\n            case 'bottom':\n                x += width / 2;\n                y += height + distance + lineHeight;\n                textAlign = 'center';\n                break;\n            case 'inside':\n                x += width / 2;\n                y += halfHeight;\n                textAlign = 'center';\n                break;\n            case 'insideLeft':\n                x += distance;\n                y += halfHeight;\n                textAlign = 'left';\n                break;\n            case 'insideRight':\n                x += width - distance;\n                y += halfHeight;\n                textAlign = 'right';\n                break;\n            case 'insideTop':\n                x += width / 2;\n                y += distance + lineHeight;\n                textAlign = 'center';\n                break;\n            case 'insideBottom':\n                x += width / 2;\n                y += height - textHeight - distance + lineHeight;\n                textAlign = 'center';\n                break;\n            case 'insideTopLeft':\n                x += distance;\n                y += distance + lineHeight;\n                textAlign = 'left';\n                break;\n            case 'insideTopRight':\n                x += width - distance;\n                y += distance + lineHeight;\n                textAlign = 'right';\n                break;\n            case 'insideBottomLeft':\n                x += distance;\n                y += height - textHeight - distance + lineHeight;\n                break;\n            case 'insideBottomRight':\n                x += width - distance;\n                y += height - textHeight - distance + lineHeight;\n                textAlign = 'right';\n                break;\n        }\n\n        return {\n            x: x,\n            y: y,\n            textAlign: textAlign,\n            textBaseline: 'alphabetic'\n        };\n    }\n\n    /**\n     * Show ellipsis if overflow.\n     *\n     * @param  {string} text\n     * @param  {string} containerWidth\n     * @param  {string} textFont\n     * @param  {number} [ellipsis='...']\n     * @param  {Object} [options]\n     * @param  {number} [options.maxIterations=3]\n     * @param  {number} [options.minChar=0] If truncate result are less\n     *                  then minChar, ellipsis will not show, which is\n     *                  better for user hint in some cases.\n     * @param  {number} [options.placeholder=''] When all truncated, use the placeholder.\n     * @return {string}\n     */\n    function truncateText(text, containerWidth, textFont, ellipsis, options) {\n        if (!containerWidth) {\n            return '';\n        }\n\n        options = options || {};\n\n        ellipsis = retrieve(ellipsis, '...');\n        var maxIterations = retrieve(options.maxIterations, 2);\n        var minChar = retrieve(options.minChar, 0);\n        // FIXME\n        // Other languages?\n        var cnCharWidth = getTextWidth('国', textFont);\n        // FIXME\n        // Consider proportional font?\n        var ascCharWidth = getTextWidth('a', textFont);\n        var placeholder = retrieve(options.placeholder, '');\n\n        // Example 1: minChar: 3, text: 'asdfzxcv', truncate result: 'asdf', but not: 'a...'.\n        // Example 2: minChar: 3, text: '维度', truncate result: '维', but not: '...'.\n        var contentWidth = containerWidth = Math.max(0, containerWidth - 1); // Reserve some gap.\n        for (var i = 0; i < minChar && contentWidth >= ascCharWidth; i++) {\n            contentWidth -= ascCharWidth;\n        }\n\n        var ellipsisWidth = getTextWidth(ellipsis);\n        if (ellipsisWidth > contentWidth) {\n            ellipsis = '';\n            ellipsisWidth = 0;\n        }\n\n        contentWidth = containerWidth - ellipsisWidth;\n\n        var textLines = (text + '').split('\\n');\n\n        for (var i = 0, len = textLines.length; i < len; i++) {\n            var textLine = textLines[i];\n            var lineWidth = getTextWidth(textLine, textFont);\n\n            if (lineWidth <= containerWidth) {\n                continue;\n            }\n\n            for (var j = 0;; j++) {\n                if (lineWidth <= contentWidth || j >= maxIterations) {\n                    textLine += ellipsis;\n                    break;\n                }\n\n                var subLength = j === 0\n                    ? estimateLength(textLine, contentWidth, ascCharWidth, cnCharWidth)\n                    : lineWidth > 0\n                    ? Math.floor(textLine.length * contentWidth / lineWidth)\n                    : 0;\n\n                textLine = textLine.substr(0, subLength);\n                lineWidth = getTextWidth(textLine, textFont);\n            }\n\n            if (textLine === '') {\n                textLine = placeholder;\n            }\n\n            textLines[i] = textLine;\n        }\n\n        return textLines.join('\\n');\n    }\n\n    function estimateLength(text, contentWidth, ascCharWidth, cnCharWidth) {\n        var width = 0;\n        var i = 0;\n        for (var len = text.length; i < len && width < contentWidth; i++) {\n            var charCode = text.charCodeAt(i);\n            width += (0 <= charCode && charCode <= 127) ? ascCharWidth : cnCharWidth;\n        }\n        return i;\n    }\n\n    var textContain = {\n\n        getWidth: getTextWidth,\n\n        getBoundingRect: getTextRect,\n\n        adjustTextPositionOnRect: adjustTextPositionOnRect,\n\n        truncateText: truncateText,\n\n        measureText: function (text, textFont) {\n            var ctx = util.getContext();\n            ctx.font = textFont || '12px sans-serif';\n            return ctx.measureText(text);\n        }\n    };\n\n    module.exports = textContain;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/text.js\n// module id = 473\n// module chunks = 0 1 2","'use strict';\n/**\n * 曲线辅助模块\n * @module zrender/core/curve\n * @author pissang(https://www.github.com/pissang)\n */\n\n\n    var vec2 = require('./vector');\n    var v2Create = vec2.create;\n    var v2DistSquare = vec2.distSquare;\n    var mathPow = Math.pow;\n    var mathSqrt = Math.sqrt;\n\n    var EPSILON = 1e-8;\n    var EPSILON_NUMERIC = 1e-4;\n\n    var THREE_SQRT = mathSqrt(3);\n    var ONE_THIRD = 1 / 3;\n\n    // 临时变量\n    var _v0 = v2Create();\n    var _v1 = v2Create();\n    var _v2 = v2Create();\n    // var _v3 = vec2.create();\n\n    function isAroundZero(val) {\n        return val > -EPSILON && val < EPSILON;\n    }\n    function isNotAroundZero(val) {\n        return val > EPSILON || val < -EPSILON;\n    }\n    /**\n     * 计算三次贝塞尔值\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @return {number}\n     */\n    function cubicAt(p0, p1, p2, p3, t) {\n        var onet = 1 - t;\n        return onet * onet * (onet * p0 + 3 * t * p1)\n             + t * t * (t * p3 + 3 * onet * p2);\n    }\n\n    /**\n     * 计算三次贝塞尔导数值\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @return {number}\n     */\n    function cubicDerivativeAt(p0, p1, p2, p3, t) {\n        var onet = 1 - t;\n        return 3 * (\n            ((p1 - p0) * onet + 2 * (p2 - p1) * t) * onet\n            + (p3 - p2) * t * t\n        );\n    }\n\n    /**\n     * 计算三次贝塞尔方程根，使用盛金公式\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} val\n     * @param  {Array.<number>} roots\n     * @return {number} 有效根数目\n     */\n    function cubicRootAt(p0, p1, p2, p3, val, roots) {\n        // Evaluate roots of cubic functions\n        var a = p3 + 3 * (p1 - p2) - p0;\n        var b = 3 * (p2 - p1 * 2 + p0);\n        var c = 3 * (p1  - p0);\n        var d = p0 - val;\n\n        var A = b * b - 3 * a * c;\n        var B = b * c - 9 * a * d;\n        var C = c * c - 3 * b * d;\n\n        var n = 0;\n\n        if (isAroundZero(A) && isAroundZero(B)) {\n            if (isAroundZero(b)) {\n                roots[0] = 0;\n            }\n            else {\n                var t1 = -c / b;  //t1, t2, t3, b is not zero\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = B * B - 4 * A * C;\n\n            if (isAroundZero(disc)) {\n                var K = B / A;\n                var t1 = -b / a + K;  // t1, a is not zero\n                var t2 = -K / 2;  // t2, t3\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n            }\n            else if (disc > 0) {\n                var discSqrt = mathSqrt(disc);\n                var Y1 = A * b + 1.5 * a * (-B + discSqrt);\n                var Y2 = A * b + 1.5 * a * (-B - discSqrt);\n                if (Y1 < 0) {\n                    Y1 = -mathPow(-Y1, ONE_THIRD);\n                }\n                else {\n                    Y1 = mathPow(Y1, ONE_THIRD);\n                }\n                if (Y2 < 0) {\n                    Y2 = -mathPow(-Y2, ONE_THIRD);\n                }\n                else {\n                    Y2 = mathPow(Y2, ONE_THIRD);\n                }\n                var t1 = (-b - (Y1 + Y2)) / (3 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n            else {\n                var T = (2 * A * b - 3 * a * B) / (2 * mathSqrt(A * A * A));\n                var theta = Math.acos(T) / 3;\n                var ASqrt = mathSqrt(A);\n                var tmp = Math.cos(theta);\n\n                var t1 = (-b - 2 * ASqrt * tmp) / (3 * a);\n                var t2 = (-b + ASqrt * (tmp + THREE_SQRT * Math.sin(theta))) / (3 * a);\n                var t3 = (-b + ASqrt * (tmp - THREE_SQRT * Math.sin(theta))) / (3 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n                if (t3 >= 0 && t3 <= 1) {\n                    roots[n++] = t3;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 计算三次贝塞尔方程极限值的位置\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {Array.<number>} extrema\n     * @return {number} 有效数目\n     */\n    function cubicExtrema(p0, p1, p2, p3, extrema) {\n        var b = 6 * p2 - 12 * p1 + 6 * p0;\n        var a = 9 * p1 + 3 * p3 - 3 * p0 - 9 * p2;\n        var c = 3 * p1 - 3 * p0;\n\n        var n = 0;\n        if (isAroundZero(a)) {\n            if (isNotAroundZero(b)) {\n                var t1 = -c / b;\n                if (t1 >= 0 && t1 <=1) {\n                    extrema[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = b * b - 4 * a * c;\n            if (isAroundZero(disc)) {\n                extrema[0] = -b / (2 * a);\n            }\n            else if (disc > 0) {\n                var discSqrt = mathSqrt(disc);\n                var t1 = (-b + discSqrt) / (2 * a);\n                var t2 = (-b - discSqrt) / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    extrema[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    extrema[n++] = t2;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 细分三次贝塞尔曲线\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @param  {Array.<number>} out\n     */\n    function cubicSubdivide(p0, p1, p2, p3, t, out) {\n        var p01 = (p1 - p0) * t + p0;\n        var p12 = (p2 - p1) * t + p1;\n        var p23 = (p3 - p2) * t + p2;\n\n        var p012 = (p12 - p01) * t + p01;\n        var p123 = (p23 - p12) * t + p12;\n\n        var p0123 = (p123 - p012) * t + p012;\n        // Seg0\n        out[0] = p0;\n        out[1] = p01;\n        out[2] = p012;\n        out[3] = p0123;\n        // Seg1\n        out[4] = p0123;\n        out[5] = p123;\n        out[6] = p23;\n        out[7] = p3;\n    }\n\n    /**\n     * 投射点到三次贝塞尔曲线上，返回投射距离。\n     * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x3\n     * @param {number} y3\n     * @param {number} x\n     * @param {number} y\n     * @param {Array.<number>} [out] 投射点\n     * @return {number}\n     */\n    function cubicProjectPoint(\n        x0, y0, x1, y1, x2, y2, x3, y3,\n        x, y, out\n    ) {\n        // http://pomax.github.io/bezierinfo/#projections\n        var t;\n        var interval = 0.005;\n        var d = Infinity;\n        var prev;\n        var next;\n        var d1;\n        var d2;\n\n        _v0[0] = x;\n        _v0[1] = y;\n\n        // 先粗略估计一下可能的最小距离的 t 值\n        // PENDING\n        for (var _t = 0; _t < 1; _t += 0.05) {\n            _v1[0] = cubicAt(x0, x1, x2, x3, _t);\n            _v1[1] = cubicAt(y0, y1, y2, y3, _t);\n            d1 = v2DistSquare(_v0, _v1);\n            if (d1 < d) {\n                t = _t;\n                d = d1;\n            }\n        }\n        d = Infinity;\n\n        // At most 32 iteration\n        for (var i = 0; i < 32; i++) {\n            if (interval < EPSILON_NUMERIC) {\n                break;\n            }\n            prev = t - interval;\n            next = t + interval;\n            // t - interval\n            _v1[0] = cubicAt(x0, x1, x2, x3, prev);\n            _v1[1] = cubicAt(y0, y1, y2, y3, prev);\n\n            d1 = v2DistSquare(_v1, _v0);\n\n            if (prev >= 0 && d1 < d) {\n                t = prev;\n                d = d1;\n            }\n            else {\n                // t + interval\n                _v2[0] = cubicAt(x0, x1, x2, x3, next);\n                _v2[1] = cubicAt(y0, y1, y2, y3, next);\n                d2 = v2DistSquare(_v2, _v0);\n\n                if (next <= 1 && d2 < d) {\n                    t = next;\n                    d = d2;\n                }\n                else {\n                    interval *= 0.5;\n                }\n            }\n        }\n        // t\n        if (out) {\n            out[0] = cubicAt(x0, x1, x2, x3, t);\n            out[1] = cubicAt(y0, y1, y2, y3, t);\n        }\n        // console.log(interval, i);\n        return mathSqrt(d);\n    }\n\n    /**\n     * 计算二次方贝塞尔值\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @return {number}\n     */\n    function quadraticAt(p0, p1, p2, t) {\n        var onet = 1 - t;\n        return onet * (onet * p0 + 2 * t * p1) + t * t * p2;\n    }\n\n    /**\n     * 计算二次方贝塞尔导数值\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @return {number}\n     */\n    function quadraticDerivativeAt(p0, p1, p2, t) {\n        return 2 * ((1 - t) * (p1 - p0) + t * (p2 - p1));\n    }\n\n    /**\n     * 计算二次方贝塞尔方程根\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @param  {Array.<number>} roots\n     * @return {number} 有效根数目\n     */\n    function quadraticRootAt(p0, p1, p2, val, roots) {\n        var a = p0 - 2 * p1 + p2;\n        var b = 2 * (p1 - p0);\n        var c = p0 - val;\n\n        var n = 0;\n        if (isAroundZero(a)) {\n            if (isNotAroundZero(b)) {\n                var t1 = -c / b;\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = b * b - 4 * a * c;\n            if (isAroundZero(disc)) {\n                var t1 = -b / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n            else if (disc > 0) {\n                var discSqrt = mathSqrt(disc);\n                var t1 = (-b + discSqrt) / (2 * a);\n                var t2 = (-b - discSqrt) / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 计算二次贝塞尔方程极限值\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @return {number}\n     */\n    function quadraticExtremum(p0, p1, p2) {\n        var divider = p0 + p2 - 2 * p1;\n        if (divider === 0) {\n            // p1 is center of p0 and p2\n            return 0.5;\n        }\n        else {\n            return (p0 - p1) / divider;\n        }\n    }\n\n    /**\n     * 细分二次贝塞尔曲线\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @param  {Array.<number>} out\n     */\n    function quadraticSubdivide(p0, p1, p2, t, out) {\n        var p01 = (p1 - p0) * t + p0;\n        var p12 = (p2 - p1) * t + p1;\n        var p012 = (p12 - p01) * t + p01;\n\n        // Seg0\n        out[0] = p0;\n        out[1] = p01;\n        out[2] = p012;\n\n        // Seg1\n        out[3] = p012;\n        out[4] = p12;\n        out[5] = p2;\n    }\n\n    /**\n     * 投射点到二次贝塞尔曲线上，返回投射距离。\n     * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x\n     * @param {number} y\n     * @param {Array.<number>} out 投射点\n     * @return {number}\n     */\n    function quadraticProjectPoint(\n        x0, y0, x1, y1, x2, y2,\n        x, y, out\n    ) {\n        // http://pomax.github.io/bezierinfo/#projections\n        var t;\n        var interval = 0.005;\n        var d = Infinity;\n\n        _v0[0] = x;\n        _v0[1] = y;\n\n        // 先粗略估计一下可能的最小距离的 t 值\n        // PENDING\n        for (var _t = 0; _t < 1; _t += 0.05) {\n            _v1[0] = quadraticAt(x0, x1, x2, _t);\n            _v1[1] = quadraticAt(y0, y1, y2, _t);\n            var d1 = v2DistSquare(_v0, _v1);\n            if (d1 < d) {\n                t = _t;\n                d = d1;\n            }\n        }\n        d = Infinity;\n\n        // At most 32 iteration\n        for (var i = 0; i < 32; i++) {\n            if (interval < EPSILON_NUMERIC) {\n                break;\n            }\n            var prev = t - interval;\n            var next = t + interval;\n            // t - interval\n            _v1[0] = quadraticAt(x0, x1, x2, prev);\n            _v1[1] = quadraticAt(y0, y1, y2, prev);\n\n            var d1 = v2DistSquare(_v1, _v0);\n\n            if (prev >= 0 && d1 < d) {\n                t = prev;\n                d = d1;\n            }\n            else {\n                // t + interval\n                _v2[0] = quadraticAt(x0, x1, x2, next);\n                _v2[1] = quadraticAt(y0, y1, y2, next);\n                var d2 = v2DistSquare(_v2, _v0);\n                if (next <= 1 && d2 < d) {\n                    t = next;\n                    d = d2;\n                }\n                else {\n                    interval *= 0.5;\n                }\n            }\n        }\n        // t\n        if (out) {\n            out[0] = quadraticAt(x0, x1, x2, t);\n            out[1] = quadraticAt(y0, y1, y2, t);\n        }\n        // console.log(interval, i);\n        return mathSqrt(d);\n    }\n\n    module.exports = {\n\n        cubicAt: cubicAt,\n\n        cubicDerivativeAt: cubicDerivativeAt,\n\n        cubicRootAt: cubicRootAt,\n\n        cubicExtrema: cubicExtrema,\n\n        cubicSubdivide: cubicSubdivide,\n\n        cubicProjectPoint: cubicProjectPoint,\n\n        quadraticAt: quadraticAt,\n\n        quadraticDerivativeAt: quadraticDerivativeAt,\n\n        quadraticRootAt: quadraticRootAt,\n\n        quadraticExtremum: quadraticExtremum,\n\n        quadraticSubdivide: quadraticSubdivide,\n\n        quadraticProjectPoint: quadraticProjectPoint\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/curve.js\n// module id = 474\n// module chunks = 0 1 2","\n    var ArrayCtor = typeof Float32Array === 'undefined'\n        ? Array\n        : Float32Array;\n    /**\n     * 3x2矩阵操作类\n     * @exports zrender/tool/matrix\n     */\n    var matrix = {\n        /**\n         * 创建一个单位矩阵\n         * @return {Float32Array|Array.<number>}\n         */\n        create : function() {\n            var out = new ArrayCtor(6);\n            matrix.identity(out);\n\n            return out;\n        },\n        /**\n         * 设置矩阵为单位矩阵\n         * @param {Float32Array|Array.<number>} out\n         */\n        identity : function(out) {\n            out[0] = 1;\n            out[1] = 0;\n            out[2] = 0;\n            out[3] = 1;\n            out[4] = 0;\n            out[5] = 0;\n            return out;\n        },\n        /**\n         * 复制矩阵\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} m\n         */\n        copy: function(out, m) {\n            out[0] = m[0];\n            out[1] = m[1];\n            out[2] = m[2];\n            out[3] = m[3];\n            out[4] = m[4];\n            out[5] = m[5];\n            return out;\n        },\n        /**\n         * 矩阵相乘\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} m1\n         * @param {Float32Array|Array.<number>} m2\n         */\n        mul : function (out, m1, m2) {\n            // Consider matrix.mul(m, m2, m);\n            // where out is the same as m2.\n            // So use temp variable to escape error.\n            var out0 = m1[0] * m2[0] + m1[2] * m2[1];\n            var out1 = m1[1] * m2[0] + m1[3] * m2[1];\n            var out2 = m1[0] * m2[2] + m1[2] * m2[3];\n            var out3 = m1[1] * m2[2] + m1[3] * m2[3];\n            var out4 = m1[0] * m2[4] + m1[2] * m2[5] + m1[4];\n            var out5 = m1[1] * m2[4] + m1[3] * m2[5] + m1[5];\n            out[0] = out0;\n            out[1] = out1;\n            out[2] = out2;\n            out[3] = out3;\n            out[4] = out4;\n            out[5] = out5;\n            return out;\n        },\n        /**\n         * 平移变换\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         * @param {Float32Array|Array.<number>} v\n         */\n        translate : function(out, a, v) {\n            out[0] = a[0];\n            out[1] = a[1];\n            out[2] = a[2];\n            out[3] = a[3];\n            out[4] = a[4] + v[0];\n            out[5] = a[5] + v[1];\n            return out;\n        },\n        /**\n         * 旋转变换\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         * @param {number} rad\n         */\n        rotate : function(out, a, rad) {\n            var aa = a[0];\n            var ac = a[2];\n            var atx = a[4];\n            var ab = a[1];\n            var ad = a[3];\n            var aty = a[5];\n            var st = Math.sin(rad);\n            var ct = Math.cos(rad);\n\n            out[0] = aa * ct + ab * st;\n            out[1] = -aa * st + ab * ct;\n            out[2] = ac * ct + ad * st;\n            out[3] = -ac * st + ct * ad;\n            out[4] = ct * atx + st * aty;\n            out[5] = ct * aty - st * atx;\n            return out;\n        },\n        /**\n         * 缩放变换\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         * @param {Float32Array|Array.<number>} v\n         */\n        scale : function(out, a, v) {\n            var vx = v[0];\n            var vy = v[1];\n            out[0] = a[0] * vx;\n            out[1] = a[1] * vy;\n            out[2] = a[2] * vx;\n            out[3] = a[3] * vy;\n            out[4] = a[4] * vx;\n            out[5] = a[5] * vy;\n            return out;\n        },\n        /**\n         * 求逆矩阵\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         */\n        invert : function(out, a) {\n\n            var aa = a[0];\n            var ac = a[2];\n            var atx = a[4];\n            var ab = a[1];\n            var ad = a[3];\n            var aty = a[5];\n\n            var det = aa * ad - ab * ac;\n            if (!det) {\n                return null;\n            }\n            det = 1.0 / det;\n\n            out[0] = ad * det;\n            out[1] = -ab * det;\n            out[2] = -ac * det;\n            out[3] = aa * det;\n            out[4] = (ac * aty - ad * atx) * det;\n            out[5] = (ab * atx - aa * aty) * det;\n            return out;\n        }\n    };\n\n    module.exports = matrix;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/matrix.js\n// module id = 475\n// module chunks = 0 1 2","/**\n * 事件扩展\n * @module zrender/mixin/Eventful\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\n\n\n    var arrySlice = Array.prototype.slice;\n\n    /**\n     * 事件分发器\n     * @alias module:zrender/mixin/Eventful\n     * @constructor\n     */\n    var Eventful = function () {\n        this._$handlers = {};\n    };\n\n    Eventful.prototype = {\n\n        constructor: Eventful,\n\n        /**\n         * 单次触发绑定，trigger后销毁\n         *\n         * @param {string} event 事件名\n         * @param {Function} handler 响应函数\n         * @param {Object} context\n         */\n        one: function (event, handler, context) {\n            var _h = this._$handlers;\n\n            if (!handler || !event) {\n                return this;\n            }\n\n            if (!_h[event]) {\n                _h[event] = [];\n            }\n\n            for (var i = 0; i < _h[event].length; i++) {\n                if (_h[event][i].h === handler) {\n                    return this;\n                }\n            }\n\n            _h[event].push({\n                h: handler,\n                one: true,\n                ctx: context || this\n            });\n\n            return this;\n        },\n\n        /**\n         * 绑定事件\n         * @param {string} event 事件名\n         * @param {Function} handler 事件处理函数\n         * @param {Object} [context]\n         */\n        on: function (event, handler, context) {\n            var _h = this._$handlers;\n\n            if (!handler || !event) {\n                return this;\n            }\n\n            if (!_h[event]) {\n                _h[event] = [];\n            }\n\n            for (var i = 0; i < _h[event].length; i++) {\n                if (_h[event][i].h === handler) {\n                    return this;\n                }\n            }\n\n            _h[event].push({\n                h: handler,\n                one: false,\n                ctx: context || this\n            });\n\n            return this;\n        },\n\n        /**\n         * 是否绑定了事件\n         * @param  {string}  event\n         * @return {boolean}\n         */\n        isSilent: function (event) {\n            var _h = this._$handlers;\n            return _h[event] && _h[event].length;\n        },\n\n        /**\n         * 解绑事件\n         * @param {string} event 事件名\n         * @param {Function} [handler] 事件处理函数\n         */\n        off: function (event, handler) {\n            var _h = this._$handlers;\n\n            if (!event) {\n                this._$handlers = {};\n                return this;\n            }\n\n            if (handler) {\n                if (_h[event]) {\n                    var newList = [];\n                    for (var i = 0, l = _h[event].length; i < l; i++) {\n                        if (_h[event][i]['h'] != handler) {\n                            newList.push(_h[event][i]);\n                        }\n                    }\n                    _h[event] = newList;\n                }\n\n                if (_h[event] && _h[event].length === 0) {\n                    delete _h[event];\n                }\n            }\n            else {\n                delete _h[event];\n            }\n\n            return this;\n        },\n\n        /**\n         * 事件分发\n         *\n         * @param {string} type 事件类型\n         */\n        trigger: function (type) {\n            if (this._$handlers[type]) {\n                var args = arguments;\n                var argLen = args.length;\n\n                if (argLen > 3) {\n                    args = arrySlice.call(args, 1);\n                }\n\n                var _h = this._$handlers[type];\n                var len = _h.length;\n                for (var i = 0; i < len;) {\n                    // Optimize advise from backbone\n                    switch (argLen) {\n                        case 1:\n                            _h[i]['h'].call(_h[i]['ctx']);\n                            break;\n                        case 2:\n                            _h[i]['h'].call(_h[i]['ctx'], args[1]);\n                            break;\n                        case 3:\n                            _h[i]['h'].call(_h[i]['ctx'], args[1], args[2]);\n                            break;\n                        default:\n                            // have more than 2 given arguments\n                            _h[i]['h'].apply(_h[i]['ctx'], args);\n                            break;\n                    }\n\n                    if (_h[i]['one']) {\n                        _h.splice(i, 1);\n                        len--;\n                    }\n                    else {\n                        i++;\n                    }\n                }\n            }\n\n            return this;\n        },\n\n        /**\n         * 带有context的事件分发, 最后一个参数是事件回调的context\n         * @param {string} type 事件类型\n         */\n        triggerWithContext: function (type) {\n            if (this._$handlers[type]) {\n                var args = arguments;\n                var argLen = args.length;\n\n                if (argLen > 4) {\n                    args = arrySlice.call(args, 1, args.length - 1);\n                }\n                var ctx = args[args.length - 1];\n\n                var _h = this._$handlers[type];\n                var len = _h.length;\n                for (var i = 0; i < len;) {\n                    // Optimize advise from backbone\n                    switch (argLen) {\n                        case 1:\n                            _h[i]['h'].call(ctx);\n                            break;\n                        case 2:\n                            _h[i]['h'].call(ctx, args[1]);\n                            break;\n                        case 3:\n                            _h[i]['h'].call(ctx, args[1], args[2]);\n                            break;\n                        default:\n                            // have more than 2 given arguments\n                            _h[i]['h'].apply(ctx, args);\n                            break;\n                    }\n\n                    if (_h[i]['one']) {\n                        _h.splice(i, 1);\n                        len--;\n                    }\n                    else {\n                        i++;\n                    }\n                }\n            }\n\n            return this;\n        }\n    };\n\n    // 对象可以通过 onxxxx 绑定事件\n    /**\n     * @event module:zrender/mixin/Eventful#onclick\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseover\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseout\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousemove\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousewheel\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousedown\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseup\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondrag\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragstart\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragend\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragenter\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragleave\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragover\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondrop\n     * @type {Function}\n     * @default null\n     */\n\n    module.exports = Eventful;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/mixin/Eventful.js\n// module id = 476\n// module chunks = 0 1 2","/**\n * @module zrender/tool/color\n */\n\n\n    var LRU = require('../core/LRU');\n\n    var kCSSColorTable = {\n        'transparent': [0,0,0,0], 'aliceblue': [240,248,255,1],\n        'antiquewhite': [250,235,215,1], 'aqua': [0,255,255,1],\n        'aquamarine': [127,255,212,1], 'azure': [240,255,255,1],\n        'beige': [245,245,220,1], 'bisque': [255,228,196,1],\n        'black': [0,0,0,1], 'blanchedalmond': [255,235,205,1],\n        'blue': [0,0,255,1], 'blueviolet': [138,43,226,1],\n        'brown': [165,42,42,1], 'burlywood': [222,184,135,1],\n        'cadetblue': [95,158,160,1], 'chartreuse': [127,255,0,1],\n        'chocolate': [210,105,30,1], 'coral': [255,127,80,1],\n        'cornflowerblue': [100,149,237,1], 'cornsilk': [255,248,220,1],\n        'crimson': [220,20,60,1], 'cyan': [0,255,255,1],\n        'darkblue': [0,0,139,1], 'darkcyan': [0,139,139,1],\n        'darkgoldenrod': [184,134,11,1], 'darkgray': [169,169,169,1],\n        'darkgreen': [0,100,0,1], 'darkgrey': [169,169,169,1],\n        'darkkhaki': [189,183,107,1], 'darkmagenta': [139,0,139,1],\n        'darkolivegreen': [85,107,47,1], 'darkorange': [255,140,0,1],\n        'darkorchid': [153,50,204,1], 'darkred': [139,0,0,1],\n        'darksalmon': [233,150,122,1], 'darkseagreen': [143,188,143,1],\n        'darkslateblue': [72,61,139,1], 'darkslategray': [47,79,79,1],\n        'darkslategrey': [47,79,79,1], 'darkturquoise': [0,206,209,1],\n        'darkviolet': [148,0,211,1], 'deeppink': [255,20,147,1],\n        'deepskyblue': [0,191,255,1], 'dimgray': [105,105,105,1],\n        'dimgrey': [105,105,105,1], 'dodgerblue': [30,144,255,1],\n        'firebrick': [178,34,34,1], 'floralwhite': [255,250,240,1],\n        'forestgreen': [34,139,34,1], 'fuchsia': [255,0,255,1],\n        'gainsboro': [220,220,220,1], 'ghostwhite': [248,248,255,1],\n        'gold': [255,215,0,1], 'goldenrod': [218,165,32,1],\n        'gray': [128,128,128,1], 'green': [0,128,0,1],\n        'greenyellow': [173,255,47,1], 'grey': [128,128,128,1],\n        'honeydew': [240,255,240,1], 'hotpink': [255,105,180,1],\n        'indianred': [205,92,92,1], 'indigo': [75,0,130,1],\n        'ivory': [255,255,240,1], 'khaki': [240,230,140,1],\n        'lavender': [230,230,250,1], 'lavenderblush': [255,240,245,1],\n        'lawngreen': [124,252,0,1], 'lemonchiffon': [255,250,205,1],\n        'lightblue': [173,216,230,1], 'lightcoral': [240,128,128,1],\n        'lightcyan': [224,255,255,1], 'lightgoldenrodyellow': [250,250,210,1],\n        'lightgray': [211,211,211,1], 'lightgreen': [144,238,144,1],\n        'lightgrey': [211,211,211,1], 'lightpink': [255,182,193,1],\n        'lightsalmon': [255,160,122,1], 'lightseagreen': [32,178,170,1],\n        'lightskyblue': [135,206,250,1], 'lightslategray': [119,136,153,1],\n        'lightslategrey': [119,136,153,1], 'lightsteelblue': [176,196,222,1],\n        'lightyellow': [255,255,224,1], 'lime': [0,255,0,1],\n        'limegreen': [50,205,50,1], 'linen': [250,240,230,1],\n        'magenta': [255,0,255,1], 'maroon': [128,0,0,1],\n        'mediumaquamarine': [102,205,170,1], 'mediumblue': [0,0,205,1],\n        'mediumorchid': [186,85,211,1], 'mediumpurple': [147,112,219,1],\n        'mediumseagreen': [60,179,113,1], 'mediumslateblue': [123,104,238,1],\n        'mediumspringgreen': [0,250,154,1], 'mediumturquoise': [72,209,204,1],\n        'mediumvioletred': [199,21,133,1], 'midnightblue': [25,25,112,1],\n        'mintcream': [245,255,250,1], 'mistyrose': [255,228,225,1],\n        'moccasin': [255,228,181,1], 'navajowhite': [255,222,173,1],\n        'navy': [0,0,128,1], 'oldlace': [253,245,230,1],\n        'olive': [128,128,0,1], 'olivedrab': [107,142,35,1],\n        'orange': [255,165,0,1], 'orangered': [255,69,0,1],\n        'orchid': [218,112,214,1], 'palegoldenrod': [238,232,170,1],\n        'palegreen': [152,251,152,1], 'paleturquoise': [175,238,238,1],\n        'palevioletred': [219,112,147,1], 'papayawhip': [255,239,213,1],\n        'peachpuff': [255,218,185,1], 'peru': [205,133,63,1],\n        'pink': [255,192,203,1], 'plum': [221,160,221,1],\n        'powderblue': [176,224,230,1], 'purple': [128,0,128,1],\n        'red': [255,0,0,1], 'rosybrown': [188,143,143,1],\n        'royalblue': [65,105,225,1], 'saddlebrown': [139,69,19,1],\n        'salmon': [250,128,114,1], 'sandybrown': [244,164,96,1],\n        'seagreen': [46,139,87,1], 'seashell': [255,245,238,1],\n        'sienna': [160,82,45,1], 'silver': [192,192,192,1],\n        'skyblue': [135,206,235,1], 'slateblue': [106,90,205,1],\n        'slategray': [112,128,144,1], 'slategrey': [112,128,144,1],\n        'snow': [255,250,250,1], 'springgreen': [0,255,127,1],\n        'steelblue': [70,130,180,1], 'tan': [210,180,140,1],\n        'teal': [0,128,128,1], 'thistle': [216,191,216,1],\n        'tomato': [255,99,71,1], 'turquoise': [64,224,208,1],\n        'violet': [238,130,238,1], 'wheat': [245,222,179,1],\n        'white': [255,255,255,1], 'whitesmoke': [245,245,245,1],\n        'yellow': [255,255,0,1], 'yellowgreen': [154,205,50,1]\n    };\n\n    function clampCssByte(i) {  // Clamp to integer 0 .. 255.\n        i = Math.round(i);  // Seems to be what Chrome does (vs truncation).\n        return i < 0 ? 0 : i > 255 ? 255 : i;\n    }\n\n    function clampCssAngle(i) {  // Clamp to integer 0 .. 360.\n        i = Math.round(i);  // Seems to be what Chrome does (vs truncation).\n        return i < 0 ? 0 : i > 360 ? 360 : i;\n    }\n\n    function clampCssFloat(f) {  // Clamp to float 0.0 .. 1.0.\n        return f < 0 ? 0 : f > 1 ? 1 : f;\n    }\n\n    function parseCssInt(str) {  // int or percentage.\n        if (str.length && str.charAt(str.length - 1) === '%') {\n            return clampCssByte(parseFloat(str) / 100 * 255);\n        }\n        return clampCssByte(parseInt(str, 10));\n    }\n\n    function parseCssFloat(str) {  // float or percentage.\n        if (str.length && str.charAt(str.length - 1) === '%') {\n            return clampCssFloat(parseFloat(str) / 100);\n        }\n        return clampCssFloat(parseFloat(str));\n    }\n\n    function cssHueToRgb(m1, m2, h) {\n        if (h < 0) {\n            h += 1;\n        }\n        else if (h > 1) {\n            h -= 1;\n        }\n\n        if (h * 6 < 1) {\n            return m1 + (m2 - m1) * h * 6;\n        }\n        if (h * 2 < 1) {\n            return m2;\n        }\n        if (h * 3 < 2) {\n            return m1 + (m2 - m1) * (2/3 - h) * 6;\n        }\n        return m1;\n    }\n\n    function lerp(a, b, p) {\n        return a + (b - a) * p;\n    }\n\n    function setRgba(out, r, g, b, a) {\n        out[0] = r; out[1] = g; out[2] = b; out[3] = a;\n        return out;\n    }\n    function copyRgba(out, a) {\n        out[0] = a[0]; out[1] = a[1]; out[2] = a[2]; out[3] = a[3];\n        return out;\n    }\n    var colorCache = new LRU(20);\n    var lastRemovedArr = null;\n    function putToCache(colorStr, rgbaArr) {\n        // Reuse removed array\n        if (lastRemovedArr) {\n            copyRgba(lastRemovedArr, rgbaArr);\n        }\n        lastRemovedArr = colorCache.put(colorStr, lastRemovedArr || (rgbaArr.slice()));\n    }\n    /**\n     * @param {string} colorStr\n     * @param {Array.<number>} out\n     * @return {Array.<number>}\n     * @memberOf module:zrender/util/color\n     */\n    function parse(colorStr, rgbaArr) {\n        if (!colorStr) {\n            return;\n        }\n        rgbaArr = rgbaArr || [];\n\n        var cached = colorCache.get(colorStr);\n        if (cached) {\n            return copyRgba(rgbaArr, cached);\n        }\n\n        // colorStr may be not string\n        colorStr = colorStr + '';\n        // Remove all whitespace, not compliant, but should just be more accepting.\n        var str = colorStr.replace(/ /g, '').toLowerCase();\n\n        // Color keywords (and transparent) lookup.\n        if (str in kCSSColorTable) {\n            copyRgba(rgbaArr, kCSSColorTable[str]);\n            putToCache(colorStr, rgbaArr);\n            return rgbaArr;\n        }\n\n        // #abc and #abc123 syntax.\n        if (str.charAt(0) === '#') {\n            if (str.length === 4) {\n                var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n                if (!(iv >= 0 && iv <= 0xfff)) {\n                    setRgba(rgbaArr, 0, 0, 0, 1);\n                    return;  // Covers NaN.\n                }\n                setRgba(rgbaArr,\n                    ((iv & 0xf00) >> 4) | ((iv & 0xf00) >> 8),\n                    (iv & 0xf0) | ((iv & 0xf0) >> 4),\n                    (iv & 0xf) | ((iv & 0xf) << 4),\n                    1\n                );\n                putToCache(colorStr, rgbaArr);\n                return rgbaArr;\n            }\n            else if (str.length === 7) {\n                var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n                if (!(iv >= 0 && iv <= 0xffffff)) {\n                    setRgba(rgbaArr, 0, 0, 0, 1);\n                    return;  // Covers NaN.\n                }\n                setRgba(rgbaArr,\n                    (iv & 0xff0000) >> 16,\n                    (iv & 0xff00) >> 8,\n                    iv & 0xff,\n                    1\n                );\n                putToCache(colorStr, rgbaArr);\n                return rgbaArr;\n            }\n\n            return;\n        }\n        var op = str.indexOf('('), ep = str.indexOf(')');\n        if (op !== -1 && ep + 1 === str.length) {\n            var fname = str.substr(0, op);\n            var params = str.substr(op + 1, ep - (op + 1)).split(',');\n            var alpha = 1;  // To allow case fallthrough.\n            switch (fname) {\n                case 'rgba':\n                    if (params.length !== 4) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    alpha = parseCssFloat(params.pop()); // jshint ignore:line\n                // Fall through.\n                case 'rgb':\n                    if (params.length !== 3) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    setRgba(rgbaArr,\n                        parseCssInt(params[0]),\n                        parseCssInt(params[1]),\n                        parseCssInt(params[2]),\n                        alpha\n                    );\n                    putToCache(colorStr, rgbaArr);\n                    return rgbaArr;\n                case 'hsla':\n                    if (params.length !== 4) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    params[3] = parseCssFloat(params[3]);\n                    hsla2rgba(params, rgbaArr);\n                    putToCache(colorStr, rgbaArr);\n                    return rgbaArr;\n                case 'hsl':\n                    if (params.length !== 3) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    hsla2rgba(params, rgbaArr);\n                    putToCache(colorStr, rgbaArr);\n                    return rgbaArr;\n                default:\n                    return;\n            }\n        }\n\n        setRgba(rgbaArr, 0, 0, 0, 1);\n        return;\n    }\n\n    /**\n     * @param {Array.<number>} hsla\n     * @param {Array.<number>} rgba\n     * @return {Array.<number>} rgba\n     */\n    function hsla2rgba(hsla, rgba) {\n        var h = (((parseFloat(hsla[0]) % 360) + 360) % 360) / 360;  // 0 .. 1\n        // NOTE(deanm): According to the CSS spec s/l should only be\n        // percentages, but we don't bother and let float or percentage.\n        var s = parseCssFloat(hsla[1]);\n        var l = parseCssFloat(hsla[2]);\n        var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n        var m1 = l * 2 - m2;\n\n        rgba = rgba || [];\n        setRgba(rgba,\n            clampCssByte(cssHueToRgb(m1, m2, h + 1 / 3) * 255),\n            clampCssByte(cssHueToRgb(m1, m2, h) * 255),\n            clampCssByte(cssHueToRgb(m1, m2, h - 1 / 3) * 255),\n            1\n        );\n\n        if (hsla.length === 4) {\n            rgba[3] = hsla[3];\n        }\n\n        return rgba;\n    }\n\n    /**\n     * @param {Array.<number>} rgba\n     * @return {Array.<number>} hsla\n     */\n    function rgba2hsla(rgba) {\n        if (!rgba) {\n            return;\n        }\n\n        // RGB from 0 to 255\n        var R = rgba[0] / 255;\n        var G = rgba[1] / 255;\n        var B = rgba[2] / 255;\n\n        var vMin = Math.min(R, G, B); // Min. value of RGB\n        var vMax = Math.max(R, G, B); // Max. value of RGB\n        var delta = vMax - vMin; // Delta RGB value\n\n        var L = (vMax + vMin) / 2;\n        var H;\n        var S;\n        // HSL results from 0 to 1\n        if (delta === 0) {\n            H = 0;\n            S = 0;\n        }\n        else {\n            if (L < 0.5) {\n                S = delta / (vMax + vMin);\n            }\n            else {\n                S = delta / (2 - vMax - vMin);\n            }\n\n            var deltaR = (((vMax - R) / 6) + (delta / 2)) / delta;\n            var deltaG = (((vMax - G) / 6) + (delta / 2)) / delta;\n            var deltaB = (((vMax - B) / 6) + (delta / 2)) / delta;\n\n            if (R === vMax) {\n                H = deltaB - deltaG;\n            }\n            else if (G === vMax) {\n                H = (1 / 3) + deltaR - deltaB;\n            }\n            else if (B === vMax) {\n                H = (2 / 3) + deltaG - deltaR;\n            }\n\n            if (H < 0) {\n                H += 1;\n            }\n\n            if (H > 1) {\n                H -= 1;\n            }\n        }\n\n        var hsla = [H * 360, S, L];\n\n        if (rgba[3] != null) {\n            hsla.push(rgba[3]);\n        }\n\n        return hsla;\n    }\n\n    /**\n     * @param {string} color\n     * @param {number} level\n     * @return {string}\n     * @memberOf module:zrender/util/color\n     */\n    function lift(color, level) {\n        var colorArr = parse(color);\n        if (colorArr) {\n            for (var i = 0; i < 3; i++) {\n                if (level < 0) {\n                    colorArr[i] = colorArr[i] * (1 - level) | 0;\n                }\n                else {\n                    colorArr[i] = ((255 - colorArr[i]) * level + colorArr[i]) | 0;\n                }\n            }\n            return stringify(colorArr, colorArr.length === 4 ? 'rgba' : 'rgb');\n        }\n    }\n\n    /**\n     * @param {string} color\n     * @return {string}\n     * @memberOf module:zrender/util/color\n     */\n    function toHex(color, level) {\n        var colorArr = parse(color);\n        if (colorArr) {\n            return ((1 << 24) + (colorArr[0] << 16) + (colorArr[1] << 8) + (+colorArr[2])).toString(16).slice(1);\n        }\n    }\n\n    /**\n     * Map value to color. Faster than mapToColor methods because color is represented by rgba array.\n     * @param {number} normalizedValue A float between 0 and 1.\n     * @param {Array.<Array.<number>>} colors List of rgba color array\n     * @param {Array.<number>} [out] Mapped gba color array\n     * @return {Array.<number>} will be null/undefined if input illegal.\n     */\n    function fastMapToColor(normalizedValue, colors, out) {\n        if (!(colors && colors.length)\n            || !(normalizedValue >= 0 && normalizedValue <= 1)\n        ) {\n            return;\n        }\n\n        out = out || [];\n\n        var value = normalizedValue * (colors.length - 1);\n        var leftIndex = Math.floor(value);\n        var rightIndex = Math.ceil(value);\n        var leftColor = colors[leftIndex];\n        var rightColor = colors[rightIndex];\n        var dv = value - leftIndex;\n        out[0] = clampCssByte(lerp(leftColor[0], rightColor[0], dv));\n        out[1] = clampCssByte(lerp(leftColor[1], rightColor[1], dv));\n        out[2] = clampCssByte(lerp(leftColor[2], rightColor[2], dv));\n        out[3] = clampCssFloat(lerp(leftColor[3], rightColor[3], dv));\n\n        return out;\n    }\n    /**\n     * @param {number} normalizedValue A float between 0 and 1.\n     * @param {Array.<string>} colors Color list.\n     * @param {boolean=} fullOutput Default false.\n     * @return {(string|Object)} Result color. If fullOutput,\n     *                           return {color: ..., leftIndex: ..., rightIndex: ..., value: ...},\n     * @memberOf module:zrender/util/color\n     */\n    function mapToColor(normalizedValue, colors, fullOutput) {\n        if (!(colors && colors.length)\n            || !(normalizedValue >= 0 && normalizedValue <= 1)\n        ) {\n            return;\n        }\n\n        var value = normalizedValue * (colors.length - 1);\n        var leftIndex = Math.floor(value);\n        var rightIndex = Math.ceil(value);\n        var leftColor = parse(colors[leftIndex]);\n        var rightColor = parse(colors[rightIndex]);\n        var dv = value - leftIndex;\n\n        var color = stringify(\n            [\n                clampCssByte(lerp(leftColor[0], rightColor[0], dv)),\n                clampCssByte(lerp(leftColor[1], rightColor[1], dv)),\n                clampCssByte(lerp(leftColor[2], rightColor[2], dv)),\n                clampCssFloat(lerp(leftColor[3], rightColor[3], dv))\n            ],\n            'rgba'\n        );\n\n        return fullOutput\n            ? {\n                color: color,\n                leftIndex: leftIndex,\n                rightIndex: rightIndex,\n                value: value\n            }\n            : color;\n    }\n\n    /**\n     * @param {string} color\n     * @param {number=} h 0 ~ 360, ignore when null.\n     * @param {number=} s 0 ~ 1, ignore when null.\n     * @param {number=} l 0 ~ 1, ignore when null.\n     * @return {string} Color string in rgba format.\n     * @memberOf module:zrender/util/color\n     */\n    function modifyHSL(color, h, s, l) {\n        color = parse(color);\n\n        if (color) {\n            color = rgba2hsla(color);\n            h != null && (color[0] = clampCssAngle(h));\n            s != null && (color[1] = parseCssFloat(s));\n            l != null && (color[2] = parseCssFloat(l));\n\n            return stringify(hsla2rgba(color), 'rgba');\n        }\n    }\n\n    /**\n     * @param {string} color\n     * @param {number=} alpha 0 ~ 1\n     * @return {string} Color string in rgba format.\n     * @memberOf module:zrender/util/color\n     */\n    function modifyAlpha(color, alpha) {\n        color = parse(color);\n\n        if (color && alpha != null) {\n            color[3] = clampCssFloat(alpha);\n            return stringify(color, 'rgba');\n        }\n    }\n\n    /**\n     * @param {Array.<number>} arrColor like [12,33,44,0.4]\n     * @param {string} type 'rgba', 'hsva', ...\n     * @return {string} Result color. (If input illegal, return undefined).\n     */\n    function stringify(arrColor, type) {\n        if (!arrColor || !arrColor.length) {\n            return;\n        }\n        var colorStr = arrColor[0] + ',' + arrColor[1] + ',' + arrColor[2];\n        if (type === 'rgba' || type === 'hsva' || type === 'hsla') {\n            colorStr += ',' + arrColor[3];\n        }\n        return type + '(' + colorStr + ')';\n    }\n\n    module.exports = {\n        parse: parse,\n        lift: lift,\n        toHex: toHex,\n        fastMapToColor: fastMapToColor,\n        mapToColor: mapToColor,\n        modifyHSL: modifyHSL,\n        modifyAlpha: modifyAlpha,\n        stringify: stringify\n    };\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/tool/color.js\n// module id = 477\n// module chunks = 0 1 2","// getting tag from 19.1.3.6 Object.prototype.toString()\nvar cof = require('./_cof')\n  , TAG = require('./_wks')('toStringTag')\n  // ES3 wrong here\n  , ARG = cof(function(){ return arguments; }()) == 'Arguments';\n\n// fallback for IE11 Script Access Denied error\nvar tryGet = function(it, key){\n  try {\n    return it[key];\n  } catch(e){ /* empty */ }\n};\n\nmodule.exports = function(it){\n  var O, T, B;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T\n    // builtinTag case\n    : ARG ? cof(O)\n    // ES3 arguments fallback\n    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_classof.js\n// module id = 478\n// module chunks = 0 1 2 3 4 8 11","// check on default Array iterator\nvar Iterators  = require('./_iterators')\n  , ITERATOR   = require('./_wks')('iterator')\n  , ArrayProto = Array.prototype;\n\nmodule.exports = function(it){\n  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_is-array-iter.js\n// module id = 479\n// module chunks = 0 1 2 3 4 8 11","// call something on iterator step with safe closing on error\nvar anObject = require('./_an-object');\nmodule.exports = function(iterator, fn, value, entries){\n  try {\n    return entries ? fn(anObject(value)[0], value[1]) : fn(value);\n  // 7.4.6 IteratorClose(iterator, completion)\n  } catch(e){\n    var ret = iterator['return'];\n    if(ret !== undefined)anObject(ret.call(iterator));\n    throw e;\n  }\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_iter-call.js\n// module id = 480\n// module chunks = 0 1 2 3 4 8 11","var ITERATOR     = require('./_wks')('iterator')\n  , SAFE_CLOSING = false;\n\ntry {\n  var riter = [7][ITERATOR]();\n  riter['return'] = function(){ SAFE_CLOSING = true; };\n  Array.from(riter, function(){ throw 2; });\n} catch(e){ /* empty */ }\n\nmodule.exports = function(exec, skipClosing){\n  if(!skipClosing && !SAFE_CLOSING)return false;\n  var safe = false;\n  try {\n    var arr  = [7]\n      , iter = arr[ITERATOR]();\n    iter.next = function(){ return {done: safe = true}; };\n    arr[ITERATOR] = function(){ return iter; };\n    exec(arr);\n  } catch(e){ /* empty */ }\n  return safe;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_iter-detect.js\n// module id = 481\n// module chunks = 0 1 2 3 4 8 11","var classof   = require('./_classof')\n  , ITERATOR  = require('./_wks')('iterator')\n  , Iterators = require('./_iterators');\nmodule.exports = require('./_core').getIteratorMethod = function(it){\n  if(it != undefined)return it[ITERATOR]\n    || it['@@iterator']\n    || Iterators[classof(it)];\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/core.get-iterator-method.js\n// module id = 482\n// module chunks = 0 1 2 3 4 8 11","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Model = require('../../model/Model');\n    var each = zrUtil.each;\n    var curry = zrUtil.curry;\n\n    var helper = {};\n\n    // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n    // allAxesInfo should be updated when setOption performed.\n    helper.collect = function (ecModel, api) {\n        var result = {\n            /**\n             * key: makeKey(axis.model)\n             * value: {\n             *      axis,\n             *      coordSys,\n             *      axisPointerModel,\n             *      triggerTooltip,\n             *      involveSeries,\n             *      snap,\n             *      seriesModels,\n             *      seriesDataCount\n             * }\n             */\n            axesInfo: {},\n            seriesInvolved: false,\n            /**\n             * key: makeKey(coordSys.model)\n             * value: Object: key makeKey(axis.model), value: axisInfo\n             */\n            coordSysAxesInfo: {},\n            coordSysMap: {}\n        };\n\n        collectAxesInfo(result, ecModel, api);\n\n        // Check seriesInvolved for performance, in case too many series in some chart.\n        result.seriesInvolved && collectSeriesInfo(result, ecModel);\n\n        return result;\n    };\n\n    function collectAxesInfo(result, ecModel, api) {\n        var globalTooltipModel = ecModel.getComponent('tooltip');\n        var globalAxisPointerModel = ecModel.getComponent('axisPointer');\n        // links can only be set on global.\n        var linksOption = globalAxisPointerModel.get('link', true) || [];\n        var linkGroups = [];\n\n        // Collect axes info.\n        each(api.getCoordinateSystems(), function (coordSys) {\n            // Some coordinate system do not support axes, like geo.\n            if (!coordSys.axisPointerEnabled) {\n                return;\n            }\n\n            var coordSysKey = makeKey(coordSys.model);\n            var axesInfoInCoordSys = result.coordSysAxesInfo[coordSysKey] = {};\n            result.coordSysMap[coordSysKey] = coordSys;\n\n            // Set tooltip (like 'cross') is a convienent way to show axisPointer\n            // for user. So we enable seting tooltip on coordSys model.\n            var coordSysModel = coordSys.model;\n            var baseTooltipModel = coordSysModel.getModel('tooltip', globalTooltipModel);\n\n            each(coordSys.getAxes(), curry(saveTooltipAxisInfo, false, null));\n\n            // If axis tooltip used, choose tooltip axis for each coordSys.\n            // Notice this case: coordSys is `grid` but not `cartesian2D` here.\n            if (coordSys.getTooltipAxes\n                && globalTooltipModel\n                // If tooltip.showContent is set as false, tooltip will not\n                // show but axisPointer will show as normal.\n                && baseTooltipModel.get('show')\n            ) {\n                // Compatible with previous logic. But series.tooltip.trigger: 'axis'\n                // or series.data[n].tooltip.trigger: 'axis' are not support any more.\n                var triggerAxis = baseTooltipModel.get('trigger') === 'axis';\n                var cross = baseTooltipModel.get('axisPointer.type') === 'cross';\n                var tooltipAxes = coordSys.getTooltipAxes(baseTooltipModel.get('axisPointer.axis'));\n                if (triggerAxis || cross) {\n                    each(tooltipAxes.baseAxes, curry(\n                        saveTooltipAxisInfo, cross ? 'cross' : true, triggerAxis\n                    ));\n                }\n                if (cross) {\n                    each(tooltipAxes.otherAxes, curry(saveTooltipAxisInfo, 'cross', false));\n                }\n            }\n\n            // fromTooltip: true | false | 'cross'\n            // triggerTooltip: true | false | null\n            function saveTooltipAxisInfo(fromTooltip, triggerTooltip, axis) {\n                var axisPointerModel = axis.model.getModel('axisPointer', globalAxisPointerModel);\n\n                var axisPointerShow = axisPointerModel.get('show');\n                if (!axisPointerShow || (\n                    axisPointerShow === 'auto'\n                    && !fromTooltip\n                    && !isHandleTrigger(axisPointerModel)\n                )) {\n                    return;\n                }\n\n                if (triggerTooltip == null) {\n                    triggerTooltip = axisPointerModel.get('triggerTooltip');\n                }\n\n                axisPointerModel = fromTooltip\n                    ? makeAxisPointerModel(\n                        axis, baseTooltipModel, globalAxisPointerModel, ecModel,\n                        fromTooltip, triggerTooltip\n                    )\n                    : axisPointerModel;\n\n                var snap = axisPointerModel.get('snap');\n                var key = makeKey(axis.model);\n                var involveSeries = triggerTooltip || snap || axis.type === 'category';\n\n                // If result.axesInfo[key] exist, override it (tooltip has higher priority).\n                var axisInfo = result.axesInfo[key] = {\n                    key: key,\n                    axis: axis,\n                    coordSys: coordSys,\n                    axisPointerModel: axisPointerModel,\n                    triggerTooltip: triggerTooltip,\n                    involveSeries: involveSeries,\n                    snap: snap,\n                    useHandle: isHandleTrigger(axisPointerModel),\n                    seriesModels: []\n                };\n                axesInfoInCoordSys[key] = axisInfo;\n                result.seriesInvolved |= involveSeries;\n\n                var groupIndex = getLinkGroupIndex(linksOption, axis);\n                if (groupIndex != null) {\n                    var linkGroup = linkGroups[groupIndex] || (linkGroups[groupIndex] = {axesInfo: {}});\n                    linkGroup.axesInfo[key] = axisInfo;\n                    linkGroup.mapper = linksOption[groupIndex].mapper;\n                    axisInfo.linkGroup = linkGroup;\n                }\n            }\n        });\n    }\n\n    function makeAxisPointerModel(\n        axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip\n    ) {\n        var tooltipAxisPointerModel = baseTooltipModel.getModel('axisPointer');\n        var volatileOption = {};\n\n        each(\n            [\n                'type', 'snap', 'lineStyle', 'shadowStyle', 'label',\n                'animation', 'animationDurationUpdate', 'animationEasingUpdate', 'z'\n            ],\n            function (field) {\n                volatileOption[field] = zrUtil.clone(tooltipAxisPointerModel.get(field));\n            }\n        );\n\n        // category axis do not auto snap, otherwise some tick that do not\n        // has value can not be hovered. value/time/log axis default snap if\n        // triggered from tooltip and trigger tooltip.\n        volatileOption.snap = axis.type !== 'category' && !!triggerTooltip;\n\n        // Compatibel with previous behavior, tooltip axis do not show label by default.\n        // Only these properties can be overrided from tooltip to axisPointer.\n        if (tooltipAxisPointerModel.get('type') === 'cross') {\n            volatileOption.type = 'line';\n        }\n        var labelOption = volatileOption.label || (volatileOption.label = {});\n        // Follow the convention, do not show label when triggered by tooltip by default.\n        labelOption.show == null && (labelOption.show = false);\n\n        if (fromTooltip === 'cross') {\n            // When 'cross', both axes show labels.\n            labelOption.show = true;\n            // If triggerTooltip, this is a base axis, which should better not use cross style\n            // (cross style is dashed by default)\n            if (!triggerTooltip) {\n                var crossStyle = volatileOption.lineStyle = tooltipAxisPointerModel.get('crossStyle');\n                crossStyle && zrUtil.defaults(\n                    labelOption.textStyle || (labelOption.textStyle = {}),\n                    crossStyle.textStyle\n                );\n            }\n        }\n\n        return axis.model.getModel(\n            'axisPointer',\n            new Model(volatileOption, globalAxisPointerModel, ecModel)\n        );\n    }\n\n    function collectSeriesInfo(result, ecModel) {\n        // Prepare data for axis trigger\n        ecModel.eachSeries(function (seriesModel) {\n\n            // Notice this case: this coordSys is `cartesian2D` but not `grid`.\n            var coordSys = seriesModel.coordinateSystem;\n            var seriesTooltipTrigger = seriesModel.get('tooltip.trigger', true);\n            var seriesTooltipShow = seriesModel.get('tooltip.show', true);\n            if (!coordSys\n                || seriesTooltipTrigger === 'none'\n                || seriesTooltipTrigger === false\n                || seriesTooltipTrigger === 'item'\n                || seriesTooltipShow === false\n                || seriesModel.get('axisPointer.show', true) === false\n            ) {\n                return;\n            }\n\n            each(result.coordSysAxesInfo[makeKey(coordSys.model)], function (axisInfo) {\n                var axis = axisInfo.axis;\n                if (coordSys.getAxis(axis.dim) === axis) {\n                    axisInfo.seriesModels.push(seriesModel);\n                    axisInfo.seriesDataCount == null && (axisInfo.seriesDataCount = 0);\n                    axisInfo.seriesDataCount += seriesModel.getData().count();\n                }\n            });\n\n        }, this);\n    }\n\n    /**\n     * For example:\n     * {\n     *     axisPointer: {\n     *         links: [{\n     *             xAxisIndex: [2, 4],\n     *             yAxisIndex: 'all'\n     *         }, {\n     *             xAxisId: ['a5', 'a7'],\n     *             xAxisName: 'xxx'\n     *         }]\n     *     }\n     * }\n     */\n    function getLinkGroupIndex(linksOption, axis) {\n        var axisModel = axis.model;\n        var dim = axis.dim;\n        for (var i = 0; i < linksOption.length; i++) {\n            var linkOption = linksOption[i] || {};\n            if (checkPropInLink(linkOption[dim + 'AxisId'], axisModel.id)\n                || checkPropInLink(linkOption[dim + 'AxisIndex'], axisModel.componentIndex)\n                || checkPropInLink(linkOption[dim + 'AxisName'], axisModel.name)\n            ) {\n                return i;\n            }\n        }\n    }\n\n    function checkPropInLink(linkPropValue, axisPropValue) {\n        return linkPropValue === 'all'\n            || (zrUtil.isArray(linkPropValue) && zrUtil.indexOf(linkPropValue, axisPropValue) >= 0)\n            || linkPropValue === axisPropValue;\n    }\n\n    helper.fixValue = function (axisModel) {\n        var axisInfo = helper.getAxisInfo(axisModel);\n        if (!axisInfo) {\n            return;\n        }\n\n        var axisPointerModel = axisInfo.axisPointerModel;\n        var scale = axisInfo.axis.scale;\n        var option = axisPointerModel.option;\n        var status = axisPointerModel.get('status');\n        var value = axisPointerModel.get('value');\n\n        // Parse init value for category and time axis.\n        if (value != null) {\n            value = scale.parse(value);\n        }\n\n        var useHandle = isHandleTrigger(axisPointerModel);\n        // If `handle` used, `axisPointer` will always be displayed, so value\n        // and status should be initialized.\n        if (status == null) {\n            option.status = useHandle ? 'show' : 'hide';\n        }\n\n        var extent = scale.getExtent().slice();\n        extent[0] > extent[1] && extent.reverse();\n\n        if (// Pick a value on axis when initializing.\n            value == null\n            // If both `handle` and `dataZoom` are used, value may be out of axis extent,\n            // where we should re-pick a value to keep `handle` displaying normally.\n            || value > extent[1]\n        ) {\n            // Make handle displayed on the end of the axis when init, which looks better.\n            value = extent[1];\n        }\n        if (value < extent[0]) {\n            value = extent[0];\n        }\n\n        option.value = value;\n\n        if (useHandle) {\n            option.status = axisInfo.axis.scale.isBlank() ? 'hide' : 'show';\n        }\n    };\n\n    helper.getAxisInfo = function (axisModel) {\n        var coordSysAxesInfo = (axisModel.ecModel.getComponent('axisPointer') || {}).coordSysAxesInfo;\n        return coordSysAxesInfo && coordSysAxesInfo.axesInfo[makeKey(axisModel)];\n    };\n\n    helper.getAxisPointerModel = function (axisModel) {\n        var axisInfo = helper.getAxisInfo(axisModel);\n        return axisInfo && axisInfo.axisPointerModel;\n    };\n\n    function isHandleTrigger(axisPointerModel) {\n        return !!axisPointerModel.get('handle.show');\n    }\n\n    /**\n     * @param {module:echarts/model/Model} model\n     * @return {string} unique key\n     */\n    var makeKey = helper.makeKey = function (model) {\n        return model.type + '||' + model.id;\n    };\n\n    module.exports = helper;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/modelHelper.js\n// module id = 483\n// module chunks = 0 1 2","/**\n * // Scale class management\n * @module echarts/scale/Scale\n */\n\n\n    var clazzUtil = require('../util/clazz');\n\n    /**\n     * @param {Object} [setting]\n     */\n    function Scale(setting) {\n        this._setting = setting || {};\n\n        /**\n         * Extent\n         * @type {Array.<number>}\n         * @protected\n         */\n        this._extent = [Infinity, -Infinity];\n\n        /**\n         * Step is calculated in adjustExtent\n         * @type {Array.<number>}\n         * @protected\n         */\n        this._interval = 0;\n\n        this.init && this.init.apply(this, arguments);\n    }\n\n    var scaleProto = Scale.prototype;\n\n    /**\n     * Parse input val to valid inner number.\n     * @param {*} val\n     * @return {number}\n     */\n    scaleProto.parse = function (val) {\n        // Notice: This would be a trap here, If the implementation\n        // of this method depends on extent, and this method is used\n        // before extent set (like in dataZoom), it would be wrong.\n        // Nevertheless, parse does not depend on extent generally.\n        return val;\n    };\n\n    scaleProto.getSetting = function (name) {\n        return this._setting[name];\n    };\n\n    scaleProto.contain = function (val) {\n        var extent = this._extent;\n        return val >= extent[0] && val <= extent[1];\n    };\n\n    /**\n     * Normalize value to linear [0, 1], return 0.5 if extent span is 0\n     * @param {number} val\n     * @return {number}\n     */\n    scaleProto.normalize = function (val) {\n        var extent = this._extent;\n        if (extent[1] === extent[0]) {\n            return 0.5;\n        }\n        return (val - extent[0]) / (extent[1] - extent[0]);\n    };\n\n    /**\n     * Scale normalized value\n     * @param {number} val\n     * @return {number}\n     */\n    scaleProto.scale = function (val) {\n        var extent = this._extent;\n        return val * (extent[1] - extent[0]) + extent[0];\n    };\n\n    /**\n     * Set extent from data\n     * @param {Array.<number>} other\n     */\n    scaleProto.unionExtent = function (other) {\n        var extent = this._extent;\n        other[0] < extent[0] && (extent[0] = other[0]);\n        other[1] > extent[1] && (extent[1] = other[1]);\n        // not setExtent because in log axis it may transformed to power\n        // this.setExtent(extent[0], extent[1]);\n    };\n\n    /**\n     * Set extent from data\n     * @param {module:echarts/data/List} data\n     * @param {string} dim\n     */\n    scaleProto.unionExtentFromData = function (data, dim) {\n        this.unionExtent(data.getDataExtent(dim, true));\n    };\n\n    /**\n     * Get extent\n     * @return {Array.<number>}\n     */\n    scaleProto.getExtent = function () {\n        return this._extent.slice();\n    };\n\n    /**\n     * Set extent\n     * @param {number} start\n     * @param {number} end\n     */\n    scaleProto.setExtent = function (start, end) {\n        var thisExtent = this._extent;\n        if (!isNaN(start)) {\n            thisExtent[0] = start;\n        }\n        if (!isNaN(end)) {\n            thisExtent[1] = end;\n        }\n    };\n\n    /**\n     * @return {Array.<string>}\n     */\n    scaleProto.getTicksLabels = function () {\n        var labels = [];\n        var ticks = this.getTicks();\n        for (var i = 0; i < ticks.length; i++) {\n            labels.push(this.getLabel(ticks[i]));\n        }\n        return labels;\n    };\n\n    /**\n     * When axis extent depends on data and no data exists,\n     * axis ticks should not be drawn, which is named 'blank'.\n     */\n    scaleProto.isBlank = function () {\n        return this._isBlank;\n    },\n\n    /**\n     * When axis extent depends on data and no data exists,\n     * axis ticks should not be drawn, which is named 'blank'.\n     */\n    scaleProto.setBlank = function (isBlank) {\n        this._isBlank = isBlank;\n    };\n\n\n    clazzUtil.enableClassExtend(Scale);\n    clazzUtil.enableClassManagement(Scale, {\n        registerWhenExtend: true\n    });\n\n    module.exports = Scale;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/scale/Scale.js\n// module id = 484\n// module chunks = 0 1 2","\n\n    var lib = {};\n\n    var ORIGIN_METHOD = '\\0__throttleOriginMethod';\n    var RATE = '\\0__throttleRate';\n    var THROTTLE_TYPE = '\\0__throttleType';\n\n    /**\n     * @public\n     * @param {(Function)} fn\n     * @param {number} [delay=0] Unit: ms.\n     * @param {boolean} [debounce=false]\n     *        true: If call interval less than `delay`, only the last call works.\n     *        false: If call interval less than `delay, call works on fixed rate.\n     * @return {(Function)} throttled fn.\n     */\n    lib.throttle = function (fn, delay, debounce) {\n\n        var currCall;\n        var lastCall = 0;\n        var lastExec = 0;\n        var timer = null;\n        var diff;\n        var scope;\n        var args;\n        var debounceNextCall;\n\n        delay = delay || 0;\n\n        function exec() {\n            lastExec = (new Date()).getTime();\n            timer = null;\n            fn.apply(scope, args || []);\n        }\n\n        var cb = function () {\n            currCall = (new Date()).getTime();\n            scope = this;\n            args = arguments;\n            var thisDelay = debounceNextCall || delay;\n            var thisDebounce = debounceNextCall || debounce;\n            debounceNextCall = null;\n            diff = currCall - (thisDebounce ? lastCall : lastExec) - thisDelay;\n\n            clearTimeout(timer);\n\n            if (thisDebounce) {\n                timer = setTimeout(exec, thisDelay);\n            }\n            else {\n                if (diff >= 0) {\n                    exec();\n                }\n                else {\n                    timer = setTimeout(exec, -diff);\n                }\n            }\n\n            lastCall = currCall;\n        };\n\n        /**\n         * Clear throttle.\n         * @public\n         */\n        cb.clear = function () {\n            if (timer) {\n                clearTimeout(timer);\n                timer = null;\n            }\n        };\n\n        /**\n         * Enable debounce once.\n         */\n        cb.debounceNextCall = function (debounceDelay) {\n            debounceNextCall = debounceDelay;\n        };\n\n        return cb;\n    };\n\n    /**\n     * Create throttle method or update throttle rate.\n     *\n     * @example\n     * ComponentView.prototype.render = function () {\n     *     ...\n     *     throttle.createOrUpdate(\n     *         this,\n     *         '_dispatchAction',\n     *         this.model.get('throttle'),\n     *         'fixRate'\n     *     );\n     * };\n     * ComponentView.prototype.remove = function () {\n     *     throttle.clear(this, '_dispatchAction');\n     * };\n     * ComponentView.prototype.dispose = function () {\n     *     throttle.clear(this, '_dispatchAction');\n     * };\n     *\n     * @public\n     * @param {Object} obj\n     * @param {string} fnAttr\n     * @param {number} [rate]\n     * @param {string} [throttleType='fixRate'] 'fixRate' or 'debounce'\n     * @return {Function} throttled function.\n     */\n    lib.createOrUpdate = function (obj, fnAttr, rate, throttleType) {\n        var fn = obj[fnAttr];\n\n        if (!fn) {\n            return;\n        }\n\n        var originFn = fn[ORIGIN_METHOD] || fn;\n        var lastThrottleType = fn[THROTTLE_TYPE];\n        var lastRate = fn[RATE];\n\n        if (lastRate !== rate || lastThrottleType !== throttleType) {\n            if (rate == null || !throttleType) {\n                return (obj[fnAttr] = originFn);\n            }\n\n            fn = obj[fnAttr] = lib.throttle(\n                originFn, rate, throttleType === 'debounce'\n            );\n            fn[ORIGIN_METHOD] = originFn;\n            fn[THROTTLE_TYPE] = throttleType;\n            fn[RATE] = rate;\n        }\n\n        return fn;\n    };\n\n    /**\n     * Clear throttle. Example see throttle.createOrUpdate.\n     *\n     * @public\n     * @param {Object} obj\n     * @param {string} fnAttr\n     */\n    lib.clear = function (obj, fnAttr) {\n        var fn = obj[fnAttr];\n        if (fn && fn[ORIGIN_METHOD]) {\n            obj[fnAttr] = fn[ORIGIN_METHOD];\n        }\n    };\n\n    module.exports = lib;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/throttle.js\n// module id = 485\n// module chunks = 0 1 2","\n    var dpr = 1;\n    // If in browser environment\n    if (typeof window !== 'undefined') {\n        dpr = Math.max(window.devicePixelRatio || 1, 1);\n    }\n    /**\n     * config默认配置项\n     * @exports zrender/config\n     * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n     */\n    var config = {\n        /**\n         * debug日志选项：catchBrushException为true下有效\n         * 0 : 不生成debug数据，发布用\n         * 1 : 异常抛出，调试用\n         * 2 : 控制台输出，调试用\n         */\n        debugMode: 0,\n\n        // retina 屏幕优化\n        devicePixelRatio: dpr\n    };\n    module.exports = config;\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/config.js\n// module id = 486\n// module chunks = 0 1 2","/**\n * Group是一个容器，可以插入子节点，Group的变换也会被应用到子节点上\n * @module zrender/graphic/Group\n * @example\n *     var Group = require('zrender/lib/container/Group');\n *     var Circle = require('zrender/lib/graphic/shape/Circle');\n *     var g = new Group();\n *     g.position[0] = 100;\n *     g.position[1] = 100;\n *     g.add(new Circle({\n *         style: {\n *             x: 100,\n *             y: 100,\n *             r: 20,\n *         }\n *     }));\n *     zr.add(g);\n */\n\n\n    var zrUtil = require('../core/util');\n    var Element = require('../Element');\n    var BoundingRect = require('../core/BoundingRect');\n\n    /**\n     * @alias module:zrender/graphic/Group\n     * @constructor\n     * @extends module:zrender/mixin/Transformable\n     * @extends module:zrender/mixin/Eventful\n     */\n    var Group = function (opts) {\n\n        opts = opts || {};\n\n        Element.call(this, opts);\n\n        for (var key in opts) {\n            if (opts.hasOwnProperty(key)) {\n                this[key] = opts[key];\n            }\n        }\n\n        this._children = [];\n\n        this.__storage = null;\n\n        this.__dirty = true;\n    };\n\n    Group.prototype = {\n\n        constructor: Group,\n\n        isGroup: true,\n\n        /**\n         * @type {string}\n         */\n        type: 'group',\n\n        /**\n         * 所有子孙元素是否响应鼠标事件\n         * @name module:/zrender/container/Group#silent\n         * @type {boolean}\n         * @default false\n         */\n        silent: false,\n\n        /**\n         * @return {Array.<module:zrender/Element>}\n         */\n        children: function () {\n            return this._children.slice();\n        },\n\n        /**\n         * 获取指定 index 的儿子节点\n         * @param  {number} idx\n         * @return {module:zrender/Element}\n         */\n        childAt: function (idx) {\n            return this._children[idx];\n        },\n\n        /**\n         * 获取指定名字的儿子节点\n         * @param  {string} name\n         * @return {module:zrender/Element}\n         */\n        childOfName: function (name) {\n            var children = this._children;\n            for (var i = 0; i < children.length; i++) {\n                if (children[i].name === name) {\n                    return children[i];\n                }\n             }\n        },\n\n        /**\n         * @return {number}\n         */\n        childCount: function () {\n            return this._children.length;\n        },\n\n        /**\n         * 添加子节点到最后\n         * @param {module:zrender/Element} child\n         */\n        add: function (child) {\n            if (child && child !== this && child.parent !== this) {\n\n                this._children.push(child);\n\n                this._doAdd(child);\n            }\n\n            return this;\n        },\n\n        /**\n         * 添加子节点在 nextSibling 之前\n         * @param {module:zrender/Element} child\n         * @param {module:zrender/Element} nextSibling\n         */\n        addBefore: function (child, nextSibling) {\n            if (child && child !== this && child.parent !== this\n                && nextSibling && nextSibling.parent === this) {\n\n                var children = this._children;\n                var idx = children.indexOf(nextSibling);\n\n                if (idx >= 0) {\n                    children.splice(idx, 0, child);\n                    this._doAdd(child);\n                }\n            }\n\n            return this;\n        },\n\n        _doAdd: function (child) {\n            if (child.parent) {\n                child.parent.remove(child);\n            }\n\n            child.parent = this;\n\n            var storage = this.__storage;\n            var zr = this.__zr;\n            if (storage && storage !== child.__storage) {\n\n                storage.addToStorage(child);\n\n                if (child instanceof Group) {\n                    child.addChildrenToStorage(storage);\n                }\n            }\n\n            zr && zr.refresh();\n        },\n\n        /**\n         * 移除子节点\n         * @param {module:zrender/Element} child\n         */\n        remove: function (child) {\n            var zr = this.__zr;\n            var storage = this.__storage;\n            var children = this._children;\n\n            var idx = zrUtil.indexOf(children, child);\n            if (idx < 0) {\n                return this;\n            }\n            children.splice(idx, 1);\n\n            child.parent = null;\n\n            if (storage) {\n\n                storage.delFromStorage(child);\n\n                if (child instanceof Group) {\n                    child.delChildrenFromStorage(storage);\n                }\n            }\n\n            zr && zr.refresh();\n\n            return this;\n        },\n\n        /**\n         * 移除所有子节点\n         */\n        removeAll: function () {\n            var children = this._children;\n            var storage = this.__storage;\n            var child;\n            var i;\n            for (i = 0; i < children.length; i++) {\n                child = children[i];\n                if (storage) {\n                    storage.delFromStorage(child);\n                    if (child instanceof Group) {\n                        child.delChildrenFromStorage(storage);\n                    }\n                }\n                child.parent = null;\n            }\n            children.length = 0;\n\n            return this;\n        },\n\n        /**\n         * 遍历所有子节点\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        eachChild: function (cb, context) {\n            var children = this._children;\n            for (var i = 0; i < children.length; i++) {\n                var child = children[i];\n                cb.call(context, child, i);\n            }\n            return this;\n        },\n\n        /**\n         * 深度优先遍历所有子孙节点\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        traverse: function (cb, context) {\n            for (var i = 0; i < this._children.length; i++) {\n                var child = this._children[i];\n                cb.call(context, child);\n\n                if (child.type === 'group') {\n                    child.traverse(cb, context);\n                }\n            }\n            return this;\n        },\n\n        addChildrenToStorage: function (storage) {\n            for (var i = 0; i < this._children.length; i++) {\n                var child = this._children[i];\n                storage.addToStorage(child);\n                if (child instanceof Group) {\n                    child.addChildrenToStorage(storage);\n                }\n            }\n        },\n\n        delChildrenFromStorage: function (storage) {\n            for (var i = 0; i < this._children.length; i++) {\n                var child = this._children[i];\n                storage.delFromStorage(child);\n                if (child instanceof Group) {\n                    child.delChildrenFromStorage(storage);\n                }\n            }\n        },\n\n        dirty: function () {\n            this.__dirty = true;\n            this.__zr && this.__zr.refresh();\n            return this;\n        },\n\n        /**\n         * @return {module:zrender/core/BoundingRect}\n         */\n        getBoundingRect: function (includeChildren) {\n            // TODO Caching\n            var rect = null;\n            var tmpRect = new BoundingRect(0, 0, 0, 0);\n            var children = includeChildren || this._children;\n            var tmpMat = [];\n\n            for (var i = 0; i < children.length; i++) {\n                var child = children[i];\n                if (child.ignore || child.invisible) {\n                    continue;\n                }\n\n                var childRect = child.getBoundingRect();\n                var transform = child.getLocalTransform(tmpMat);\n                // TODO\n                // The boundingRect cacluated by transforming original\n                // rect may be bigger than the actual bundingRect when rotation\n                // is used. (Consider a circle rotated aginst its center, where\n                // the actual boundingRect should be the same as that not be\n                // rotated.) But we can not find better approach to calculate\n                // actual boundingRect yet, considering performance.\n                if (transform) {\n                    tmpRect.copy(childRect);\n                    tmpRect.applyTransform(transform);\n                    rect = rect || tmpRect.clone();\n                    rect.union(tmpRect);\n                }\n                else {\n                    rect = rect || childRect.clone();\n                    rect.union(childRect);\n                }\n            }\n            return rect || tmpRect;\n        }\n    };\n\n    zrUtil.inherits(Group, Element);\n\n    module.exports = Group;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/container/Group.js\n// module id = 487\n// module chunks = 0 1 2","'use strict';\n/**\n * Path 代理，可以在`buildPath`中用于替代`ctx`, 会保存每个path操作的命令到pathCommands属性中\n * 可以用于 isInsidePath 判断以及获取boundingRect\n *\n * @module zrender/core/PathProxy\n * @author Yi Shen (http://www.github.com/pissang)\n */\n\n // TODO getTotalLength, getPointAtLength\n\n\n    var curve = require('./curve');\n    var vec2 = require('./vector');\n    var bbox = require('./bbox');\n    var BoundingRect = require('./BoundingRect');\n    var dpr = require('../config').devicePixelRatio;\n\n    var CMD = {\n        M: 1,\n        L: 2,\n        C: 3,\n        Q: 4,\n        A: 5,\n        Z: 6,\n        // Rect\n        R: 7\n    };\n\n    // var CMD_MEM_SIZE = {\n    //     M: 3,\n    //     L: 3,\n    //     C: 7,\n    //     Q: 5,\n    //     A: 9,\n    //     R: 5,\n    //     Z: 1\n    // };\n\n    var min = [];\n    var max = [];\n    var min2 = [];\n    var max2 = [];\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    var mathCos = Math.cos;\n    var mathSin = Math.sin;\n    var mathSqrt = Math.sqrt;\n    var mathAbs = Math.abs;\n\n    var hasTypedArray = typeof Float32Array != 'undefined';\n\n    /**\n     * @alias module:zrender/core/PathProxy\n     * @constructor\n     */\n    var PathProxy = function (notSaveData) {\n\n        this._saveData = !(notSaveData || false);\n\n        if (this._saveData) {\n            /**\n             * Path data. Stored as flat array\n             * @type {Array.<Object>}\n             */\n            this.data = [];\n        }\n\n        this._ctx = null;\n    };\n\n    /**\n     * 快速计算Path包围盒（并不是最小包围盒）\n     * @return {Object}\n     */\n    PathProxy.prototype = {\n\n        constructor: PathProxy,\n\n        _xi: 0,\n        _yi: 0,\n\n        _x0: 0,\n        _y0: 0,\n        // Unit x, Unit y. Provide for avoiding drawing that too short line segment\n        _ux: 0,\n        _uy: 0,\n\n        _len: 0,\n\n        _lineDash: null,\n\n        _dashOffset: 0,\n\n        _dashIdx: 0,\n\n        _dashSum: 0,\n\n        /**\n         * @readOnly\n         */\n        setScale: function (sx, sy) {\n            this._ux = mathAbs(1 / dpr / sx) || 0;\n            this._uy = mathAbs(1 / dpr / sy) || 0;\n        },\n\n        getContext: function () {\n            return this._ctx;\n        },\n\n        /**\n         * @param  {CanvasRenderingContext2D} ctx\n         * @return {module:zrender/core/PathProxy}\n         */\n        beginPath: function (ctx) {\n\n            this._ctx = ctx;\n\n            ctx && ctx.beginPath();\n\n            ctx && (this.dpr = ctx.dpr);\n\n            // Reset\n            if (this._saveData) {\n                this._len = 0;\n            }\n\n            if (this._lineDash) {\n                this._lineDash = null;\n\n                this._dashOffset = 0;\n            }\n\n            return this;\n        },\n\n        /**\n         * @param  {number} x\n         * @param  {number} y\n         * @return {module:zrender/core/PathProxy}\n         */\n        moveTo: function (x, y) {\n            this.addData(CMD.M, x, y);\n            this._ctx && this._ctx.moveTo(x, y);\n\n            // x0, y0, xi, yi 是记录在 _dashedXXXXTo 方法中使用\n            // xi, yi 记录当前点, x0, y0 在 closePath 的时候回到起始点。\n            // 有可能在 beginPath 之后直接调用 lineTo，这时候 x0, y0 需要\n            // 在 lineTo 方法中记录，这里先不考虑这种情况，dashed line 也只在 IE10- 中不支持\n            this._x0 = x;\n            this._y0 = y;\n\n            this._xi = x;\n            this._yi = y;\n\n            return this;\n        },\n\n        /**\n         * @param  {number} x\n         * @param  {number} y\n         * @return {module:zrender/core/PathProxy}\n         */\n        lineTo: function (x, y) {\n            var exceedUnit = mathAbs(x - this._xi) > this._ux\n                || mathAbs(y - this._yi) > this._uy\n                // Force draw the first segment\n                || this._len < 5;\n\n            this.addData(CMD.L, x, y);\n\n            if (this._ctx && exceedUnit) {\n                this._needsDash() ? this._dashedLineTo(x, y)\n                    : this._ctx.lineTo(x, y);\n            }\n            if (exceedUnit) {\n                this._xi = x;\n                this._yi = y;\n            }\n\n            return this;\n        },\n\n        /**\n         * @param  {number} x1\n         * @param  {number} y1\n         * @param  {number} x2\n         * @param  {number} y2\n         * @param  {number} x3\n         * @param  {number} y3\n         * @return {module:zrender/core/PathProxy}\n         */\n        bezierCurveTo: function (x1, y1, x2, y2, x3, y3) {\n            this.addData(CMD.C, x1, y1, x2, y2, x3, y3);\n            if (this._ctx) {\n                this._needsDash() ? this._dashedBezierTo(x1, y1, x2, y2, x3, y3)\n                    : this._ctx.bezierCurveTo(x1, y1, x2, y2, x3, y3);\n            }\n            this._xi = x3;\n            this._yi = y3;\n            return this;\n        },\n\n        /**\n         * @param  {number} x1\n         * @param  {number} y1\n         * @param  {number} x2\n         * @param  {number} y2\n         * @return {module:zrender/core/PathProxy}\n         */\n        quadraticCurveTo: function (x1, y1, x2, y2) {\n            this.addData(CMD.Q, x1, y1, x2, y2);\n            if (this._ctx) {\n                this._needsDash() ? this._dashedQuadraticTo(x1, y1, x2, y2)\n                    : this._ctx.quadraticCurveTo(x1, y1, x2, y2);\n            }\n            this._xi = x2;\n            this._yi = y2;\n            return this;\n        },\n\n        /**\n         * @param  {number} cx\n         * @param  {number} cy\n         * @param  {number} r\n         * @param  {number} startAngle\n         * @param  {number} endAngle\n         * @param  {boolean} anticlockwise\n         * @return {module:zrender/core/PathProxy}\n         */\n        arc: function (cx, cy, r, startAngle, endAngle, anticlockwise) {\n            this.addData(\n                CMD.A, cx, cy, r, r, startAngle, endAngle - startAngle, 0, anticlockwise ? 0 : 1\n            );\n            this._ctx && this._ctx.arc(cx, cy, r, startAngle, endAngle, anticlockwise);\n\n            this._xi = mathCos(endAngle) * r + cx;\n            this._yi = mathSin(endAngle) * r + cx;\n            return this;\n        },\n\n        // TODO\n        arcTo: function (x1, y1, x2, y2, radius) {\n            if (this._ctx) {\n                this._ctx.arcTo(x1, y1, x2, y2, radius);\n            }\n            return this;\n        },\n\n        // TODO\n        rect: function (x, y, w, h) {\n            this._ctx && this._ctx.rect(x, y, w, h);\n            this.addData(CMD.R, x, y, w, h);\n            return this;\n        },\n\n        /**\n         * @return {module:zrender/core/PathProxy}\n         */\n        closePath: function () {\n            this.addData(CMD.Z);\n\n            var ctx = this._ctx;\n            var x0 = this._x0;\n            var y0 = this._y0;\n            if (ctx) {\n                this._needsDash() && this._dashedLineTo(x0, y0);\n                ctx.closePath();\n            }\n\n            this._xi = x0;\n            this._yi = y0;\n            return this;\n        },\n\n        /**\n         * Context 从外部传入，因为有可能是 rebuildPath 完之后再 fill。\n         * stroke 同样\n         * @param {CanvasRenderingContext2D} ctx\n         * @return {module:zrender/core/PathProxy}\n         */\n        fill: function (ctx) {\n            ctx && ctx.fill();\n            this.toStatic();\n        },\n\n        /**\n         * @param {CanvasRenderingContext2D} ctx\n         * @return {module:zrender/core/PathProxy}\n         */\n        stroke: function (ctx) {\n            ctx && ctx.stroke();\n            this.toStatic();\n        },\n\n        /**\n         * 必须在其它绘制命令前调用\n         * Must be invoked before all other path drawing methods\n         * @return {module:zrender/core/PathProxy}\n         */\n        setLineDash: function (lineDash) {\n            if (lineDash instanceof Array) {\n                this._lineDash = lineDash;\n\n                this._dashIdx = 0;\n\n                var lineDashSum = 0;\n                for (var i = 0; i < lineDash.length; i++) {\n                    lineDashSum += lineDash[i];\n                }\n                this._dashSum = lineDashSum;\n            }\n            return this;\n        },\n\n        /**\n         * 必须在其它绘制命令前调用\n         * Must be invoked before all other path drawing methods\n         * @return {module:zrender/core/PathProxy}\n         */\n        setLineDashOffset: function (offset) {\n            this._dashOffset = offset;\n            return this;\n        },\n\n        /**\n         *\n         * @return {boolean}\n         */\n        len: function () {\n            return this._len;\n        },\n\n        /**\n         * 直接设置 Path 数据\n         */\n        setData: function (data) {\n\n            var len = data.length;\n\n            if (! (this.data && this.data.length == len) && hasTypedArray) {\n                this.data = new Float32Array(len);\n            }\n\n            for (var i = 0; i < len; i++) {\n                this.data[i] = data[i];\n            }\n\n            this._len = len;\n        },\n\n        /**\n         * 添加子路径\n         * @param {module:zrender/core/PathProxy|Array.<module:zrender/core/PathProxy>} path\n         */\n        appendPath: function (path) {\n            if (!(path instanceof Array)) {\n                path = [path];\n            }\n            var len = path.length;\n            var appendSize = 0;\n            var offset = this._len;\n            for (var i = 0; i < len; i++) {\n                appendSize += path[i].len();\n            }\n            if (hasTypedArray && (this.data instanceof Float32Array)) {\n                this.data = new Float32Array(offset + appendSize);\n            }\n            for (var i = 0; i < len; i++) {\n                var appendPathData = path[i].data;\n                for (var k = 0; k < appendPathData.length; k++) {\n                    this.data[offset++] = appendPathData[k];\n                }\n            }\n            this._len = offset;\n        },\n\n        /**\n         * 填充 Path 数据。\n         * 尽量复用而不申明新的数组。大部分图形重绘的指令数据长度都是不变的。\n         */\n        addData: function (cmd) {\n            if (!this._saveData) {\n                return;\n            }\n\n            var data = this.data;\n            if (this._len + arguments.length > data.length) {\n                // 因为之前的数组已经转换成静态的 Float32Array\n                // 所以不够用时需要扩展一个新的动态数组\n                this._expandData();\n                data = this.data;\n            }\n            for (var i = 0; i < arguments.length; i++) {\n                data[this._len++] = arguments[i];\n            }\n\n            this._prevCmd = cmd;\n        },\n\n        _expandData: function () {\n            // Only if data is Float32Array\n            if (!(this.data instanceof Array)) {\n                var newData = [];\n                for (var i = 0; i < this._len; i++) {\n                    newData[i] = this.data[i];\n                }\n                this.data = newData;\n            }\n        },\n\n        /**\n         * If needs js implemented dashed line\n         * @return {boolean}\n         * @private\n         */\n        _needsDash: function () {\n            return this._lineDash;\n        },\n\n        _dashedLineTo: function (x1, y1) {\n            var dashSum = this._dashSum;\n            var offset = this._dashOffset;\n            var lineDash = this._lineDash;\n            var ctx = this._ctx;\n\n            var x0 = this._xi;\n            var y0 = this._yi;\n            var dx = x1 - x0;\n            var dy = y1 - y0;\n            var dist = mathSqrt(dx * dx + dy * dy);\n            var x = x0;\n            var y = y0;\n            var dash;\n            var nDash = lineDash.length;\n            var idx;\n            dx /= dist;\n            dy /= dist;\n\n            if (offset < 0) {\n                // Convert to positive offset\n                offset = dashSum + offset;\n            }\n            offset %= dashSum;\n            x -= offset * dx;\n            y -= offset * dy;\n\n            while ((dx > 0 && x <= x1) || (dx < 0 && x >= x1)\n            || (dx == 0 && ((dy > 0 && y <= y1) || (dy < 0 && y >= y1)))) {\n                idx = this._dashIdx;\n                dash = lineDash[idx];\n                x += dx * dash;\n                y += dy * dash;\n                this._dashIdx = (idx + 1) % nDash;\n                // Skip positive offset\n                if ((dx > 0 && x < x0) || (dx < 0 && x > x0) || (dy > 0 && y < y0) || (dy < 0 && y > y0)) {\n                    continue;\n                }\n                ctx[idx % 2 ? 'moveTo' : 'lineTo'](\n                    dx >= 0 ? mathMin(x, x1) : mathMax(x, x1),\n                    dy >= 0 ? mathMin(y, y1) : mathMax(y, y1)\n                );\n            }\n            // Offset for next lineTo\n            dx = x - x1;\n            dy = y - y1;\n            this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n        },\n\n        // Not accurate dashed line to\n        _dashedBezierTo: function (x1, y1, x2, y2, x3, y3) {\n            var dashSum = this._dashSum;\n            var offset = this._dashOffset;\n            var lineDash = this._lineDash;\n            var ctx = this._ctx;\n\n            var x0 = this._xi;\n            var y0 = this._yi;\n            var t;\n            var dx;\n            var dy;\n            var cubicAt = curve.cubicAt;\n            var bezierLen = 0;\n            var idx = this._dashIdx;\n            var nDash = lineDash.length;\n\n            var x;\n            var y;\n\n            var tmpLen = 0;\n\n            if (offset < 0) {\n                // Convert to positive offset\n                offset = dashSum + offset;\n            }\n            offset %= dashSum;\n            // Bezier approx length\n            for (t = 0; t < 1; t += 0.1) {\n                dx = cubicAt(x0, x1, x2, x3, t + 0.1)\n                    - cubicAt(x0, x1, x2, x3, t);\n                dy = cubicAt(y0, y1, y2, y3, t + 0.1)\n                    - cubicAt(y0, y1, y2, y3, t);\n                bezierLen += mathSqrt(dx * dx + dy * dy);\n            }\n\n            // Find idx after add offset\n            for (; idx < nDash; idx++) {\n                tmpLen += lineDash[idx];\n                if (tmpLen > offset) {\n                    break;\n                }\n            }\n            t = (tmpLen - offset) / bezierLen;\n\n            while (t <= 1) {\n\n                x = cubicAt(x0, x1, x2, x3, t);\n                y = cubicAt(y0, y1, y2, y3, t);\n\n                // Use line to approximate dashed bezier\n                // Bad result if dash is long\n                idx % 2 ? ctx.moveTo(x, y)\n                    : ctx.lineTo(x, y);\n\n                t += lineDash[idx] / bezierLen;\n\n                idx = (idx + 1) % nDash;\n            }\n\n            // Finish the last segment and calculate the new offset\n            (idx % 2 !== 0) && ctx.lineTo(x3, y3);\n            dx = x3 - x;\n            dy = y3 - y;\n            this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n        },\n\n        _dashedQuadraticTo: function (x1, y1, x2, y2) {\n            // Convert quadratic to cubic using degree elevation\n            var x3 = x2;\n            var y3 = y2;\n            x2 = (x2 + 2 * x1) / 3;\n            y2 = (y2 + 2 * y1) / 3;\n            x1 = (this._xi + 2 * x1) / 3;\n            y1 = (this._yi + 2 * y1) / 3;\n\n            this._dashedBezierTo(x1, y1, x2, y2, x3, y3);\n        },\n\n        /**\n         * 转成静态的 Float32Array 减少堆内存占用\n         * Convert dynamic array to static Float32Array\n         */\n        toStatic: function () {\n            var data = this.data;\n            if (data instanceof Array) {\n                data.length = this._len;\n                if (hasTypedArray) {\n                    this.data = new Float32Array(data);\n                }\n            }\n        },\n\n        /**\n         * @return {module:zrender/core/BoundingRect}\n         */\n        getBoundingRect: function () {\n            min[0] = min[1] = min2[0] = min2[1] = Number.MAX_VALUE;\n            max[0] = max[1] = max2[0] = max2[1] = -Number.MAX_VALUE;\n\n            var data = this.data;\n            var xi = 0;\n            var yi = 0;\n            var x0 = 0;\n            var y0 = 0;\n\n            for (var i = 0; i < data.length;) {\n                var cmd = data[i++];\n\n                if (i == 1) {\n                    // 如果第一个命令是 L, C, Q\n                    // 则 previous point 同绘制命令的第一个 point\n                    //\n                    // 第一个命令为 Arc 的情况下会在后面特殊处理\n                    xi = data[i];\n                    yi = data[i + 1];\n\n                    x0 = xi;\n                    y0 = yi;\n                }\n\n                switch (cmd) {\n                    case CMD.M:\n                        // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n                        // 在 closePath 的时候使用\n                        x0 = data[i++];\n                        y0 = data[i++];\n                        xi = x0;\n                        yi = y0;\n                        min2[0] = x0;\n                        min2[1] = y0;\n                        max2[0] = x0;\n                        max2[1] = y0;\n                        break;\n                    case CMD.L:\n                        bbox.fromLine(xi, yi, data[i], data[i + 1], min2, max2);\n                        xi = data[i++];\n                        yi = data[i++];\n                        break;\n                    case CMD.C:\n                        bbox.fromCubic(\n                            xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n                            min2, max2\n                        );\n                        xi = data[i++];\n                        yi = data[i++];\n                        break;\n                    case CMD.Q:\n                        bbox.fromQuadratic(\n                            xi, yi, data[i++], data[i++], data[i], data[i + 1],\n                            min2, max2\n                        );\n                        xi = data[i++];\n                        yi = data[i++];\n                        break;\n                    case CMD.A:\n                        // TODO Arc 判断的开销比较大\n                        var cx = data[i++];\n                        var cy = data[i++];\n                        var rx = data[i++];\n                        var ry = data[i++];\n                        var startAngle = data[i++];\n                        var endAngle = data[i++] + startAngle;\n                        // TODO Arc 旋转\n                        var psi = data[i++];\n                        var anticlockwise = 1 - data[i++];\n\n                        if (i == 1) {\n                            // 直接使用 arc 命令\n                            // 第一个命令起点还未定义\n                            x0 = mathCos(startAngle) * rx + cx;\n                            y0 = mathSin(startAngle) * ry + cy;\n                        }\n\n                        bbox.fromArc(\n                            cx, cy, rx, ry, startAngle, endAngle,\n                            anticlockwise, min2, max2\n                        );\n\n                        xi = mathCos(endAngle) * rx + cx;\n                        yi = mathSin(endAngle) * ry + cy;\n                        break;\n                    case CMD.R:\n                        x0 = xi = data[i++];\n                        y0 = yi = data[i++];\n                        var width = data[i++];\n                        var height = data[i++];\n                        // Use fromLine\n                        bbox.fromLine(x0, y0, x0 + width, y0 + height, min2, max2);\n                        break;\n                    case CMD.Z:\n                        xi = x0;\n                        yi = y0;\n                        break;\n                }\n\n                // Union\n                vec2.min(min, min, min2);\n                vec2.max(max, max, max2);\n            }\n\n            // No data\n            if (i === 0) {\n                min[0] = min[1] = max[0] = max[1] = 0;\n            }\n\n            return new BoundingRect(\n                min[0], min[1], max[0] - min[0], max[1] - min[1]\n            );\n        },\n\n        /**\n         * Rebuild path from current data\n         * Rebuild path will not consider javascript implemented line dash.\n         * @param {CanvasRenderingContext} ctx\n         */\n        rebuildPath: function (ctx) {\n            var d = this.data;\n            var x0, y0;\n            var xi, yi;\n            var x, y;\n            var ux = this._ux;\n            var uy = this._uy;\n            var len = this._len;\n            for (var i = 0; i < len;) {\n                var cmd = d[i++];\n\n                if (i == 1) {\n                    // 如果第一个命令是 L, C, Q\n                    // 则 previous point 同绘制命令的第一个 point\n                    //\n                    // 第一个命令为 Arc 的情况下会在后面特殊处理\n                    xi = d[i];\n                    yi = d[i + 1];\n\n                    x0 = xi;\n                    y0 = yi;\n                }\n                switch (cmd) {\n                    case CMD.M:\n                        x0 = xi = d[i++];\n                        y0 = yi = d[i++];\n                        ctx.moveTo(xi, yi);\n                        break;\n                    case CMD.L:\n                        x = d[i++];\n                        y = d[i++];\n                        // Not draw too small seg between\n                        if (mathAbs(x - xi) > ux || mathAbs(y - yi) > uy || i === len - 1) {\n                            ctx.lineTo(x, y);\n                            xi = x;\n                            yi = y;\n                        }\n                        break;\n                    case CMD.C:\n                        ctx.bezierCurveTo(\n                            d[i++], d[i++], d[i++], d[i++], d[i++], d[i++]\n                        );\n                        xi = d[i - 2];\n                        yi = d[i - 1];\n                        break;\n                    case CMD.Q:\n                        ctx.quadraticCurveTo(d[i++], d[i++], d[i++], d[i++]);\n                        xi = d[i - 2];\n                        yi = d[i - 1];\n                        break;\n                    case CMD.A:\n                        var cx = d[i++];\n                        var cy = d[i++];\n                        var rx = d[i++];\n                        var ry = d[i++];\n                        var theta = d[i++];\n                        var dTheta = d[i++];\n                        var psi = d[i++];\n                        var fs = d[i++];\n                        var r = (rx > ry) ? rx : ry;\n                        var scaleX = (rx > ry) ? 1 : rx / ry;\n                        var scaleY = (rx > ry) ? ry / rx : 1;\n                        var isEllipse = Math.abs(rx - ry) > 1e-3;\n                        var endAngle = theta + dTheta;\n                        if (isEllipse) {\n                            ctx.translate(cx, cy);\n                            ctx.rotate(psi);\n                            ctx.scale(scaleX, scaleY);\n                            ctx.arc(0, 0, r, theta, endAngle, 1 - fs);\n                            ctx.scale(1 / scaleX, 1 / scaleY);\n                            ctx.rotate(-psi);\n                            ctx.translate(-cx, -cy);\n                        }\n                        else {\n                            ctx.arc(cx, cy, r, theta, endAngle, 1 - fs);\n                        }\n\n                        if (i == 1) {\n                            // 直接使用 arc 命令\n                            // 第一个命令起点还未定义\n                            x0 = mathCos(theta) * rx + cx;\n                            y0 = mathSin(theta) * ry + cy;\n                        }\n                        xi = mathCos(endAngle) * rx + cx;\n                        yi = mathSin(endAngle) * ry + cy;\n                        break;\n                    case CMD.R:\n                        x0 = xi = d[i];\n                        y0 = yi = d[i + 1];\n                        ctx.rect(d[i++], d[i++], d[i++], d[i++]);\n                        break;\n                    case CMD.Z:\n                        ctx.closePath();\n                        xi = x0;\n                        yi = y0;\n                }\n            }\n        }\n    };\n\n    PathProxy.CMD = CMD;\n\n    module.exports = PathProxy;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/PathProxy.js\n// module id = 488\n// module chunks = 0 1 2","module.exports = { \"default\": require(\"core-js/library/fn/array/from\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/core-js/array/from.js\n// module id = 491\n// module chunks = 0 1 2 4 8 11","require('../../modules/es6.string.iterator');\nrequire('../../modules/es6.array.from');\nmodule.exports = require('../../modules/_core').Array.from;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/fn/array/from.js\n// module id = 492\n// module chunks = 0 1 2 4 8 11","'use strict';\nvar $defineProperty = require('./_object-dp')\n  , createDesc      = require('./_property-desc');\n\nmodule.exports = function(object, index, value){\n  if(index in object)$defineProperty.f(object, index, createDesc(0, value));\n  else object[index] = value;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_create-property.js\n// module id = 493\n// module chunks = 0 1 2 4 8 11","'use strict';\nvar ctx            = require('./_ctx')\n  , $export        = require('./_export')\n  , toObject       = require('./_to-object')\n  , call           = require('./_iter-call')\n  , isArrayIter    = require('./_is-array-iter')\n  , toLength       = require('./_to-length')\n  , createProperty = require('./_create-property')\n  , getIterFn      = require('./core.get-iterator-method');\n\n$export($export.S + $export.F * !require('./_iter-detect')(function(iter){ Array.from(iter); }), 'Array', {\n  // 22.1.2.1 Array.from(arrayLike, mapfn = undefined, thisArg = undefined)\n  from: function from(arrayLike/*, mapfn = undefined, thisArg = undefined*/){\n    var O       = toObject(arrayLike)\n      , C       = typeof this == 'function' ? this : Array\n      , aLen    = arguments.length\n      , mapfn   = aLen > 1 ? arguments[1] : undefined\n      , mapping = mapfn !== undefined\n      , index   = 0\n      , iterFn  = getIterFn(O)\n      , length, result, step, iterator;\n    if(mapping)mapfn = ctx(mapfn, aLen > 2 ? arguments[2] : undefined, 2);\n    // if object isn't iterable or it's array with default iterator - use simple case\n    if(iterFn != undefined && !(C == Array && isArrayIter(iterFn))){\n      for(iterator = iterFn.call(O), result = new C; !(step = iterator.next()).done; index++){\n        createProperty(result, index, mapping ? call(iterator, mapfn, [step.value, index], true) : step.value);\n      }\n    } else {\n      length = toLength(O.length);\n      for(result = new C(length); length > index; index++){\n        createProperty(result, index, mapping ? mapfn(O[index], index) : O[index]);\n      }\n    }\n    result.length = index;\n    return result;\n  }\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/es6.array.from.js\n// module id = 494\n// module chunks = 0 1 2 4 8 11","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var coordinateSystemCreators = {};\n\n    function CoordinateSystemManager() {\n\n        this._coordinateSystems = [];\n    }\n\n    CoordinateSystemManager.prototype = {\n\n        constructor: CoordinateSystemManager,\n\n        create: function (ecModel, api) {\n            var coordinateSystems = [];\n            zrUtil.each(coordinateSystemCreators, function (creater, type) {\n                var list = creater.create(ecModel, api);\n                coordinateSystems = coordinateSystems.concat(list || []);\n            });\n\n            this._coordinateSystems = coordinateSystems;\n        },\n\n        update: function (ecModel, api) {\n            zrUtil.each(this._coordinateSystems, function (coordSys) {\n                // FIXME MUST have\n                coordSys.update && coordSys.update(ecModel, api);\n            });\n        },\n\n        getCoordinateSystems: function () {\n            return this._coordinateSystems.slice();\n        }\n    };\n\n    CoordinateSystemManager.register = function (type, coordinateSystemCreator) {\n        coordinateSystemCreators[type] = coordinateSystemCreator;\n    };\n\n    CoordinateSystemManager.get = function (type) {\n        return coordinateSystemCreators[type];\n    };\n\n    module.exports = CoordinateSystemManager;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/CoordinateSystem.js\n// module id = 495\n// module chunks = 0 1 2","/**\n * @file Data zoom model\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var env = require('zrender/lib/core/env');\n    var echarts = require('../../echarts');\n    var modelUtil = require('../../util/model');\n    var helper = require('./helper');\n    var AxisProxy = require('./AxisProxy');\n    var each = zrUtil.each;\n    var eachAxisDim = helper.eachAxisDim;\n\n    var DataZoomModel = echarts.extendComponentModel({\n\n        type: 'dataZoom',\n\n        dependencies: [\n            'xAxis', 'yAxis', 'zAxis', 'radiusAxis', 'angleAxis', 'singleAxis', 'series'\n        ],\n\n        /**\n         * @protected\n         */\n        defaultOption: {\n            zlevel: 0,\n            z: 4,                   // Higher than normal component (z: 2).\n            orient: null,           // Default auto by axisIndex. Possible value: 'horizontal', 'vertical'.\n            xAxisIndex: null,       // Default the first horizontal category axis.\n            yAxisIndex: null,       // Default the first vertical category axis.\n\n            filterMode: 'filter',   // Possible values: 'filter' or 'empty' or 'weakFilter'.\n                                    // 'filter': data items which are out of window will be removed. This option is\n                                    //          applicable when filtering outliers. For each data item, it will be\n                                    //          filtered if one of the relevant dimensions is out of the window.\n                                    // 'weakFilter': data items which are out of window will be removed. This option\n                                    //          is applicable when filtering outliers. For each data item, it will be\n                                    //          filtered only if all  of the relevant dimensions are out of the same\n                                    //          side of the window.\n                                    // 'empty': data items which are out of window will be set to empty.\n                                    //          This option is applicable when user should not neglect\n                                    //          that there are some data items out of window.\n                                    // 'none': Do not filter.\n                                    // Taking line chart as an example, line will be broken in\n                                    // the filtered points when filterModel is set to 'empty', but\n                                    // be connected when set to 'filter'.\n\n            throttle: null,         // Dispatch action by the fixed rate, avoid frequency.\n                                    // default 100. Do not throttle when use null/undefined.\n                                    // If animation === true and animationDurationUpdate > 0,\n                                    // default value is 100, otherwise 20.\n            start: 0,               // Start percent. 0 ~ 100\n            end: 100,               // End percent. 0 ~ 100\n            startValue: null,       // Start value. If startValue specified, start is ignored.\n            endValue: null,         // End value. If endValue specified, end is ignored.\n            minSpan: null,          // 0 ~ 100\n            maxSpan: null,          // 0 ~ 100\n            minValueSpan: null,     // The range of dataZoom can not be smaller than that.\n            maxValueSpan: null      // The range of dataZoom can not be larger than that.\n        },\n\n        /**\n         * @override\n         */\n        init: function (option, parentModel, ecModel) {\n\n            /**\n             * key like x_0, y_1\n             * @private\n             * @type {Object}\n             */\n            this._dataIntervalByAxis = {};\n\n            /**\n             * @private\n             */\n            this._dataInfo = {};\n\n            /**\n             * key like x_0, y_1\n             * @private\n             */\n            this._axisProxies = {};\n\n            /**\n             * @readOnly\n             */\n            this.textStyleModel;\n\n            /**\n             * @private\n             */\n            this._autoThrottle = true;\n\n            /**\n             * 'percent' or 'value'\n             * @private\n             */\n            this._rangePropMode = ['percent', 'percent'];\n\n            var rawOption = retrieveRaw(option);\n\n            this.mergeDefaultAndTheme(option, ecModel);\n\n            this.doInit(rawOption);\n        },\n\n        /**\n         * @override\n         */\n        mergeOption: function (newOption) {\n            var rawOption = retrieveRaw(newOption);\n\n            //FIX #2591\n            zrUtil.merge(this.option, newOption, true);\n\n            this.doInit(rawOption);\n        },\n\n        /**\n         * @protected\n         */\n        doInit: function (rawOption) {\n            var thisOption = this.option;\n\n            // Disable realtime view update if canvas is not supported.\n            if (!env.canvasSupported) {\n                thisOption.realtime = false;\n            }\n\n            this._setDefaultThrottle(rawOption);\n\n            updateRangeUse(this, rawOption);\n\n            each([['start', 'startValue'], ['end', 'endValue']], function (names, index) {\n                // start/end has higher priority over startValue/endValue if they\n                // both set, but we should make chart.setOption({endValue: 1000})\n                // effective, rather than chart.setOption({endValue: 1000, end: null}).\n                if (this._rangePropMode[index] === 'value') {\n                    thisOption[names[0]] = null;\n                }\n                // Otherwise do nothing and use the merge result.\n            }, this);\n\n            this.textStyleModel = this.getModel('textStyle');\n\n            this._resetTarget();\n\n            this._giveAxisProxies();\n        },\n\n        /**\n         * @private\n         */\n        _giveAxisProxies: function () {\n            var axisProxies = this._axisProxies;\n\n            this.eachTargetAxis(function (dimNames, axisIndex, dataZoomModel, ecModel) {\n                var axisModel = this.dependentModels[dimNames.axis][axisIndex];\n\n                // If exists, share axisProxy with other dataZoomModels.\n                var axisProxy = axisModel.__dzAxisProxy || (\n                    // Use the first dataZoomModel as the main model of axisProxy.\n                    axisModel.__dzAxisProxy = new AxisProxy(\n                        dimNames.name, axisIndex, this, ecModel\n                    )\n                );\n                // FIXME\n                // dispose __dzAxisProxy\n\n                axisProxies[dimNames.name + '_' + axisIndex] = axisProxy;\n            }, this);\n        },\n\n        /**\n         * @private\n         */\n        _resetTarget: function () {\n            var thisOption = this.option;\n\n            var autoMode = this._judgeAutoMode();\n\n            eachAxisDim(function (dimNames) {\n                var axisIndexName = dimNames.axisIndex;\n                thisOption[axisIndexName] = modelUtil.normalizeToArray(\n                    thisOption[axisIndexName]\n                );\n            }, this);\n\n            if (autoMode === 'axisIndex') {\n                this._autoSetAxisIndex();\n            }\n            else if (autoMode === 'orient') {\n                this._autoSetOrient();\n            }\n        },\n\n        /**\n         * @private\n         */\n        _judgeAutoMode: function () {\n            // Auto set only works for setOption at the first time.\n            // The following is user's reponsibility. So using merged\n            // option is OK.\n            var thisOption = this.option;\n\n            var hasIndexSpecified = false;\n            eachAxisDim(function (dimNames) {\n                // When user set axisIndex as a empty array, we think that user specify axisIndex\n                // but do not want use auto mode. Because empty array may be encountered when\n                // some error occured.\n                if (thisOption[dimNames.axisIndex] != null) {\n                    hasIndexSpecified = true;\n                }\n            }, this);\n\n            var orient = thisOption.orient;\n\n            if (orient == null && hasIndexSpecified) {\n                return 'orient';\n            }\n            else if (!hasIndexSpecified) {\n                if (orient == null) {\n                    thisOption.orient = 'horizontal';\n                }\n                return 'axisIndex';\n            }\n        },\n\n        /**\n         * @private\n         */\n        _autoSetAxisIndex: function () {\n            var autoAxisIndex = true;\n            var orient = this.get('orient', true);\n            var thisOption = this.option;\n            var dependentModels = this.dependentModels;\n\n            if (autoAxisIndex) {\n                // Find axis that parallel to dataZoom as default.\n                var dimName = orient === 'vertical' ? 'y' : 'x';\n\n                if (dependentModels[dimName + 'Axis'].length) {\n                    thisOption[dimName + 'AxisIndex'] = [0];\n                    autoAxisIndex = false;\n                }\n                else {\n                    each(dependentModels.singleAxis, function (singleAxisModel) {\n                        if (autoAxisIndex && singleAxisModel.get('orient', true) === orient) {\n                            thisOption.singleAxisIndex = [singleAxisModel.componentIndex];\n                            autoAxisIndex = false;\n                        }\n                    });\n                }\n            }\n\n            if (autoAxisIndex) {\n                // Find the first category axis as default. (consider polar)\n                eachAxisDim(function (dimNames) {\n                    if (!autoAxisIndex) {\n                        return;\n                    }\n                    var axisIndices = [];\n                    var axisModels = this.dependentModels[dimNames.axis];\n                    if (axisModels.length && !axisIndices.length) {\n                        for (var i = 0, len = axisModels.length; i < len; i++) {\n                            if (axisModels[i].get('type') === 'category') {\n                                axisIndices.push(i);\n                            }\n                        }\n                    }\n                    thisOption[dimNames.axisIndex] = axisIndices;\n                    if (axisIndices.length) {\n                        autoAxisIndex = false;\n                    }\n                }, this);\n            }\n\n            if (autoAxisIndex) {\n                // FIXME\n                // 这里是兼容ec2的写法（没指定xAxisIndex和yAxisIndex时把scatter和双数值轴折柱纳入dataZoom控制），\n                // 但是实际是否需要Grid.js#getScaleByOption来判断（考虑time，log等axis type）？\n\n                // If both dataZoom.xAxisIndex and dataZoom.yAxisIndex is not specified,\n                // dataZoom component auto adopts series that reference to\n                // both xAxis and yAxis which type is 'value'.\n                this.ecModel.eachSeries(function (seriesModel) {\n                    if (this._isSeriesHasAllAxesTypeOf(seriesModel, 'value')) {\n                        eachAxisDim(function (dimNames) {\n                            var axisIndices = thisOption[dimNames.axisIndex];\n\n                            var axisIndex = seriesModel.get(dimNames.axisIndex);\n                            var axisId = seriesModel.get(dimNames.axisId);\n\n                            var axisModel = seriesModel.ecModel.queryComponents({\n                                mainType: dimNames.axis,\n                                index: axisIndex,\n                                id: axisId\n                            })[0];\n\n                            if (__DEV__) {\n                                if (!axisModel) {\n                                    throw new Error(\n                                        dimNames.axis + ' \"' + zrUtil.retrieve(\n                                            axisIndex,\n                                            axisId,\n                                            0\n                                        ) + '\" not found'\n                                    );\n                                }\n                            }\n                            axisIndex = axisModel.componentIndex;\n\n                            if (zrUtil.indexOf(axisIndices, axisIndex) < 0) {\n                                axisIndices.push(axisIndex);\n                            }\n                        });\n                    }\n                }, this);\n            }\n        },\n\n        /**\n         * @private\n         */\n        _autoSetOrient: function () {\n            var dim;\n\n            // Find the first axis\n            this.eachTargetAxis(function (dimNames) {\n                !dim && (dim = dimNames.name);\n            }, this);\n\n            this.option.orient = dim === 'y' ? 'vertical' : 'horizontal';\n        },\n\n        /**\n         * @private\n         */\n        _isSeriesHasAllAxesTypeOf: function (seriesModel, axisType) {\n            // FIXME\n            // 需要series的xAxisIndex和yAxisIndex都首先自动设置上。\n            // 例如series.type === scatter时。\n\n            var is = true;\n            eachAxisDim(function (dimNames) {\n                var seriesAxisIndex = seriesModel.get(dimNames.axisIndex);\n                var axisModel = this.dependentModels[dimNames.axis][seriesAxisIndex];\n\n                if (!axisModel || axisModel.get('type') !== axisType) {\n                    is = false;\n                }\n            }, this);\n            return is;\n        },\n\n        /**\n         * @private\n         */\n        _setDefaultThrottle: function (rawOption) {\n            // When first time user set throttle, auto throttle ends.\n            if (rawOption.hasOwnProperty('throttle')) {\n                this._autoThrottle = false;\n            }\n            if (this._autoThrottle) {\n                var globalOption = this.ecModel.option;\n                this.option.throttle =\n                    (globalOption.animation && globalOption.animationDurationUpdate > 0)\n                    ? 100 : 20;\n            }\n        },\n\n        /**\n         * @public\n         */\n        getFirstTargetAxisModel: function () {\n            var firstAxisModel;\n            eachAxisDim(function (dimNames) {\n                if (firstAxisModel == null) {\n                    var indices = this.get(dimNames.axisIndex);\n                    if (indices.length) {\n                        firstAxisModel = this.dependentModels[dimNames.axis][indices[0]];\n                    }\n                }\n            }, this);\n\n            return firstAxisModel;\n        },\n\n        /**\n         * @public\n         * @param {Function} callback param: axisModel, dimNames, axisIndex, dataZoomModel, ecModel\n         */\n        eachTargetAxis: function (callback, context) {\n            var ecModel = this.ecModel;\n            eachAxisDim(function (dimNames) {\n                each(\n                    this.get(dimNames.axisIndex),\n                    function (axisIndex) {\n                        callback.call(context, dimNames, axisIndex, this, ecModel);\n                    },\n                    this\n                );\n            }, this);\n        },\n\n        /**\n         * @param {string} dimName\n         * @param {number} axisIndex\n         * @return {module:echarts/component/dataZoom/AxisProxy} If not found, return null/undefined.\n         */\n        getAxisProxy: function (dimName, axisIndex) {\n            return this._axisProxies[dimName + '_' + axisIndex];\n        },\n\n        /**\n         * @param {string} dimName\n         * @param {number} axisIndex\n         * @return {module:echarts/model/Model} If not found, return null/undefined.\n         */\n        getAxisModel: function (dimName, axisIndex) {\n            var axisProxy = this.getAxisProxy(dimName, axisIndex);\n            return axisProxy && axisProxy.getAxisModel();\n        },\n\n        /**\n         * If not specified, set to undefined.\n         *\n         * @public\n         * @param {Object} opt\n         * @param {number} [opt.start]\n         * @param {number} [opt.end]\n         * @param {number} [opt.startValue]\n         * @param {number} [opt.endValue]\n         * @param {boolean} [ignoreUpdateRangeUsg=false]\n         */\n        setRawRange: function (opt, ignoreUpdateRangeUsg) {\n            each(['start', 'end', 'startValue', 'endValue'], function (name) {\n                // If any of those prop is null/undefined, we should alos set\n                // them, because only one pair between start/end and\n                // startValue/endValue can work.\n                this.option[name] = opt[name];\n            }, this);\n\n            !ignoreUpdateRangeUsg && updateRangeUse(this, opt);\n        },\n\n        /**\n         * @public\n         * @return {Array.<number>} [startPercent, endPercent]\n         */\n        getPercentRange: function () {\n            var axisProxy = this.findRepresentativeAxisProxy();\n            if (axisProxy) {\n                return axisProxy.getDataPercentWindow();\n            }\n        },\n\n        /**\n         * @public\n         * For example, chart.getModel().getComponent('dataZoom').getValueRange('y', 0);\n         *\n         * @param {string} [axisDimName]\n         * @param {number} [axisIndex]\n         * @return {Array.<number>} [startValue, endValue] value can only be '-' or finite number.\n         */\n        getValueRange: function (axisDimName, axisIndex) {\n            if (axisDimName == null && axisIndex == null) {\n                var axisProxy = this.findRepresentativeAxisProxy();\n                if (axisProxy) {\n                    return axisProxy.getDataValueWindow();\n                }\n            }\n            else {\n                return this.getAxisProxy(axisDimName, axisIndex).getDataValueWindow();\n            }\n        },\n\n        /**\n         * @public\n         * @param {module:echarts/model/Model} [axisModel] If axisModel given, find axisProxy\n         *      corresponding to the axisModel\n         * @return {module:echarts/component/dataZoom/AxisProxy}\n         */\n        findRepresentativeAxisProxy: function (axisModel) {\n            if (axisModel) {\n                return axisModel.__dzAxisProxy;\n            }\n\n            // Find the first hosted axisProxy\n            var axisProxies = this._axisProxies;\n            for (var key in axisProxies) {\n                if (axisProxies.hasOwnProperty(key) && axisProxies[key].hostedBy(this)) {\n                    return axisProxies[key];\n                }\n            }\n\n            // If no hosted axis find not hosted axisProxy.\n            // Consider this case: dataZoomModel1 and dataZoomModel2 control the same axis,\n            // and the option.start or option.end settings are different. The percentRange\n            // should follow axisProxy.\n            // (We encounter this problem in toolbox data zoom.)\n            for (var key in axisProxies) {\n                if (axisProxies.hasOwnProperty(key) && !axisProxies[key].hostedBy(this)) {\n                    return axisProxies[key];\n                }\n            }\n        },\n\n        /**\n         * @return {Array.<string>}\n         */\n        getRangePropMode: function () {\n            return this._rangePropMode.slice();\n        }\n    });\n\n    function retrieveRaw(option) {\n        var ret = {};\n        each(\n            ['start', 'end', 'startValue', 'endValue', 'throttle'],\n            function (name) {\n                option.hasOwnProperty(name) && (ret[name] = option[name]);\n            }\n        );\n        return ret;\n    }\n\n    function updateRangeUse(dataZoomModel, rawOption) {\n        each([['start', 'startValue'], ['end', 'endValue']], function (names, index) {\n            var rangePropMode = dataZoomModel._rangePropMode;\n            if (rawOption[names[0]] != null) {\n                rangePropMode[index] = 'percent';\n            }\n            else if (rawOption[names[1]] != null) {\n                rangePropMode[index] = 'value';\n            }\n            // else remain its original setting.\n        });\n    }\n\n    module.exports = DataZoomModel;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/dataZoom/DataZoomModel.js\n// module id = 496\n// module chunks = 0 1 2","\n\n    var ComponentView = require('../../view/Component');\n\n    module.exports = ComponentView.extend({\n\n        type: 'dataZoom',\n\n        render: function (dataZoomModel, ecModel, api, payload) {\n            this.dataZoomModel = dataZoomModel;\n            this.ecModel = ecModel;\n            this.api = api;\n        },\n\n        /**\n         * Find the first target coordinate system.\n         *\n         * @protected\n         * @return {Object} {\n         *                   grid: [\n         *                       {model: coord0, axisModels: [axis1, axis3], coordIndex: 1},\n         *                       {model: coord1, axisModels: [axis0, axis2], coordIndex: 0},\n         *                       ...\n         *                   ],  // cartesians must not be null/undefined.\n         *                   polar: [\n         *                       {model: coord0, axisModels: [axis4], coordIndex: 0},\n         *                       ...\n         *                   ],  // polars must not be null/undefined.\n         *                   singleAxis: [\n         *                       {model: coord0, axisModels: [], coordIndex: 0}\n         *                   ]\n         */\n        getTargetCoordInfo: function () {\n            var dataZoomModel = this.dataZoomModel;\n            var ecModel = this.ecModel;\n            var coordSysLists = {};\n\n            dataZoomModel.eachTargetAxis(function (dimNames, axisIndex) {\n                var axisModel = ecModel.getComponent(dimNames.axis, axisIndex);\n                if (axisModel) {\n                    var coordModel = axisModel.getCoordSysModel();\n                    coordModel && save(\n                        coordModel,\n                        axisModel,\n                        coordSysLists[coordModel.mainType] || (coordSysLists[coordModel.mainType] = []),\n                        coordModel.componentIndex\n                    );\n                }\n            }, this);\n\n            function save(coordModel, axisModel, store, coordIndex) {\n                var item;\n                for (var i = 0; i < store.length; i++) {\n                    if (store[i].model === coordModel) {\n                        item = store[i];\n                        break;\n                    }\n                }\n                if (!item) {\n                    store.push(item = {\n                        model: coordModel, axisModels: [], coordIndex: coordIndex\n                    });\n                }\n                item.axisModels.push(axisModel);\n            }\n\n            return coordSysLists;\n        }\n\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/dataZoom/DataZoomView.js\n// module id = 497\n// module chunks = 0 1 2","\n    var formatUtil = require('../../util/format');\n    var zrUtil = require('zrender/lib/core/util');\n\n    var helper = {};\n\n    var AXIS_DIMS = ['x', 'y', 'z', 'radius', 'angle', 'single'];\n    // Supported coords.\n    var COORDS = ['cartesian2d', 'polar', 'singleAxis'];\n\n    /**\n     * @param {string} coordType\n     * @return {boolean}\n     */\n    helper.isCoordSupported = function (coordType) {\n        return zrUtil.indexOf(COORDS, coordType) >= 0;\n    };\n\n    /**\n     * Create \"each\" method to iterate names.\n     *\n     * @pubilc\n     * @param  {Array.<string>} names\n     * @param  {Array.<string>=} attrs\n     * @return {Function}\n     */\n    helper.createNameEach = function (names, attrs) {\n        names = names.slice();\n        var capitalNames = zrUtil.map(names, formatUtil.capitalFirst);\n        attrs = (attrs || []).slice();\n        var capitalAttrs = zrUtil.map(attrs, formatUtil.capitalFirst);\n\n        return function (callback, context) {\n            zrUtil.each(names, function (name, index) {\n                var nameObj = {name: name, capital: capitalNames[index]};\n\n                for (var j = 0; j < attrs.length; j++) {\n                    nameObj[attrs[j]] = name + capitalAttrs[j];\n                }\n\n                callback.call(context, nameObj);\n            });\n        };\n    };\n\n    /**\n     * Iterate each dimension name.\n     *\n     * @public\n     * @param {Function} callback The parameter is like:\n     *                            {\n     *                                name: 'angle',\n     *                                capital: 'Angle',\n     *                                axis: 'angleAxis',\n     *                                axisIndex: 'angleAixs',\n     *                                index: 'angleIndex'\n     *                            }\n     * @param {Object} context\n     */\n    helper.eachAxisDim = helper.createNameEach(AXIS_DIMS, ['axisIndex', 'axis', 'index', 'id']);\n\n    /**\n     * If tow dataZoomModels has the same axis controlled, we say that they are 'linked'.\n     * dataZoomModels and 'links' make up one or more graphics.\n     * This function finds the graphic where the source dataZoomModel is in.\n     *\n     * @public\n     * @param {Function} forEachNode Node iterator.\n     * @param {Function} forEachEdgeType edgeType iterator\n     * @param {Function} edgeIdGetter Giving node and edgeType, return an array of edge id.\n     * @return {Function} Input: sourceNode, Output: Like {nodes: [], dims: {}}\n     */\n    helper.createLinkedNodesFinder = function (forEachNode, forEachEdgeType, edgeIdGetter) {\n\n        return function (sourceNode) {\n            var result = {\n                nodes: [],\n                records: {} // key: edgeType.name, value: Object (key: edge id, value: boolean).\n            };\n\n            forEachEdgeType(function (edgeType) {\n                result.records[edgeType.name] = {};\n            });\n\n            if (!sourceNode) {\n                return result;\n            }\n\n            absorb(sourceNode, result);\n\n            var existsLink;\n            do {\n                existsLink = false;\n                forEachNode(processSingleNode);\n            }\n            while (existsLink);\n\n            function processSingleNode(node) {\n                if (!isNodeAbsorded(node, result) && isLinked(node, result)) {\n                    absorb(node, result);\n                    existsLink = true;\n                }\n            }\n\n            return result;\n        };\n\n        function isNodeAbsorded(node, result) {\n            return zrUtil.indexOf(result.nodes, node) >= 0;\n        }\n\n        function isLinked(node, result) {\n            var hasLink = false;\n            forEachEdgeType(function (edgeType) {\n                zrUtil.each(edgeIdGetter(node, edgeType) || [], function (edgeId) {\n                    result.records[edgeType.name][edgeId] && (hasLink = true);\n                });\n            });\n            return hasLink;\n        }\n\n        function absorb(node, result) {\n            result.nodes.push(node);\n            forEachEdgeType(function (edgeType) {\n                zrUtil.each(edgeIdGetter(node, edgeType) || [], function (edgeId) {\n                    result.records[edgeType.name][edgeId] = true;\n                });\n            });\n        }\n    };\n\n    module.exports = helper;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/dataZoom/helper.js\n// module id = 498\n// module chunks = 0 1 2","// TODO Parse shadow style\n// TODO Only shallow path support\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    module.exports = function (properties) {\n        // Normalize\n        for (var i = 0; i < properties.length; i++) {\n            if (!properties[i][1]) {\n               properties[i][1] = properties[i][0];\n            }\n        }\n        return function (excludes, includes) {\n            var style = {};\n            for (var i = 0; i < properties.length; i++) {\n                var propName = properties[i][1];\n                if ((excludes && zrUtil.indexOf(excludes, propName) >= 0)\n                    || (includes && zrUtil.indexOf(includes, propName) < 0)\n                ) {\n                    continue;\n                }\n                var val = this.getShallow(propName);\n                if (val != null) {\n                    style[properties[i][0]] = val;\n                }\n            }\n            return style;\n        };\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/makeStyleMapper.js\n// module id = 499\n// module chunks = 0 1 2","/**\n * Interval scale\n * @module echarts/scale/Interval\n */\n\n\n\n    var numberUtil = require('../util/number');\n    var formatUtil = require('../util/format');\n    var Scale = require('./Scale');\n    var helper = require('./helper');\n\n    var roundNumber = numberUtil.round;\n\n    /**\n     * @alias module:echarts/coord/scale/Interval\n     * @constructor\n     */\n    var IntervalScale = Scale.extend({\n\n        type: 'interval',\n\n        _interval: 0,\n\n        _intervalPrecision: 2,\n\n        setExtent: function (start, end) {\n            var thisExtent = this._extent;\n            //start,end may be a Number like '25',so...\n            if (!isNaN(start)) {\n                thisExtent[0] = parseFloat(start);\n            }\n            if (!isNaN(end)) {\n                thisExtent[1] = parseFloat(end);\n            }\n        },\n\n        unionExtent: function (other) {\n            var extent = this._extent;\n            other[0] < extent[0] && (extent[0] = other[0]);\n            other[1] > extent[1] && (extent[1] = other[1]);\n\n            // unionExtent may called by it's sub classes\n            IntervalScale.prototype.setExtent.call(this, extent[0], extent[1]);\n        },\n        /**\n         * Get interval\n         */\n        getInterval: function () {\n            return this._interval;\n        },\n\n        /**\n         * Set interval\n         */\n        setInterval: function (interval) {\n            this._interval = interval;\n            // Dropped auto calculated niceExtent and use user setted extent\n            // We assume user wan't to set both interval, min, max to get a better result\n            this._niceExtent = this._extent.slice();\n\n            this._intervalPrecision = helper.getIntervalPrecision(interval);\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getTicks: function () {\n            return helper.intervalScaleGetTicks(\n                this._interval, this._extent, this._niceExtent, this._intervalPrecision\n            );\n        },\n\n        /**\n         * @return {Array.<string>}\n         */\n        getTicksLabels: function () {\n            var labels = [];\n            var ticks = this.getTicks();\n            for (var i = 0; i < ticks.length; i++) {\n                labels.push(this.getLabel(ticks[i]));\n            }\n            return labels;\n        },\n\n        /**\n         * @param {number} data\n         * @param {Object} [opt]\n         * @param {number|string} [opt.precision] If 'auto', use nice presision.\n         * @param {boolean} [opt.pad] returns 1.50 but not 1.5 if precision is 2.\n         * @return {string}\n         */\n        getLabel: function (data, opt) {\n            if (data == null) {\n                return '';\n            }\n\n            var precision = opt && opt.precision;\n\n            if (precision == null) {\n                precision = numberUtil.getPrecisionSafe(data) || 0;\n            }\n            else if (precision === 'auto') {\n                // Should be more precise then tick.\n                precision = this._intervalPrecision;\n            }\n\n            // (1) If `precision` is set, 12.005 should be display as '12.00500'.\n            // (2) Use roundNumber (toFixed) to avoid scientific notation like '3.5e-7'.\n            data = roundNumber(data, precision, true);\n\n            return formatUtil.addCommas(data);\n        },\n\n        /**\n         * Update interval and extent of intervals for nice ticks\n         *\n         * @param {number} [splitNumber = 5] Desired number of ticks\n         * @param {number} [minInterval]\n         */\n        niceTicks: function (splitNumber, minInterval) {\n            splitNumber = splitNumber || 5;\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            if (!isFinite(span)) {\n                return;\n            }\n            // User may set axis min 0 and data are all negative\n            // FIXME If it needs to reverse ?\n            if (span < 0) {\n                span = -span;\n                extent.reverse();\n            }\n\n            var result = helper.intervalScaleNiceTicks(extent, splitNumber, minInterval);\n\n            this._intervalPrecision = result.intervalPrecision;\n            this._interval = result.interval;\n            this._niceExtent = result.niceTickExtent;\n        },\n\n        /**\n         * Nice extent.\n         * @param {Object} opt\n         * @param {number} [opt.splitNumber = 5] Given approx tick number\n         * @param {boolean} [opt.fixMin=false]\n         * @param {boolean} [opt.fixMax=false]\n         * @param {boolean} [opt.minInterval=false]\n         */\n        niceExtent: function (opt) {\n            var extent = this._extent;\n            // If extent start and end are same, expand them\n            if (extent[0] === extent[1]) {\n                if (extent[0] !== 0) {\n                    // Expand extent\n                    var expandSize = extent[0];\n                    // In the fowllowing case\n                    //      Axis has been fixed max 100\n                    //      Plus data are all 100 and axis extent are [100, 100].\n                    // Extend to the both side will cause expanded max is larger than fixed max.\n                    // So only expand to the smaller side.\n                    if (!opt.fixMax) {\n                        extent[1] += expandSize / 2;\n                        extent[0] -= expandSize / 2;\n                    }\n                    else {\n                        extent[0] -= expandSize / 2;\n                    }\n                }\n                else {\n                    extent[1] = 1;\n                }\n            }\n            var span = extent[1] - extent[0];\n            // If there are no data and extent are [Infinity, -Infinity]\n            if (!isFinite(span)) {\n                extent[0] = 0;\n                extent[1] = 1;\n            }\n\n            this.niceTicks(opt.splitNumber, opt.minInterval);\n\n            // var extent = this._extent;\n            var interval = this._interval;\n\n            if (!opt.fixMin) {\n                extent[0] = roundNumber(Math.floor(extent[0] / interval) * interval);\n            }\n            if (!opt.fixMax) {\n                extent[1] = roundNumber(Math.ceil(extent[1] / interval) * interval);\n            }\n        }\n    });\n\n    /**\n     * @return {module:echarts/scale/Time}\n     */\n    IntervalScale.create = function () {\n        return new IntervalScale();\n    };\n\n    module.exports = IntervalScale;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/scale/Interval.js\n// module id = 500\n// module chunks = 0 1 2","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var clazz = require('./clazz');\n\n    var parseClassType = clazz.parseClassType;\n\n    var base = 0;\n\n    var componentUtil = {};\n\n    var DELIMITER = '_';\n\n    /**\n     * @public\n     * @param {string} type\n     * @return {string}\n     */\n    componentUtil.getUID = function (type) {\n        // Considering the case of crossing js context,\n        // use Math.random to make id as unique as possible.\n        return [(type || ''), base++, Math.random()].join(DELIMITER);\n    };\n\n    /**\n     * @inner\n     */\n    componentUtil.enableSubTypeDefaulter = function (entity) {\n\n        var subTypeDefaulters = {};\n\n        entity.registerSubTypeDefaulter = function (componentType, defaulter) {\n            componentType = parseClassType(componentType);\n            subTypeDefaulters[componentType.main] = defaulter;\n        };\n\n        entity.determineSubType = function (componentType, option) {\n            var type = option.type;\n            if (!type) {\n                var componentTypeMain = parseClassType(componentType).main;\n                if (entity.hasSubTypes(componentType) && subTypeDefaulters[componentTypeMain]) {\n                    type = subTypeDefaulters[componentTypeMain](option);\n                }\n            }\n            return type;\n        };\n\n        return entity;\n    };\n\n    /**\n     * Topological travel on Activity Network (Activity On Vertices).\n     * Dependencies is defined in Model.prototype.dependencies, like ['xAxis', 'yAxis'].\n     *\n     * If 'xAxis' or 'yAxis' is absent in componentTypeList, just ignore it in topology.\n     *\n     * If there is circle dependencey, Error will be thrown.\n     *\n     */\n    componentUtil.enableTopologicalTravel = function (entity, dependencyGetter) {\n\n        /**\n         * @public\n         * @param {Array.<string>} targetNameList Target Component type list.\n         *                                           Can be ['aa', 'bb', 'aa.xx']\n         * @param {Array.<string>} fullNameList By which we can build dependency graph.\n         * @param {Function} callback Params: componentType, dependencies.\n         * @param {Object} context Scope of callback.\n         */\n        entity.topologicalTravel = function (targetNameList, fullNameList, callback, context) {\n            if (!targetNameList.length) {\n                return;\n            }\n\n            var result = makeDepndencyGraph(fullNameList);\n            var graph = result.graph;\n            var stack = result.noEntryList;\n\n            var targetNameSet = {};\n            zrUtil.each(targetNameList, function (name) {\n                targetNameSet[name] = true;\n            });\n\n            while (stack.length) {\n                var currComponentType = stack.pop();\n                var currVertex = graph[currComponentType];\n                var isInTargetNameSet = !!targetNameSet[currComponentType];\n                if (isInTargetNameSet) {\n                    callback.call(context, currComponentType, currVertex.originalDeps.slice());\n                    delete targetNameSet[currComponentType];\n                }\n                zrUtil.each(\n                    currVertex.successor,\n                    isInTargetNameSet ? removeEdgeAndAdd : removeEdge\n                );\n            }\n\n            zrUtil.each(targetNameSet, function () {\n                throw new Error('Circle dependency may exists');\n            });\n\n            function removeEdge(succComponentType) {\n                graph[succComponentType].entryCount--;\n                if (graph[succComponentType].entryCount === 0) {\n                    stack.push(succComponentType);\n                }\n            }\n\n            // Consider this case: legend depends on series, and we call\n            // chart.setOption({series: [...]}), where only series is in option.\n            // If we do not have 'removeEdgeAndAdd', legendModel.mergeOption will\n            // not be called, but only sereis.mergeOption is called. Thus legend\n            // have no chance to update its local record about series (like which\n            // name of series is available in legend).\n            function removeEdgeAndAdd(succComponentType) {\n                targetNameSet[succComponentType] = true;\n                removeEdge(succComponentType);\n            }\n        };\n\n        /**\n         * DepndencyGraph: {Object}\n         * key: conponentType,\n         * value: {\n         *     successor: [conponentTypes...],\n         *     originalDeps: [conponentTypes...],\n         *     entryCount: {number}\n         * }\n         */\n        function makeDepndencyGraph(fullNameList) {\n            var graph = {};\n            var noEntryList = [];\n\n            zrUtil.each(fullNameList, function (name) {\n\n                var thisItem = createDependencyGraphItem(graph, name);\n                var originalDeps = thisItem.originalDeps = dependencyGetter(name);\n\n                var availableDeps = getAvailableDependencies(originalDeps, fullNameList);\n                thisItem.entryCount = availableDeps.length;\n                if (thisItem.entryCount === 0) {\n                    noEntryList.push(name);\n                }\n\n                zrUtil.each(availableDeps, function (dependentName) {\n                    if (zrUtil.indexOf(thisItem.predecessor, dependentName) < 0) {\n                        thisItem.predecessor.push(dependentName);\n                    }\n                    var thatItem = createDependencyGraphItem(graph, dependentName);\n                    if (zrUtil.indexOf(thatItem.successor, dependentName) < 0) {\n                        thatItem.successor.push(name);\n                    }\n                });\n            });\n\n            return {graph: graph, noEntryList: noEntryList};\n        }\n\n        function createDependencyGraphItem(graph, name) {\n            if (!graph[name]) {\n                graph[name] = {predecessor: [], successor: []};\n            }\n            return graph[name];\n        }\n\n        function getAvailableDependencies(originalDeps, fullNameList) {\n            var availableDeps = [];\n            zrUtil.each(originalDeps, function (dep) {\n                zrUtil.indexOf(fullNameList, dep) >= 0 && availableDeps.push(dep);\n            });\n            return availableDeps;\n        }\n    };\n\n    module.exports = componentUtil;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/component.js\n// module id = 501\n// module chunks = 0 1 2","// https://github.com/mziccard/node-timsort\n\n    var DEFAULT_MIN_MERGE = 32;\n\n    var DEFAULT_MIN_GALLOPING = 7;\n\n    var DEFAULT_TMP_STORAGE_LENGTH = 256;\n\n    function minRunLength(n) {\n        var r = 0;\n\n        while (n >= DEFAULT_MIN_MERGE) {\n            r |= n & 1;\n            n >>= 1;\n        }\n\n        return n + r;\n    }\n\n    function makeAscendingRun(array, lo, hi, compare) {\n        var runHi = lo + 1;\n\n        if (runHi === hi) {\n            return 1;\n        }\n\n        if (compare(array[runHi++], array[lo]) < 0) {\n            while (runHi < hi && compare(array[runHi], array[runHi - 1]) < 0) {\n                runHi++;\n            }\n\n            reverseRun(array, lo, runHi);\n        }\n        else {\n            while (runHi < hi && compare(array[runHi], array[runHi - 1]) >= 0) {\n                runHi++;\n            }\n        }\n\n        return runHi - lo;\n    }\n\n    function reverseRun(array, lo, hi) {\n        hi--;\n\n        while (lo < hi) {\n            var t = array[lo];\n            array[lo++] = array[hi];\n            array[hi--] = t;\n        }\n    }\n\n    function binaryInsertionSort(array, lo, hi, start, compare) {\n        if (start === lo) {\n            start++;\n        }\n\n        for (; start < hi; start++) {\n            var pivot = array[start];\n\n            var left = lo;\n            var right = start;\n            var mid;\n\n            while (left < right) {\n                mid = left + right >>> 1;\n\n                if (compare(pivot, array[mid]) < 0) {\n                    right = mid;\n                }\n                else {\n                    left = mid + 1;\n                }\n            }\n\n            var n = start - left;\n\n            switch (n) {\n                case 3:\n                    array[left + 3] = array[left + 2];\n\n                case 2:\n                    array[left + 2] = array[left + 1];\n\n                case 1:\n                    array[left + 1] = array[left];\n                    break;\n                default:\n                    while (n > 0) {\n                        array[left + n] = array[left + n - 1];\n                        n--;\n                    }\n            }\n\n            array[left] = pivot;\n        }\n    }\n\n    function gallopLeft(value, array, start, length, hint, compare) {\n        var lastOffset = 0;\n        var maxOffset = 0;\n        var offset = 1;\n\n        if (compare(value, array[start + hint]) > 0) {\n            maxOffset = length - hint;\n\n            while (offset < maxOffset && compare(value, array[start + hint + offset]) > 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            lastOffset += hint;\n            offset += hint;\n        }\n        else {\n            maxOffset = hint + 1;\n            while (offset < maxOffset && compare(value, array[start + hint - offset]) <= 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            var tmp = lastOffset;\n            lastOffset = hint - offset;\n            offset = hint - tmp;\n        }\n\n        lastOffset++;\n        while (lastOffset < offset) {\n            var m = lastOffset + (offset - lastOffset >>> 1);\n\n            if (compare(value, array[start + m]) > 0) {\n                lastOffset = m + 1;\n            }\n            else {\n                offset = m;\n            }\n        }\n        return offset;\n    }\n\n    function gallopRight(value, array, start, length, hint, compare) {\n        var lastOffset = 0;\n        var maxOffset = 0;\n        var offset = 1;\n\n        if (compare(value, array[start + hint]) < 0) {\n            maxOffset = hint + 1;\n\n            while (offset < maxOffset && compare(value, array[start + hint - offset]) < 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            var tmp = lastOffset;\n            lastOffset = hint - offset;\n            offset = hint - tmp;\n        }\n        else {\n            maxOffset = length - hint;\n\n            while (offset < maxOffset && compare(value, array[start + hint + offset]) >= 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            lastOffset += hint;\n            offset += hint;\n        }\n\n        lastOffset++;\n\n        while (lastOffset < offset) {\n            var m = lastOffset + (offset - lastOffset >>> 1);\n\n            if (compare(value, array[start + m]) < 0) {\n                offset = m;\n            }\n            else {\n                lastOffset = m + 1;\n            }\n        }\n\n        return offset;\n    }\n\n    function TimSort(array, compare) {\n        var minGallop = DEFAULT_MIN_GALLOPING;\n        var length = 0;\n        var tmpStorageLength = DEFAULT_TMP_STORAGE_LENGTH;\n        var stackLength = 0;\n        var runStart;\n        var runLength;\n        var stackSize = 0;\n\n        length = array.length;\n\n        if (length < 2 * DEFAULT_TMP_STORAGE_LENGTH) {\n            tmpStorageLength = length >>> 1;\n        }\n\n        var tmp = [];\n\n        stackLength = length < 120 ? 5 : length < 1542 ? 10 : length < 119151 ? 19 : 40;\n\n        runStart = [];\n        runLength = [];\n\n        function pushRun(_runStart, _runLength) {\n            runStart[stackSize] = _runStart;\n            runLength[stackSize] = _runLength;\n            stackSize += 1;\n        }\n\n        function mergeRuns() {\n            while (stackSize > 1) {\n                var n = stackSize - 2;\n\n                if (n >= 1 && runLength[n - 1] <= runLength[n] + runLength[n + 1] || n >= 2 && runLength[n - 2] <= runLength[n] + runLength[n - 1]) {\n                    if (runLength[n - 1] < runLength[n + 1]) {\n                        n--;\n                    }\n                }\n                else if (runLength[n] > runLength[n + 1]) {\n                    break;\n                }\n                mergeAt(n);\n            }\n        }\n\n        function forceMergeRuns() {\n            while (stackSize > 1) {\n                var n = stackSize - 2;\n\n                if (n > 0 && runLength[n - 1] < runLength[n + 1]) {\n                    n--;\n                }\n\n                mergeAt(n);\n            }\n        }\n\n        function mergeAt(i) {\n            var start1 = runStart[i];\n            var length1 = runLength[i];\n            var start2 = runStart[i + 1];\n            var length2 = runLength[i + 1];\n\n            runLength[i] = length1 + length2;\n\n            if (i === stackSize - 3) {\n                runStart[i + 1] = runStart[i + 2];\n                runLength[i + 1] = runLength[i + 2];\n            }\n\n            stackSize--;\n\n            var k = gallopRight(array[start2], array, start1, length1, 0, compare);\n            start1 += k;\n            length1 -= k;\n\n            if (length1 === 0) {\n                return;\n            }\n\n            length2 = gallopLeft(array[start1 + length1 - 1], array, start2, length2, length2 - 1, compare);\n\n            if (length2 === 0) {\n                return;\n            }\n\n            if (length1 <= length2) {\n                mergeLow(start1, length1, start2, length2);\n            }\n            else {\n                mergeHigh(start1, length1, start2, length2);\n            }\n        }\n\n        function mergeLow(start1, length1, start2, length2) {\n            var i = 0;\n\n            for (i = 0; i < length1; i++) {\n                tmp[i] = array[start1 + i];\n            }\n\n            var cursor1 = 0;\n            var cursor2 = start2;\n            var dest = start1;\n\n            array[dest++] = array[cursor2++];\n\n            if (--length2 === 0) {\n                for (i = 0; i < length1; i++) {\n                    array[dest + i] = tmp[cursor1 + i];\n                }\n                return;\n            }\n\n            if (length1 === 1) {\n                for (i = 0; i < length2; i++) {\n                    array[dest + i] = array[cursor2 + i];\n                }\n                array[dest + length2] = tmp[cursor1];\n                return;\n            }\n\n            var _minGallop = minGallop;\n            var count1, count2, exit;\n\n            while (1) {\n                count1 = 0;\n                count2 = 0;\n                exit = false;\n\n                do {\n                    if (compare(array[cursor2], tmp[cursor1]) < 0) {\n                        array[dest++] = array[cursor2++];\n                        count2++;\n                        count1 = 0;\n\n                        if (--length2 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                    else {\n                        array[dest++] = tmp[cursor1++];\n                        count1++;\n                        count2 = 0;\n                        if (--length1 === 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                } while ((count1 | count2) < _minGallop);\n\n                if (exit) {\n                    break;\n                }\n\n                do {\n                    count1 = gallopRight(array[cursor2], tmp, cursor1, length1, 0, compare);\n\n                    if (count1 !== 0) {\n                        for (i = 0; i < count1; i++) {\n                            array[dest + i] = tmp[cursor1 + i];\n                        }\n\n                        dest += count1;\n                        cursor1 += count1;\n                        length1 -= count1;\n                        if (length1 <= 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n\n                    array[dest++] = array[cursor2++];\n\n                    if (--length2 === 0) {\n                        exit = true;\n                        break;\n                    }\n\n                    count2 = gallopLeft(tmp[cursor1], array, cursor2, length2, 0, compare);\n\n                    if (count2 !== 0) {\n                        for (i = 0; i < count2; i++) {\n                            array[dest + i] = array[cursor2 + i];\n                        }\n\n                        dest += count2;\n                        cursor2 += count2;\n                        length2 -= count2;\n\n                        if (length2 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                    array[dest++] = tmp[cursor1++];\n\n                    if (--length1 === 1) {\n                        exit = true;\n                        break;\n                    }\n\n                    _minGallop--;\n                } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n                if (exit) {\n                    break;\n                }\n\n                if (_minGallop < 0) {\n                    _minGallop = 0;\n                }\n\n                _minGallop += 2;\n            }\n\n            minGallop = _minGallop;\n\n            minGallop < 1 && (minGallop = 1);\n\n            if (length1 === 1) {\n                for (i = 0; i < length2; i++) {\n                    array[dest + i] = array[cursor2 + i];\n                }\n                array[dest + length2] = tmp[cursor1];\n            }\n            else if (length1 === 0) {\n                throw new Error();\n                // throw new Error('mergeLow preconditions were not respected');\n            }\n            else {\n                for (i = 0; i < length1; i++) {\n                    array[dest + i] = tmp[cursor1 + i];\n                }\n            }\n        }\n\n        function mergeHigh (start1, length1, start2, length2) {\n            var i = 0;\n\n            for (i = 0; i < length2; i++) {\n                tmp[i] = array[start2 + i];\n            }\n\n            var cursor1 = start1 + length1 - 1;\n            var cursor2 = length2 - 1;\n            var dest = start2 + length2 - 1;\n            var customCursor = 0;\n            var customDest = 0;\n\n            array[dest--] = array[cursor1--];\n\n            if (--length1 === 0) {\n                customCursor = dest - (length2 - 1);\n\n                for (i = 0; i < length2; i++) {\n                    array[customCursor + i] = tmp[i];\n                }\n\n                return;\n            }\n\n            if (length2 === 1) {\n                dest -= length1;\n                cursor1 -= length1;\n                customDest = dest + 1;\n                customCursor = cursor1 + 1;\n\n                for (i = length1 - 1; i >= 0; i--) {\n                    array[customDest + i] = array[customCursor + i];\n                }\n\n                array[dest] = tmp[cursor2];\n                return;\n            }\n\n            var _minGallop = minGallop;\n\n            while (true) {\n                var count1 = 0;\n                var count2 = 0;\n                var exit = false;\n\n                do {\n                    if (compare(tmp[cursor2], array[cursor1]) < 0) {\n                        array[dest--] = array[cursor1--];\n                        count1++;\n                        count2 = 0;\n                        if (--length1 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                    else {\n                        array[dest--] = tmp[cursor2--];\n                        count2++;\n                        count1 = 0;\n                        if (--length2 === 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                } while ((count1 | count2) < _minGallop);\n\n                if (exit) {\n                    break;\n                }\n\n                do {\n                    count1 = length1 - gallopRight(tmp[cursor2], array, start1, length1, length1 - 1, compare);\n\n                    if (count1 !== 0) {\n                        dest -= count1;\n                        cursor1 -= count1;\n                        length1 -= count1;\n                        customDest = dest + 1;\n                        customCursor = cursor1 + 1;\n\n                        for (i = count1 - 1; i >= 0; i--) {\n                            array[customDest + i] = array[customCursor + i];\n                        }\n\n                        if (length1 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n\n                    array[dest--] = tmp[cursor2--];\n\n                    if (--length2 === 1) {\n                        exit = true;\n                        break;\n                    }\n\n                    count2 = length2 - gallopLeft(array[cursor1], tmp, 0, length2, length2 - 1, compare);\n\n                    if (count2 !== 0) {\n                        dest -= count2;\n                        cursor2 -= count2;\n                        length2 -= count2;\n                        customDest = dest + 1;\n                        customCursor = cursor2 + 1;\n\n                        for (i = 0; i < count2; i++) {\n                            array[customDest + i] = tmp[customCursor + i];\n                        }\n\n                        if (length2 <= 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n\n                    array[dest--] = array[cursor1--];\n\n                    if (--length1 === 0) {\n                        exit = true;\n                        break;\n                    }\n\n                    _minGallop--;\n                } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n                if (exit) {\n                    break;\n                }\n\n                if (_minGallop < 0) {\n                    _minGallop = 0;\n                }\n\n                _minGallop += 2;\n            }\n\n            minGallop = _minGallop;\n\n            if (minGallop < 1) {\n                minGallop = 1;\n            }\n\n            if (length2 === 1) {\n                dest -= length1;\n                cursor1 -= length1;\n                customDest = dest + 1;\n                customCursor = cursor1 + 1;\n\n                for (i = length1 - 1; i >= 0; i--) {\n                    array[customDest + i] = array[customCursor + i];\n                }\n\n                array[dest] = tmp[cursor2];\n            }\n            else if (length2 === 0) {\n                throw new Error();\n                // throw new Error('mergeHigh preconditions were not respected');\n            }\n            else {\n                customCursor = dest - (length2 - 1);\n                for (i = 0; i < length2; i++) {\n                    array[customCursor + i] = tmp[i];\n                }\n            }\n        }\n\n        this.mergeRuns = mergeRuns;\n        this.forceMergeRuns = forceMergeRuns;\n        this.pushRun = pushRun;\n    }\n\n    function sort(array, compare, lo, hi) {\n        if (!lo) {\n            lo = 0;\n        }\n        if (!hi) {\n            hi = array.length;\n        }\n\n        var remaining = hi - lo;\n\n        if (remaining < 2) {\n            return;\n        }\n\n        var runLength = 0;\n\n        if (remaining < DEFAULT_MIN_MERGE) {\n            runLength = makeAscendingRun(array, lo, hi, compare);\n            binaryInsertionSort(array, lo, hi, lo + runLength, compare);\n            return;\n        }\n\n        var ts = new TimSort(array, compare);\n\n        var minRun = minRunLength(remaining);\n\n        do {\n            runLength = makeAscendingRun(array, lo, hi, compare);\n            if (runLength < minRun) {\n                var force = remaining;\n                if (force > minRun) {\n                    force = minRun;\n                }\n\n                binaryInsertionSort(array, lo, lo + force, lo + runLength, compare);\n                runLength = force;\n            }\n\n            ts.pushRun(lo, runLength);\n            ts.mergeRuns();\n\n            remaining -= runLength;\n            lo += runLength;\n        } while (remaining !== 0);\n\n        ts.forceMergeRuns();\n    }\n\n    module.exports = sort;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/timsort.js\n// module id = 505\n// module chunks = 0 1 2","/**\n * 可绘制的图形基类\n * Base class of all displayable graphic objects\n * @module zrender/graphic/Displayable\n */\n\n\n\n    var zrUtil = require('../core/util');\n\n    var Style = require('./Style');\n\n    var Element = require('../Element');\n    var RectText = require('./mixin/RectText');\n    // var Stateful = require('./mixin/Stateful');\n\n    /**\n     * @alias module:zrender/graphic/Displayable\n     * @extends module:zrender/Element\n     * @extends module:zrender/graphic/mixin/RectText\n     */\n    function Displayable(opts) {\n\n        opts = opts || {};\n\n        Element.call(this, opts);\n\n        // Extend properties\n        for (var name in opts) {\n            if (\n                opts.hasOwnProperty(name) &&\n                name !== 'style'\n            ) {\n                this[name] = opts[name];\n            }\n        }\n\n        /**\n         * @type {module:zrender/graphic/Style}\n         */\n        this.style = new Style(opts.style);\n\n        this._rect = null;\n        // Shapes for cascade clipping.\n        this.__clipPaths = [];\n\n        // FIXME Stateful must be mixined after style is setted\n        // Stateful.call(this, opts);\n    }\n\n    Displayable.prototype = {\n\n        constructor: Displayable,\n\n        type: 'displayable',\n\n        /**\n         * Displayable 是否为脏，Painter 中会根据该标记判断是否需要是否需要重新绘制\n         * Dirty flag. From which painter will determine if this displayable object needs brush\n         * @name module:zrender/graphic/Displayable#__dirty\n         * @type {boolean}\n         */\n        __dirty: true,\n\n        /**\n         * 图形是否可见，为true时不绘制图形，但是仍能触发鼠标事件\n         * If ignore drawing of the displayable object. Mouse event will still be triggered\n         * @name module:/zrender/graphic/Displayable#invisible\n         * @type {boolean}\n         * @default false\n         */\n        invisible: false,\n\n        /**\n         * @name module:/zrender/graphic/Displayable#z\n         * @type {number}\n         * @default 0\n         */\n        z: 0,\n\n        /**\n         * @name module:/zrender/graphic/Displayable#z\n         * @type {number}\n         * @default 0\n         */\n        z2: 0,\n\n        /**\n         * z层level，决定绘画在哪层canvas中\n         * @name module:/zrender/graphic/Displayable#zlevel\n         * @type {number}\n         * @default 0\n         */\n        zlevel: 0,\n\n        /**\n         * 是否可拖拽\n         * @name module:/zrender/graphic/Displayable#draggable\n         * @type {boolean}\n         * @default false\n         */\n        draggable: false,\n\n        /**\n         * 是否正在拖拽\n         * @name module:/zrender/graphic/Displayable#draggable\n         * @type {boolean}\n         * @default false\n         */\n        dragging: false,\n\n        /**\n         * 是否相应鼠标事件\n         * @name module:/zrender/graphic/Displayable#silent\n         * @type {boolean}\n         * @default false\n         */\n        silent: false,\n\n        /**\n         * If enable culling\n         * @type {boolean}\n         * @default false\n         */\n        culling: false,\n\n        /**\n         * Mouse cursor when hovered\n         * @name module:/zrender/graphic/Displayable#cursor\n         * @type {string}\n         */\n        cursor: 'pointer',\n\n        /**\n         * If hover area is bounding rect\n         * @name module:/zrender/graphic/Displayable#rectHover\n         * @type {string}\n         */\n        rectHover: false,\n\n        /**\n         * Render the element progressively when the value >= 0,\n         * usefull for large data.\n         * @type {number}\n         */\n        progressive: -1,\n\n        beforeBrush: function (ctx) {},\n\n        afterBrush: function (ctx) {},\n\n        /**\n         * 图形绘制方法\n         * @param {Canvas2DRenderingContext} ctx\n         */\n        // Interface\n        brush: function (ctx, prevEl) {},\n\n        /**\n         * 获取最小包围盒\n         * @return {module:zrender/core/BoundingRect}\n         */\n        // Interface\n        getBoundingRect: function () {},\n\n        /**\n         * 判断坐标 x, y 是否在图形上\n         * If displayable element contain coord x, y\n         * @param  {number} x\n         * @param  {number} y\n         * @return {boolean}\n         */\n        contain: function (x, y) {\n            return this.rectContain(x, y);\n        },\n\n        /**\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        traverse: function (cb, context) {\n            cb.call(context, this);\n        },\n\n        /**\n         * 判断坐标 x, y 是否在图形的包围盒上\n         * If bounding rect of element contain coord x, y\n         * @param  {number} x\n         * @param  {number} y\n         * @return {boolean}\n         */\n        rectContain: function (x, y) {\n            var coord = this.transformCoordToLocal(x, y);\n            var rect = this.getBoundingRect();\n            return rect.contain(coord[0], coord[1]);\n        },\n\n        /**\n         * 标记图形元素为脏，并且在下一帧重绘\n         * Mark displayable element dirty and refresh next frame\n         */\n        dirty: function () {\n            this.__dirty = true;\n\n            this._rect = null;\n\n            this.__zr && this.__zr.refresh();\n        },\n\n        /**\n         * 图形是否会触发事件\n         * If displayable object binded any event\n         * @return {boolean}\n         */\n        // TODO, 通过 bind 绑定的事件\n        // isSilent: function () {\n        //     return !(\n        //         this.hoverable || this.draggable\n        //         || this.onmousemove || this.onmouseover || this.onmouseout\n        //         || this.onmousedown || this.onmouseup || this.onclick\n        //         || this.ondragenter || this.ondragover || this.ondragleave\n        //         || this.ondrop\n        //     );\n        // },\n        /**\n         * Alias for animate('style')\n         * @param {boolean} loop\n         */\n        animateStyle: function (loop) {\n            return this.animate('style', loop);\n        },\n\n        attrKV: function (key, value) {\n            if (key !== 'style') {\n                Element.prototype.attrKV.call(this, key, value);\n            }\n            else {\n                this.style.set(value);\n            }\n        },\n\n        /**\n         * @param {Object|string} key\n         * @param {*} value\n         */\n        setStyle: function (key, value) {\n            this.style.set(key, value);\n            this.dirty(false);\n            return this;\n        },\n\n        /**\n         * Use given style object\n         * @param  {Object} obj\n         */\n        useStyle: function (obj) {\n            this.style = new Style(obj);\n            this.dirty(false);\n            return this;\n        }\n    };\n\n    zrUtil.inherits(Displayable, Element);\n\n    zrUtil.mixin(Displayable, RectText);\n    // zrUtil.mixin(Displayable, Stateful);\n\n    module.exports = Displayable;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Displayable.js\n// module id = 506\n// module chunks = 0 1 2","\n\n    /**\n     * @param {Array.<Object>} colorStops\n     */\n    var Gradient = function (colorStops) {\n\n        this.colorStops = colorStops || [];\n    };\n\n    Gradient.prototype = {\n\n        constructor: Gradient,\n\n        addColorStop: function (offset, color) {\n            this.colorStops.push({\n\n                offset: offset,\n\n                color: color\n            });\n        }\n    };\n\n    module.exports = Gradient;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Gradient.js\n// module id = 507\n// module chunks = 0 1 2","'use strict';\n// Symbol factory\n\n\n    var graphic = require('./graphic');\n    var BoundingRect = require('zrender/lib/core/BoundingRect');\n\n    /**\n     * Triangle shape\n     * @inner\n     */\n    var Triangle = graphic.extendShape({\n        type: 'triangle',\n        shape: {\n            cx: 0,\n            cy: 0,\n            width: 0,\n            height: 0\n        },\n        buildPath: function (path, shape) {\n            var cx = shape.cx;\n            var cy = shape.cy;\n            var width = shape.width / 2;\n            var height = shape.height / 2;\n            path.moveTo(cx, cy - height);\n            path.lineTo(cx + width, cy + height);\n            path.lineTo(cx - width, cy + height);\n            path.closePath();\n        }\n    });\n    /**\n     * Diamond shape\n     * @inner\n     */\n    var Diamond = graphic.extendShape({\n        type: 'diamond',\n        shape: {\n            cx: 0,\n            cy: 0,\n            width: 0,\n            height: 0\n        },\n        buildPath: function (path, shape) {\n            var cx = shape.cx;\n            var cy = shape.cy;\n            var width = shape.width / 2;\n            var height = shape.height / 2;\n            path.moveTo(cx, cy - height);\n            path.lineTo(cx + width, cy);\n            path.lineTo(cx, cy + height);\n            path.lineTo(cx - width, cy);\n            path.closePath();\n        }\n    });\n\n    /**\n     * Pin shape\n     * @inner\n     */\n    var Pin = graphic.extendShape({\n        type: 'pin',\n        shape: {\n            // x, y on the cusp\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (path, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var w = shape.width / 5 * 3;\n            // Height must be larger than width\n            var h = Math.max(w, shape.height);\n            var r = w / 2;\n\n            // Dist on y with tangent point and circle center\n            var dy = r * r / (h - r);\n            var cy = y - h + r + dy;\n            var angle = Math.asin(dy / r);\n            // Dist on x with tangent point and circle center\n            var dx = Math.cos(angle) * r;\n\n            var tanX = Math.sin(angle);\n            var tanY = Math.cos(angle);\n\n            path.arc(\n                x, cy, r,\n                Math.PI - angle,\n                Math.PI * 2 + angle\n            );\n\n            var cpLen = r * 0.6;\n            var cpLen2 = r * 0.7;\n            path.bezierCurveTo(\n                x + dx - tanX * cpLen, cy + dy + tanY * cpLen,\n                x, y - cpLen2,\n                x, y\n            );\n            path.bezierCurveTo(\n                x, y - cpLen2,\n                x - dx + tanX * cpLen, cy + dy + tanY * cpLen,\n                x - dx, cy + dy\n            );\n            path.closePath();\n        }\n    });\n\n    /**\n     * Arrow shape\n     * @inner\n     */\n    var Arrow = graphic.extendShape({\n\n        type: 'arrow',\n\n        shape: {\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var height = shape.height;\n            var width = shape.width;\n            var x = shape.x;\n            var y = shape.y;\n            var dx = width / 3 * 2;\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + dx, y + height);\n            ctx.lineTo(x, y + height / 4 * 3);\n            ctx.lineTo(x - dx, y + height);\n            ctx.lineTo(x, y);\n            ctx.closePath();\n        }\n    });\n\n    /**\n     * Map of path contructors\n     * @type {Object.<string, module:zrender/graphic/Path>}\n     */\n    var symbolCtors = {\n        line: graphic.Line,\n\n        rect: graphic.Rect,\n\n        roundRect: graphic.Rect,\n\n        square: graphic.Rect,\n\n        circle: graphic.Circle,\n\n        diamond: Diamond,\n\n        pin: Pin,\n\n        arrow: Arrow,\n\n        triangle: Triangle\n    };\n\n    var symbolShapeMakers = {\n\n        line: function (x, y, w, h, shape) {\n            // FIXME\n            shape.x1 = x;\n            shape.y1 = y + h / 2;\n            shape.x2 = x + w;\n            shape.y2 = y + h / 2;\n        },\n\n        rect: function (x, y, w, h, shape) {\n            shape.x = x;\n            shape.y = y;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        roundRect: function (x, y, w, h, shape) {\n            shape.x = x;\n            shape.y = y;\n            shape.width = w;\n            shape.height = h;\n            shape.r = Math.min(w, h) / 4;\n        },\n\n        square: function (x, y, w, h, shape) {\n            var size = Math.min(w, h);\n            shape.x = x;\n            shape.y = y;\n            shape.width = size;\n            shape.height = size;\n        },\n\n        circle: function (x, y, w, h, shape) {\n            // Put circle in the center of square\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.r = Math.min(w, h) / 2;\n        },\n\n        diamond: function (x, y, w, h, shape) {\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        pin: function (x, y, w, h, shape) {\n            shape.x = x + w / 2;\n            shape.y = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        arrow: function (x, y, w, h, shape) {\n            shape.x = x + w / 2;\n            shape.y = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        triangle: function (x, y, w, h, shape) {\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        }\n    };\n\n    var symbolBuildProxies = {};\n    for (var name in symbolCtors) {\n        if (symbolCtors.hasOwnProperty(name)) {\n            symbolBuildProxies[name] = new symbolCtors[name]();\n        }\n    }\n\n    var Symbol = graphic.extendShape({\n\n        type: 'symbol',\n\n        shape: {\n            symbolType: '',\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        beforeBrush: function () {\n            var style = this.style;\n            var shape = this.shape;\n            // FIXME\n            if (shape.symbolType === 'pin' && style.textPosition === 'inside') {\n                style.textPosition = ['50%', '40%'];\n                style.textAlign = 'center';\n                style.textVerticalAlign = 'middle';\n            }\n        },\n\n        buildPath: function (ctx, shape, inBundle) {\n            var symbolType = shape.symbolType;\n            var proxySymbol = symbolBuildProxies[symbolType];\n            if (shape.symbolType !== 'none') {\n                if (!proxySymbol) {\n                    // Default rect\n                    symbolType = 'rect';\n                    proxySymbol = symbolBuildProxies[symbolType];\n                }\n                symbolShapeMakers[symbolType](\n                    shape.x, shape.y, shape.width, shape.height, proxySymbol.shape\n                );\n                proxySymbol.buildPath(ctx, proxySymbol.shape, inBundle);\n            }\n        }\n    });\n\n    // Provide setColor helper method to avoid determine if set the fill or stroke outside\n    var symbolPathSetColor = function (color) {\n        if (this.type !== 'image') {\n            var symbolStyle = this.style;\n            var symbolShape = this.shape;\n            if (symbolShape && symbolShape.symbolType === 'line') {\n                symbolStyle.stroke = color;\n            }\n            else if (this.__isEmptyBrush) {\n                symbolStyle.stroke = color;\n                symbolStyle.fill = '#fff';\n            }\n            else {\n                // FIXME 判断图形默认是填充还是描边，使用 onlyStroke ?\n                symbolStyle.fill && (symbolStyle.fill = color);\n                symbolStyle.stroke && (symbolStyle.stroke = color);\n            }\n            this.dirty(false);\n        }\n    };\n\n    var symbolUtil = {\n        /**\n         * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n         * @param {string} symbolType\n         * @param {number} x\n         * @param {number} y\n         * @param {number} w\n         * @param {number} h\n         * @param {string} color\n         */\n        createSymbol: function (symbolType, x, y, w, h, color) {\n            // TODO Support image object, DynamicImage.\n\n            var isEmpty = symbolType.indexOf('empty') === 0;\n            if (isEmpty) {\n                symbolType = symbolType.substr(5, 1).toLowerCase() + symbolType.substr(6);\n            }\n            var symbolPath;\n\n            if (symbolType.indexOf('image://') === 0) {\n                symbolPath = new graphic.Image({\n                    style: {\n                        image: symbolType.slice(8),\n                        x: x,\n                        y: y,\n                        width: w,\n                        height: h\n                    }\n                });\n            }\n            else if (symbolType.indexOf('path://') === 0) {\n                symbolPath = graphic.makePath(symbolType.slice(7), {}, new BoundingRect(x, y, w, h));\n            }\n            else {\n                symbolPath = new Symbol({\n                    shape: {\n                        symbolType: symbolType,\n                        x: x,\n                        y: y,\n                        width: w,\n                        height: h\n                    }\n                });\n            }\n\n            symbolPath.__isEmptyBrush = isEmpty;\n\n            symbolPath.setColor = symbolPathSetColor;\n\n            symbolPath.setColor(color);\n\n            return symbolPath;\n        }\n    };\n\n    module.exports = symbolUtil;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/symbol.js\n// module id = 512\n// module chunks = 0 1 2","var ctx                = require('./_ctx')\n  , invoke             = require('./_invoke')\n  , html               = require('./_html')\n  , cel                = require('./_dom-create')\n  , global             = require('./_global')\n  , process            = global.process\n  , setTask            = global.setImmediate\n  , clearTask          = global.clearImmediate\n  , MessageChannel     = global.MessageChannel\n  , counter            = 0\n  , queue              = {}\n  , ONREADYSTATECHANGE = 'onreadystatechange'\n  , defer, channel, port;\nvar run = function(){\n  var id = +this;\n  if(queue.hasOwnProperty(id)){\n    var fn = queue[id];\n    delete queue[id];\n    fn();\n  }\n};\nvar listener = function(event){\n  run.call(event.data);\n};\n// Node.js 0.9+ & IE10+ has setImmediate, otherwise:\nif(!setTask || !clearTask){\n  setTask = function setImmediate(fn){\n    var args = [], i = 1;\n    while(arguments.length > i)args.push(arguments[i++]);\n    queue[++counter] = function(){\n      invoke(typeof fn == 'function' ? fn : Function(fn), args);\n    };\n    defer(counter);\n    return counter;\n  };\n  clearTask = function clearImmediate(id){\n    delete queue[id];\n  };\n  // Node.js 0.8-\n  if(require('./_cof')(process) == 'process'){\n    defer = function(id){\n      process.nextTick(ctx(run, id, 1));\n    };\n  // Browsers with MessageChannel, includes WebWorkers\n  } else if(MessageChannel){\n    channel = new MessageChannel;\n    port    = channel.port2;\n    channel.port1.onmessage = listener;\n    defer = ctx(port.postMessage, port, 1);\n  // Browsers with postMessage, skip WebWorkers\n  // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'\n  } else if(global.addEventListener && typeof postMessage == 'function' && !global.importScripts){\n    defer = function(id){\n      global.postMessage(id + '', '*');\n    };\n    global.addEventListener('message', listener, false);\n  // IE8-\n  } else if(ONREADYSTATECHANGE in cel('script')){\n    defer = function(id){\n      html.appendChild(cel('script'))[ONREADYSTATECHANGE] = function(){\n        html.removeChild(this);\n        run.call(id);\n      };\n    };\n  // Rest old browsers\n  } else {\n    defer = function(id){\n      setTimeout(ctx(run, id, 1), 0);\n    };\n  }\n}\nmodule.exports = {\n  set:   setTask,\n  clear: clearTask\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_task.js\n// module id = 517\n// module chunks = 1 2 3","/**\n * @module echarts/chart/helper/Symbol\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var symbolUtil = require('../../util/symbol');\n    var graphic = require('../../util/graphic');\n    var numberUtil = require('../../util/number');\n    var labelHelper = require('./labelHelper');\n\n    function getSymbolSize(data, idx) {\n        var symbolSize = data.getItemVisual(idx, 'symbolSize');\n        return symbolSize instanceof Array\n            ? symbolSize.slice()\n            : [+symbolSize, +symbolSize];\n    }\n\n    function getScale(symbolSize) {\n        return [symbolSize[0] / 2, symbolSize[1] / 2];\n    }\n\n    /**\n     * @constructor\n     * @alias {module:echarts/chart/helper/Symbol}\n     * @param {module:echarts/data/List} data\n     * @param {number} idx\n     * @extends {module:zrender/graphic/Group}\n     */\n    function Symbol(data, idx, seriesScope) {\n        graphic.Group.call(this);\n\n        this.updateData(data, idx, seriesScope);\n    }\n\n    var symbolProto = Symbol.prototype;\n\n    function driftSymbol(dx, dy) {\n        this.parent.drift(dx, dy);\n    }\n\n    symbolProto._createSymbol = function (symbolType, data, idx, symbolSize) {\n        // Remove paths created before\n        this.removeAll();\n\n        var seriesModel = data.hostModel;\n        var color = data.getItemVisual(idx, 'color');\n\n        // var symbolPath = symbolUtil.createSymbol(\n        //     symbolType, -0.5, -0.5, 1, 1, color\n        // );\n        // If width/height are set too small (e.g., set to 1) on ios10\n        // and macOS Sierra, a circle stroke become a rect, no matter what\n        // the scale is set. So we set width/height as 2. See #4150.\n        var symbolPath = symbolUtil.createSymbol(\n            symbolType, -1, -1, 2, 2, color\n        );\n\n        symbolPath.attr({\n            z2: 100,\n            culling: true,\n            scale: [0, 0]\n        });\n        // Rewrite drift method\n        symbolPath.drift = driftSymbol;\n\n        graphic.initProps(symbolPath, {\n            scale: getScale(symbolSize)\n        }, seriesModel, idx);\n        this._symbolType = symbolType;\n\n        this.add(symbolPath);\n    };\n\n    /**\n     * Stop animation\n     * @param {boolean} toLastFrame\n     */\n    symbolProto.stopSymbolAnimation = function (toLastFrame) {\n        this.childAt(0).stopAnimation(toLastFrame);\n    };\n\n    /**\n     * Get symbol path element\n     */\n    symbolProto.getSymbolPath = function () {\n        return this.childAt(0);\n    };\n\n    /**\n     * Get scale(aka, current symbol size).\n     * Including the change caused by animation\n     */\n    symbolProto.getScale = function () {\n        return this.childAt(0).scale;\n    };\n\n    /**\n     * Highlight symbol\n     */\n    symbolProto.highlight = function () {\n        this.childAt(0).trigger('emphasis');\n    };\n\n    /**\n     * Downplay symbol\n     */\n    symbolProto.downplay = function () {\n        this.childAt(0).trigger('normal');\n    };\n\n    /**\n     * @param {number} zlevel\n     * @param {number} z\n     */\n    symbolProto.setZ = function (zlevel, z) {\n        var symbolPath = this.childAt(0);\n        symbolPath.zlevel = zlevel;\n        symbolPath.z = z;\n    };\n\n    symbolProto.setDraggable = function (draggable) {\n        var symbolPath = this.childAt(0);\n        symbolPath.draggable = draggable;\n        symbolPath.cursor = draggable ? 'move' : 'pointer';\n    };\n\n    /**\n     * Update symbol properties\n     * @param  {module:echarts/data/List} data\n     * @param  {number} idx\n     */\n    symbolProto.updateData = function (data, idx, seriesScope) {\n        this.silent = false;\n\n        var symbolType = data.getItemVisual(idx, 'symbol') || 'circle';\n        var seriesModel = data.hostModel;\n        var symbolSize = getSymbolSize(data, idx);\n\n        if (symbolType !== this._symbolType) {\n            this._createSymbol(symbolType, data, idx, symbolSize);\n        }\n        else {\n            var symbolPath = this.childAt(0);\n            symbolPath.silent = false;\n            graphic.updateProps(symbolPath, {\n                scale: getScale(symbolSize)\n            }, seriesModel, idx);\n        }\n        this._updateCommon(data, idx, symbolSize, seriesScope);\n        this._seriesModel = seriesModel;\n    };\n\n    // Update common properties\n    var normalStyleAccessPath = ['itemStyle', 'normal'];\n    var emphasisStyleAccessPath = ['itemStyle', 'emphasis'];\n    var normalLabelAccessPath = ['label', 'normal'];\n    var emphasisLabelAccessPath = ['label', 'emphasis'];\n\n    symbolProto._updateCommon = function (data, idx, symbolSize, seriesScope) {\n        var symbolPath = this.childAt(0);\n        var seriesModel = data.hostModel;\n        var color = data.getItemVisual(idx, 'color');\n\n        // Reset style\n        if (symbolPath.type !== 'image') {\n            symbolPath.useStyle({\n                strokeNoScale: true\n            });\n        }\n\n        seriesScope = seriesScope || null;\n\n        var itemStyle = seriesScope && seriesScope.itemStyle;\n        var hoverItemStyle = seriesScope && seriesScope.hoverItemStyle;\n        var symbolRotate = seriesScope && seriesScope.symbolRotate;\n        var symbolOffset = seriesScope && seriesScope.symbolOffset;\n        var labelModel = seriesScope && seriesScope.labelModel;\n        var hoverLabelModel = seriesScope && seriesScope.hoverLabelModel;\n        var hoverAnimation = seriesScope && seriesScope.hoverAnimation;\n        var cursorStyle = seriesScope && seriesScope.cursorStyle;\n\n        if (!seriesScope || data.hasItemOption) {\n            var itemModel = data.getItemModel(idx);\n\n            // Color must be excluded.\n            // Because symbol provide setColor individually to set fill and stroke\n            itemStyle = itemModel.getModel(normalStyleAccessPath).getItemStyle(['color']);\n            hoverItemStyle = itemModel.getModel(emphasisStyleAccessPath).getItemStyle();\n\n            symbolRotate = itemModel.getShallow('symbolRotate');\n            symbolOffset = itemModel.getShallow('symbolOffset');\n\n            labelModel = itemModel.getModel(normalLabelAccessPath);\n            hoverLabelModel = itemModel.getModel(emphasisLabelAccessPath);\n            hoverAnimation = itemModel.getShallow('hoverAnimation');\n            cursorStyle = itemModel.getShallow('cursor');\n        }\n        else {\n            hoverItemStyle = zrUtil.extend({}, hoverItemStyle);\n        }\n\n        var elStyle = symbolPath.style;\n\n        symbolPath.attr('rotation', (symbolRotate || 0) * Math.PI / 180 || 0);\n\n        if (symbolOffset) {\n            symbolPath.attr('position', [\n                numberUtil.parsePercent(symbolOffset[0], symbolSize[0]),\n                numberUtil.parsePercent(symbolOffset[1], symbolSize[1])\n            ]);\n        }\n\n        cursorStyle && symbolPath.attr('cursor', cursorStyle);\n\n        // PENDING setColor before setStyle!!!\n        symbolPath.setColor(color);\n\n        symbolPath.setStyle(itemStyle);\n\n        var opacity = data.getItemVisual(idx, 'opacity');\n        if (opacity != null) {\n            elStyle.opacity = opacity;\n        }\n\n        var valueDim = labelHelper.findLabelValueDim(data);\n        labelHelper.setTextToStyle(\n            data, idx, valueDim, elStyle, seriesModel, labelModel, color\n        );\n        labelHelper.setTextToStyle(\n            data, idx, valueDim, hoverItemStyle, seriesModel, hoverLabelModel, color\n        );\n\n        symbolPath.off('mouseover')\n            .off('mouseout')\n            .off('emphasis')\n            .off('normal');\n\n        symbolPath.hoverStyle = hoverItemStyle;\n\n        graphic.setHoverStyle(symbolPath);\n\n        var scale = getScale(symbolSize);\n\n        if (hoverAnimation && seriesModel.isAnimationEnabled()) {\n            var onEmphasis = function() {\n                var ratio = scale[1] / scale[0];\n                this.animateTo({\n                    scale: [\n                        Math.max(scale[0] * 1.1, scale[0] + 3),\n                        Math.max(scale[1] * 1.1, scale[1] + 3 * ratio)\n                    ]\n                }, 400, 'elasticOut');\n            };\n            var onNormal = function() {\n                this.animateTo({\n                    scale: scale\n                }, 400, 'elasticOut');\n            };\n            symbolPath.on('mouseover', onEmphasis)\n                .on('mouseout', onNormal)\n                .on('emphasis', onEmphasis)\n                .on('normal', onNormal);\n        }\n    };\n\n    symbolProto.fadeOut = function (cb) {\n        var symbolPath = this.childAt(0);\n        // Avoid mistaken hover when fading out\n        this.silent = symbolPath.silent = true;\n        // Not show text when animating\n        symbolPath.style.text = '';\n        graphic.updateProps(symbolPath, {\n            scale: [0, 0]\n        }, this._seriesModel, this.dataIndex, cb);\n    };\n\n    zrUtil.inherits(Symbol, graphic.Group);\n\n    module.exports = Symbol;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/helper/Symbol.js\n// module id = 518\n// module chunks = 0 1 2","'use strict';\n\n\n    var List = require('../../data/List');\n    var completeDimensions = require('../../data/helper/completeDimensions');\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../../util/model');\n    var CoordinateSystem = require('../../CoordinateSystem');\n    var getDataItemValue = modelUtil.getDataItemValue;\n    var converDataValue = modelUtil.converDataValue;\n\n    function firstDataNotNull(data) {\n        var i = 0;\n        while (i < data.length && data[i] == null) {\n            i++;\n        }\n        return data[i];\n    }\n    function ifNeedCompleteOrdinalData(data) {\n        var sampleItem = firstDataNotNull(data);\n        return sampleItem != null\n            && !zrUtil.isArray(getDataItemValue(sampleItem));\n    }\n\n    /**\n     * Helper function to create a list from option data\n     */\n    function createListFromArray(data, seriesModel, ecModel) {\n        // If data is undefined\n        data = data || [];\n\n        if (__DEV__) {\n            if (!zrUtil.isArray(data)) {\n                throw new Error('Invalid data.');\n            }\n        }\n\n        var coordSysName = seriesModel.get('coordinateSystem');\n        var creator = creators[coordSysName];\n        var registeredCoordSys = CoordinateSystem.get(coordSysName);\n        var completeDimOpt = {\n            encodeDef: seriesModel.get('encode'),\n            dimsDef: seriesModel.get('dimensions')\n        };\n\n        // FIXME\n        var axesInfo = creator && creator(data, seriesModel, ecModel, completeDimOpt);\n        var dimensions = axesInfo && axesInfo.dimensions;\n        if (!dimensions) {\n            // Get dimensions from registered coordinate system\n            dimensions = (registeredCoordSys && (\n                registeredCoordSys.getDimensionsInfo\n                    ? registeredCoordSys.getDimensionsInfo()\n                    : registeredCoordSys.dimensions.slice()\n            )) || ['x', 'y'];\n            dimensions = completeDimensions(dimensions, data, completeDimOpt);\n        }\n\n        var categoryIndex = axesInfo ? axesInfo.categoryIndex : -1;\n\n        var list = new List(dimensions, seriesModel);\n\n        var nameList = createNameList(axesInfo, data);\n\n        var categories = {};\n        var dimValueGetter = (categoryIndex >= 0 && ifNeedCompleteOrdinalData(data))\n            ? function (itemOpt, dimName, dataIndex, dimIndex) {\n                // If any dataItem is like { value: 10 }\n                if (modelUtil.isDataItemOption(itemOpt)) {\n                    list.hasItemOption = true;\n                }\n\n                // Use dataIndex as ordinal value in categoryAxis\n                return dimIndex === categoryIndex\n                    ? dataIndex\n                    : converDataValue(getDataItemValue(itemOpt), dimensions[dimIndex]);\n            }\n            : function (itemOpt, dimName, dataIndex, dimIndex) {\n                var value = getDataItemValue(itemOpt);\n                var val = converDataValue(value && value[dimIndex], dimensions[dimIndex]);\n                // If any dataItem is like { value: 10 }\n                if (modelUtil.isDataItemOption(itemOpt)) {\n                    list.hasItemOption = true;\n                }\n\n                var categoryAxesModels = axesInfo && axesInfo.categoryAxesModels;\n                if (categoryAxesModels && categoryAxesModels[dimName]) {\n                    // If given value is a category string\n                    if (typeof val === 'string') {\n                        // Lazy get categories\n                        categories[dimName] = categories[dimName]\n                            || categoryAxesModels[dimName].getCategories();\n                        val = zrUtil.indexOf(categories[dimName], val);\n                        if (val < 0 && !isNaN(val)) {\n                            // In case some one write '1', '2' istead of 1, 2\n                            val = +val;\n                        }\n                    }\n                }\n                return val;\n            };\n\n        list.hasItemOption = false;\n        list.initData(data, nameList, dimValueGetter);\n\n        return list;\n    }\n\n    function isStackable(axisType) {\n        return axisType !== 'category' && axisType !== 'time';\n    }\n\n    function getDimTypeByAxis(axisType) {\n        return axisType === 'category'\n            ? 'ordinal'\n            : axisType === 'time'\n            ? 'time'\n            : 'float';\n    }\n\n    /**\n     * Creaters for each coord system.\n     */\n    var creators = {\n\n        cartesian2d: function (data, seriesModel, ecModel, completeDimOpt) {\n\n            var axesModels = zrUtil.map(['xAxis', 'yAxis'], function (name) {\n                return ecModel.queryComponents({\n                    mainType: name,\n                    index: seriesModel.get(name + 'Index'),\n                    id: seriesModel.get(name + 'Id')\n                })[0];\n            });\n            var xAxisModel = axesModels[0];\n            var yAxisModel = axesModels[1];\n\n            if (__DEV__) {\n                if (!xAxisModel) {\n                    throw new Error('xAxis \"' + zrUtil.retrieve(\n                        seriesModel.get('xAxisIndex'),\n                        seriesModel.get('xAxisId'),\n                        0\n                    ) + '\" not found');\n                }\n                if (!yAxisModel) {\n                    throw new Error('yAxis \"' + zrUtil.retrieve(\n                        seriesModel.get('xAxisIndex'),\n                        seriesModel.get('yAxisId'),\n                        0\n                    ) + '\" not found');\n                }\n            }\n\n            var xAxisType = xAxisModel.get('type');\n            var yAxisType = yAxisModel.get('type');\n\n            var dimensions = [\n                {\n                    name: 'x',\n                    type: getDimTypeByAxis(xAxisType),\n                    stackable: isStackable(xAxisType)\n                },\n                {\n                    name: 'y',\n                    // If two category axes\n                    type: getDimTypeByAxis(yAxisType),\n                    stackable: isStackable(yAxisType)\n                }\n            ];\n\n            var isXAxisCateogry = xAxisType === 'category';\n            var isYAxisCategory = yAxisType === 'category';\n\n            dimensions = completeDimensions(dimensions, data, completeDimOpt);\n\n            var categoryAxesModels = {};\n            if (isXAxisCateogry) {\n                categoryAxesModels.x = xAxisModel;\n            }\n            if (isYAxisCategory) {\n                categoryAxesModels.y = yAxisModel;\n            }\n            return {\n                dimensions: dimensions,\n                categoryIndex: isXAxisCateogry ? 0 : (isYAxisCategory ? 1 : -1),\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        singleAxis: function (data, seriesModel, ecModel, completeDimOpt) {\n\n            var singleAxisModel = ecModel.queryComponents({\n                mainType: 'singleAxis',\n                index: seriesModel.get('singleAxisIndex'),\n                id: seriesModel.get('singleAxisId')\n            })[0];\n\n            if (__DEV__) {\n                if (!singleAxisModel) {\n                    throw new Error('singleAxis should be specified.');\n                }\n            }\n\n            var singleAxisType = singleAxisModel.get('type');\n            var isCategory = singleAxisType === 'category';\n\n            var dimensions = [{\n                name: 'single',\n                type: getDimTypeByAxis(singleAxisType),\n                stackable: isStackable(singleAxisType)\n            }];\n\n            dimensions = completeDimensions(dimensions, data, completeDimOpt);\n\n            var categoryAxesModels = {};\n            if (isCategory) {\n                categoryAxesModels.single = singleAxisModel;\n            }\n\n            return {\n                dimensions: dimensions,\n                categoryIndex: isCategory ? 0 : -1,\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        polar: function (data, seriesModel, ecModel, completeDimOpt) {\n            var polarModel = ecModel.queryComponents({\n                mainType: 'polar',\n                index: seriesModel.get('polarIndex'),\n                id: seriesModel.get('polarId')\n            })[0];\n\n            var angleAxisModel = polarModel.findAxisModel('angleAxis');\n            var radiusAxisModel = polarModel.findAxisModel('radiusAxis');\n\n            if (__DEV__) {\n                if (!angleAxisModel) {\n                    throw new Error('angleAxis option not found');\n                }\n                if (!radiusAxisModel) {\n                    throw new Error('radiusAxis option not found');\n                }\n            }\n\n            var radiusAxisType = radiusAxisModel.get('type');\n            var angleAxisType = angleAxisModel.get('type');\n\n            var dimensions = [\n                {\n                    name: 'radius',\n                    type: getDimTypeByAxis(radiusAxisType),\n                    stackable: isStackable(radiusAxisType)\n                },\n                {\n                    name: 'angle',\n                    type: getDimTypeByAxis(angleAxisType),\n                    stackable: isStackable(angleAxisType)\n                }\n            ];\n            var isAngleAxisCateogry = angleAxisType === 'category';\n            var isRadiusAxisCateogry = radiusAxisType === 'category';\n\n            dimensions = completeDimensions(dimensions, data, completeDimOpt);\n\n            var categoryAxesModels = {};\n            if (isRadiusAxisCateogry) {\n                categoryAxesModels.radius = radiusAxisModel;\n            }\n            if (isAngleAxisCateogry) {\n                categoryAxesModels.angle = angleAxisModel;\n            }\n            return {\n                dimensions: dimensions,\n                categoryIndex: isAngleAxisCateogry ? 1 : (isRadiusAxisCateogry ? 0 : -1),\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        geo: function (data, seriesModel, ecModel, completeDimOpt) {\n            // TODO Region\n            // 多个散点图系列在同一个地区的时候\n            return {\n                dimensions: completeDimensions([\n                    {name: 'lng'},\n                    {name: 'lat'}\n                ], data, completeDimOpt)\n            };\n        }\n    };\n\n    function createNameList(result, data) {\n        var nameList = [];\n\n        var categoryDim = result && result.dimensions[result.categoryIndex];\n        var categoryAxisModel;\n        if (categoryDim) {\n            categoryAxisModel = result.categoryAxesModels[categoryDim.name];\n        }\n\n        if (categoryAxisModel) {\n            // FIXME Two category axis\n            var categories = categoryAxisModel.getCategories();\n            if (categories) {\n                var dataLen = data.length;\n                // Ordered data is given explicitly like\n                // [[3, 0.2], [1, 0.3], [2, 0.15]]\n                // or given scatter data,\n                // pick the category\n                if (zrUtil.isArray(data[0]) && data[0].length > 1) {\n                    nameList = [];\n                    for (var i = 0; i < dataLen; i++) {\n                        nameList[i] = categories[data[i][result.categoryIndex || 0]];\n                    }\n                }\n                else {\n                    nameList = categories.slice(0);\n                }\n            }\n        }\n\n        return nameList;\n    }\n\n    module.exports = createListFromArray;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/helper/createListFromArray.js\n// module id = 519\n// module chunks = 0 1 2","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var formatUtil = require('../../util/format');\n    var graphic = require('../../util/graphic');\n    var Model = require('../../model/Model');\n    var numberUtil = require('../../util/number');\n    var remRadian = numberUtil.remRadian;\n    var isRadianAroundZero = numberUtil.isRadianAroundZero;\n    var vec2 = require('zrender/lib/core/vector');\n    var matrix = require('zrender/lib/core/matrix');\n    var v2ApplyTransform = vec2.applyTransform;\n    var retrieve = zrUtil.retrieve;\n\n    var PI = Math.PI;\n\n    function makeAxisEventDataBase(axisModel) {\n        var eventData = {\n            componentType: axisModel.mainType\n        };\n        eventData[axisModel.mainType + 'Index'] = axisModel.componentIndex;\n        return eventData;\n    }\n\n    /**\n     * A final axis is translated and rotated from a \"standard axis\".\n     * So opt.position and opt.rotation is required.\n     *\n     * A standard axis is and axis from [0, 0] to [0, axisExtent[1]],\n     * for example: (0, 0) ------------> (0, 50)\n     *\n     * nameDirection or tickDirection or labelDirection is 1 means tick\n     * or label is below the standard axis, whereas is -1 means above\n     * the standard axis. labelOffset means offset between label and axis,\n     * which is useful when 'onZero', where axisLabel is in the grid and\n     * label in outside grid.\n     *\n     * Tips: like always,\n     * positive rotation represents anticlockwise, and negative rotation\n     * represents clockwise.\n     * The direction of position coordinate is the same as the direction\n     * of screen coordinate.\n     *\n     * Do not need to consider axis 'inverse', which is auto processed by\n     * axis extent.\n     *\n     * @param {module:zrender/container/Group} group\n     * @param {Object} axisModel\n     * @param {Object} opt Standard axis parameters.\n     * @param {Array.<number>} opt.position [x, y]\n     * @param {number} opt.rotation by radian\n     * @param {number} [opt.nameDirection=1] 1 or -1 Used when nameLocation is 'middle'.\n     * @param {number} [opt.tickDirection=1] 1 or -1\n     * @param {number} [opt.labelDirection=1] 1 or -1\n     * @param {number} [opt.labelOffset=0] Usefull when onZero.\n     * @param {string} [opt.axisLabelShow] default get from axisModel.\n     * @param {string} [opt.axisName] default get from axisModel.\n     * @param {number} [opt.axisNameAvailableWidth]\n     * @param {number} [opt.labelRotate] by degree, default get from axisModel.\n     * @param {number} [opt.labelInterval] Default label interval when label\n     *                                     interval from model is null or 'auto'.\n     * @param {number} [opt.strokeContainThreshold] Default label interval when label\n     * @param {number} [opt.nameTruncateMaxWidth]\n     */\n    var AxisBuilder = function (axisModel, opt) {\n\n        /**\n         * @readOnly\n         */\n        this.opt = opt;\n\n        /**\n         * @readOnly\n         */\n        this.axisModel = axisModel;\n\n        // Default value\n        zrUtil.defaults(\n            opt,\n            {\n                labelOffset: 0,\n                nameDirection: 1,\n                tickDirection: 1,\n                labelDirection: 1,\n                silent: true\n            }\n        );\n\n        /**\n         * @readOnly\n         */\n        this.group = new graphic.Group();\n\n        // FIXME Not use a seperate text group?\n        var dumbGroup = new graphic.Group({\n            position: opt.position.slice(),\n            rotation: opt.rotation\n        });\n\n        // this.group.add(dumbGroup);\n        // this._dumbGroup = dumbGroup;\n\n        dumbGroup.updateTransform();\n        this._transform = dumbGroup.transform;\n\n        this._dumbGroup = dumbGroup;\n    };\n\n    AxisBuilder.prototype = {\n\n        constructor: AxisBuilder,\n\n        hasBuilder: function (name) {\n            return !!builders[name];\n        },\n\n        add: function (name) {\n            builders[name].call(this);\n        },\n\n        getGroup: function () {\n            return this.group;\n        }\n\n    };\n\n    var builders = {\n\n        /**\n         * @private\n         */\n        axisLine: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n\n            if (!axisModel.get('axisLine.show')) {\n                return;\n            }\n\n            var extent = this.axisModel.axis.getExtent();\n\n            var matrix = this._transform;\n            var pt1 = [extent[0], 0];\n            var pt2 = [extent[1], 0];\n            if (matrix) {\n                v2ApplyTransform(pt1, pt1, matrix);\n                v2ApplyTransform(pt2, pt2, matrix);\n            }\n\n            this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n\n                // Id for animation\n                anid: 'line',\n\n                shape: {\n                    x1: pt1[0],\n                    y1: pt1[1],\n                    x2: pt2[0],\n                    y2: pt2[1]\n                },\n                style: zrUtil.extend(\n                    {lineCap: 'round'},\n                    axisModel.getModel('axisLine.lineStyle').getLineStyle()\n                ),\n                strokeContainThreshold: opt.strokeContainThreshold || 5,\n                silent: true,\n                z2: 1\n            })));\n        },\n\n        /**\n         * @private\n         */\n        axisTick: function () {\n            var axisModel = this.axisModel;\n            var axis = axisModel.axis;\n\n            if (!axisModel.get('axisTick.show') || axis.scale.isBlank()) {\n                return;\n            }\n\n            var tickModel = axisModel.getModel('axisTick');\n            var opt = this.opt;\n\n            var lineStyleModel = tickModel.getModel('lineStyle');\n            var tickLen = tickModel.get('length');\n\n            var tickInterval = getInterval(tickModel, opt.labelInterval);\n            var ticksCoords = axis.getTicksCoords(tickModel.get('alignWithLabel'));\n            var ticks = axis.scale.getTicks();\n\n            var pt1 = [];\n            var pt2 = [];\n            var matrix = this._transform;\n\n            for (var i = 0; i < ticksCoords.length; i++) {\n                // Only ordinal scale support tick interval\n                if (ifIgnoreOnTick(axis, i, tickInterval)) {\n                     continue;\n                }\n\n                var tickCoord = ticksCoords[i];\n\n                pt1[0] = tickCoord;\n                pt1[1] = 0;\n                pt2[0] = tickCoord;\n                pt2[1] = opt.tickDirection * tickLen;\n\n                if (matrix) {\n                    v2ApplyTransform(pt1, pt1, matrix);\n                    v2ApplyTransform(pt2, pt2, matrix);\n                }\n                // Tick line, Not use group transform to have better line draw\n                this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n\n                    // Id for animation\n                    anid: 'tick_' + ticks[i],\n\n                    shape: {\n                        x1: pt1[0],\n                        y1: pt1[1],\n                        x2: pt2[0],\n                        y2: pt2[1]\n                    },\n                    style: zrUtil.defaults(\n                        lineStyleModel.getLineStyle(),\n                        {\n                            stroke: axisModel.get('axisLine.lineStyle.color')\n                        }\n                    ),\n                    z2: 2,\n                    silent: true\n                })));\n            }\n        },\n\n        /**\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/coord/cartesian/GridModel} gridModel\n         * @private\n         */\n        axisLabel: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n            var axis = axisModel.axis;\n            var show = retrieve(opt.axisLabelShow, axisModel.get('axisLabel.show'));\n\n            if (!show || axis.scale.isBlank()) {\n                return;\n            }\n\n            var labelModel = axisModel.getModel('axisLabel');\n            var textStyleModel = labelModel.getModel('textStyle');\n            var labelMargin = labelModel.get('margin');\n            var ticks = axis.scale.getTicks();\n            var labels = axisModel.getFormattedLabels();\n\n            // Special label rotate.\n            var labelRotation = (\n                retrieve(opt.labelRotate, labelModel.get('rotate')) || 0\n            ) * PI / 180;\n\n            var labelLayout = innerTextLayout(opt.rotation, labelRotation, opt.labelDirection);\n            var categoryData = axisModel.get('data');\n\n            var textEls = [];\n            var silent = isSilent(axisModel);\n            var triggerEvent = axisModel.get('triggerEvent');\n\n            zrUtil.each(ticks, function (tickVal, index) {\n                if (ifIgnoreOnTick(axis, index, opt.labelInterval)) {\n                     return;\n                }\n\n                var itemTextStyleModel = textStyleModel;\n                if (categoryData && categoryData[tickVal] && categoryData[tickVal].textStyle) {\n                    itemTextStyleModel = new Model(\n                        categoryData[tickVal].textStyle, textStyleModel, axisModel.ecModel\n                    );\n                }\n                var textColor = itemTextStyleModel.getTextColor()\n                    || axisModel.get('axisLine.lineStyle.color');\n\n                var tickCoord = axis.dataToCoord(tickVal);\n                var pos = [\n                    tickCoord,\n                    opt.labelOffset + opt.labelDirection * labelMargin\n                ];\n                var labelStr = axis.scale.getLabel(tickVal);\n\n                var textEl = new graphic.Text({\n\n                    // Id for animation\n                    anid: 'label_' + tickVal,\n\n                    style: {\n                        text: labels[index],\n                        textAlign: itemTextStyleModel.get('align', true) || labelLayout.textAlign,\n                        textVerticalAlign: itemTextStyleModel.get('baseline', true) || labelLayout.textVerticalAlign,\n                        textFont: itemTextStyleModel.getFont(),\n                        fill: typeof textColor === 'function'\n                            ? textColor(\n                                // (1) In category axis with data zoom, tick is not the original\n                                // index of axis.data. So tick should not be exposed to user\n                                // in category axis.\n                                // (2) Compatible with previous version, which always returns labelStr.\n                                // But in interval scale labelStr is like '223,445', which maked\n                                // user repalce ','. So we modify it to return original val but remain\n                                // it as 'string' to avoid error in replacing.\n                                axis.type === 'category' ? labelStr : axis.type === 'value' ? tickVal + '' : tickVal,\n                                index\n                            )\n                            : textColor\n                    },\n                    position: pos,\n                    rotation: labelLayout.rotation,\n                    silent: silent,\n                    z2: 10\n                });\n\n                // Pack data for mouse event\n                if (triggerEvent) {\n                    textEl.eventData = makeAxisEventDataBase(axisModel);\n                    textEl.eventData.targetType = 'axisLabel';\n                    textEl.eventData.value = labelStr;\n                }\n\n                // FIXME\n                this._dumbGroup.add(textEl);\n                textEl.updateTransform();\n\n                textEls.push(textEl);\n                this.group.add(textEl);\n\n                textEl.decomposeTransform();\n\n            }, this);\n\n            fixMinMaxLabelShow(axisModel, textEls);\n        },\n\n        /**\n         * @private\n         */\n        axisName: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n            var name = retrieve(opt.axisName, axisModel.get('name'));\n\n            if (!name) {\n                return;\n            }\n\n            var nameLocation = axisModel.get('nameLocation');\n            var nameDirection = opt.nameDirection;\n            var textStyleModel = axisModel.getModel('nameTextStyle');\n            var gap = axisModel.get('nameGap') || 0;\n\n            var extent = this.axisModel.axis.getExtent();\n            var gapSignal = extent[0] > extent[1] ? -1 : 1;\n            var pos = [\n                nameLocation === 'start'\n                    ? extent[0] - gapSignal * gap\n                    : nameLocation === 'end'\n                    ? extent[1] + gapSignal * gap\n                    : (extent[0] + extent[1]) / 2, // 'middle'\n                // Reuse labelOffset.\n                nameLocation === 'middle' ? opt.labelOffset + nameDirection * gap : 0\n            ];\n\n            var labelLayout;\n\n            var nameRotation = axisModel.get('nameRotate');\n            if (nameRotation != null) {\n                nameRotation = nameRotation * PI / 180; // To radian.\n            }\n\n            var axisNameAvailableWidth;\n\n            if (nameLocation === 'middle') {\n                labelLayout = innerTextLayout(\n                    opt.rotation,\n                    nameRotation != null ? nameRotation : opt.rotation, // Adapt to axis.\n                    nameDirection\n                );\n            }\n            else {\n                labelLayout = endTextLayout(\n                    opt, nameLocation, nameRotation || 0, extent\n                );\n\n                axisNameAvailableWidth = opt.axisNameAvailableWidth;\n                if (axisNameAvailableWidth != null) {\n                    axisNameAvailableWidth = Math.abs(\n                        axisNameAvailableWidth / Math.sin(labelLayout.rotation)\n                    );\n                    !isFinite(axisNameAvailableWidth) && (axisNameAvailableWidth = null);\n                }\n            }\n\n            var textFont = textStyleModel.getFont();\n\n            var truncateOpt = axisModel.get('nameTruncate', true) || {};\n            var ellipsis = truncateOpt.ellipsis;\n            var maxWidth = retrieve(\n                opt.nameTruncateMaxWidth, truncateOpt.maxWidth, axisNameAvailableWidth\n            );\n            var truncatedText = (ellipsis != null && maxWidth != null)\n                ? formatUtil.truncateText(\n                    name, maxWidth, textFont, ellipsis,\n                    {minChar: 2, placeholder: truncateOpt.placeholder}\n                )\n                : name;\n\n            var tooltipOpt = axisModel.get('tooltip', true);\n\n            var mainType = axisModel.mainType;\n            var formatterParams = {\n                componentType: mainType,\n                name: name,\n                $vars: ['name']\n            };\n            formatterParams[mainType + 'Index'] = axisModel.componentIndex;\n\n            var textEl = new graphic.Text({\n\n                // Id for animation\n                anid: 'name',\n\n                __fullText: name,\n                __truncatedText: truncatedText,\n\n                style: {\n                    text: truncatedText,\n                    textFont: textFont,\n                    fill: textStyleModel.getTextColor()\n                        || axisModel.get('axisLine.lineStyle.color'),\n                    textAlign: labelLayout.textAlign,\n                    textVerticalAlign: labelLayout.textVerticalAlign\n                },\n                position: pos,\n                rotation: labelLayout.rotation,\n                silent: isSilent(axisModel),\n                z2: 1,\n                tooltip: (tooltipOpt && tooltipOpt.show)\n                    ? zrUtil.extend({\n                        content: name,\n                        formatter: function () {\n                            return name;\n                        },\n                        formatterParams: formatterParams\n                    }, tooltipOpt)\n                    : null\n            });\n\n            if (axisModel.get('triggerEvent')) {\n                textEl.eventData = makeAxisEventDataBase(axisModel);\n                textEl.eventData.targetType = 'axisName';\n                textEl.eventData.name = name;\n            }\n\n            // FIXME\n            this._dumbGroup.add(textEl);\n            textEl.updateTransform();\n\n            this.group.add(textEl);\n\n            textEl.decomposeTransform();\n        }\n\n    };\n\n    /**\n     * @public\n     * @static\n     * @param {Object} opt\n     * @param {number} axisRotation in radian\n     * @param {number} textRotation in radian\n     * @param {number} direction\n     * @return {Object} {\n     *  rotation, // according to axis\n     *  textAlign,\n     *  textVerticalAlign\n     * }\n     */\n    var innerTextLayout = AxisBuilder.innerTextLayout = function (axisRotation, textRotation, direction) {\n        var rotationDiff = remRadian(textRotation - axisRotation);\n        var textAlign;\n        var textVerticalAlign;\n\n        if (isRadianAroundZero(rotationDiff)) { // Label is parallel with axis line.\n            textVerticalAlign = direction > 0 ? 'top' : 'bottom';\n            textAlign = 'center';\n        }\n        else if (isRadianAroundZero(rotationDiff - PI)) { // Label is inverse parallel with axis line.\n            textVerticalAlign = direction > 0 ? 'bottom' : 'top';\n            textAlign = 'center';\n        }\n        else {\n            textVerticalAlign = 'middle';\n\n            if (rotationDiff > 0 && rotationDiff < PI) {\n                textAlign = direction > 0 ? 'right' : 'left';\n            }\n            else {\n                textAlign = direction > 0 ? 'left' : 'right';\n            }\n        }\n\n        return {\n            rotation: rotationDiff,\n            textAlign: textAlign,\n            textVerticalAlign: textVerticalAlign\n        };\n    };\n\n    function endTextLayout(opt, textPosition, textRotate, extent) {\n        var rotationDiff = remRadian(textRotate - opt.rotation);\n        var textAlign;\n        var textVerticalAlign;\n        var inverse = extent[0] > extent[1];\n        var onLeft = (textPosition === 'start' && !inverse)\n            || (textPosition !== 'start' && inverse);\n\n        if (isRadianAroundZero(rotationDiff - PI / 2)) {\n            textVerticalAlign = onLeft ? 'bottom' : 'top';\n            textAlign = 'center';\n        }\n        else if (isRadianAroundZero(rotationDiff - PI * 1.5)) {\n            textVerticalAlign = onLeft ? 'top' : 'bottom';\n            textAlign = 'center';\n        }\n        else {\n            textVerticalAlign = 'middle';\n            if (rotationDiff < PI * 1.5 && rotationDiff > PI / 2) {\n                textAlign = onLeft ? 'left' : 'right';\n            }\n            else {\n                textAlign = onLeft ? 'right' : 'left';\n            }\n        }\n\n        return {\n            rotation: rotationDiff,\n            textAlign: textAlign,\n            textVerticalAlign: textVerticalAlign\n        };\n    }\n\n    function isSilent(axisModel) {\n        var tooltipOpt = axisModel.get('tooltip');\n        return axisModel.get('silent')\n            // Consider mouse cursor, add these restrictions.\n            || !(\n                axisModel.get('triggerEvent') || (tooltipOpt && tooltipOpt.show)\n            );\n    }\n\n    function fixMinMaxLabelShow(axisModel, textEls) {\n        // If min or max are user set, we need to check\n        // If the tick on min(max) are overlap on their neighbour tick\n        // If they are overlapped, we need to hide the min(max) tick label\n        var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n        var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n        var firstLabel = textEls[0];\n        var nextLabel = textEls[1];\n        var lastLabel = textEls[textEls.length - 1];\n        var prevLabel = textEls[textEls.length - 2];\n\n        if (showMinLabel === false) {\n            firstLabel.ignore = true;\n        }\n        else if (axisModel.getMin() != null && isTwoLabelOverlapped(firstLabel, nextLabel)) {\n            showMinLabel ? (nextLabel.ignore = true) : (firstLabel.ignore = true);\n        }\n\n        if (showMaxLabel === false) {\n            lastLabel.ignore = true;\n        }\n        else if (axisModel.getMax() != null && isTwoLabelOverlapped(prevLabel, lastLabel)) {\n            showMaxLabel ? (prevLabel.ignore = true) : (lastLabel.ignore = true);\n        }\n    }\n\n    function isTwoLabelOverlapped(current, next, labelLayout) {\n        // current and next has the same rotation.\n        var firstRect = current && current.getBoundingRect().clone();\n        var nextRect = next && next.getBoundingRect().clone();\n\n        if (!firstRect || !nextRect) {\n            return;\n        }\n\n        // When checking intersect of two rotated labels, we use mRotationBack\n        // to avoid that boundingRect is enlarge when using `boundingRect.applyTransform`.\n        var mRotationBack = matrix.identity([]);\n        matrix.rotate(mRotationBack, mRotationBack, -current.rotation);\n\n        firstRect.applyTransform(matrix.mul([], mRotationBack, current.getLocalTransform()));\n        nextRect.applyTransform(matrix.mul([], mRotationBack, next.getLocalTransform()));\n\n        return firstRect.intersect(nextRect);\n    }\n\n\n    /**\n     * @static\n     */\n    var ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick = function (axis, i, interval) {\n        var rawTick;\n        var scale = axis.scale;\n        return scale.type === 'ordinal'\n            && (\n                typeof interval === 'function'\n                    ? (\n                        rawTick = scale.getTicks()[i],\n                        !interval(rawTick, scale.getLabel(rawTick))\n                    )\n                    : i % (interval + 1)\n            );\n    };\n\n    /**\n     * @static\n     */\n    var getInterval = AxisBuilder.getInterval = function (model, labelInterval) {\n        var interval = model.get('interval');\n        if (interval == null || interval == 'auto') {\n            interval = labelInterval;\n        }\n        return interval;\n    };\n\n    module.exports = AxisBuilder;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axis/AxisBuilder.js\n// module id = 520\n// module chunks = 0 1 2","\n\n    var axisPointerModelHelper = require('../axisPointer/modelHelper');\n\n    /**\n     * Base class of AxisView.\n     */\n    var AxisView = require('../../echarts').extendComponentView({\n\n        type: 'axis',\n\n        /**\n         * @private\n         */\n        _axisPointer: null,\n\n        /**\n         * @protected\n         * @type {string}\n         */\n        axisPointerClass: null,\n\n        /**\n         * @override\n         */\n        render: function (axisModel, ecModel, api, payload) {\n            // FIXME\n            // This process should proformed after coordinate systems updated\n            // (axis scale updated), and should be performed each time update.\n            // So put it here temporarily, although it is not appropriate to\n            // put a model-writing procedure in `view`.\n            this.axisPointerClass && axisPointerModelHelper.fixValue(axisModel);\n\n            AxisView.superApply(this, 'render', arguments);\n\n            updateAxisPointer(this, axisModel, ecModel, api, payload, true);\n        },\n\n        /**\n         * Action handler.\n         * @public\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/model/Global} ecModel\n         * @param {module:echarts/ExtensionAPI} api\n         * @param {Object} payload\n         */\n        updateAxisPointer: function (axisModel, ecModel, api, payload, force) {\n            updateAxisPointer(this, axisModel, ecModel, api, payload, false);\n        },\n\n        /**\n         * @override\n         */\n        remove: function (ecModel, api) {\n            var axisPointer = this._axisPointer;\n            axisPointer && axisPointer.remove(api);\n            AxisView.superApply(this, 'remove', arguments);\n        },\n\n        /**\n         * @override\n         */\n        dispose: function (ecModel, api) {\n            disposeAxisPointer(this, api);\n            AxisView.superApply(this, 'dispose', arguments);\n        }\n\n    });\n\n    function updateAxisPointer(axisView, axisModel, ecModel, api, payload, forceRender) {\n        var Clazz = AxisView.getAxisPointerClass(axisView.axisPointerClass);\n        if (!Clazz) {\n            return;\n        }\n        var axisPointerModel = axisPointerModelHelper.getAxisPointerModel(axisModel);\n        axisPointerModel\n            ? (axisView._axisPointer || (axisView._axisPointer = new Clazz()))\n                .render(axisModel, axisPointerModel, api, forceRender)\n            : disposeAxisPointer(axisView, api);\n    }\n\n    function disposeAxisPointer(axisView, ecModel, api) {\n        var axisPointer = axisView._axisPointer;\n        axisPointer && axisPointer.dispose(ecModel, api);\n        axisView._axisPointer = null;\n    }\n\n    var axisPointerClazz = [];\n\n    AxisView.registerAxisPointerClass = function (type, clazz) {\n        if (__DEV__) {\n            if (axisPointerClazz[type]) {\n                throw new Error('axisPointer ' + type + ' exists');\n            }\n        }\n        axisPointerClazz[type] = clazz;\n    };\n\n    AxisView.getAxisPointerClass = function (type) {\n        return type && axisPointerClazz[type];\n    };\n\n    module.exports = AxisView;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axis/AxisView.js\n// module id = 521\n// module chunks = 0 1 2","\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var helper = {};\n\n    /**\n     * @param {Object} opt {labelInside}\n     * @return {Object} {\n     *  position, rotation, labelDirection, labelOffset,\n     *  tickDirection, labelRotate, labelInterval, z2\n     * }\n     */\n    helper.layout = function (gridModel, axisModel, opt) {\n        opt = opt || {};\n        var grid = gridModel.coordinateSystem;\n        var axis = axisModel.axis;\n        var layout = {};\n\n        var rawAxisPosition = axis.position;\n        var axisPosition = axis.onZero ? 'onZero' : rawAxisPosition;\n        var axisDim = axis.dim;\n\n        // [left, right, top, bottom]\n        var rect = grid.getRect();\n        var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];\n\n        var axisOffset = axisModel.get('offset') || 0;\n\n        var posMap = {\n            x: { top: rectBound[2] - axisOffset, bottom: rectBound[3] + axisOffset },\n            y: { left: rectBound[0] - axisOffset, right: rectBound[1] + axisOffset }\n        };\n\n        posMap.x.onZero = Math.max(Math.min(getZero('y'), posMap.x.bottom), posMap.x.top);\n        posMap.y.onZero = Math.max(Math.min(getZero('x'), posMap.y.right), posMap.y.left);\n\n        function getZero(dim, val) {\n            var theAxis = grid.getAxis(dim);\n            return theAxis.toGlobalCoord(theAxis.dataToCoord(0));\n        }\n\n        // Axis position\n        layout.position = [\n            axisDim === 'y' ? posMap.y[axisPosition] : rectBound[0],\n            axisDim === 'x' ? posMap.x[axisPosition] : rectBound[3]\n        ];\n\n        // Axis rotation\n        layout.rotation = Math.PI / 2 * (axisDim === 'x' ? 0 : 1);\n\n        // Tick and label direction, x y is axisDim\n        var dirMap = {top: -1, bottom: 1, left: -1, right: 1};\n\n        layout.labelDirection = layout.tickDirection = layout.nameDirection = dirMap[rawAxisPosition];\n        layout.labelOffset = axis.onZero ? posMap[axisDim][rawAxisPosition] - posMap[axisDim].onZero : 0;\n\n        if (axisModel.get('axisTick.inside')) {\n            layout.tickDirection = -layout.tickDirection;\n        }\n        if (zrUtil.retrieve(opt.labelInside, axisModel.get('axisLabel.inside'))) {\n            layout.labelDirection = -layout.labelDirection;\n        }\n\n        // Special label rotation\n        var labelRotate = axisModel.get('axisLabel.rotate');\n        layout.labelRotate = axisPosition === 'top' ? -labelRotate : labelRotate;\n\n        // label interval when auto mode.\n        layout.labelInterval = axis.getLabelInterval();\n\n        // Over splitLine and splitArea\n        layout.z2 = 1;\n\n        return layout;\n    };\n\n    module.exports = helper;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axis/cartesianAxisHelper.js\n// module id = 522\n// module chunks = 0 1 2","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../../util/model');\n\n    /**\n     * @param {Object} finder contains {seriesIndex, dataIndex, dataIndexInside}\n     * @param {module:echarts/model/Global} ecModel\n     * @return {Object} {point: [x, y], el: ...} point Will not be null.\n     */\n    module.exports = function (finder, ecModel) {\n        var point = [];\n        var seriesIndex = finder.seriesIndex;\n        var seriesModel;\n        if (seriesIndex == null || !(\n            seriesModel = ecModel.getSeriesByIndex(seriesIndex)\n        )) {\n            return {point: []};\n        }\n\n        var data = seriesModel.getData();\n        var dataIndex = modelUtil.queryDataIndex(data, finder);\n        if (dataIndex == null || zrUtil.isArray(dataIndex)) {\n            return {point: []};\n        }\n\n        var el = data.getItemGraphicEl(dataIndex);\n        var coordSys = seriesModel.coordinateSystem;\n\n        if (seriesModel.getTooltipPosition) {\n            point = seriesModel.getTooltipPosition(dataIndex) || [];\n        }\n        else if (coordSys && coordSys.dataToPoint) {\n            point = coordSys.dataToPoint(\n                data.getValues(\n                    zrUtil.map(coordSys.dimensions, function (dim) {\n                        return seriesModel.coordDimToDataDim(dim)[0];\n                    }), dataIndex, true\n                )\n            ) || [];\n        }\n        else if (el) {\n            // Use graphic bounding rect\n            var rect = el.getBoundingRect().clone();\n            rect.applyTransform(el.transform);\n            point = [\n                rect.x + rect.width / 2,\n                rect.y + rect.height / 2\n            ];\n        }\n\n        return {point: point, el: el};\n    };\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/findPointFromSeries.js\n// module id = 523\n// module chunks = 0 1 2","\n\n    var env = require('zrender/lib/core/env');\n    var zrUtil = require('zrender/lib/core/util');\n    var get = require('../../util/model').makeGetter();\n\n    var each = zrUtil.each;\n\n    var globalListener = {};\n\n    /**\n     * @param {string} key\n     * @param {module:echarts/ExtensionAPI} api\n     * @param {Function} handler\n     *      param: {string} currTrigger\n     *      param: {Array.<number>} point\n     */\n    globalListener.register = function (key, api, handler) {\n        if (env.node) {\n            return;\n        }\n\n        var zr = api.getZr();\n        get(zr).records || (get(zr).records = {});\n\n        initGlobalListeners(zr, api);\n\n        var record = get(zr).records[key] || (get(zr).records[key] = {});\n        record.handler = handler;\n    };\n\n    function initGlobalListeners(zr, api) {\n        if (get(zr).initialized) {\n            return;\n        }\n\n        get(zr).initialized = true;\n\n        useHandler('click', zrUtil.curry(doEnter, 'click'));\n        useHandler('mousemove', zrUtil.curry(doEnter, 'mousemove'));\n        // useHandler('mouseout', onLeave);\n        useHandler('globalout', onLeave);\n\n        function useHandler(eventType, cb) {\n            zr.on(eventType, function (e) {\n                var dis = makeDispatchAction(api);\n\n                each(get(zr).records, function (record) {\n                    record && cb(record, e, dis.dispatchAction);\n                });\n\n                dispatchTooltipFinally(dis.pendings, api);\n            });\n        }\n    }\n\n    function dispatchTooltipFinally(pendings, api) {\n        var showLen = pendings.showTip.length;\n        var hideLen = pendings.hideTip.length;\n\n        var actuallyPayload;\n        if (showLen) {\n            actuallyPayload = pendings.showTip[showLen - 1];\n        }\n        else if (hideLen) {\n            actuallyPayload = pendings.hideTip[hideLen - 1];\n        }\n        if (actuallyPayload) {\n            actuallyPayload.dispatchAction = null;\n            api.dispatchAction(actuallyPayload);\n        }\n    }\n\n    function onLeave(record, e, dispatchAction) {\n        record.handler('leave', null, dispatchAction);\n    }\n\n    function doEnter(currTrigger, record, e, dispatchAction) {\n        record.handler(currTrigger, e, dispatchAction);\n    }\n\n    function makeDispatchAction(api) {\n        var pendings = {\n            showTip: [],\n            hideTip: []\n        };\n        // FIXME\n        // better approach?\n        // 'showTip' and 'hideTip' can be triggered by axisPointer and tooltip,\n        // which may be conflict, (axisPointer call showTip but tooltip call hideTip);\n        // So we have to add \"final stage\" to merge those dispatched actions.\n        var dispatchAction = function (payload) {\n            var pendingList = pendings[payload.type];\n            if (pendingList) {\n                pendingList.push(payload);\n            }\n            else {\n                payload.dispatchAction = dispatchAction;\n                api.dispatchAction(payload);\n            }\n        };\n\n        return {\n            dispatchAction: dispatchAction,\n            pendings: pendings\n        };\n    }\n\n    /**\n     * @param {string} key\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    globalListener.unregister = function (key, api) {\n        if (env.node) {\n            return;\n        }\n        var zr = api.getZr();\n        var record = (get(zr).records || {})[key];\n        if (record) {\n            get(zr).records[key] = null;\n        }\n    };\n\n    module.exports = globalListener;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/globalListener.js\n// module id = 524\n// module chunks = 0 1 2","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var graphic = require('../../util/graphic');\n    var textContain = require('zrender/lib/contain/text');\n    var formatUtil = require('../../util/format');\n    var matrix = require('zrender/lib/core/matrix');\n    var axisHelper = require('../../coord/axisHelper');\n    var AxisBuilder = require('../axis/AxisBuilder');\n\n    var helper = {};\n\n    /**\n     * @param {module:echarts/model/Model} axisPointerModel\n     */\n    helper.buildElStyle = function (axisPointerModel) {\n        var axisPointerType = axisPointerModel.get('type');\n        var styleModel = axisPointerModel.getModel(axisPointerType + 'Style');\n        var style;\n        if (axisPointerType === 'line') {\n            style = styleModel.getLineStyle();\n            style.fill = null;\n        }\n        else if (axisPointerType === 'shadow') {\n            style = styleModel.getAreaStyle();\n            style.stroke = null;\n        }\n        return style;\n    };\n\n    /**\n     * @param {Function} labelPos {align, verticalAlign, position}\n     */\n    helper.buildLabelElOption = function (\n        elOption, axisModel, axisPointerModel, api, labelPos\n    ) {\n        var value = axisPointerModel.get('value');\n        var text = helper.getValueLabel(\n            value, axisModel.axis, axisModel.ecModel,\n            axisPointerModel.get('seriesDataIndices'),\n            {\n                precision: axisPointerModel.get('label.precision'),\n                formatter: axisPointerModel.get('label.formatter')\n            }\n        );\n        var labelModel = axisPointerModel.getModel('label');\n        var textStyleModel = labelModel.getModel('textStyle');\n        var paddings = formatUtil.normalizeCssArray(labelModel.get('padding') || 0);\n\n        var font = textStyleModel.getFont();\n        var textRect = textContain.getBoundingRect(\n            text, font, labelPos.textAlign, labelPos.textBaseline\n        );\n\n        var position = labelPos.position;\n        var width = textRect.width + paddings[1] + paddings[3];\n        var height = textRect.height + paddings[0] + paddings[2];\n\n        // Adjust by align.\n        var align = labelPos.align;\n        align === 'right' && (position[0] -= width);\n        align === 'center' && (position[0] -= width / 2);\n        var verticalAlign = labelPos.verticalAlign;\n        verticalAlign === 'bottom' && (position[1] -= height);\n        verticalAlign === 'middle' && (position[1] -= height / 2);\n\n        // Not overflow ec container\n        confineInContainer(position, width, height, api);\n\n        var bgColor = labelModel.get('backgroundColor');\n        if (!bgColor || bgColor === 'auto') {\n            bgColor = axisModel.get('axisLine.lineStyle.color');\n        }\n\n        elOption.label = {\n            shape: {x: 0, y: 0, width: width, height: height, r: labelModel.get('borderRadius')},\n            position: position.slice(),\n            style: {\n                text: text,\n                textFont: font,\n                textFill: textStyleModel.getTextColor(),\n                textPosition: 'inside',\n                fill: bgColor,\n                stroke: labelModel.get('borderColor') || 'transparent',\n                lineWidth: labelModel.get('borderWidth') || 0,\n                shadowBlur: labelModel.get('shadowBlur'),\n                shadowColor: labelModel.get('shadowColor'),\n                shadowOffsetX: labelModel.get('shadowOffsetX'),\n                shadowOffsetY: labelModel.get('shadowOffsetY')\n            },\n            // Lable should be over axisPointer.\n            z2: 10\n        };\n    };\n\n    // Do not overflow ec container\n    function confineInContainer(position, width, height, api) {\n        var viewWidth = api.getWidth();\n        var viewHeight = api.getHeight();\n        position[0] = Math.min(position[0] + width, viewWidth) - width;\n        position[1] = Math.min(position[1] + height, viewHeight) - height;\n        position[0] = Math.max(position[0], 0);\n        position[1] = Math.max(position[1], 0);\n    }\n\n    /**\n     * @param {number} value\n     * @param {module:echarts/coord/Axis} axis\n     * @param {module:echarts/model/Global} ecModel\n     * @param {Object} opt\n     * @param {Array.<Object>} seriesDataIndices\n     * @param {number|string} opt.precision 'auto' or a number\n     * @param {string|Function} opt.formatter label formatter\n     */\n    helper.getValueLabel = function (value, axis, ecModel, seriesDataIndices, opt) {\n        var text = axis.scale.getLabel(\n            // If `precision` is set, width can be fixed (like '12.00500'), which\n            // helps to debounce when when moving label.\n            value, {precision: opt.precision}\n        );\n        var formatter = opt.formatter;\n\n        if (formatter) {\n            var params = {\n                value: axisHelper.getAxisRawValue(axis, value),\n                seriesData: []\n            };\n            zrUtil.each(seriesDataIndices, function (idxItem) {\n                var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n                var dataIndex = idxItem.dataIndexInside;\n                var dataParams = series && series.getDataParams(dataIndex);\n                dataParams && params.seriesData.push(dataParams);\n            });\n\n            if (zrUtil.isString(formatter)) {\n                text = formatter.replace('{value}', text);\n            }\n            else if (zrUtil.isFunction(formatter)) {\n                text = formatter(params);\n            }\n        }\n\n        return text;\n    };\n\n    /**\n     * @param {module:echarts/coord/Axis} axis\n     * @param {number} value\n     * @param {Object} layoutInfo {\n     *  rotation, position, labelOffset, labelDirection, labelMargin\n     * }\n     */\n    helper.getTransformedPosition = function (axis, value, layoutInfo) {\n        var transform = matrix.create();\n        matrix.rotate(transform, transform, layoutInfo.rotation);\n        matrix.translate(transform, transform, layoutInfo.position);\n\n        return graphic.applyTransform([\n            axis.dataToCoord(value),\n            (layoutInfo.labelOffset || 0)\n                + (layoutInfo.labelDirection || 1) * (layoutInfo.labelMargin || 0)\n        ], transform);\n    };\n\n    helper.buildCartesianSingleLabelElOption = function (\n        value, elOption, layoutInfo, axisModel, axisPointerModel, api\n    ) {\n        var textLayout = AxisBuilder.innerTextLayout(\n            layoutInfo.rotation, 0, layoutInfo.labelDirection\n        );\n        layoutInfo.labelMargin = axisPointerModel.get('label.margin');\n        helper.buildLabelElOption(elOption, axisModel, axisPointerModel, api, {\n            position: helper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n            align: textLayout.textAlign,\n            verticalAlign: textLayout.textVerticalAlign\n        });\n    };\n\n    /**\n     * @param {Array.<number>} p1\n     * @param {Array.<number>} p2\n     * @param {number} [xDimIndex=0] or 1\n     */\n    helper.makeLineShape = function (p1, p2, xDimIndex) {\n        xDimIndex = xDimIndex || 0;\n        return {\n            x1: p1[xDimIndex],\n            y1: p1[1 - xDimIndex],\n            x2: p2[xDimIndex],\n            y2: p2[1 - xDimIndex]\n        };\n    };\n\n    /**\n     * @param {Array.<number>} xy\n     * @param {Array.<number>} wh\n     * @param {number} [xDimIndex=0] or 1\n     */\n    helper.makeRectShape = function (xy, wh, xDimIndex) {\n        xDimIndex = xDimIndex || 0;\n        return {\n            x: xy[xDimIndex],\n            y: xy[1 - xDimIndex],\n            width: wh[xDimIndex],\n            height: wh[1 - xDimIndex]\n        };\n    };\n\n    helper.makeSectorShape = function (cx, cy, r0, r, startAngle, endAngle) {\n        return {\n            cx: cx,\n            cy: cy,\n            r0: r0,\n            r: r,\n            startAngle: startAngle,\n            endAngle: endAngle,\n            clockwise: true\n        };\n    };\n\n    module.exports = helper;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/viewHelper.js\n// module id = 525\n// module chunks = 0 1 2","\n\n    /**\n     * Calculate slider move result.\n     * Usage:\n     * (1) If both handle0 and handle1 are needed to be moved, set minSpan the same as\n     * maxSpan and the same as `Math.abs(handleEnd[1] - handleEnds[0])`.\n     * (2) If handle0 is forbidden to cross handle1, set minSpan as `0`.\n     *\n     * @param {number} delta Move length.\n     * @param {Array.<number>} handleEnds handleEnds[0] can be bigger then handleEnds[1].\n     *              handleEnds will be modified in this method.\n     * @param {Array.<number>} extent handleEnds is restricted by extent.\n     *              extent[0] should less or equals than extent[1].\n     * @param {number|string} handleIndex Can be 'all', means that both move the two handleEnds,\n     *              where the input minSpan and maxSpan will not work.\n     * @param {number} [minSpan] The range of dataZoom can not be smaller than that.\n     *              If not set, handle0 and cross handle1. If set as a non-negative\n     *              number (including `0`), handles will push each other when reaching\n     *              the minSpan.\n     * @param {number} [maxSpan] The range of dataZoom can not be larger than that.\n     * @return {Array.<number>} The input handleEnds.\n     */\n    module.exports = function (delta, handleEnds, extent, handleIndex, minSpan, maxSpan) {\n        // Normalize firstly.\n        handleEnds[0] = restrict(handleEnds[0], extent);\n        handleEnds[1] = restrict(handleEnds[1], extent);\n\n        delta = delta || 0;\n\n        var extentSpan = extent[1] - extent[0];\n\n        // Notice maxSpan and minSpan can be null/undefined.\n        if (minSpan != null) {\n            minSpan = restrict(minSpan, [0, extentSpan]);\n        }\n        if (maxSpan != null) {\n            maxSpan = Math.max(maxSpan, minSpan != null ? minSpan : 0);\n        }\n        if (handleIndex === 'all') {\n            minSpan = maxSpan = Math.abs(handleEnds[1] - handleEnds[0]);\n            handleIndex = 0;\n        }\n\n        var originalDistSign = getSpanSign(handleEnds, handleIndex);\n\n        handleEnds[handleIndex] += delta;\n\n        // Restrict in extent.\n        var extentMinSpan = minSpan || 0;\n        var realExtent = extent.slice();\n        originalDistSign.sign < 0 ? (realExtent[0] += extentMinSpan) : (realExtent[1] -= extentMinSpan);\n        handleEnds[handleIndex] = restrict(handleEnds[handleIndex], realExtent);\n\n        // Expand span.\n        var currDistSign = getSpanSign(handleEnds, handleIndex);\n        if (minSpan != null && (\n            currDistSign.sign !== originalDistSign.sign || currDistSign.span < minSpan\n        )) {\n            // If minSpan exists, 'cross' is forbinden.\n            handleEnds[1 - handleIndex] = handleEnds[handleIndex] + originalDistSign.sign * minSpan;\n        }\n\n        // Shrink span.\n        var currDistSign = getSpanSign(handleEnds, handleIndex);\n        if (maxSpan != null && currDistSign.span > maxSpan) {\n            handleEnds[1 - handleIndex] = handleEnds[handleIndex] + currDistSign.sign * maxSpan;\n        }\n\n        return handleEnds;\n    };\n\n    function getSpanSign(handleEnds, handleIndex) {\n        var dist = handleEnds[handleIndex] - handleEnds[1 - handleIndex];\n        // If `handleEnds[0] === handleEnds[1]`, always believe that handleEnd[0]\n        // is at left of handleEnds[1] for non-cross case.\n        return {span: Math.abs(dist), sign: dist > 0 ? -1 : dist < 0 ? 1 : handleIndex ? -1 : 1};\n    }\n\n    function restrict(value, extend) {\n        return Math.min(extend[1], Math.max(extend[0], value));\n    }\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/helper/sliderMove.js\n// module id = 526\n// module chunks = 0 1 2","\n\n    var numberUtil = require('../util/number');\n    var linearMap = numberUtil.linearMap;\n    var zrUtil = require('zrender/lib/core/util');\n    var axisHelper = require('./axisHelper');\n\n    function fixExtentWithBands(extent, nTick) {\n        var size = extent[1] - extent[0];\n        var len = nTick;\n        var margin = size / len / 2;\n        extent[0] += margin;\n        extent[1] -= margin;\n    }\n\n    var normalizedExtent = [0, 1];\n    /**\n     * @name module:echarts/coord/CartesianAxis\n     * @constructor\n     */\n    var Axis = function (dim, scale, extent) {\n\n        /**\n         * Axis dimension. Such as 'x', 'y', 'z', 'angle', 'radius'\n         * @type {string}\n         */\n        this.dim = dim;\n\n        /**\n         * Axis scale\n         * @type {module:echarts/coord/scale/*}\n         */\n        this.scale = scale;\n\n        /**\n         * @type {Array.<number>}\n         * @private\n         */\n        this._extent = extent || [0, 0];\n\n        /**\n         * @type {boolean}\n         */\n        this.inverse = false;\n\n        /**\n         * Usually true when axis has a ordinal scale\n         * @type {boolean}\n         */\n        this.onBand = false;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._labelInterval;\n    };\n\n    Axis.prototype = {\n\n        constructor: Axis,\n\n        /**\n         * If axis extent contain given coord\n         * @param {number} coord\n         * @return {boolean}\n         */\n        contain: function (coord) {\n            var extent = this._extent;\n            var min = Math.min(extent[0], extent[1]);\n            var max = Math.max(extent[0], extent[1]);\n            return coord >= min && coord <= max;\n        },\n\n        /**\n         * If axis extent contain given data\n         * @param {number} data\n         * @return {boolean}\n         */\n        containData: function (data) {\n            return this.contain(this.dataToCoord(data));\n        },\n\n        /**\n         * Get coord extent.\n         * @return {Array.<number>}\n         */\n        getExtent: function () {\n            return this._extent.slice();\n        },\n\n        /**\n         * Get precision used for formatting\n         * @param {Array.<number>} [dataExtent]\n         * @return {number}\n         */\n        getPixelPrecision: function (dataExtent) {\n            return numberUtil.getPixelPrecision(\n                dataExtent || this.scale.getExtent(),\n                this._extent\n            );\n        },\n\n        /**\n         * Set coord extent\n         * @param {number} start\n         * @param {number} end\n         */\n        setExtent: function (start, end) {\n            var extent = this._extent;\n            extent[0] = start;\n            extent[1] = end;\n        },\n\n        /**\n         * Convert data to coord. Data is the rank if it has a ordinal scale\n         * @param {number} data\n         * @param  {boolean} clamp\n         * @return {number}\n         */\n        dataToCoord: function (data, clamp) {\n            var extent = this._extent;\n            var scale = this.scale;\n            data = scale.normalize(data);\n\n            if (this.onBand && scale.type === 'ordinal') {\n                extent = extent.slice();\n                fixExtentWithBands(extent, scale.count());\n            }\n\n            return linearMap(data, normalizedExtent, extent, clamp);\n        },\n\n        /**\n         * Convert coord to data. Data is the rank if it has a ordinal scale\n         * @param {number} coord\n         * @param  {boolean} clamp\n         * @return {number}\n         */\n        coordToData: function (coord, clamp) {\n            var extent = this._extent;\n            var scale = this.scale;\n\n            if (this.onBand && scale.type === 'ordinal') {\n                extent = extent.slice();\n                fixExtentWithBands(extent, scale.count());\n            }\n\n            var t = linearMap(coord, extent, normalizedExtent, clamp);\n\n            return this.scale.scale(t);\n        },\n\n        /**\n         * Convert pixel point to data in axis\n         * @param {Array.<number>} point\n         * @param  {boolean} clamp\n         * @return {number} data\n         */\n        pointToData: function (point, clamp) {\n            // Should be implemented in derived class if necessary.\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getTicksCoords: function (alignWithLabel) {\n            if (this.onBand && !alignWithLabel) {\n                var bands = this.getBands();\n                var coords = [];\n                for (var i = 0; i < bands.length; i++) {\n                    coords.push(bands[i][0]);\n                }\n                if (bands[i - 1]) {\n                    coords.push(bands[i - 1][1]);\n                }\n                return coords;\n            }\n            else {\n                return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n            }\n        },\n\n        /**\n         * Coords of labels are on the ticks or on the middle of bands\n         * @return {Array.<number>}\n         */\n        getLabelsCoords: function () {\n            return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n        },\n\n        /**\n         * Get bands.\n         *\n         * If axis has labels [1, 2, 3, 4]. Bands on the axis are\n         * |---1---|---2---|---3---|---4---|.\n         *\n         * @return {Array}\n         */\n         // FIXME Situation when labels is on ticks\n        getBands: function () {\n            var extent = this.getExtent();\n            var bands = [];\n            var len = this.scale.count();\n            var start = extent[0];\n            var end = extent[1];\n            var span = end - start;\n\n            for (var i = 0; i < len; i++) {\n                bands.push([\n                    span * i / len + start,\n                    span * (i + 1) / len + start\n                ]);\n            }\n            return bands;\n        },\n\n        /**\n         * Get width of band\n         * @return {number}\n         */\n        getBandWidth: function () {\n            var axisExtent = this._extent;\n            var dataExtent = this.scale.getExtent();\n\n            var len = dataExtent[1] - dataExtent[0] + (this.onBand ? 1 : 0);\n            // Fix #2728, avoid NaN when only one data.\n            len === 0 && (len = 1);\n\n            var size = Math.abs(axisExtent[1] - axisExtent[0]);\n\n            return Math.abs(size) / len;\n        },\n\n        /**\n         * Get interval of the axis label.\n         * @return {number}\n         */\n        getLabelInterval: function () {\n            var labelInterval = this._labelInterval;\n            if (!labelInterval) {\n                var axisModel = this.model;\n                var labelModel = axisModel.getModel('axisLabel');\n                var interval = labelModel.get('interval');\n                if (!(this.type === 'category' && interval === 'auto')) {\n                    labelInterval = interval === 'auto' ? 0 : interval;\n                }\n                else if (this.isHorizontal){\n                    labelInterval = axisHelper.getAxisLabelInterval(\n                        zrUtil.map(this.scale.getTicks(), this.dataToCoord, this),\n                        axisModel.getFormattedLabels(),\n                        labelModel.getModel('textStyle').getFont(),\n                        this.isHorizontal()\n                    );\n                }\n                this._labelInterval = labelInterval;\n            }\n            return labelInterval;\n        }\n\n    };\n\n    module.exports = Axis;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/Axis.js\n// module id = 527\n// module chunks = 0 1 2","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var axisHelper = require('./axisHelper');\n\n    function getName(obj) {\n        if (zrUtil.isObject(obj) && obj.value != null) {\n            return obj.value;\n        }\n        else {\n            return obj + '';\n        }\n    }\n\n    module.exports = {\n\n        /**\n         * Format labels\n         * @return {Array.<string>}\n         */\n        getFormattedLabels: function () {\n            return axisHelper.getFormattedLabels(\n                this.axis,\n                this.get('axisLabel.formatter')\n            );\n        },\n\n        /**\n         * Get categories\n         */\n        getCategories: function () {\n            return this.get('type') === 'category'\n                && zrUtil.map(this.get('data'), getName);\n        },\n\n        /**\n         * @param {boolean} origin\n         * @return {number|string} min value or 'dataMin' or null/undefined (means auto) or NaN\n         */\n        getMin: function (origin) {\n            var option = this.option;\n            var min = (!origin && option.rangeStart != null)\n                ? option.rangeStart : option.min;\n\n            if (this.axis && min != null && min !== 'dataMin' && !zrUtil.eqNaN(min)) {\n                min = this.axis.scale.parse(min);\n            }\n            return min;\n        },\n\n        /**\n         * @param {boolean} origin\n         * @return {number|string} max value or 'dataMax' or null/undefined (means auto) or NaN\n         */\n        getMax: function (origin) {\n            var option = this.option;\n            var max = (!origin && option.rangeEnd != null)\n                ? option.rangeEnd : option.max;\n\n            if (this.axis && max != null && max !== 'dataMax' && !zrUtil.eqNaN(max)) {\n                max = this.axis.scale.parse(max);\n            }\n            return max;\n        },\n\n        /**\n         * @return {boolean}\n         */\n        getNeedCrossZero: function () {\n            var option = this.option;\n            return (option.rangeStart != null || option.rangeEnd != null)\n                ? false : !option.scale;\n        },\n\n        /**\n         * Should be implemented by each axis model if necessary.\n         * @return {module:echarts/model/Component} coordinate system model\n         */\n        getCoordSysModel: zrUtil.noop,\n\n        /**\n         * @param {number} rangeStart Can only be finite number or null/undefined or NaN.\n         * @param {number} rangeEnd Can only be finite number or null/undefined or NaN.\n         */\n        setRange: function (rangeStart, rangeEnd) {\n            this.option.rangeStart = rangeStart;\n            this.option.rangeEnd = rangeEnd;\n        },\n\n        /**\n         * Reset range\n         */\n        resetRange: function () {\n            // rangeStart and rangeEnd is readonly.\n            this.option.rangeStart = this.option.rangeEnd = null;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/axisModelCommonMixin.js\n// module id = 528\n// module chunks = 0 1 2","'use strict';\n\n\n    var ComponentModel = require('../../model/Component');\n    var zrUtil = require('zrender/lib/core/util');\n    var axisModelCreator = require('../axisModelCreator');\n\n    var AxisModel = ComponentModel.extend({\n\n        type: 'cartesian2dAxis',\n\n        /**\n         * @type {module:echarts/coord/cartesian/Axis2D}\n         */\n        axis: null,\n\n        /**\n         * @override\n         */\n        init: function () {\n            AxisModel.superApply(this, 'init', arguments);\n            this.resetRange();\n        },\n\n        /**\n         * @override\n         */\n        mergeOption: function () {\n            AxisModel.superApply(this, 'mergeOption', arguments);\n            this.resetRange();\n        },\n\n        /**\n         * @override\n         */\n        restoreData: function () {\n            AxisModel.superApply(this, 'restoreData', arguments);\n            this.resetRange();\n        },\n\n        /**\n         * @override\n         * @return {module:echarts/model/Component}\n         */\n        getCoordSysModel: function () {\n            return this.ecModel.queryComponents({\n                mainType: 'grid',\n                index: this.option.gridIndex,\n                id: this.option.gridId\n            })[0];\n        }\n\n    });\n\n    function getAxisType(axisDim, option) {\n        // Default axis with data is category axis\n        return option.type || (option.data ? 'category' : 'value');\n    }\n\n    zrUtil.merge(AxisModel.prototype, require('../axisModelCommonMixin'));\n\n    var extraOption = {\n        // gridIndex: 0,\n        // gridId: '',\n\n        // Offset is for multiple axis on the same position\n        offset: 0\n    };\n\n    axisModelCreator('x', AxisModel, getAxisType, extraOption);\n    axisModelCreator('y', AxisModel, getAxisType, extraOption);\n\n    module.exports = AxisModel;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/cartesian/AxisModel.js\n// module id = 529\n// module chunks = 0 1 2","/**\n * List for data storage\n * @module echarts/data/List\n */\n\n\n    var UNDEFINED = 'undefined';\n    var globalObj = typeof window === 'undefined' ? global : window;\n    var Float64Array = typeof globalObj.Float64Array === UNDEFINED\n        ? Array : globalObj.Float64Array;\n    var Int32Array = typeof globalObj.Int32Array === UNDEFINED\n        ? Array : globalObj.Int32Array;\n\n    var dataCtors = {\n        'float': Float64Array,\n        'int': Int32Array,\n        // Ordinal data type can be string or int\n        'ordinal': Array,\n        'number': Array,\n        'time': Array\n    };\n\n    var Model = require('../model/Model');\n    var DataDiffer = require('./DataDiffer');\n\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../util/model');\n    var isObject = zrUtil.isObject;\n\n    var TRANSFERABLE_PROPERTIES = [\n        'stackedOn', 'hasItemOption', '_nameList', '_idList', '_rawData'\n    ];\n\n    function transferProperties(a, b) {\n        zrUtil.each(TRANSFERABLE_PROPERTIES.concat(b.__wrappedMethods || []), function (propName) {\n            if (b.hasOwnProperty(propName)) {\n                a[propName] = b[propName];\n            }\n        });\n\n        a.__wrappedMethods = b.__wrappedMethods;\n    }\n\n    function DefaultDataProvider(dataArray) {\n        this._array = dataArray || [];\n    }\n\n    DefaultDataProvider.prototype.pure = false;\n\n    DefaultDataProvider.prototype.count = function () {\n        return this._array.length;\n    };\n    DefaultDataProvider.prototype.getItem = function (idx) {\n        return this._array[idx];\n    };\n\n    /**\n     * @constructor\n     * @alias module:echarts/data/List\n     *\n     * @param {Array.<string|Object>} dimensions\n     *      For example, ['someDimName', {name: 'someDimName', type: 'someDimType'}, ...].\n     *      Dimensions should be concrete names like x, y, z, lng, lat, angle, radius\n     * @param {module:echarts/model/Model} hostModel\n     */\n    var List = function (dimensions, hostModel) {\n\n        dimensions = dimensions || ['x', 'y'];\n\n        var dimensionInfos = {};\n        var dimensionNames = [];\n        for (var i = 0; i < dimensions.length; i++) {\n            var dimensionName;\n            var dimensionInfo = {};\n            if (typeof dimensions[i] === 'string') {\n                dimensionName = dimensions[i];\n                dimensionInfo = {\n                    name: dimensionName,\n                    coordDim: dimensionName,\n                    coordDimIndex: 0,\n                    stackable: false,\n                    // Type can be 'float', 'int', 'number'\n                    // Default is number, Precision of float may not enough\n                    type: 'number'\n                };\n            }\n            else {\n                dimensionInfo = dimensions[i];\n                dimensionName = dimensionInfo.name;\n                dimensionInfo.type = dimensionInfo.type || 'number';\n                if (!dimensionInfo.coordDim) {\n                    dimensionInfo.coordDim = dimensionName;\n                    dimensionInfo.coordDimIndex = 0;\n                }\n            }\n            dimensionInfo.otherDims = dimensionInfo.otherDims || {};\n            dimensionNames.push(dimensionName);\n            dimensionInfos[dimensionName] = dimensionInfo;\n        }\n\n        /**\n         * @readOnly\n         * @type {Array.<string>}\n         */\n        this.dimensions = dimensionNames;\n\n        /**\n         * Infomation of each data dimension, like data type.\n         * @type {Object}\n         */\n        this._dimensionInfos = dimensionInfos;\n\n        /**\n         * @type {module:echarts/model/Model}\n         */\n        this.hostModel = hostModel;\n\n        /**\n         * @type {module:echarts/model/Model}\n         */\n        this.dataType;\n\n        /**\n         * Indices stores the indices of data subset after filtered.\n         * This data subset will be used in chart.\n         * @type {Array.<number>}\n         * @readOnly\n         */\n        this.indices = [];\n\n        /**\n         * Data storage\n         * @type {Object.<key, TypedArray|Array>}\n         * @private\n         */\n        this._storage = {};\n\n        /**\n         * @type {Array.<string>}\n         */\n        this._nameList = [];\n        /**\n         * @type {Array.<string>}\n         */\n        this._idList = [];\n\n        /**\n         * Models of data option is stored sparse for optimizing memory cost\n         * @type {Array.<module:echarts/model/Model>}\n         * @private\n         */\n        this._optionModels = [];\n\n        /**\n         * @param {module:echarts/data/List}\n         */\n        this.stackedOn = null;\n\n        /**\n         * Global visual properties after visual coding\n         * @type {Object}\n         * @private\n         */\n        this._visual = {};\n\n        /**\n         * Globel layout properties.\n         * @type {Object}\n         * @private\n         */\n        this._layout = {};\n\n        /**\n         * Item visual properties after visual coding\n         * @type {Array.<Object>}\n         * @private\n         */\n        this._itemVisuals = [];\n\n        /**\n         * Item layout properties after layout\n         * @type {Array.<Object>}\n         * @private\n         */\n        this._itemLayouts = [];\n\n        /**\n         * Graphic elemnents\n         * @type {Array.<module:zrender/Element>}\n         * @private\n         */\n        this._graphicEls = [];\n\n        /**\n         * @type {Array.<Array|Object>}\n         * @private\n         */\n        this._rawData;\n\n        /**\n         * @type {Object}\n         * @private\n         */\n        this._extent;\n    };\n\n    var listProto = List.prototype;\n\n    listProto.type = 'list';\n\n    /**\n     * If each data item has it's own option\n     * @type {boolean}\n     */\n    listProto.hasItemOption = true;\n\n    /**\n     * Get dimension name\n     * @param {string|number} dim\n     *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n     *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n     * @return {string} Concrete dim name.\n     */\n    listProto.getDimension = function (dim) {\n        if (!isNaN(dim)) {\n            dim = this.dimensions[dim] || dim;\n        }\n        return dim;\n    };\n\n    /**\n     * Get type and stackable info of particular dimension\n     * @param {string|number} dim\n     *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n     *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n     */\n    listProto.getDimensionInfo = function (dim) {\n        return zrUtil.clone(this._dimensionInfos[this.getDimension(dim)]);\n    };\n\n    /**\n     * Initialize from data\n     * @param {Array.<Object|number|Array>} data\n     * @param {Array.<string>} [nameList]\n     * @param {Function} [dimValueGetter] (dataItem, dimName, dataIndex, dimIndex) => number\n     */\n    listProto.initData = function (data, nameList, dimValueGetter) {\n        data = data || [];\n\n        var isDataArray = zrUtil.isArray(data);\n        if (isDataArray) {\n            data = new DefaultDataProvider(data);\n        }\n        if (__DEV__) {\n            if (!isDataArray && (typeof data.getItem != 'function' || typeof data.count != 'function')) {\n                throw new Error('Inavlid data provider.');\n            }\n        }\n\n        this._rawData = data;\n\n        // Clear\n        var storage = this._storage = {};\n        var indices = this.indices = [];\n\n        var dimensions = this.dimensions;\n        var dimensionInfoMap = this._dimensionInfos;\n\n        var size = data.count();\n\n        var idList = [];\n        var nameRepeatCount = {};\n        var nameDimIdx;\n\n        nameList = nameList || [];\n\n        // Init storage\n        for (var i = 0; i < dimensions.length; i++) {\n            var dimInfo = dimensionInfoMap[dimensions[i]];\n            dimInfo.otherDims.itemName === 0 && (nameDimIdx = i);\n            var DataCtor = dataCtors[dimInfo.type];\n            storage[dimensions[i]] = new DataCtor(size);\n        }\n\n        var self = this;\n        if (!dimValueGetter) {\n            self.hasItemOption = false;\n        }\n        // Default dim value getter\n        dimValueGetter = dimValueGetter || function (dataItem, dimName, dataIndex, dimIndex) {\n            var value = modelUtil.getDataItemValue(dataItem);\n            // If any dataItem is like { value: 10 }\n            if (modelUtil.isDataItemOption(dataItem)) {\n                self.hasItemOption = true;\n            }\n            return modelUtil.converDataValue(\n                (value instanceof Array)\n                    ? value[dimIndex]\n                    // If value is a single number or something else not array.\n                    : value,\n                dimensionInfoMap[dimName]\n            );\n        };\n\n        for (var i = 0; i < size; i++) {\n            // NOTICE: Try not to write things into dataItem\n            var dataItem = data.getItem(i);\n            // Each data item is value\n            // [1, 2]\n            // 2\n            // Bar chart, line chart which uses category axis\n            // only gives the 'y' value. 'x' value is the indices of cateogry\n            // Use a tempValue to normalize the value to be a (x, y) value\n\n            // Store the data by dimensions\n            for (var k = 0; k < dimensions.length; k++) {\n                var dim = dimensions[k];\n                var dimStorage = storage[dim];\n                // PENDING NULL is empty or zero\n                dimStorage[i] = dimValueGetter(dataItem, dim, i, k);\n            }\n\n            indices.push(i);\n        }\n\n        // Use the name in option and create id\n        for (var i = 0; i < size; i++) {\n            var dataItem = data.getItem(i);\n            if (!nameList[i] && dataItem) {\n                if (dataItem.name != null) {\n                    nameList[i] = dataItem.name;\n                }\n                else if (nameDimIdx != null) {\n                    nameList[i] = storage[dimensions[nameDimIdx]][i];\n                }\n            }\n            var name = nameList[i] || '';\n            // Try using the id in option\n            var id = dataItem && dataItem.id;\n\n            if (!id && name) {\n                // Use name as id and add counter to avoid same name\n                nameRepeatCount[name] = nameRepeatCount[name] || 0;\n                id = name;\n                if (nameRepeatCount[name] > 0) {\n                    id += '__ec__' + nameRepeatCount[name];\n                }\n                nameRepeatCount[name]++;\n            }\n            id && (idList[i] = id);\n        }\n\n        this._nameList = nameList;\n        this._idList = idList;\n    };\n\n    /**\n     * @return {number}\n     */\n    listProto.count = function () {\n        return this.indices.length;\n    };\n\n    /**\n     * Get value. Return NaN if idx is out of range.\n     * @param {string} dim Dim must be concrete name.\n     * @param {number} idx\n     * @param {boolean} stack\n     * @return {number}\n     */\n    listProto.get = function (dim, idx, stack) {\n        var storage = this._storage;\n        var dataIndex = this.indices[idx];\n\n        // If value not exists\n        if (dataIndex == null || !storage[dim]) {\n            return NaN;\n        }\n\n        var value = storage[dim][dataIndex];\n        // FIXME ordinal data type is not stackable\n        if (stack) {\n            var dimensionInfo = this._dimensionInfos[dim];\n            if (dimensionInfo && dimensionInfo.stackable) {\n                var stackedOn = this.stackedOn;\n                while (stackedOn) {\n                    // Get no stacked data of stacked on\n                    var stackedValue = stackedOn.get(dim, idx);\n                    // Considering positive stack, negative stack and empty data\n                    if ((value >= 0 && stackedValue > 0)  // Positive stack\n                        || (value <= 0 && stackedValue < 0) // Negative stack\n                    ) {\n                        value += stackedValue;\n                    }\n                    stackedOn = stackedOn.stackedOn;\n                }\n            }\n        }\n        return value;\n    };\n\n    /**\n     * Get value for multi dimensions.\n     * @param {Array.<string>} [dimensions] If ignored, using all dimensions.\n     * @param {number} idx\n     * @param {boolean} stack\n     * @return {number}\n     */\n    listProto.getValues = function (dimensions, idx, stack) {\n        var values = [];\n\n        if (!zrUtil.isArray(dimensions)) {\n            stack = idx;\n            idx = dimensions;\n            dimensions = this.dimensions;\n        }\n\n        for (var i = 0, len = dimensions.length; i < len; i++) {\n            values.push(this.get(dimensions[i], idx, stack));\n        }\n\n        return values;\n    };\n\n    /**\n     * If value is NaN. Inlcuding '-'\n     * @param {string} dim\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.hasValue = function (idx) {\n        var dimensions = this.dimensions;\n        var dimensionInfos = this._dimensionInfos;\n        for (var i = 0, len = dimensions.length; i < len; i++) {\n            if (\n                // Ordinal type can be string or number\n                dimensionInfos[dimensions[i]].type !== 'ordinal'\n                && isNaN(this.get(dimensions[i], idx))\n            ) {\n                return false;\n            }\n        }\n        return true;\n    };\n\n    /**\n     * Get extent of data in one dimension\n     * @param {string} dim\n     * @param {boolean} stack\n     * @param {Function} filter\n     */\n    listProto.getDataExtent = function (dim, stack, filter) {\n        dim = this.getDimension(dim);\n        var dimData = this._storage[dim];\n        var dimInfo = this.getDimensionInfo(dim);\n        stack = (dimInfo && dimInfo.stackable) && stack;\n        var dimExtent = (this._extent || (this._extent = {}))[dim + (!!stack)];\n        var value;\n        if (dimExtent) {\n            return dimExtent;\n        }\n        // var dimInfo = this._dimensionInfos[dim];\n        if (dimData) {\n            var min = Infinity;\n            var max = -Infinity;\n            // var isOrdinal = dimInfo.type === 'ordinal';\n            for (var i = 0, len = this.count(); i < len; i++) {\n                value = this.get(dim, i, stack);\n                // FIXME\n                // if (isOrdinal && typeof value === 'string') {\n                //     value = zrUtil.indexOf(dimData, value);\n                // }\n                if (!filter || filter(value, dim, i)) {\n                    value < min && (min = value);\n                    value > max && (max = value);\n                }\n            }\n            return (this._extent[dim + !!stack] = [min, max]);\n        }\n        else {\n            return [Infinity, -Infinity];\n        }\n    };\n\n    /**\n     * Get sum of data in one dimension\n     * @param {string} dim\n     * @param {boolean} stack\n     */\n    listProto.getSum = function (dim, stack) {\n        var dimData = this._storage[dim];\n        var sum = 0;\n        if (dimData) {\n            for (var i = 0, len = this.count(); i < len; i++) {\n                var value = this.get(dim, i, stack);\n                if (!isNaN(value)) {\n                    sum += value;\n                }\n            }\n        }\n        return sum;\n    };\n\n    /**\n     * Retreive the index with given value\n     * @param {number} idx\n     * @param {number} value\n     * @return {number}\n     */\n    // FIXME Precision of float value\n    listProto.indexOf = function (dim, value) {\n        var storage = this._storage;\n        var dimData = storage[dim];\n        var indices = this.indices;\n\n        if (dimData) {\n            for (var i = 0, len = indices.length; i < len; i++) {\n                var rawIndex = indices[i];\n                if (dimData[rawIndex] === value) {\n                    return i;\n                }\n            }\n        }\n        return -1;\n    };\n\n    /**\n     * Retreive the index with given name\n     * @param {number} idx\n     * @param {number} name\n     * @return {number}\n     */\n    listProto.indexOfName = function (name) {\n        var indices = this.indices;\n        var nameList = this._nameList;\n\n        for (var i = 0, len = indices.length; i < len; i++) {\n            var rawIndex = indices[i];\n            if (nameList[rawIndex] === name) {\n                return i;\n            }\n        }\n\n        return -1;\n    };\n\n    /**\n     * Retreive the index with given raw data index\n     * @param {number} idx\n     * @param {number} name\n     * @return {number}\n     */\n    listProto.indexOfRawIndex = function (rawIndex) {\n        // Indices are ascending\n        var indices = this.indices;\n\n        // If rawIndex === dataIndex\n        var rawDataIndex = indices[rawIndex];\n        if (rawDataIndex != null && rawDataIndex === rawIndex) {\n            return rawIndex;\n        }\n\n        var left = 0;\n        var right = indices.length - 1;\n        while (left <= right) {\n            var mid = (left + right) / 2 | 0;\n            if (indices[mid] < rawIndex) {\n                left = mid + 1;\n            }\n            else if (indices[mid] > rawIndex) {\n                right = mid - 1;\n            }\n            else {\n                return mid;\n            }\n        }\n        return -1;\n    };\n\n    /**\n     * Retreive the index of nearest value\n     * @param {string} dim\n     * @param {number} value\n     * @param {boolean} stack If given value is after stacked\n     * @param {number} [maxDistance=Infinity]\n     * @return {Array.<number>} Considere multiple points has the same value.\n     */\n    listProto.indicesOfNearest = function (dim, value, stack, maxDistance) {\n        var storage = this._storage;\n        var dimData = storage[dim];\n        var nearestIndices = [];\n\n        if (!dimData) {\n            return nearestIndices;\n        }\n\n        if (maxDistance == null) {\n            maxDistance = Infinity;\n        }\n\n        var minDist = Number.MAX_VALUE;\n        var minDiff = -1;\n        for (var i = 0, len = this.count(); i < len; i++) {\n            var diff = value - this.get(dim, i, stack);\n            var dist = Math.abs(diff);\n            if (diff <= maxDistance && dist <= minDist) {\n                // For the case of two data are same on xAxis, which has sequence data.\n                // Show the nearest index\n                // https://github.com/ecomfe/echarts/issues/2869\n                if (dist < minDist || (diff >= 0 && minDiff < 0)) {\n                    minDist = dist;\n                    minDiff = diff;\n                    nearestIndices.length = 0;\n                }\n                nearestIndices.push(i);\n            }\n        }\n        return nearestIndices;\n    };\n\n    /**\n     * Get raw data index\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.getRawIndex = function (idx) {\n        var rawIdx = this.indices[idx];\n        return rawIdx == null ? -1 : rawIdx;\n    };\n\n    /**\n     * Get raw data item\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.getRawDataItem = function (idx) {\n        return this._rawData.getItem(this.getRawIndex(idx));\n    };\n\n    /**\n     * @param {number} idx\n     * @param {boolean} [notDefaultIdx=false]\n     * @return {string}\n     */\n    listProto.getName = function (idx) {\n        return this._nameList[this.indices[idx]] || '';\n    };\n\n    /**\n     * @param {number} idx\n     * @param {boolean} [notDefaultIdx=false]\n     * @return {string}\n     */\n    listProto.getId = function (idx) {\n        return this._idList[this.indices[idx]] || (this.getRawIndex(idx) + '');\n    };\n\n\n    function normalizeDimensions(dimensions) {\n        if (!zrUtil.isArray(dimensions)) {\n            dimensions = [dimensions];\n        }\n        return dimensions;\n    }\n\n    /**\n     * Data iteration\n     * @param {string|Array.<string>}\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     *\n     * @example\n     *  list.each('x', function (x, idx) {});\n     *  list.each(['x', 'y'], function (x, y, idx) {});\n     *  list.each(function (idx) {})\n     */\n    listProto.each = function (dims, cb, stack, context) {\n        if (typeof dims === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dims;\n            dims = [];\n        }\n\n        dims = zrUtil.map(normalizeDimensions(dims), this.getDimension, this);\n\n        var value = [];\n        var dimSize = dims.length;\n        var indices = this.indices;\n\n        context = context || this;\n\n        for (var i = 0; i < indices.length; i++) {\n            // Simple optimization\n            switch (dimSize) {\n                case 0:\n                    cb.call(context, i);\n                    break;\n                case 1:\n                    cb.call(context, this.get(dims[0], i, stack), i);\n                    break;\n                case 2:\n                    cb.call(context, this.get(dims[0], i, stack), this.get(dims[1], i, stack), i);\n                    break;\n                default:\n                    for (var k = 0; k < dimSize; k++) {\n                        value[k] = this.get(dims[k], i, stack);\n                    }\n                    // Index\n                    value[k] = i;\n                    cb.apply(context, value);\n            }\n        }\n    };\n\n    /**\n     * Data filter\n     * @param {string|Array.<string>}\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     */\n    listProto.filterSelf = function (dimensions, cb, stack, context) {\n        if (typeof dimensions === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dimensions;\n            dimensions = [];\n        }\n\n        dimensions = zrUtil.map(\n            normalizeDimensions(dimensions), this.getDimension, this\n        );\n\n        var newIndices = [];\n        var value = [];\n        var dimSize = dimensions.length;\n        var indices = this.indices;\n\n        context = context || this;\n\n        for (var i = 0; i < indices.length; i++) {\n            var keep;\n            // Simple optimization\n            if (!dimSize) {\n                keep = cb.call(context, i);\n            }\n            else if (dimSize === 1) {\n                keep = cb.call(\n                    context, this.get(dimensions[0], i, stack), i\n                );\n            }\n            else {\n                for (var k = 0; k < dimSize; k++) {\n                    value[k] = this.get(dimensions[k], i, stack);\n                }\n                value[k] = i;\n                keep = cb.apply(context, value);\n            }\n            if (keep) {\n                newIndices.push(indices[i]);\n            }\n        }\n\n        this.indices = newIndices;\n\n        // Reset data extent\n        this._extent = {};\n\n        return this;\n    };\n\n    /**\n     * Data mapping to a plain array\n     * @param {string|Array.<string>} [dimensions]\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     * @return {Array}\n     */\n    listProto.mapArray = function (dimensions, cb, stack, context) {\n        if (typeof dimensions === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dimensions;\n            dimensions = [];\n        }\n\n        var result = [];\n        this.each(dimensions, function () {\n            result.push(cb && cb.apply(this, arguments));\n        }, stack, context);\n        return result;\n    };\n\n    function cloneListForMapAndSample(original, excludeDimensions) {\n        var allDimensions = original.dimensions;\n        var list = new List(\n            zrUtil.map(allDimensions, original.getDimensionInfo, original),\n            original.hostModel\n        );\n        // FIXME If needs stackedOn, value may already been stacked\n        transferProperties(list, original);\n\n        var storage = list._storage = {};\n        var originalStorage = original._storage;\n        // Init storage\n        for (var i = 0; i < allDimensions.length; i++) {\n            var dim = allDimensions[i];\n            var dimStore = originalStorage[dim];\n            if (zrUtil.indexOf(excludeDimensions, dim) >= 0) {\n                storage[dim] = new dimStore.constructor(\n                    originalStorage[dim].length\n                );\n            }\n            else {\n                // Direct reference for other dimensions\n                storage[dim] = originalStorage[dim];\n            }\n        }\n        return list;\n    }\n\n    /**\n     * Data mapping to a new List with given dimensions\n     * @param {string|Array.<string>} dimensions\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     * @return {Array}\n     */\n    listProto.map = function (dimensions, cb, stack, context) {\n        dimensions = zrUtil.map(\n            normalizeDimensions(dimensions), this.getDimension, this\n        );\n\n        var list = cloneListForMapAndSample(this, dimensions);\n        // Following properties are all immutable.\n        // So we can reference to the same value\n        var indices = list.indices = this.indices;\n\n        var storage = list._storage;\n\n        var tmpRetValue = [];\n        this.each(dimensions, function () {\n            var idx = arguments[arguments.length - 1];\n            var retValue = cb && cb.apply(this, arguments);\n            if (retValue != null) {\n                // a number\n                if (typeof retValue === 'number') {\n                    tmpRetValue[0] = retValue;\n                    retValue = tmpRetValue;\n                }\n                for (var i = 0; i < retValue.length; i++) {\n                    var dim = dimensions[i];\n                    var dimStore = storage[dim];\n                    var rawIdx = indices[idx];\n                    if (dimStore) {\n                        dimStore[rawIdx] = retValue[i];\n                    }\n                }\n            }\n        }, stack, context);\n\n        return list;\n    };\n\n    /**\n     * Large data down sampling on given dimension\n     * @param {string} dimension\n     * @param {number} rate\n     * @param {Function} sampleValue\n     * @param {Function} sampleIndex Sample index for name and id\n     */\n    listProto.downSample = function (dimension, rate, sampleValue, sampleIndex) {\n        var list = cloneListForMapAndSample(this, [dimension]);\n        var storage = this._storage;\n        var targetStorage = list._storage;\n\n        var originalIndices = this.indices;\n        var indices = list.indices = [];\n\n        var frameValues = [];\n        var frameIndices = [];\n        var frameSize = Math.floor(1 / rate);\n\n        var dimStore = targetStorage[dimension];\n        var len = this.count();\n        // Copy data from original data\n        for (var i = 0; i < storage[dimension].length; i++) {\n            targetStorage[dimension][i] = storage[dimension][i];\n        }\n        for (var i = 0; i < len; i += frameSize) {\n            // Last frame\n            if (frameSize > len - i) {\n                frameSize = len - i;\n                frameValues.length = frameSize;\n            }\n            for (var k = 0; k < frameSize; k++) {\n                var idx = originalIndices[i + k];\n                frameValues[k] = dimStore[idx];\n                frameIndices[k] = idx;\n            }\n            var value = sampleValue(frameValues);\n            var idx = frameIndices[sampleIndex(frameValues, value) || 0];\n            // Only write value on the filtered data\n            dimStore[idx] = value;\n            indices.push(idx);\n        }\n\n        return list;\n    };\n\n    /**\n     * Get model of one data item.\n     *\n     * @param {number} idx\n     */\n    // FIXME Model proxy ?\n    listProto.getItemModel = function (idx) {\n        var hostModel = this.hostModel;\n        idx = this.indices[idx];\n        return new Model(this._rawData.getItem(idx), hostModel, hostModel && hostModel.ecModel);\n    };\n\n    /**\n     * Create a data differ\n     * @param {module:echarts/data/List} otherList\n     * @return {module:echarts/data/DataDiffer}\n     */\n    listProto.diff = function (otherList) {\n        var idList = this._idList;\n        var otherIdList = otherList && otherList._idList;\n        var val;\n        // Use prefix to avoid index to be the same as otherIdList[idx],\n        // which will cause weird udpate animation.\n        var prefix = 'e\\0\\0';\n\n        return new DataDiffer(\n            otherList ? otherList.indices : [],\n            this.indices,\n            function (idx) {\n                return (val = otherIdList[idx]) != null ? val : prefix + idx;\n            },\n            function (idx) {\n                return (val = idList[idx]) != null ? val : prefix + idx;\n            }\n        );\n    };\n    /**\n     * Get visual property.\n     * @param {string} key\n     */\n    listProto.getVisual = function (key) {\n        var visual = this._visual;\n        return visual && visual[key];\n    };\n\n    /**\n     * Set visual property\n     * @param {string|Object} key\n     * @param {*} [value]\n     *\n     * @example\n     *  setVisual('color', color);\n     *  setVisual({\n     *      'color': color\n     *  });\n     */\n    listProto.setVisual = function (key, val) {\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    this.setVisual(name, key[name]);\n                }\n            }\n            return;\n        }\n        this._visual = this._visual || {};\n        this._visual[key] = val;\n    };\n\n    /**\n     * Set layout property.\n     * @param {string} key\n     * @param {*} [val]\n     */\n    listProto.setLayout = function (key, val) {\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    this.setLayout(name, key[name]);\n                }\n            }\n            return;\n        }\n        this._layout[key] = val;\n    };\n\n    /**\n     * Get layout property.\n     * @param  {string} key.\n     * @return {*}\n     */\n    listProto.getLayout = function (key) {\n        return this._layout[key];\n    };\n\n    /**\n     * Get layout of single data item\n     * @param {number} idx\n     */\n    listProto.getItemLayout = function (idx) {\n        return this._itemLayouts[idx];\n    };\n\n    /**\n     * Set layout of single data item\n     * @param {number} idx\n     * @param {Object} layout\n     * @param {boolean=} [merge=false]\n     */\n    listProto.setItemLayout = function (idx, layout, merge) {\n        this._itemLayouts[idx] = merge\n            ? zrUtil.extend(this._itemLayouts[idx] || {}, layout)\n            : layout;\n    };\n\n    /**\n     * Clear all layout of single data item\n     */\n    listProto.clearItemLayouts = function () {\n        this._itemLayouts.length = 0;\n    };\n\n    /**\n     * Get visual property of single data item\n     * @param {number} idx\n     * @param {string} key\n     * @param {boolean} [ignoreParent=false]\n     */\n    listProto.getItemVisual = function (idx, key, ignoreParent) {\n        var itemVisual = this._itemVisuals[idx];\n        var val = itemVisual && itemVisual[key];\n        if (val == null && !ignoreParent) {\n            // Use global visual property\n            return this.getVisual(key);\n        }\n        return val;\n    };\n\n    /**\n     * Set visual property of single data item\n     *\n     * @param {number} idx\n     * @param {string|Object} key\n     * @param {*} [value]\n     *\n     * @example\n     *  setItemVisual(0, 'color', color);\n     *  setItemVisual(0, {\n     *      'color': color\n     *  });\n     */\n    listProto.setItemVisual = function (idx, key, value) {\n        var itemVisual = this._itemVisuals[idx] || {};\n        this._itemVisuals[idx] = itemVisual;\n\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    itemVisual[name] = key[name];\n                }\n            }\n            return;\n        }\n        itemVisual[key] = value;\n    };\n\n    /**\n     * Clear itemVisuals and list visual.\n     */\n    listProto.clearAllVisual = function () {\n        this._visual = {};\n        this._itemVisuals = [];\n    };\n\n    var setItemDataAndSeriesIndex = function (child) {\n        child.seriesIndex = this.seriesIndex;\n        child.dataIndex = this.dataIndex;\n        child.dataType = this.dataType;\n    };\n    /**\n     * Set graphic element relative to data. It can be set as null\n     * @param {number} idx\n     * @param {module:zrender/Element} [el]\n     */\n    listProto.setItemGraphicEl = function (idx, el) {\n        var hostModel = this.hostModel;\n\n        if (el) {\n            // Add data index and series index for indexing the data by element\n            // Useful in tooltip\n            el.dataIndex = idx;\n            el.dataType = this.dataType;\n            el.seriesIndex = hostModel && hostModel.seriesIndex;\n            if (el.type === 'group') {\n                el.traverse(setItemDataAndSeriesIndex, el);\n            }\n        }\n\n        this._graphicEls[idx] = el;\n    };\n\n    /**\n     * @param {number} idx\n     * @return {module:zrender/Element}\n     */\n    listProto.getItemGraphicEl = function (idx) {\n        return this._graphicEls[idx];\n    };\n\n    /**\n     * @param {Function} cb\n     * @param {*} context\n     */\n    listProto.eachItemGraphicEl = function (cb, context) {\n        zrUtil.each(this._graphicEls, function (el, idx) {\n            if (el) {\n                cb && cb.call(context, el, idx);\n            }\n        });\n    };\n\n    /**\n     * Shallow clone a new list except visual and layout properties, and graph elements.\n     * New list only change the indices.\n     */\n    listProto.cloneShallow = function () {\n        var dimensionInfoList = zrUtil.map(this.dimensions, this.getDimensionInfo, this);\n        var list = new List(dimensionInfoList, this.hostModel);\n\n        // FIXME\n        list._storage = this._storage;\n\n        transferProperties(list, this);\n\n\n        // Clone will not change the data extent and indices\n        list.indices = this.indices.slice();\n\n        if (this._extent) {\n            list._extent = zrUtil.extend({}, this._extent);\n        }\n\n        return list;\n    };\n\n    /**\n     * Wrap some method to add more feature\n     * @param {string} methodName\n     * @param {Function} injectFunction\n     */\n    listProto.wrapMethod = function (methodName, injectFunction) {\n        var originalMethod = this[methodName];\n        if (typeof originalMethod !== 'function') {\n            return;\n        }\n        this.__wrappedMethods = this.__wrappedMethods || [];\n        this.__wrappedMethods.push(methodName);\n        this[methodName] = function () {\n            var res = originalMethod.apply(this, arguments);\n            return injectFunction.apply(this, [res].concat(zrUtil.slice(arguments)));\n        };\n    };\n\n    // Methods that create a new list based on this list should be listed here.\n    // Notice that those method should `RETURN` the new list.\n    listProto.TRANSFERABLE_METHODS = ['cloneShallow', 'downSample', 'map'];\n    // Methods that change indices of this list should be listed here.\n    listProto.CHANGABLE_METHODS = ['filterSelf'];\n\n    module.exports = List;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/data/List.js\n// module id = 530\n// module chunks = 0 1 2","/**\n * Complete dimensions by data (guess dimension).\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../../util/model');\n    var each = zrUtil.each;\n    var isString = zrUtil.isString;\n    var defaults = zrUtil.defaults;\n    var normalizeToArray = modelUtil.normalizeToArray;\n\n    var OTHER_DIMS = {tooltip: 1, label: 1, itemName: 1};\n\n    /**\n     * Complete the dimensions array, by user defined `dimension` and `encode`,\n     * and guessing from the data structure.\n     * If no 'value' dimension specified, the first no-named dimension will be\n     * named as 'value'.\n     *\n     * @param {Array.<string>} sysDims Necessary dimensions, like ['x', 'y'], which\n     *      provides not only dim template, but also default order.\n     *      `name` of each item provides default coord name.\n     *      [{dimsDef: []}, ...] can be specified to give names.\n     * @param {Array} data Data list. [[1, 2, 3], [2, 3, 4]].\n     * @param {Object} [opt]\n     * @param {Array.<Object|string>} [opt.dimsDef] option.series.dimensions User defined dimensions\n     *      For example: ['asdf', {name, type}, ...].\n     * @param {Object} [opt.encodeDef] option.series.encode {x: 2, y: [3, 1], tooltip: [1, 2], label: 3}\n     * @param {string} [opt.extraPrefix] Prefix of name when filling the left dimensions.\n     * @param {string} [opt.extraFromZero] If specified, extra dim names will be:\n     *                      extraPrefix + 0, extraPrefix + extraBaseIndex + 1 ...\n     *                      If not specified, extra dim names will be:\n     *                      extraPrefix, extraPrefix + 0, extraPrefix + 1 ...\n     * @param {number} [opt.dimCount] If not specified, guess by the first data item.\n     * @return {Array.<Object>} [{\n     *      name: string mandatory,\n     *      coordDim: string mandatory,\n     *      coordDimIndex: number mandatory,\n     *      type: string optional,\n     *      tooltipName: string optional,\n     *      otherDims: {\n     *          tooltip: number optional,\n     *          label: number optional\n     *      },\n     *      isExtraCoord: boolean true or undefined.\n     *      other props ...\n     * }]\n     */\n    function completeDimensions(sysDims, data, opt) {\n        data = data || [];\n        opt = opt || {};\n        sysDims = (sysDims || []).slice();\n        var dimsDef = (opt.dimsDef || []).slice();\n        var encodeDef = zrUtil.createHashMap(opt.encodeDef);\n        var dataDimNameMap = zrUtil.createHashMap();\n        var coordDimNameMap = zrUtil.createHashMap();\n        // var valueCandidate;\n        var result = [];\n\n        var dimCount = opt.dimCount;\n        if (dimCount == null) {\n            var value0 = retrieveValue(data[0]);\n            dimCount = Math.max(\n                zrUtil.isArray(value0) && value0.length || 1,\n                sysDims.length,\n                dimsDef.length\n            );\n            each(sysDims, function (sysDimItem) {\n                var sysDimItemDimsDef = sysDimItem.dimsDef;\n                sysDimItemDimsDef && (dimCount = Math.max(dimCount, sysDimItemDimsDef.length));\n            });\n        }\n\n        // Apply user defined dims (`name` and `type`) and init result.\n        for (var i = 0; i < dimCount; i++) {\n            var dimDefItem = isString(dimsDef[i]) ? {name: dimsDef[i]} : (dimsDef[i] || {});\n            var userDimName = dimDefItem.name;\n            var resultItem = result[i] = {otherDims: {}};\n            // Name will be applied later for avoiding duplication.\n            if (userDimName != null && dataDimNameMap.get(userDimName) == null) {\n                // Only if `series.dimensions` is defined in option, tooltipName\n                // will be set, and dimension will be diplayed vertically in\n                // tooltip by default.\n                resultItem.name = resultItem.tooltipName = userDimName;\n                dataDimNameMap.set(userDimName, i);\n            }\n            dimDefItem.type != null && (resultItem.type = dimDefItem.type);\n        }\n\n        // Set `coordDim` and `coordDimIndex` by `encodeDef` and normalize `encodeDef`.\n        encodeDef.each(function (dataDims, coordDim) {\n            dataDims = encodeDef.set(coordDim, normalizeToArray(dataDims).slice());\n            each(dataDims, function (resultDimIdx, coordDimIndex) {\n                // The input resultDimIdx can be dim name or index.\n                isString(resultDimIdx) && (resultDimIdx = dataDimNameMap.get(resultDimIdx));\n                if (resultDimIdx != null && resultDimIdx < dimCount) {\n                    dataDims[coordDimIndex] = resultDimIdx;\n                    applyDim(result[resultDimIdx], coordDim, coordDimIndex);\n                }\n            });\n        });\n\n        // Apply templetes and default order from `sysDims`.\n        var availDimIdx = 0;\n        each(sysDims, function (sysDimItem, sysDimIndex) {\n            var coordDim;\n            var sysDimItem;\n            var sysDimItemDimsDef;\n            var sysDimItemOtherDims;\n            if (isString(sysDimItem)) {\n                coordDim = sysDimItem;\n                sysDimItem = {};\n            }\n            else {\n                coordDim = sysDimItem.name;\n                sysDimItem = zrUtil.clone(sysDimItem);\n                // `coordDimIndex` should not be set directly.\n                sysDimItemDimsDef = sysDimItem.dimsDef;\n                sysDimItemOtherDims = sysDimItem.otherDims;\n                sysDimItem.name = sysDimItem.coordDim = sysDimItem.coordDimIndex\n                    = sysDimItem.dimsDef = sysDimItem.otherDims = null;\n            }\n\n            var dataDims = normalizeToArray(encodeDef.get(coordDim));\n            // dimensions provides default dim sequences.\n            if (!dataDims.length) {\n                for (var i = 0; i < (sysDimItemDimsDef && sysDimItemDimsDef.length || 1); i++) {\n                    while (availDimIdx < result.length && result[availDimIdx].coordDim != null) {\n                        availDimIdx++;\n                    }\n                    availDimIdx < result.length && dataDims.push(availDimIdx++);\n                }\n            }\n            // Apply templates.\n            each(dataDims, function (resultDimIdx, coordDimIndex) {\n                var resultItem = result[resultDimIdx];\n                applyDim(defaults(resultItem, sysDimItem), coordDim, coordDimIndex);\n                if (resultItem.name == null && sysDimItemDimsDef) {\n                    resultItem.name = resultItem.tooltipName = sysDimItemDimsDef[coordDimIndex];\n                }\n                sysDimItemOtherDims && defaults(resultItem.otherDims, sysDimItemOtherDims);\n            });\n        });\n\n        // Make sure the first extra dim is 'value'.\n        var extra = opt.extraPrefix || 'value';\n\n        // Set dim `name` and other `coordDim` and other props.\n        for (var resultDimIdx = 0; resultDimIdx < dimCount; resultDimIdx++) {\n            var resultItem = result[resultDimIdx] = result[resultDimIdx] || {};\n            var coordDim = resultItem.coordDim;\n\n            coordDim == null && (\n                resultItem.coordDim = genName(extra, coordDimNameMap, opt.extraFromZero),\n                resultItem.coordDimIndex = 0,\n                resultItem.isExtraCoord = true\n            );\n\n            resultItem.name == null && (resultItem.name = genName(\n                resultItem.coordDim,\n                dataDimNameMap\n            ));\n\n            resultItem.type == null && guessOrdinal(data, resultDimIdx)\n                && (resultItem.type = 'ordinal');\n        }\n\n        return result;\n\n        function applyDim(resultItem, coordDim, coordDimIndex) {\n            if (OTHER_DIMS[coordDim]) {\n                resultItem.otherDims[coordDim] = coordDimIndex;\n            }\n            else {\n                resultItem.coordDim = coordDim;\n                resultItem.coordDimIndex = coordDimIndex;\n                coordDimNameMap.set(coordDim, true);\n            }\n        }\n\n        function genName(name, map, fromZero) {\n            if (fromZero || map.get(name) != null) {\n                var i = 0;\n                while (map.get(name + i) != null) {\n                    i++;\n                }\n                name += i;\n            }\n            map.set(name, true);\n            return name;\n        }\n    }\n\n    // The rule should not be complex, otherwise user might not\n    // be able to known where the data is wrong.\n    var guessOrdinal = completeDimensions.guessOrdinal = function (data, dimIndex) {\n        for (var i = 0, len = data.length; i < len; i++) {\n            var value = retrieveValue(data[i]);\n\n            if (!zrUtil.isArray(value)) {\n                return false;\n            }\n\n            var value = value[dimIndex];\n            // Consider usage convenience, '1', '2' will be treated as \"number\".\n            if (value != null && isFinite(value)) {\n                return false;\n            }\n            else if (isString(value) && value !== '-') {\n                return true;\n            }\n        }\n        return false;\n    };\n\n    function retrieveValue(o) {\n        return zrUtil.isArray(o) ? o : zrUtil.isObject(o) ? o.value: o;\n    }\n\n    module.exports = completeDimensions;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/data/helper/completeDimensions.js\n// module id = 531\n// module chunks = 0 1 2","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var formatUtil = require('../util/format');\n    var classUtil = require('../util/clazz');\n    var modelUtil = require('../util/model');\n    var ComponentModel = require('./Component');\n    var colorPaletteMixin = require('./mixin/colorPalette');\n    var env = require('zrender/lib/core/env');\n    var layout = require('../util/layout');\n\n    var set = classUtil.set;\n    var get = classUtil.get;\n    var encodeHTML = formatUtil.encodeHTML;\n    var addCommas = formatUtil.addCommas;\n\n    var SeriesModel = ComponentModel.extend({\n\n        type: 'series.__base__',\n\n        /**\n         * @readOnly\n         */\n        seriesIndex: 0,\n\n        // coodinateSystem will be injected in the echarts/CoordinateSystem\n        coordinateSystem: null,\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        defaultOption: null,\n\n        /**\n         * Data provided for legend\n         * @type {Function}\n         */\n        // PENDING\n        legendDataProvider: null,\n\n        /**\n         * Access path of color for visual\n         */\n        visualColorAccessPath: 'itemStyle.normal.color',\n\n        /**\n         * Support merge layout params.\n         * Only support 'box' now (left/right/top/bottom/width/height).\n         * @type {string|Object} Object can be {ignoreSize: true}\n         * @readOnly\n         */\n        layoutMode: null,\n\n        init: function (option, parentModel, ecModel, extraOpt) {\n\n            /**\n             * @type {number}\n             * @readOnly\n             */\n            this.seriesIndex = this.componentIndex;\n\n            this.mergeDefaultAndTheme(option, ecModel);\n\n            var data = this.getInitialData(option, ecModel);\n            if (__DEV__) {\n                zrUtil.assert(data, 'getInitialData returned invalid data.');\n            }\n            /**\n             * @type {module:echarts/data/List|module:echarts/data/Tree|module:echarts/data/Graph}\n             * @private\n             */\n            set(this, 'dataBeforeProcessed', data);\n\n            // If we reverse the order (make data firstly, and then make\n            // dataBeforeProcessed by cloneShallow), cloneShallow will\n            // cause data.graph.data !== data when using\n            // module:echarts/data/Graph or module:echarts/data/Tree.\n            // See module:echarts/data/helper/linkList\n            this.restoreData();\n        },\n\n        /**\n         * Util for merge default and theme to option\n         * @param  {Object} option\n         * @param  {module:echarts/model/Global} ecModel\n         */\n        mergeDefaultAndTheme: function (option, ecModel) {\n            var layoutMode = this.layoutMode;\n            var inputPositionParams = layoutMode\n                ? layout.getLayoutParams(option) : {};\n\n            zrUtil.merge(\n                option,\n                ecModel.getTheme().get(this.subType)\n            );\n            zrUtil.merge(option, this.getDefaultOption());\n\n            // Default label emphasis `position` and `show`\n            // FIXME Set label in mergeOption\n            modelUtil.defaultEmphasis(option.label, modelUtil.LABEL_OPTIONS);\n\n            this.fillDataTextStyle(option.data);\n\n            if (layoutMode) {\n                layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n            }\n        },\n\n        mergeOption: function (newSeriesOption, ecModel) {\n            newSeriesOption = zrUtil.merge(this.option, newSeriesOption, true);\n            this.fillDataTextStyle(newSeriesOption.data);\n\n            var layoutMode = this.layoutMode;\n            if (layoutMode) {\n                layout.mergeLayoutParam(this.option, newSeriesOption, layoutMode);\n            }\n\n            var data = this.getInitialData(newSeriesOption, ecModel);\n            // TODO Merge data?\n            if (data) {\n                set(this, 'data', data);\n                set(this, 'dataBeforeProcessed', data.cloneShallow());\n            }\n        },\n\n        fillDataTextStyle: function (data) {\n            // Default data label emphasis `position` and `show`\n            // FIXME Tree structure data ?\n            // FIXME Performance ?\n            if (data) {\n                for (var i = 0; i < data.length; i++) {\n                    if (data[i] && data[i].label) {\n                        modelUtil.defaultEmphasis(data[i].label, modelUtil.LABEL_OPTIONS);\n                    }\n                }\n            }\n        },\n\n        /**\n         * Init a data structure from data related option in series\n         * Must be overwritten\n         */\n        getInitialData: function () {},\n\n        /**\n         * @param {string} [dataType]\n         * @return {module:echarts/data/List}\n         */\n        getData: function (dataType) {\n            var data = get(this, 'data');\n            return dataType == null ? data : data.getLinkedData(dataType);\n        },\n\n        /**\n         * @param {module:echarts/data/List} data\n         */\n        setData: function (data) {\n            set(this, 'data', data);\n        },\n\n        /**\n         * Get data before processed\n         * @return {module:echarts/data/List}\n         */\n        getRawData: function () {\n            return get(this, 'dataBeforeProcessed');\n        },\n\n        /**\n         * Coord dimension to data dimension.\n         *\n         * By default the result is the same as dimensions of series data.\n         * But in some series data dimensions are different from coord dimensions (i.e.\n         * candlestick and boxplot). Override this method to handle those cases.\n         *\n         * Coord dimension to data dimension can be one-to-many\n         *\n         * @param {string} coordDim\n         * @return {Array.<string>} dimensions on the axis.\n         */\n        coordDimToDataDim: function (coordDim) {\n            return modelUtil.coordDimToDataDim(this.getData(), coordDim);\n        },\n\n        /**\n         * Convert data dimension to coord dimension.\n         *\n         * @param {string|number} dataDim\n         * @return {string}\n         */\n        dataDimToCoordDim: function (dataDim) {\n            return modelUtil.dataDimToCoordDim(this.getData(), dataDim);\n        },\n\n        /**\n         * Get base axis if has coordinate system and has axis.\n         * By default use coordSys.getBaseAxis();\n         * Can be overrided for some chart.\n         * @return {type} description\n         */\n        getBaseAxis: function () {\n            var coordSys = this.coordinateSystem;\n            return coordSys && coordSys.getBaseAxis && coordSys.getBaseAxis();\n        },\n\n        // FIXME\n        /**\n         * Default tooltip formatter\n         *\n         * @param {number} dataIndex\n         * @param {boolean} [multipleSeries=false]\n         * @param {number} [dataType]\n         */\n        formatTooltip: function (dataIndex, multipleSeries, dataType) {\n            function formatArrayValue(value) {\n                var vertially = zrUtil.reduce(value, function (vertially, val, idx) {\n                    var dimItem = data.getDimensionInfo(idx);\n                    return vertially |= dimItem && dimItem.tooltip !== false && dimItem.tooltipName != null;\n                }, 0);\n\n                var result = [];\n                var tooltipDims = modelUtil.otherDimToDataDim(data, 'tooltip');\n\n                tooltipDims.length\n                    ? zrUtil.each(tooltipDims, function (dimIdx) {\n                        setEachItem(data.get(dimIdx, dataIndex), dimIdx);\n                    })\n                    // By default, all dims is used on tooltip.\n                    : zrUtil.each(value, setEachItem);\n\n                function setEachItem(val, dimIdx) {\n                    var dimInfo = data.getDimensionInfo(dimIdx);\n                    // If `dimInfo.tooltip` is not set, show tooltip.\n                    if (!dimInfo || dimInfo.otherDims.tooltip === false) {\n                        return;\n                    }\n                    var dimType = dimInfo.type;\n                    var valStr = (vertially ? '- ' + (dimInfo.tooltipName || dimInfo.name) + ': ' : '')\n                        + (dimType === 'ordinal'\n                            ? val + ''\n                            : dimType === 'time'\n                            ? (multipleSeries ? '' : formatUtil.formatTime('yyyy/MM/dd hh:mm:ss', val))\n                            : addCommas(val)\n                        );\n                    valStr && result.push(encodeHTML(valStr));\n                }\n\n                return (vertially ? '<br/>' : '') + result.join(vertially ? '<br/>' : ', ');\n            }\n\n            var data = get(this, 'data');\n\n            var value = this.getRawValue(dataIndex);\n            var formattedValue = zrUtil.isArray(value)\n                ? formatArrayValue(value) : encodeHTML(addCommas(value));\n            var name = data.getName(dataIndex);\n\n            var color = data.getItemVisual(dataIndex, 'color');\n            if (zrUtil.isObject(color) && color.colorStops) {\n                color = (color.colorStops[0] || {}).color;\n            }\n            color = color || 'transparent';\n\n            var colorEl = formatUtil.getTooltipMarker(color);\n\n            var seriesName = this.name;\n            // FIXME\n            if (seriesName === '\\0-') {\n                // Not show '-'\n                seriesName = '';\n            }\n            seriesName = seriesName\n                ? encodeHTML(seriesName) + (!multipleSeries ? '<br/>' : ': ')\n                : '';\n            return !multipleSeries\n                ? seriesName + colorEl\n                    + (name\n                        ? encodeHTML(name) + ': ' + formattedValue\n                        : formattedValue\n                    )\n                : colorEl + seriesName + formattedValue;\n        },\n\n        /**\n         * @return {boolean}\n         */\n        isAnimationEnabled: function () {\n            if (env.node) {\n                return false;\n            }\n\n            var animationEnabled = this.getShallow('animation');\n            if (animationEnabled) {\n                if (this.getData().count() > this.getShallow('animationThreshold')) {\n                    animationEnabled = false;\n                }\n            }\n            return animationEnabled;\n        },\n\n        restoreData: function () {\n            set(this, 'data', get(this, 'dataBeforeProcessed').cloneShallow());\n        },\n\n        getColorFromPalette: function (name, scope) {\n            var ecModel = this.ecModel;\n            // PENDING\n            var color = colorPaletteMixin.getColorFromPalette.call(this, name, scope);\n            if (!color) {\n                color = ecModel.getColorFromPalette(name, scope);\n            }\n            return color;\n        },\n\n        /**\n         * Get data indices for show tooltip content. See tooltip.\n         * @abstract\n         * @param {Array.<string>|string} dim\n         * @param {Array.<number>} value\n         * @param {module:echarts/coord/single/SingleAxis} baseAxis\n         * @return {Object} {dataIndices, nestestValue}.\n         */\n        getAxisTooltipData: null,\n\n        /**\n         * See tooltip.\n         * @abstract\n         * @param {number} dataIndex\n         * @return {Array.<number>} Point of tooltip. null/undefined can be returned.\n         */\n        getTooltipPosition: null\n    });\n\n    zrUtil.mixin(SeriesModel, modelUtil.dataFormatMixin);\n    zrUtil.mixin(SeriesModel, colorPaletteMixin);\n\n    module.exports = SeriesModel;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/Series.js\n// module id = 532\n// module chunks = 0 1 2","\n\n    var classUtil = require('../../util/clazz');\n    var set = classUtil.set;\n    var get = classUtil.get;\n\n    module.exports = {\n        clearColorPalette: function () {\n            set(this, 'colorIdx', 0);\n            set(this, 'colorNameMap', {});\n        },\n\n        getColorFromPalette: function (name, scope) {\n            scope = scope || this;\n            var colorIdx = get(scope, 'colorIdx') || 0;\n            var colorNameMap = get(scope, 'colorNameMap') || set(scope, 'colorNameMap', {});\n            // Use `hasOwnProperty` to avoid conflict with Object.prototype.\n            if (colorNameMap.hasOwnProperty(name)) {\n                return colorNameMap[name];\n            }\n            var colorPalette = this.get('color', true) || [];\n            if (!colorPalette.length) {\n                return;\n            }\n\n            var color = colorPalette[colorIdx];\n            if (name) {\n                colorNameMap[name] = color;\n            }\n            set(scope, 'colorIdx', (colorIdx + 1) % colorPalette.length);\n\n            return color;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/colorPalette.js\n// module id = 533\n// module chunks = 0 1 2","/**\n * For testable.\n */\n\n\n    var numberUtil = require('../util/number');\n\n    var roundNumber = numberUtil.round;\n\n    var helper = {};\n\n    /**\n     * @param {Array.<number>} extent Both extent[0] and extent[1] should be valid number.\n     *                                Should be extent[0] < extent[1].\n     * @param {number} splitNumber splitNumber should be >= 1.\n     * @param {number} [minInterval]\n     * @return {Object} {interval, intervalPrecision, niceTickExtent}\n     */\n    helper.intervalScaleNiceTicks = function (extent, splitNumber, minInterval) {\n        var result = {};\n        var span = extent[1] - extent[0];\n\n        var interval = result.interval = numberUtil.nice(span / splitNumber, true);\n        if (minInterval != null && interval < minInterval) {\n            interval = result.interval = minInterval;\n        }\n        // Tow more digital for tick.\n        var precision = result.intervalPrecision = helper.getIntervalPrecision(interval);\n        // Niced extent inside original extent\n        var niceTickExtent = result.niceTickExtent = [\n            roundNumber(Math.ceil(extent[0] / interval) * interval, precision),\n            roundNumber(Math.floor(extent[1] / interval) * interval, precision)\n        ];\n\n        helper.fixExtent(niceTickExtent, extent);\n\n        return result;\n    };\n\n    /**\n     * @param {number} interval\n     * @return {number} interval precision\n     */\n    helper.getIntervalPrecision = function (interval) {\n        // Tow more digital for tick.\n        return numberUtil.getPrecisionSafe(interval) + 2;\n    };\n\n    function clamp(niceTickExtent, idx, extent) {\n        niceTickExtent[idx] = Math.max(Math.min(niceTickExtent[idx], extent[1]), extent[0]);\n    }\n\n    // In some cases (e.g., splitNumber is 1), niceTickExtent may be out of extent.\n    helper.fixExtent = function (niceTickExtent, extent) {\n        !isFinite(niceTickExtent[0]) && (niceTickExtent[0] = extent[0]);\n        !isFinite(niceTickExtent[1]) && (niceTickExtent[1] = extent[1]);\n        clamp(niceTickExtent, 0, extent);\n        clamp(niceTickExtent, 1, extent);\n        if (niceTickExtent[0] > niceTickExtent[1]) {\n            niceTickExtent[0] = niceTickExtent[1];\n        }\n    };\n\n    helper.intervalScaleGetTicks = function (interval, extent, niceTickExtent, intervalPrecision) {\n        var ticks = [];\n\n        // If interval is 0, return [];\n        if (!interval) {\n            return ticks;\n        }\n\n        // Consider this case: using dataZoom toolbox, zoom and zoom.\n        var safeLimit = 10000;\n\n        if (extent[0] < niceTickExtent[0]) {\n            ticks.push(extent[0]);\n        }\n        var tick = niceTickExtent[0];\n\n        while (tick <= niceTickExtent[1]) {\n            ticks.push(tick);\n            // Avoid rounding error\n            tick = roundNumber(tick + interval, intervalPrecision);\n            if (tick === ticks[ticks.length - 1]) {\n                // Consider out of safe float point, e.g.,\n                // -3711126.9907707 + 2e-10 === -3711126.9907707\n                break;\n            }\n            if (ticks.length > safeLimit) {\n                return [];\n            }\n        }\n        // Consider this case: the last item of ticks is smaller\n        // than niceTickExtent[1] and niceTickExtent[1] === extent[1].\n        if (extent[1] > (ticks.length ? ticks[ticks.length - 1] : niceTickExtent[1])) {\n            ticks.push(extent[1]);\n        }\n\n        return ticks;\n    };\n\n    module.exports = helper;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/scale/helper.js\n// module id = 534\n// module chunks = 0 1 2","\n\n    var Group = require('zrender/lib/container/Group');\n    var componentUtil = require('../util/component');\n    var clazzUtil = require('../util/clazz');\n    var modelUtil = require('../util/model');\n    var zrUtil = require('zrender/lib/core/util');\n\n    function Chart() {\n\n        /**\n         * @type {module:zrender/container/Group}\n         * @readOnly\n         */\n        this.group = new Group();\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        this.uid = componentUtil.getUID('viewChart');\n    }\n\n    Chart.prototype = {\n\n        type: 'chart',\n\n        /**\n         * Init the chart\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        init: function (ecModel, api) {},\n\n        /**\n         * Render the chart\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        render: function (seriesModel, ecModel, api, payload) {},\n\n        /**\n         * Highlight series or specified data item\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        highlight: function (seriesModel, ecModel, api, payload) {\n            toggleHighlight(seriesModel.getData(), payload, 'emphasis');\n        },\n\n        /**\n         * Downplay series or specified data item\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        downplay: function (seriesModel, ecModel, api, payload) {\n            toggleHighlight(seriesModel.getData(), payload, 'normal');\n        },\n\n        /**\n         * Remove self\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        remove: function (ecModel, api) {\n            this.group.removeAll();\n        },\n\n        /**\n         * Dispose self\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        dispose: function () {}\n\n        /**\n         * The view contains the given point.\n         * @interface\n         * @param {Array.<number>} point\n         * @return {boolean}\n         */\n        // containPoint: function () {}\n\n    };\n\n    var chartProto = Chart.prototype;\n    chartProto.updateView\n        = chartProto.updateLayout\n        = chartProto.updateVisual\n        = function (seriesModel, ecModel, api, payload) {\n            this.render(seriesModel, ecModel, api, payload);\n        };\n\n    /**\n     * Set state of single element\n     * @param  {module:zrender/Element} el\n     * @param  {string} state\n     */\n    function elSetState(el, state) {\n        if (el) {\n            el.trigger(state);\n            if (el.type === 'group') {\n                for (var i = 0; i < el.childCount(); i++) {\n                    elSetState(el.childAt(i), state);\n                }\n            }\n        }\n    }\n    /**\n     * @param  {module:echarts/data/List} data\n     * @param  {Object} payload\n     * @param  {string} state 'normal'|'emphasis'\n     * @inner\n     */\n    function toggleHighlight(data, payload, state) {\n        var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n        if (dataIndex != null) {\n            zrUtil.each(modelUtil.normalizeToArray(dataIndex), function (dataIdx) {\n                elSetState(data.getItemGraphicEl(dataIdx), state);\n            });\n        }\n        else {\n            data.eachItemGraphicEl(function (el) {\n                elSetState(el, state);\n            });\n        }\n    }\n\n    // Enable Chart.extend.\n    clazzUtil.enableClassExtend(Chart, ['dispose']);\n\n    // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(Chart, {registerWhenExtend: true});\n\n    module.exports = Chart;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/view/Chart.js\n// module id = 535\n// module chunks = 0 1 2","\n\n    var Group = require('zrender/lib/container/Group');\n    var componentUtil = require('../util/component');\n    var clazzUtil = require('../util/clazz');\n\n    var Component = function () {\n        /**\n         * @type {module:zrender/container/Group}\n         * @readOnly\n         */\n        this.group = new Group();\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        this.uid = componentUtil.getUID('viewComponent');\n    };\n\n    Component.prototype = {\n\n        constructor: Component,\n\n        init: function (ecModel, api) {},\n\n        render: function (componentModel, ecModel, api, payload) {},\n\n        dispose: function () {}\n\n    };\n\n    var componentProto = Component.prototype;\n    componentProto.updateView\n        = componentProto.updateLayout\n        = componentProto.updateVisual\n        = function (seriesModel, ecModel, api, payload) {\n            // Do nothing;\n        };\n    // Enable Component.extend.\n    clazzUtil.enableClassExtend(Component);\n\n    // Enable capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(Component, {registerWhenExtend: true});\n\n    module.exports = Component;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/view/Component.js\n// module id = 536\n// module chunks = 0 1 2","'use strict';\n\nvar replace = String.prototype.replace;\nvar percentTwenties = /%20/g;\n\nmodule.exports = {\n    'default': 'RFC3986',\n    formatters: {\n        RFC1738: function (value) {\n            return replace.call(value, percentTwenties, '+');\n        },\n        RFC3986: function (value) {\n            return value;\n        }\n    },\n    RFC1738: 'RFC1738',\n    RFC3986: 'RFC3986'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/qs/lib/formats.js\n// module id = 537\n// module chunks = 1 3 5","'use strict';\n\nvar has = Object.prototype.hasOwnProperty;\n\nvar hexTable = (function () {\n    var array = [];\n    for (var i = 0; i < 256; ++i) {\n        array.push('%' + ((i < 16 ? '0' : '') + i.toString(16)).toUpperCase());\n    }\n\n    return array;\n}());\n\nexports.arrayToObject = function (source, options) {\n    var obj = options && options.plainObjects ? Object.create(null) : {};\n    for (var i = 0; i < source.length; ++i) {\n        if (typeof source[i] !== 'undefined') {\n            obj[i] = source[i];\n        }\n    }\n\n    return obj;\n};\n\nexports.merge = function (target, source, options) {\n    if (!source) {\n        return target;\n    }\n\n    if (typeof source !== 'object') {\n        if (Array.isArray(target)) {\n            target.push(source);\n        } else if (typeof target === 'object') {\n            if (options.plainObjects || options.allowPrototypes || !has.call(Object.prototype, source)) {\n                target[source] = true;\n            }\n        } else {\n            return [target, source];\n        }\n\n        return target;\n    }\n\n    if (typeof target !== 'object') {\n        return [target].concat(source);\n    }\n\n    var mergeTarget = target;\n    if (Array.isArray(target) && !Array.isArray(source)) {\n        mergeTarget = exports.arrayToObject(target, options);\n    }\n\n    if (Array.isArray(target) && Array.isArray(source)) {\n        source.forEach(function (item, i) {\n            if (has.call(target, i)) {\n                if (target[i] && typeof target[i] === 'object') {\n                    target[i] = exports.merge(target[i], item, options);\n                } else {\n                    target.push(item);\n                }\n            } else {\n                target[i] = item;\n            }\n        });\n        return target;\n    }\n\n    return Object.keys(source).reduce(function (acc, key) {\n        var value = source[key];\n\n        if (Object.prototype.hasOwnProperty.call(acc, key)) {\n            acc[key] = exports.merge(acc[key], value, options);\n        } else {\n            acc[key] = value;\n        }\n        return acc;\n    }, mergeTarget);\n};\n\nexports.decode = function (str) {\n    try {\n        return decodeURIComponent(str.replace(/\\+/g, ' '));\n    } catch (e) {\n        return str;\n    }\n};\n\nexports.encode = function (str) {\n    // This code was originally written by Brian White (mscdex) for the io.js core querystring library.\n    // It has been adapted here for stricter adherence to RFC 3986\n    if (str.length === 0) {\n        return str;\n    }\n\n    var string = typeof str === 'string' ? str : String(str);\n\n    var out = '';\n    for (var i = 0; i < string.length; ++i) {\n        var c = string.charCodeAt(i);\n\n        if (\n            c === 0x2D || // -\n            c === 0x2E || // .\n            c === 0x5F || // _\n            c === 0x7E || // ~\n            (c >= 0x30 && c <= 0x39) || // 0-9\n            (c >= 0x41 && c <= 0x5A) || // a-z\n            (c >= 0x61 && c <= 0x7A) // A-Z\n        ) {\n            out += string.charAt(i);\n            continue;\n        }\n\n        if (c < 0x80) {\n            out = out + hexTable[c];\n            continue;\n        }\n\n        if (c < 0x800) {\n            out = out + (hexTable[0xC0 | (c >> 6)] + hexTable[0x80 | (c & 0x3F)]);\n            continue;\n        }\n\n        if (c < 0xD800 || c >= 0xE000) {\n            out = out + (hexTable[0xE0 | (c >> 12)] + hexTable[0x80 | ((c >> 6) & 0x3F)] + hexTable[0x80 | (c & 0x3F)]);\n            continue;\n        }\n\n        i += 1;\n        c = 0x10000 + (((c & 0x3FF) << 10) | (string.charCodeAt(i) & 0x3FF));\n        out += hexTable[0xF0 | (c >> 18)] + hexTable[0x80 | ((c >> 12) & 0x3F)] + hexTable[0x80 | ((c >> 6) & 0x3F)] + hexTable[0x80 | (c & 0x3F)]; // eslint-disable-line max-len\n    }\n\n    return out;\n};\n\nexports.compact = function (obj, references) {\n    if (typeof obj !== 'object' || obj === null) {\n        return obj;\n    }\n\n    var refs = references || [];\n    var lookup = refs.indexOf(obj);\n    if (lookup !== -1) {\n        return refs[lookup];\n    }\n\n    refs.push(obj);\n\n    if (Array.isArray(obj)) {\n        var compacted = [];\n\n        for (var i = 0; i < obj.length; ++i) {\n            if (obj[i] && typeof obj[i] === 'object') {\n                compacted.push(exports.compact(obj[i], refs));\n            } else if (typeof obj[i] !== 'undefined') {\n                compacted.push(obj[i]);\n            }\n        }\n\n        return compacted;\n    }\n\n    var keys = Object.keys(obj);\n    keys.forEach(function (key) {\n        obj[key] = exports.compact(obj[key], refs);\n    });\n\n    return obj;\n};\n\nexports.isRegExp = function (obj) {\n    return Object.prototype.toString.call(obj) === '[object RegExp]';\n};\n\nexports.isBuffer = function (obj) {\n    if (obj === null || typeof obj === 'undefined') {\n        return false;\n    }\n\n    return !!(obj.constructor && obj.constructor.isBuffer && obj.constructor.isBuffer(obj));\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/qs/lib/utils.js\n// module id = 538\n// module chunks = 1 3 5","'use strict';\n/**\n * @module zrender/Element\n */\n\n\n    var guid = require('./core/guid');\n    var Eventful = require('./mixin/Eventful');\n    var Transformable = require('./mixin/Transformable');\n    var Animatable = require('./mixin/Animatable');\n    var zrUtil = require('./core/util');\n\n    /**\n     * @alias module:zrender/Element\n     * @constructor\n     * @extends {module:zrender/mixin/Animatable}\n     * @extends {module:zrender/mixin/Transformable}\n     * @extends {module:zrender/mixin/Eventful}\n     */\n    var Element = function (opts) {\n\n        Transformable.call(this, opts);\n        Eventful.call(this, opts);\n        Animatable.call(this, opts);\n\n        /**\n         * 画布元素ID\n         * @type {string}\n         */\n        this.id = opts.id || guid();\n    };\n\n    Element.prototype = {\n\n        /**\n         * 元素类型\n         * Element type\n         * @type {string}\n         */\n        type: 'element',\n\n        /**\n         * 元素名字\n         * Element name\n         * @type {string}\n         */\n        name: '',\n\n        /**\n         * ZRender 实例对象，会在 element 添加到 zrender 实例中后自动赋值\n         * ZRender instance will be assigned when element is associated with zrender\n         * @name module:/zrender/Element#__zr\n         * @type {module:zrender/ZRender}\n         */\n        __zr: null,\n\n        /**\n         * 图形是否忽略，为true时忽略图形的绘制以及事件触发\n         * If ignore drawing and events of the element object\n         * @name module:/zrender/Element#ignore\n         * @type {boolean}\n         * @default false\n         */\n        ignore: false,\n\n        /**\n         * 用于裁剪的路径(shape)，所有 Group 内的路径在绘制时都会被这个路径裁剪\n         * 该路径会继承被裁减对象的变换\n         * @type {module:zrender/graphic/Path}\n         * @see http://www.w3.org/TR/2dcontext/#clipping-region\n         * @readOnly\n         */\n        clipPath: null,\n\n        /**\n         * Drift element\n         * @param  {number} dx dx on the global space\n         * @param  {number} dy dy on the global space\n         */\n        drift: function (dx, dy) {\n            switch (this.draggable) {\n                case 'horizontal':\n                    dy = 0;\n                    break;\n                case 'vertical':\n                    dx = 0;\n                    break;\n            }\n\n            var m = this.transform;\n            if (!m) {\n                m = this.transform = [1, 0, 0, 1, 0, 0];\n            }\n            m[4] += dx;\n            m[5] += dy;\n\n            this.decomposeTransform();\n            this.dirty(false);\n        },\n\n        /**\n         * Hook before update\n         */\n        beforeUpdate: function () {},\n        /**\n         * Hook after update\n         */\n        afterUpdate: function () {},\n        /**\n         * Update each frame\n         */\n        update: function () {\n            this.updateTransform();\n        },\n\n        /**\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        traverse: function (cb, context) {},\n\n        /**\n         * @protected\n         */\n        attrKV: function (key, value) {\n            if (key === 'position' || key === 'scale' || key === 'origin') {\n                // Copy the array\n                if (value) {\n                    var target = this[key];\n                    if (!target) {\n                        target = this[key] = [];\n                    }\n                    target[0] = value[0];\n                    target[1] = value[1];\n                }\n            }\n            else {\n                this[key] = value;\n            }\n        },\n\n        /**\n         * Hide the element\n         */\n        hide: function () {\n            this.ignore = true;\n            this.__zr && this.__zr.refresh();\n        },\n\n        /**\n         * Show the element\n         */\n        show: function () {\n            this.ignore = false;\n            this.__zr && this.__zr.refresh();\n        },\n\n        /**\n         * @param {string|Object} key\n         * @param {*} value\n         */\n        attr: function (key, value) {\n            if (typeof key === 'string') {\n                this.attrKV(key, value);\n            }\n            else if (zrUtil.isObject(key)) {\n                for (var name in key) {\n                    if (key.hasOwnProperty(name)) {\n                        this.attrKV(name, key[name]);\n                    }\n                }\n            }\n\n            this.dirty(false);\n\n            return this;\n        },\n\n        /**\n         * @param {module:zrender/graphic/Path} clipPath\n         */\n        setClipPath: function (clipPath) {\n            var zr = this.__zr;\n            if (zr) {\n                clipPath.addSelfToZr(zr);\n            }\n\n            // Remove previous clip path\n            if (this.clipPath && this.clipPath !== clipPath) {\n                this.removeClipPath();\n            }\n\n            this.clipPath = clipPath;\n            clipPath.__zr = zr;\n            clipPath.__clipTarget = this;\n\n            this.dirty(false);\n        },\n\n        /**\n         */\n        removeClipPath: function () {\n            var clipPath = this.clipPath;\n            if (clipPath) {\n                if (clipPath.__zr) {\n                    clipPath.removeSelfFromZr(clipPath.__zr);\n                }\n\n                clipPath.__zr = null;\n                clipPath.__clipTarget = null;\n                this.clipPath = null;\n\n                this.dirty(false);\n            }\n        },\n\n        /**\n         * Add self from zrender instance.\n         * Not recursively because it will be invoked when element added to storage.\n         * @param {module:zrender/ZRender} zr\n         */\n        addSelfToZr: function (zr) {\n            this.__zr = zr;\n            // 添加动画\n            var animators = this.animators;\n            if (animators) {\n                for (var i = 0; i < animators.length; i++) {\n                    zr.animation.addAnimator(animators[i]);\n                }\n            }\n\n            if (this.clipPath) {\n                this.clipPath.addSelfToZr(zr);\n            }\n        },\n\n        /**\n         * Remove self from zrender instance.\n         * Not recursively because it will be invoked when element added to storage.\n         * @param {module:zrender/ZRender} zr\n         */\n        removeSelfFromZr: function (zr) {\n            this.__zr = null;\n            // 移除动画\n            var animators = this.animators;\n            if (animators) {\n                for (var i = 0; i < animators.length; i++) {\n                    zr.animation.removeAnimator(animators[i]);\n                }\n            }\n\n            if (this.clipPath) {\n                this.clipPath.removeSelfFromZr(zr);\n            }\n        }\n    };\n\n    zrUtil.mixin(Element, Animatable);\n    zrUtil.mixin(Element, Transformable);\n    zrUtil.mixin(Element, Eventful);\n\n    module.exports = Element;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/Element.js\n// module id = 539\n// module chunks = 0 1 2","/**\n * @module echarts/animation/Animator\n */\n\n\n    var Clip = require('./Clip');\n    var color = require('../tool/color');\n    var util = require('../core/util');\n    var isArrayLike = util.isArrayLike;\n\n    var arraySlice = Array.prototype.slice;\n\n    function defaultGetter(target, key) {\n        return target[key];\n    }\n\n    function defaultSetter(target, key, value) {\n        target[key] = value;\n    }\n\n    /**\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} percent\n     * @return {number}\n     */\n    function interpolateNumber(p0, p1, percent) {\n        return (p1 - p0) * percent + p0;\n    }\n\n    /**\n     * @param  {string} p0\n     * @param  {string} p1\n     * @param  {number} percent\n     * @return {string}\n     */\n    function interpolateString(p0, p1, percent) {\n        return percent > 0.5 ? p1 : p0;\n    }\n\n    /**\n     * @param  {Array} p0\n     * @param  {Array} p1\n     * @param  {number} percent\n     * @param  {Array} out\n     * @param  {number} arrDim\n     */\n    function interpolateArray(p0, p1, percent, out, arrDim) {\n        var len = p0.length;\n        if (arrDim == 1) {\n            for (var i = 0; i < len; i++) {\n                out[i] = interpolateNumber(p0[i], p1[i], percent);\n            }\n        }\n        else {\n            var len2 = len && p0[0].length;\n            for (var i = 0; i < len; i++) {\n                for (var j = 0; j < len2; j++) {\n                    out[i][j] = interpolateNumber(\n                        p0[i][j], p1[i][j], percent\n                    );\n                }\n            }\n        }\n    }\n\n    // arr0 is source array, arr1 is target array.\n    // Do some preprocess to avoid error happened when interpolating from arr0 to arr1\n    function fillArr(arr0, arr1, arrDim) {\n        var arr0Len = arr0.length;\n        var arr1Len = arr1.length;\n        if (arr0Len !== arr1Len) {\n            // FIXME Not work for TypedArray\n            var isPreviousLarger = arr0Len > arr1Len;\n            if (isPreviousLarger) {\n                // Cut the previous\n                arr0.length = arr1Len;\n            }\n            else {\n                // Fill the previous\n                for (var i = arr0Len; i < arr1Len; i++) {\n                    arr0.push(\n                        arrDim === 1 ? arr1[i] : arraySlice.call(arr1[i])\n                    );\n                }\n            }\n        }\n        // Handling NaN value\n        var len2 = arr0[0] && arr0[0].length;\n        for (var i = 0; i < arr0.length; i++) {\n            if (arrDim === 1) {\n                if (isNaN(arr0[i])) {\n                    arr0[i] = arr1[i];\n                }\n            }\n            else {\n                for (var j = 0; j < len2; j++) {\n                    if (isNaN(arr0[i][j])) {\n                        arr0[i][j] = arr1[i][j];\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @param  {Array} arr0\n     * @param  {Array} arr1\n     * @param  {number} arrDim\n     * @return {boolean}\n     */\n    function isArraySame(arr0, arr1, arrDim) {\n        if (arr0 === arr1) {\n            return true;\n        }\n        var len = arr0.length;\n        if (len !== arr1.length) {\n            return false;\n        }\n        if (arrDim === 1) {\n            for (var i = 0; i < len; i++) {\n                if (arr0[i] !== arr1[i]) {\n                    return false;\n                }\n            }\n        }\n        else {\n            var len2 = arr0[0].length;\n            for (var i = 0; i < len; i++) {\n                for (var j = 0; j < len2; j++) {\n                    if (arr0[i][j] !== arr1[i][j]) {\n                        return false;\n                    }\n                }\n            }\n        }\n        return true;\n    }\n\n    /**\n     * Catmull Rom interpolate array\n     * @param  {Array} p0\n     * @param  {Array} p1\n     * @param  {Array} p2\n     * @param  {Array} p3\n     * @param  {number} t\n     * @param  {number} t2\n     * @param  {number} t3\n     * @param  {Array} out\n     * @param  {number} arrDim\n     */\n    function catmullRomInterpolateArray(\n        p0, p1, p2, p3, t, t2, t3, out, arrDim\n    ) {\n        var len = p0.length;\n        if (arrDim == 1) {\n            for (var i = 0; i < len; i++) {\n                out[i] = catmullRomInterpolate(\n                    p0[i], p1[i], p2[i], p3[i], t, t2, t3\n                );\n            }\n        }\n        else {\n            var len2 = p0[0].length;\n            for (var i = 0; i < len; i++) {\n                for (var j = 0; j < len2; j++) {\n                    out[i][j] = catmullRomInterpolate(\n                        p0[i][j], p1[i][j], p2[i][j], p3[i][j],\n                        t, t2, t3\n                    );\n                }\n            }\n        }\n    }\n\n    /**\n     * Catmull Rom interpolate number\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @param  {number} t2\n     * @param  {number} t3\n     * @return {number}\n     */\n    function catmullRomInterpolate(p0, p1, p2, p3, t, t2, t3) {\n        var v0 = (p2 - p0) * 0.5;\n        var v1 = (p3 - p1) * 0.5;\n        return (2 * (p1 - p2) + v0 + v1) * t3\n                + (-3 * (p1 - p2) - 2 * v0 - v1) * t2\n                + v0 * t + p1;\n    }\n\n    function cloneValue(value) {\n        if (isArrayLike(value)) {\n            var len = value.length;\n            if (isArrayLike(value[0])) {\n                var ret = [];\n                for (var i = 0; i < len; i++) {\n                    ret.push(arraySlice.call(value[i]));\n                }\n                return ret;\n            }\n\n            return arraySlice.call(value);\n        }\n\n        return value;\n    }\n\n    function rgba2String(rgba) {\n        rgba[0] = Math.floor(rgba[0]);\n        rgba[1] = Math.floor(rgba[1]);\n        rgba[2] = Math.floor(rgba[2]);\n\n        return 'rgba(' + rgba.join(',') + ')';\n    }\n\n    function getArrayDim(keyframes) {\n        var lastValue = keyframes[keyframes.length - 1].value;\n        return isArrayLike(lastValue && lastValue[0]) ? 2 : 1;\n    }\n\n    function createTrackClip (animator, easing, oneTrackDone, keyframes, propName) {\n        var getter = animator._getter;\n        var setter = animator._setter;\n        var useSpline = easing === 'spline';\n\n        var trackLen = keyframes.length;\n        if (!trackLen) {\n            return;\n        }\n        // Guess data type\n        var firstVal = keyframes[0].value;\n        var isValueArray = isArrayLike(firstVal);\n        var isValueColor = false;\n        var isValueString = false;\n\n        // For vertices morphing\n        var arrDim = isValueArray ? getArrayDim(keyframes) : 0;\n\n        var trackMaxTime;\n        // Sort keyframe as ascending\n        keyframes.sort(function(a, b) {\n            return a.time - b.time;\n        });\n\n        trackMaxTime = keyframes[trackLen - 1].time;\n        // Percents of each keyframe\n        var kfPercents = [];\n        // Value of each keyframe\n        var kfValues = [];\n        var prevValue = keyframes[0].value;\n        var isAllValueEqual = true;\n        for (var i = 0; i < trackLen; i++) {\n            kfPercents.push(keyframes[i].time / trackMaxTime);\n            // Assume value is a color when it is a string\n            var value = keyframes[i].value;\n\n            // Check if value is equal, deep check if value is array\n            if (!((isValueArray && isArraySame(value, prevValue, arrDim))\n                || (!isValueArray && value === prevValue))) {\n                isAllValueEqual = false;\n            }\n            prevValue = value;\n\n            // Try converting a string to a color array\n            if (typeof value == 'string') {\n                var colorArray = color.parse(value);\n                if (colorArray) {\n                    value = colorArray;\n                    isValueColor = true;\n                }\n                else {\n                    isValueString = true;\n                }\n            }\n            kfValues.push(value);\n        }\n        if (isAllValueEqual) {\n            return;\n        }\n\n        var lastValue = kfValues[trackLen - 1];\n        // Polyfill array and NaN value\n        for (var i = 0; i < trackLen - 1; i++) {\n            if (isValueArray) {\n                fillArr(kfValues[i], lastValue, arrDim);\n            }\n            else {\n                if (isNaN(kfValues[i]) && !isNaN(lastValue) && !isValueString && !isValueColor) {\n                    kfValues[i] = lastValue;\n                }\n            }\n        }\n        isValueArray && fillArr(getter(animator._target, propName), lastValue, arrDim);\n\n        // Cache the key of last frame to speed up when\n        // animation playback is sequency\n        var lastFrame = 0;\n        var lastFramePercent = 0;\n        var start;\n        var w;\n        var p0;\n        var p1;\n        var p2;\n        var p3;\n\n        if (isValueColor) {\n            var rgba = [0, 0, 0, 0];\n        }\n\n        var onframe = function (target, percent) {\n            // Find the range keyframes\n            // kf1-----kf2---------current--------kf3\n            // find kf2 and kf3 and do interpolation\n            var frame;\n            // In the easing function like elasticOut, percent may less than 0\n            if (percent < 0) {\n                frame = 0;\n            }\n            else if (percent < lastFramePercent) {\n                // Start from next key\n                // PENDING start from lastFrame ?\n                start = Math.min(lastFrame + 1, trackLen - 1);\n                for (frame = start; frame >= 0; frame--) {\n                    if (kfPercents[frame] <= percent) {\n                        break;\n                    }\n                }\n                // PENDING really need to do this ?\n                frame = Math.min(frame, trackLen - 2);\n            }\n            else {\n                for (frame = lastFrame; frame < trackLen; frame++) {\n                    if (kfPercents[frame] > percent) {\n                        break;\n                    }\n                }\n                frame = Math.min(frame - 1, trackLen - 2);\n            }\n            lastFrame = frame;\n            lastFramePercent = percent;\n\n            var range = (kfPercents[frame + 1] - kfPercents[frame]);\n            if (range === 0) {\n                return;\n            }\n            else {\n                w = (percent - kfPercents[frame]) / range;\n            }\n            if (useSpline) {\n                p1 = kfValues[frame];\n                p0 = kfValues[frame === 0 ? frame : frame - 1];\n                p2 = kfValues[frame > trackLen - 2 ? trackLen - 1 : frame + 1];\n                p3 = kfValues[frame > trackLen - 3 ? trackLen - 1 : frame + 2];\n                if (isValueArray) {\n                    catmullRomInterpolateArray(\n                        p0, p1, p2, p3, w, w * w, w * w * w,\n                        getter(target, propName),\n                        arrDim\n                    );\n                }\n                else {\n                    var value;\n                    if (isValueColor) {\n                        value = catmullRomInterpolateArray(\n                            p0, p1, p2, p3, w, w * w, w * w * w,\n                            rgba, 1\n                        );\n                        value = rgba2String(rgba);\n                    }\n                    else if (isValueString) {\n                        // String is step(0.5)\n                        return interpolateString(p1, p2, w);\n                    }\n                    else {\n                        value = catmullRomInterpolate(\n                            p0, p1, p2, p3, w, w * w, w * w * w\n                        );\n                    }\n                    setter(\n                        target,\n                        propName,\n                        value\n                    );\n                }\n            }\n            else {\n                if (isValueArray) {\n                    interpolateArray(\n                        kfValues[frame], kfValues[frame + 1], w,\n                        getter(target, propName),\n                        arrDim\n                    );\n                }\n                else {\n                    var value;\n                    if (isValueColor) {\n                        interpolateArray(\n                            kfValues[frame], kfValues[frame + 1], w,\n                            rgba, 1\n                        );\n                        value = rgba2String(rgba);\n                    }\n                    else if (isValueString) {\n                        // String is step(0.5)\n                        return interpolateString(kfValues[frame], kfValues[frame + 1], w);\n                    }\n                    else {\n                        value = interpolateNumber(kfValues[frame], kfValues[frame + 1], w);\n                    }\n                    setter(\n                        target,\n                        propName,\n                        value\n                    );\n                }\n            }\n        };\n\n        var clip = new Clip({\n            target: animator._target,\n            life: trackMaxTime,\n            loop: animator._loop,\n            delay: animator._delay,\n            onframe: onframe,\n            ondestroy: oneTrackDone\n        });\n\n        if (easing && easing !== 'spline') {\n            clip.easing = easing;\n        }\n\n        return clip;\n    }\n\n    /**\n     * @alias module:zrender/animation/Animator\n     * @constructor\n     * @param {Object} target\n     * @param {boolean} loop\n     * @param {Function} getter\n     * @param {Function} setter\n     */\n    var Animator = function(target, loop, getter, setter) {\n        this._tracks = {};\n        this._target = target;\n\n        this._loop = loop || false;\n\n        this._getter = getter || defaultGetter;\n        this._setter = setter || defaultSetter;\n\n        this._clipCount = 0;\n\n        this._delay = 0;\n\n        this._doneList = [];\n\n        this._onframeList = [];\n\n        this._clipList = [];\n    };\n\n    Animator.prototype = {\n        /**\n         * 设置动画关键帧\n         * @param  {number} time 关键帧时间，单位是ms\n         * @param  {Object} props 关键帧的属性值，key-value表示\n         * @return {module:zrender/animation/Animator}\n         */\n        when: function(time /* ms */, props) {\n            var tracks = this._tracks;\n            for (var propName in props) {\n                if (!props.hasOwnProperty(propName)) {\n                    continue;\n                }\n\n                if (!tracks[propName]) {\n                    tracks[propName] = [];\n                    // Invalid value\n                    var value = this._getter(this._target, propName);\n                    if (value == null) {\n                        // zrLog('Invalid property ' + propName);\n                        continue;\n                    }\n                    // If time is 0\n                    //  Then props is given initialize value\n                    // Else\n                    //  Initialize value from current prop value\n                    if (time !== 0) {\n                        tracks[propName].push({\n                            time: 0,\n                            value: cloneValue(value)\n                        });\n                    }\n                }\n                tracks[propName].push({\n                    time: time,\n                    value: props[propName]\n                });\n            }\n            return this;\n        },\n        /**\n         * 添加动画每一帧的回调函数\n         * @param  {Function} callback\n         * @return {module:zrender/animation/Animator}\n         */\n        during: function (callback) {\n            this._onframeList.push(callback);\n            return this;\n        },\n\n        pause: function () {\n            for (var i = 0; i < this._clipList.length; i++) {\n                this._clipList[i].pause();\n            }\n            this._paused = true;\n        },\n\n        resume: function () {\n            for (var i = 0; i < this._clipList.length; i++) {\n                this._clipList[i].resume();\n            }\n            this._paused = false;\n        },\n\n        isPaused: function () {\n            return !!this._paused;\n        },\n\n        _doneCallback: function () {\n            // Clear all tracks\n            this._tracks = {};\n            // Clear all clips\n            this._clipList.length = 0;\n\n            var doneList = this._doneList;\n            var len = doneList.length;\n            for (var i = 0; i < len; i++) {\n                doneList[i].call(this);\n            }\n        },\n        /**\n         * 开始执行动画\n         * @param  {string|Function} easing\n         *         动画缓动函数，详见{@link module:zrender/animation/easing}\n         * @return {module:zrender/animation/Animator}\n         */\n        start: function (easing) {\n\n            var self = this;\n            var clipCount = 0;\n\n            var oneTrackDone = function() {\n                clipCount--;\n                if (!clipCount) {\n                    self._doneCallback();\n                }\n            };\n\n            var lastClip;\n            for (var propName in this._tracks) {\n                if (!this._tracks.hasOwnProperty(propName)) {\n                    continue;\n                }\n                var clip = createTrackClip(\n                    this, easing, oneTrackDone,\n                    this._tracks[propName], propName\n                );\n                if (clip) {\n                    this._clipList.push(clip);\n                    clipCount++;\n\n                    // If start after added to animation\n                    if (this.animation) {\n                        this.animation.addClip(clip);\n                    }\n\n                    lastClip = clip;\n                }\n            }\n\n            // Add during callback on the last clip\n            if (lastClip) {\n                var oldOnFrame = lastClip.onframe;\n                lastClip.onframe = function (target, percent) {\n                    oldOnFrame(target, percent);\n\n                    for (var i = 0; i < self._onframeList.length; i++) {\n                        self._onframeList[i](target, percent);\n                    }\n                };\n            }\n\n            if (!clipCount) {\n                this._doneCallback();\n            }\n            return this;\n        },\n        /**\n         * 停止动画\n         * @param {boolean} forwardToLast If move to last frame before stop\n         */\n        stop: function (forwardToLast) {\n            var clipList = this._clipList;\n            var animation = this.animation;\n            for (var i = 0; i < clipList.length; i++) {\n                var clip = clipList[i];\n                if (forwardToLast) {\n                    // Move to last frame before stop\n                    clip.onframe(this._target, 1);\n                }\n                animation && animation.removeClip(clip);\n            }\n            clipList.length = 0;\n        },\n        /**\n         * 设置动画延迟开始的时间\n         * @param  {number} time 单位ms\n         * @return {module:zrender/animation/Animator}\n         */\n        delay: function (time) {\n            this._delay = time;\n            return this;\n        },\n        /**\n         * 添加动画结束的回调\n         * @param  {Function} cb\n         * @return {module:zrender/animation/Animator}\n         */\n        done: function(cb) {\n            if (cb) {\n                this._doneList.push(cb);\n            }\n            return this;\n        },\n\n        /**\n         * @return {Array.<module:zrender/animation/Clip>}\n         */\n        getClips: function () {\n            return this._clipList;\n        }\n    };\n\n    module.exports = Animator;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/animation/Animator.js\n// module id = 540\n// module chunks = 0 1 2","\n\n    module.exports = (typeof window !== 'undefined' &&\n                ((window.requestAnimationFrame && window.requestAnimationFrame.bind(window))\n                // https://github.com/ecomfe/zrender/issues/189#issuecomment-224919809\n                || (window.msRequestAnimationFrame && window.msRequestAnimationFrame.bind(window))\n                || window.mozRequestAnimationFrame\n                || window.webkitRequestAnimationFrame)\n            )\n            || function (func) {\n                setTimeout(func, 16);\n            };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/animation/requestAnimationFrame.js\n// module id = 541\n// module chunks = 0 1 2","\n\n    var PI2 = Math.PI * 2;\n    module.exports = {\n        normalizeRadian: function(angle) {\n            angle %= PI2;\n            if (angle < 0) {\n                angle += PI2;\n            }\n            return angle;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/util.js\n// module id = 542\n// module chunks = 0 1 2","// Simple LRU cache use doubly linked list\n// @module zrender/core/LRU\n\n\n    /**\n     * Simple double linked list. Compared with array, it has O(1) remove operation.\n     * @constructor\n     */\n    var LinkedList = function () {\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.head = null;\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.tail = null;\n\n        this._len = 0;\n    };\n\n    var linkedListProto = LinkedList.prototype;\n    /**\n     * Insert a new value at the tail\n     * @param  {} val\n     * @return {module:zrender/core/LRU~Entry}\n     */\n    linkedListProto.insert = function (val) {\n        var entry = new Entry(val);\n        this.insertEntry(entry);\n        return entry;\n    };\n\n    /**\n     * Insert an entry at the tail\n     * @param  {module:zrender/core/LRU~Entry} entry\n     */\n    linkedListProto.insertEntry = function (entry) {\n        if (!this.head) {\n            this.head = this.tail = entry;\n        }\n        else {\n            this.tail.next = entry;\n            entry.prev = this.tail;\n            entry.next = null;\n            this.tail = entry;\n        }\n        this._len++;\n    };\n\n    /**\n     * Remove entry.\n     * @param  {module:zrender/core/LRU~Entry} entry\n     */\n    linkedListProto.remove = function (entry) {\n        var prev = entry.prev;\n        var next = entry.next;\n        if (prev) {\n            prev.next = next;\n        }\n        else {\n            // Is head\n            this.head = next;\n        }\n        if (next) {\n            next.prev = prev;\n        }\n        else {\n            // Is tail\n            this.tail = prev;\n        }\n        entry.next = entry.prev = null;\n        this._len--;\n    };\n\n    /**\n     * @return {number}\n     */\n    linkedListProto.len = function () {\n        return this._len;\n    };\n\n    /**\n     * Clear list\n     */\n    linkedListProto.clear = function () {\n        this.head = this.tail = null;\n        this._len = 0;\n    };\n\n    /**\n     * @constructor\n     * @param {} val\n     */\n    var Entry = function (val) {\n        /**\n         * @type {}\n         */\n        this.value = val;\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.next;\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.prev;\n    };\n\n    /**\n     * LRU Cache\n     * @constructor\n     * @alias module:zrender/core/LRU\n     */\n    var LRU = function (maxSize) {\n\n        this._list = new LinkedList();\n\n        this._map = {};\n\n        this._maxSize = maxSize || 10;\n\n        this._lastRemovedEntry = null;\n    };\n\n    var LRUProto = LRU.prototype;\n\n    /**\n     * @param  {string} key\n     * @param  {} value\n     * @return {} Removed value\n     */\n    LRUProto.put = function (key, value) {\n        var list = this._list;\n        var map = this._map;\n        var removed = null;\n        if (map[key] == null) {\n            var len = list.len();\n            // Reuse last removed entry\n            var entry = this._lastRemovedEntry;\n\n            if (len >= this._maxSize && len > 0) {\n                // Remove the least recently used\n                var leastUsedEntry = list.head;\n                list.remove(leastUsedEntry);\n                delete map[leastUsedEntry.key];\n\n                removed = leastUsedEntry.value;\n                this._lastRemovedEntry = leastUsedEntry;\n            }\n\n            if (entry) {\n                entry.value = value;\n            }\n            else {\n                entry = new Entry(value);\n            }\n            entry.key = key;\n            list.insertEntry(entry);\n            map[key] = entry;\n        }\n\n        return removed;\n    };\n\n    /**\n     * @param  {string} key\n     * @return {}\n     */\n    LRUProto.get = function (key) {\n        var entry = this._map[key];\n        var list = this._list;\n        if (entry != null) {\n            // Put the latest used entry in the tail\n            if (entry !== list.tail) {\n                list.remove(entry);\n                list.insertEntry(entry);\n            }\n\n            return entry.value;\n        }\n    };\n\n    /**\n     * Clear the cache\n     */\n    LRUProto.clear = function () {\n        this._list.clear();\n        this._map = {};\n    };\n\n    module.exports = LRU;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/LRU.js\n// module id = 543\n// module chunks = 0 1 2","/**\n * zrender: 生成唯一id\n *\n * @author errorrik (errorrik@gmail.com)\n */\n\n\n    var idStart = 0x0907;\n\n    module.exports = function () {\n        return idStart++;\n    };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/guid.js\n// module id = 544\n// module chunks = 0 1 2","\n        var config = require('../config');\n\n        /**\n         * @exports zrender/tool/log\n         * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n         */\n        module.exports = function() {\n            if (config.debugMode === 0) {\n                return;\n            }\n            else if (config.debugMode == 1) {\n                for (var k in arguments) {\n                    throw new Error(arguments[k]);\n                }\n            }\n            else if (config.debugMode > 1) {\n                for (var k in arguments) {\n                    console.log(arguments[k]);\n                }\n            }\n        };\n\n        /* for debug\n        return function(mes) {\n            document.getElementById('wrong-message').innerHTML =\n                mes + ' ' + (new Date() - 0)\n                + '<br/>'\n                + document.getElementById('wrong-message').innerHTML;\n        };\n        */\n    \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/log.js\n// module id = 545\n// module chunks = 0 1 2","/**\n * Image element\n * @module zrender/graphic/Image\n */\n\n\n\n    var Displayable = require('./Displayable');\n    var BoundingRect = require('../core/BoundingRect');\n    var zrUtil = require('../core/util');\n\n    var LRU = require('../core/LRU');\n    var globalImageCache = new LRU(50);\n    /**\n     * @alias zrender/graphic/Image\n     * @extends module:zrender/graphic/Displayable\n     * @constructor\n     * @param {Object} opts\n     */\n    function ZImage(opts) {\n        Displayable.call(this, opts);\n    }\n\n    ZImage.prototype = {\n\n        constructor: ZImage,\n\n        type: 'image',\n\n        brush: function (ctx, prevEl) {\n            var style = this.style;\n            var src = style.image;\n            var image;\n\n            // Must bind each time\n            style.bind(ctx, this, prevEl);\n            // style.image is a url string\n            if (typeof src === 'string') {\n                image = this._image;\n            }\n            // style.image is an HTMLImageElement or HTMLCanvasElement or Canvas\n            else {\n                image = src;\n            }\n            // FIXME Case create many images with src\n            if (!image && src) {\n                // Try get from global image cache\n                var cachedImgObj = globalImageCache.get(src);\n                if (!cachedImgObj) {\n                    // Create a new image\n                    image = new Image();\n                    image.onload = function () {\n                        image.onload = null;\n                        for (var i = 0; i < cachedImgObj.pending.length; i++) {\n                            cachedImgObj.pending[i].dirty();\n                        }\n                    };\n                    cachedImgObj = {\n                        image: image,\n                        pending: [this]\n                    };\n                    image.src = src;\n                    globalImageCache.put(src, cachedImgObj);\n                    this._image = image;\n                    return;\n                }\n                else {\n                    image = cachedImgObj.image;\n                    this._image = image;\n                    // Image is not complete finish, add to pending list\n                    if (!image.width || !image.height) {\n                        cachedImgObj.pending.push(this);\n                        return;\n                    }\n                }\n            }\n\n            if (image) {\n                // 图片已经加载完成\n                // if (image.nodeName.toUpperCase() == 'IMG') {\n                //     if (!image.complete) {\n                //         return;\n                //     }\n                // }\n                // Else is canvas\n\n                var x = style.x || 0;\n                var y = style.y || 0;\n                // 图片加载失败\n                if (!image.width || !image.height) {\n                    return;\n                }\n                var width = style.width;\n                var height = style.height;\n                var aspect = image.width / image.height;\n                if (width == null && height != null) {\n                    // Keep image/height ratio\n                    width = height * aspect;\n                }\n                else if (height == null && width != null) {\n                    height = width / aspect;\n                }\n                else if (width == null && height == null) {\n                    width = image.width;\n                    height = image.height;\n                }\n\n                // 设置transform\n                this.setTransform(ctx);\n\n                if (style.sWidth && style.sHeight) {\n                    var sx = style.sx || 0;\n                    var sy = style.sy || 0;\n                    ctx.drawImage(\n                        image,\n                        sx, sy, style.sWidth, style.sHeight,\n                        x, y, width, height\n                    );\n                }\n                else if (style.sx && style.sy) {\n                    var sx = style.sx;\n                    var sy = style.sy;\n                    var sWidth = width - sx;\n                    var sHeight = height - sy;\n                    ctx.drawImage(\n                        image,\n                        sx, sy, sWidth, sHeight,\n                        x, y, width, height\n                    );\n                }\n                else {\n                    ctx.drawImage(image, x, y, width, height);\n                }\n\n                this.restoreTransform(ctx);\n\n                // Draw rect text\n                if (style.text != null) {\n                    this.drawRectText(ctx, this.getBoundingRect());\n                }\n\n            }\n        },\n\n        getBoundingRect: function () {\n            var style = this.style;\n            if (! this._rect) {\n                this._rect = new BoundingRect(\n                    style.x || 0, style.y || 0, style.width || 0, style.height || 0\n                );\n            }\n            return this._rect;\n        }\n    };\n\n    zrUtil.inherits(ZImage, Displayable);\n\n    module.exports = ZImage;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Image.js\n// module id = 546\n// module chunks = 0 1 2","\n\n    var Pattern = function (image, repeat) {\n        // Should do nothing more in this constructor. Because gradient can be\n        // declard by `color: {image: ...}`, where this constructor will not be called.\n\n        this.image = image;\n        this.repeat = repeat;\n\n        // Can be cloned\n        this.type = 'pattern';\n    };\n\n    Pattern.prototype.getCanvasPattern = function (ctx) {\n        return ctx.createPattern(this.image, this.repeat || 'repeat');\n    };\n\n    module.exports = Pattern;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Pattern.js\n// module id = 547\n// module chunks = 0 1 2","/**\n * @module zrender/graphic/Style\n */\n\n\n    var STYLE_COMMON_PROPS = [\n        ['shadowBlur', 0], ['shadowOffsetX', 0], ['shadowOffsetY', 0], ['shadowColor', '#000'],\n        ['lineCap', 'butt'], ['lineJoin', 'miter'], ['miterLimit', 10]\n    ];\n\n    // var SHADOW_PROPS = STYLE_COMMON_PROPS.slice(0, 4);\n    // var LINE_PROPS = STYLE_COMMON_PROPS.slice(4);\n\n    var Style = function (opts) {\n        this.extendFrom(opts);\n    };\n\n    function createLinearGradient(ctx, obj, rect) {\n        var x = obj.x == null ? 0 : obj.x;\n        var x2 = obj.x2 == null ? 1 : obj.x2;\n        var y = obj.y == null ? 0 : obj.y;\n        var y2 = obj.y2 == null ? 0 : obj.y2;\n\n        if (!obj.global) {\n            x = x * rect.width + rect.x;\n            x2 = x2 * rect.width + rect.x;\n            y = y * rect.height + rect.y;\n            y2 = y2 * rect.height + rect.y;\n        }\n\n        var canvasGradient = ctx.createLinearGradient(x, y, x2, y2);\n\n        return canvasGradient;\n    }\n\n    function createRadialGradient(ctx, obj, rect) {\n        var width = rect.width;\n        var height = rect.height;\n        var min = Math.min(width, height);\n\n        var x = obj.x == null ? 0.5 : obj.x;\n        var y = obj.y == null ? 0.5 : obj.y;\n        var r = obj.r == null ? 0.5 : obj.r;\n        if (!obj.global) {\n            x = x * width + rect.x;\n            y = y * height + rect.y;\n            r = r * min;\n        }\n\n        var canvasGradient = ctx.createRadialGradient(x, y, 0, x, y, r);\n\n        return canvasGradient;\n    }\n\n\n    Style.prototype = {\n\n        constructor: Style,\n\n        /**\n         * @type {string}\n         */\n        fill: '#000000',\n\n        /**\n         * @type {string}\n         */\n        stroke: null,\n\n        /**\n         * @type {number}\n         */\n        opacity: 1,\n\n        /**\n         * @type {Array.<number>}\n         */\n        lineDash: null,\n\n        /**\n         * @type {number}\n         */\n        lineDashOffset: 0,\n\n        /**\n         * @type {number}\n         */\n        shadowBlur: 0,\n\n        /**\n         * @type {number}\n         */\n        shadowOffsetX: 0,\n\n        /**\n         * @type {number}\n         */\n        shadowOffsetY: 0,\n\n        /**\n         * @type {number}\n         */\n        lineWidth: 1,\n\n        /**\n         * If stroke ignore scale\n         * @type {Boolean}\n         */\n        strokeNoScale: false,\n\n        // Bounding rect text configuration\n        // Not affected by element transform\n        /**\n         * @type {string}\n         */\n        text: null,\n\n        /**\n         * @type {string}\n         */\n        textFill: '#000',\n\n        /**\n         * @type {string}\n         */\n        textStroke: null,\n\n        /**\n         * 'inside', 'left', 'right', 'top', 'bottom'\n         * [x, y]\n         * @type {string|Array.<number>}\n         * @default 'inside'\n         */\n        textPosition: 'inside',\n\n        /**\n         * If not specified, use the boundingRect of a `displayable`.\n         * @type {Object}\n         */\n        textPositionRect: null,\n\n        /**\n         * [x, y]\n         * @type {Array.<number>}\n         */\n        textOffset: null,\n\n        /**\n         * @type {string}\n         */\n        textBaseline: null,\n\n        /**\n         * @type {string}\n         */\n        textAlign: null,\n\n        /**\n         * @type {string}\n         */\n        textVerticalAlign: null,\n\n        /**\n         * Only useful in Path and Image element\n         * @type {number}\n         */\n        textDistance: 5,\n\n        /**\n         * Only useful in Path and Image element\n         * @type {number}\n         */\n        textShadowBlur: 0,\n\n        /**\n         * Only useful in Path and Image element\n         * @type {number}\n         */\n        textShadowOffsetX: 0,\n\n        /**\n         * Only useful in Path and Image element\n         * @type {number}\n         */\n        textShadowOffsetY: 0,\n\n        /**\n         * If transform text\n         * Only useful in Path and Image element\n         * @type {boolean}\n         */\n        textTransform: false,\n\n        /**\n         * Text rotate around position of Path or Image\n         * Only useful in Path and Image element and textTransform is false.\n         */\n        textRotation: 0,\n\n        /**\n         * @type {string}\n         * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n         */\n        blend: null,\n\n        /**\n         * @param {CanvasRenderingContext2D} ctx\n         */\n        bind: function (ctx, el, prevEl) {\n            var style = this;\n            var prevStyle = prevEl && prevEl.style;\n            var firstDraw = !prevStyle;\n\n            for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n                var prop = STYLE_COMMON_PROPS[i];\n                var styleName = prop[0];\n\n                if (firstDraw || style[styleName] !== prevStyle[styleName]) {\n                    // FIXME Invalid property value will cause style leak from previous element.\n                    ctx[styleName] = style[styleName] || prop[1];\n                }\n            }\n\n            if ((firstDraw || style.fill !== prevStyle.fill)) {\n                ctx.fillStyle = style.fill;\n            }\n            if ((firstDraw || style.stroke !== prevStyle.stroke)) {\n                ctx.strokeStyle = style.stroke;\n            }\n            if ((firstDraw || style.opacity !== prevStyle.opacity)) {\n                ctx.globalAlpha = style.opacity == null ? 1 : style.opacity;\n            }\n\n            if ((firstDraw || style.blend !== prevStyle.blend)) {\n                ctx.globalCompositeOperation = style.blend || 'source-over';\n            }\n            if (this.hasStroke()) {\n                var lineWidth = style.lineWidth;\n                ctx.lineWidth = lineWidth / (\n                    (this.strokeNoScale && el && el.getLineScale) ? el.getLineScale() : 1\n                );\n            }\n        },\n\n        hasFill: function () {\n            var fill = this.fill;\n            return fill != null && fill !== 'none';\n        },\n\n        hasStroke: function () {\n            var stroke = this.stroke;\n            return stroke != null && stroke !== 'none' && this.lineWidth > 0;\n        },\n\n        /**\n         * Extend from other style\n         * @param {zrender/graphic/Style} otherStyle\n         * @param {boolean} overwrite\n         */\n        extendFrom: function (otherStyle, overwrite) {\n            if (otherStyle) {\n                var target = this;\n                for (var name in otherStyle) {\n                    if (otherStyle.hasOwnProperty(name)\n                        && (overwrite || ! target.hasOwnProperty(name))\n                    ) {\n                        target[name] = otherStyle[name];\n                    }\n                }\n            }\n        },\n\n        /**\n         * Batch setting style with a given object\n         * @param {Object|string} obj\n         * @param {*} [obj]\n         */\n        set: function (obj, value) {\n            if (typeof obj === 'string') {\n                this[obj] = value;\n            }\n            else {\n                this.extendFrom(obj, true);\n            }\n        },\n\n        /**\n         * Clone\n         * @return {zrender/graphic/Style} [description]\n         */\n        clone: function () {\n            var newStyle = new this.constructor();\n            newStyle.extendFrom(this, true);\n            return newStyle;\n        },\n\n        getGradient: function (ctx, obj, rect) {\n            var method = obj.type === 'radial' ? createRadialGradient : createLinearGradient;\n            var canvasGradient = method(ctx, obj, rect);\n            var colorStops = obj.colorStops;\n            for (var i = 0; i < colorStops.length; i++) {\n                canvasGradient.addColorStop(\n                    colorStops[i].offset, colorStops[i].color\n                );\n            }\n            return canvasGradient;\n        }\n    };\n\n    var styleProto = Style.prototype;\n    for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n        var prop = STYLE_COMMON_PROPS[i];\n        if (!(prop[0] in styleProto)) {\n            styleProto[prop[0]] = prop[1];\n        }\n    }\n\n    // Provide for others\n    Style.getGradient = styleProto.getGradient;\n\n    module.exports = Style;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Style.js\n// module id = 548\n// module chunks = 0 1 2","\n\n    var smoothSpline = require('./smoothSpline');\n    var smoothBezier = require('./smoothBezier');\n\n    module.exports = {\n        buildPath: function (ctx, shape, closePath) {\n            var points = shape.points;\n            var smooth = shape.smooth;\n            if (points && points.length >= 2) {\n                if (smooth && smooth !== 'spline') {\n                    var controlPoints = smoothBezier(\n                        points, smooth, closePath, shape.smoothConstraint\n                    );\n\n                    ctx.moveTo(points[0][0], points[0][1]);\n                    var len = points.length;\n                    for (var i = 0; i < (closePath ? len : len - 1); i++) {\n                        var cp1 = controlPoints[i * 2];\n                        var cp2 = controlPoints[i * 2 + 1];\n                        var p = points[(i + 1) % len];\n                        ctx.bezierCurveTo(\n                            cp1[0], cp1[1], cp2[0], cp2[1], p[0], p[1]\n                        );\n                    }\n                }\n                else {\n                    if (smooth === 'spline') {\n                        points = smoothSpline(points, closePath);\n                    }\n\n                    ctx.moveTo(points[0][0], points[0][1]);\n                    for (var i = 1, l = points.length; i < l; i++) {\n                        ctx.lineTo(points[i][0], points[i][1]);\n                    }\n                }\n\n                closePath && ctx.closePath();\n            }\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/helper/poly.js\n// module id = 549\n// module chunks = 0 1 2","'use strict';\n/**\n * 提供变换扩展\n * @module zrender/mixin/Transformable\n * @author pissang (https://www.github.com/pissang)\n */\n\n\n    var matrix = require('../core/matrix');\n    var vector = require('../core/vector');\n    var mIdentity = matrix.identity;\n\n    var EPSILON = 5e-5;\n\n    function isNotAroundZero(val) {\n        return val > EPSILON || val < -EPSILON;\n    }\n\n    /**\n     * @alias module:zrender/mixin/Transformable\n     * @constructor\n     */\n    var Transformable = function (opts) {\n        opts = opts || {};\n        // If there are no given position, rotation, scale\n        if (!opts.position) {\n            /**\n             * 平移\n             * @type {Array.<number>}\n             * @default [0, 0]\n             */\n            this.position = [0, 0];\n        }\n        if (opts.rotation == null) {\n            /**\n             * 旋转\n             * @type {Array.<number>}\n             * @default 0\n             */\n            this.rotation = 0;\n        }\n        if (!opts.scale) {\n            /**\n             * 缩放\n             * @type {Array.<number>}\n             * @default [1, 1]\n             */\n            this.scale = [1, 1];\n        }\n        /**\n         * 旋转和缩放的原点\n         * @type {Array.<number>}\n         * @default null\n         */\n        this.origin = this.origin || null;\n    };\n\n    var transformableProto = Transformable.prototype;\n    transformableProto.transform = null;\n\n    /**\n     * 判断是否需要有坐标变换\n     * 如果有坐标变换, 则从position, rotation, scale以及父节点的transform计算出自身的transform矩阵\n     */\n    transformableProto.needLocalTransform = function () {\n        return isNotAroundZero(this.rotation)\n            || isNotAroundZero(this.position[0])\n            || isNotAroundZero(this.position[1])\n            || isNotAroundZero(this.scale[0] - 1)\n            || isNotAroundZero(this.scale[1] - 1);\n    };\n\n    transformableProto.updateTransform = function () {\n        var parent = this.parent;\n        var parentHasTransform = parent && parent.transform;\n        var needLocalTransform = this.needLocalTransform();\n\n        var m = this.transform;\n        if (!(needLocalTransform || parentHasTransform)) {\n            m && mIdentity(m);\n            return;\n        }\n\n        m = m || matrix.create();\n\n        if (needLocalTransform) {\n            this.getLocalTransform(m);\n        }\n        else {\n            mIdentity(m);\n        }\n\n        // 应用父节点变换\n        if (parentHasTransform) {\n            if (needLocalTransform) {\n                matrix.mul(m, parent.transform, m);\n            }\n            else {\n                matrix.copy(m, parent.transform);\n            }\n        }\n        // 保存这个变换矩阵\n        this.transform = m;\n\n        this.invTransform = this.invTransform || matrix.create();\n        matrix.invert(this.invTransform, m);\n    };\n\n    transformableProto.getLocalTransform = function (m) {\n        return Transformable.getLocalTransform(this, m);\n    };\n\n    /**\n     * 将自己的transform应用到context上\n     * @param {Context2D} ctx\n     */\n    transformableProto.setTransform = function (ctx) {\n        var m = this.transform;\n        var dpr = ctx.dpr || 1;\n        if (m) {\n            ctx.setTransform(dpr * m[0], dpr * m[1], dpr * m[2], dpr * m[3], dpr * m[4], dpr * m[5]);\n        }\n        else {\n            ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n        }\n    };\n\n    transformableProto.restoreTransform = function (ctx) {\n        var dpr = ctx.dpr || 1;\n        ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n    };\n\n    var tmpTransform = [];\n\n    /**\n     * 分解`transform`矩阵到`position`, `rotation`, `scale`\n     */\n    transformableProto.decomposeTransform = function () {\n        if (!this.transform) {\n            return;\n        }\n        var parent = this.parent;\n        var m = this.transform;\n        if (parent && parent.transform) {\n            // Get local transform and decompose them to position, scale, rotation\n            matrix.mul(tmpTransform, parent.invTransform, m);\n            m = tmpTransform;\n        }\n        var sx = m[0] * m[0] + m[1] * m[1];\n        var sy = m[2] * m[2] + m[3] * m[3];\n        var position = this.position;\n        var scale = this.scale;\n        if (isNotAroundZero(sx - 1)) {\n            sx = Math.sqrt(sx);\n        }\n        if (isNotAroundZero(sy - 1)) {\n            sy = Math.sqrt(sy);\n        }\n        if (m[0] < 0) {\n            sx = -sx;\n        }\n        if (m[3] < 0) {\n            sy = -sy;\n        }\n        position[0] = m[4];\n        position[1] = m[5];\n        scale[0] = sx;\n        scale[1] = sy;\n        this.rotation = Math.atan2(-m[1] / sy, m[0] / sx);\n    };\n\n    /**\n     * Get global scale\n     * @return {Array.<number>}\n     */\n    transformableProto.getGlobalScale = function () {\n        var m = this.transform;\n        if (!m) {\n            return [1, 1];\n        }\n        var sx = Math.sqrt(m[0] * m[0] + m[1] * m[1]);\n        var sy = Math.sqrt(m[2] * m[2] + m[3] * m[3]);\n        if (m[0] < 0) {\n            sx = -sx;\n        }\n        if (m[3] < 0) {\n            sy = -sy;\n        }\n        return [sx, sy];\n    };\n    /**\n     * 变换坐标位置到 shape 的局部坐标空间\n     * @method\n     * @param {number} x\n     * @param {number} y\n     * @return {Array.<number>}\n     */\n    transformableProto.transformCoordToLocal = function (x, y) {\n        var v2 = [x, y];\n        var invTransform = this.invTransform;\n        if (invTransform) {\n            vector.applyTransform(v2, v2, invTransform);\n        }\n        return v2;\n    };\n\n    /**\n     * 变换局部坐标位置到全局坐标空间\n     * @method\n     * @param {number} x\n     * @param {number} y\n     * @return {Array.<number>}\n     */\n    transformableProto.transformCoordToGlobal = function (x, y) {\n        var v2 = [x, y];\n        var transform = this.transform;\n        if (transform) {\n            vector.applyTransform(v2, v2, transform);\n        }\n        return v2;\n    };\n\n    /**\n     * @static\n     * @param {Object} target\n     * @param {Array.<number>} target.origin\n     * @param {number} target.rotation\n     * @param {Array.<number>} target.position\n     * @param {Array.<number>} [m]\n     */\n    Transformable.getLocalTransform = function (target, m) {\n        m = m || [];\n        mIdentity(m);\n\n        var origin = target.origin;\n        var scale = target.scale || [1, 1];\n        var rotation = target.rotation || 0;\n        var position = target.position || [0, 0];\n\n        if (origin) {\n            // Translate to origin\n            m[4] -= origin[0];\n            m[5] -= origin[1];\n        }\n        matrix.scale(m, m, scale);\n        if (rotation) {\n            matrix.rotate(m, m, rotation);\n        }\n        if (origin) {\n            // Translate back from origin\n            m[4] += origin[0];\n            m[5] += origin[1];\n        }\n\n        m[4] += position[0];\n        m[5] += position[1];\n\n        return m;\n    };\n\n    module.exports = Transformable;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/mixin/Transformable.js\n// module id = 550\n// module chunks = 0 1 2","'use strict';\n\nvar stringify = require('./stringify');\nvar parse = require('./parse');\nvar formats = require('./formats');\n\nmodule.exports = {\n    formats: formats,\n    parse: parse,\n    stringify: stringify\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/qs/lib/index.js\n// module id = 561\n// module chunks = 1 3 5","<template>\n  <div class=\"echarts\"></div>\n</template>\n\n<style>\n.echarts {\n  width: 600px;\n  height: 400px;\n}\n</style>\n\n<script>\nimport echarts from 'echarts/lib/echarts'\nimport debounce from 'lodash.debounce'\nimport Vue from 'vue'\n\n// enumerating ECharts events for now\nconst ACTION_EVENTS = [\n  'legendselectchanged',\n  'legendselected',\n  'legendunselected',\n  'datazoom',\n  'datarangeselected',\n  'timelinechanged',\n  'timelineplaychanged',\n  'restore',\n  'dataviewchanged',\n  'magictypechanged',\n  'geoselectchanged',\n  'geoselected',\n  'geounselected',\n  'pieselectchanged',\n  'pieselected',\n  'pieunselected',\n  'mapselectchanged',\n  'mapselected',\n  'mapunselected',\n  'axisareaselected',\n  'brush',\n  'brushselected'\n]\n\nconst MOUSE_EVENTS = [\n  'click',\n  'dblclick',\n  'mouseover',\n  'mouseout',\n  'mousedown',\n  'mouseup',\n  'globalout'\n]\n\nexport default {\n  props: {\n    options: Object,\n    theme: String,\n    initOptions: Object,\n    group: String,\n    autoResize: Boolean\n  },\n  data () {\n    return {\n      chart: null\n    }\n  },\n  computed: {\n    // Only recalculated when accessed from JavaScript.\n    // Won't update DOM on value change because getters\n    // don't depend on reactive values\n    width: {\n      cache: false,\n      get () {\n        return this._delegateGet('width', 'getWidth')\n      }\n    },\n    height: {\n      cache: false,\n      get () {\n        return this._delegateGet('height', 'getHeight')\n      }\n    },\n    isDisposed: {\n      cache: false,\n      get () {\n        return !!this._delegateGet('isDisposed', 'isDisposed')\n      }\n    },\n    computedOptions: {\n      cache: false,\n      get () {\n        return this._delegateGet('computedOptions', 'getOption')\n      }\n    }\n  },\n  watch: {\n    // use assign statements to tigger \"options\" and \"group\" setters\n    options: {\n      handler (options) {\n        if (!this.chart && options) {\n          this._init()\n        } else {\n          this.chart.setOption(this.options, true)\n        }\n      },\n      deep: true\n    },\n    group: {\n      handler (group) {\n        this.chart.group = group\n      }\n    }\n  },\n  methods: {\n    // provide a explicit merge option method\n    mergeOptions (options) {\n      this._delegateMethod('setOption', options)\n    },\n    // just delegates ECharts methods to Vue component\n    // use explicit params to reduce transpiled size for now\n    resize (options) {\n      this._delegateMethod('resize', options)\n    },\n    dispatchAction (payload) {\n      this._delegateMethod('dispatchAction', payload)\n    },\n    convertToPixel (finder, value) {\n      return this._delegateMethod('convertToPixel', finder, value)\n    },\n    convertFromPixel (finder, value) {\n      return this._delegateMethod('convertFromPixel', finder, value)\n    },\n    containPixel (finder, value) {\n      return this._delegateMethod('containPixel', finder, value)\n    },\n    showLoading (type, options) {\n      this._delegateMethod('showLoading', type, options)\n    },\n    hideLoading () {\n      this._delegateMethod('hideLoading')\n    },\n    getDataURL (options) {\n      return this._delegateMethod('getDataURL', options)\n    },\n    getConnectedDataURL (options) {\n      return this._delegateMethod('getConnectedDataURL', options)\n    },\n    clear () {\n      this._delegateMethod('clear')\n    },\n    dispose () {\n      this._delegateMethod('dispose')\n    },\n    _delegateMethod (name, ...args) {\n      if (!this.chart) {\n        Vue.util.warn(`Cannot call [${name}] before the chart is initialized. Set prop [options] first.`, this)\n        return\n      }\n      return this.chart[name](...args)\n    },\n    _delegateGet (name, method) {\n      if (!this.chart) {\n        Vue.util.warn(`Cannot get [${name}] before the chart is initialized. Set prop [options] first.`, this)\n      }\n      return this.chart[method]()\n    },\n    _init () {\n      if (this.chart) {\n        return\n      }\n\n      let chart = echarts.init(this.$el, this.theme, this.initOptions)\n\n      if (this.group) {\n        chart.group = this.group\n      }\n\n      chart.setOption(this.options, true)\n\n      // expose ECharts events as custom events\n      ACTION_EVENTS.forEach(event => {\n        chart.on(event, params => {\n          this.$emit(event, params)\n        })\n      })\n      MOUSE_EVENTS.forEach(event => {\n        chart.on(event, params => {\n          this.$emit(event, params)\n\n          // for backward compatibility, may remove in the future\n          this.$emit('chart' + event, params)\n        })\n      })\n\n      if (this.autoResize) {\n        this.__resizeHanlder = debounce(() => {\n          chart.resize()\n        }, 100, { leading: true })\n        window.addEventListener('resize', this.__resizeHanlder)\n      }\n\n      this.chart = chart\n    }\n  },\n  mounted () {\n    // auto init if `options` is already provided\n    if (this.options) {\n      this._init()\n    }\n  },\n  beforeDestroy () {\n    if (!this.chart) {\n      return\n    }\n    if (this.autoResize) {\n      window.removeEventListener('resize', this.__resizeHanlder)\n    }\n    this.dispose()\n  },\n  connect (group) {\n    if (typeof group !== 'string') {\n      group = group.map(chart => chart.chart)\n    }\n    echarts.connect(group)\n  },\n  disconnect (group) {\n    echarts.disConnect(group)\n  },\n  registerMap (...args) {\n    echarts.registerMap(...args)\n  },\n  registerTheme (...args) {\n    echarts.registerTheme(...args)\n  }\n}\n</script>\n\n\n\n// WEBPACK FOOTER //\n// ECharts.vue?8ce6f6fc","/**\n * @file 工具类\n * @author zhangxiaoyang\n */\n\n/**\n * 获取指定年份 指定月的天数\n */\nexport  function getDaysInOneMonth(year, month){\n  month = parseInt(month, 10);\n  let d = new Date(year, month, 0);\n  return d.getDate();\n}\n\n\nexport  function initTitle(txt) {\n    setTimeout(() => {\n        document.title = txt;\n    })\n}\n\n/**\n * 获取指定年份 指定月的天数\n */\n export function getWeek(year, month, day) {\n     let week =  [\"星期天\", \"星期一\", \"星期二\", \"星期三\", \"星期四\", \"星期五\", \"星期六\"];\n     let dt = new Date(year, month - 1, day).getDay();\n     return week[dt];\n }\n\n\n\n\nexport function getJSON(_url, data) {\n    let url = _url;\n    let promise = new Promise(function (resolve, reject) {\n        let client = new window.XMLHttpRequest();\n        if (data) {\n            url += paramFormat(data);\n        }\n        client.open('GET', url);\n        client.onreadystatechange = handler;\n        client.responseType = 'json';\n        client.setRequestHeader('Accept', 'application/json');\n        client.send();\n\n        function handler() {\n            if (this.readyState !== 4) {\n                return;\n            }\n            if (this.status === 200) {\n                resolve(this.response);\n            }\n            else {\n                reject(new Error(this.statusText));\n            }\n        }\n    });\n    return promise;\n}\n\nfunction paramFormat(obj) {\n    let ret = '?';\n    if (obj) {\n        for (let pro in obj) {\n            if (obj.hasOwnProperty(pro)) {\n                ret += pro + '=' + obj[pro] + '&';\n            }\n        }\n        ret = ret.substring(0, ret.length - 1);\n    }\n    return ret;\n}\n\n/*\n* @func serialization\n* @explain 序列化提交信息为表单提交的格式\n*/\nexport function serialization(bodyObj) {\n    let temp = '';\n    for (let name in bodyObj) {\n        if (bodyObj.hasOwnProperty(name) && bodyObj[name]) {\n            temp += '&' + name + '=' + encodeURIComponent(bodyObj[name]);\n        }\n    }\n    temp = temp.substr(1);\n    console.log('temp = ' + temp);\n    return temp;\n}\n\n/*\n* @func md5\n* @explain md5加密\n*/\n\n/* eslint-disable camelcase,no-param-reassign */\nexport function md5(string) {\n    function md5_RotateLeft(lValue, iShiftBits) {\n        return (lValue << iShiftBits) | (lValue >>> (32 - iShiftBits));\n    }\n\n    function md5_AddUnsigned(lX, lY) {\n        let lX4, lY4, lX8, lY8, lResult;\n        lX8 = (lX & 0x80000000);\n        lY8 = (lY & 0x80000000);\n        lX4 = (lX & 0x40000000);\n        lY4 = (lY & 0x40000000);\n        lResult = (lX & 0x3FFFFFFF) + (lY & 0x3FFFFFFF);\n        if (lX4 & lY4) {\n            return (lResult ^ 0x80000000 ^ lX8 ^ lY8);\n        }\n        if (lX4 | lY4) {\n            if (lResult & 0x40000000) {\n                return (lResult ^ 0xC0000000 ^ lX8 ^ lY8);\n            }\n            return (lResult ^ 0x40000000 ^ lX8 ^ lY8);\n        }\n        return (lResult ^ lX8 ^ lY8);\n    }\n\n    function md5_F(x, y, z) {\n        return (x & y) | ((~x) & z);\n    }\n\n    function md5_G(x, y, z) {\n        return (x & z) | (y & (~z));\n    }\n\n    function md5_H(x, y, z) {\n        return (x ^ y ^ z);\n    }\n\n    function md5_I(x, y, z) {\n        return (y ^ (x | (~z)));\n    }\n\n    function md5_FF(a, b, c, d, x, s, ac) {\n        a = md5_AddUnsigned(a, md5_AddUnsigned(md5_AddUnsigned(md5_F(b, c, d), x), ac));\n        return md5_AddUnsigned(md5_RotateLeft(a, s), b);\n    }\n\n    function md5_GG(a, b, c, d, x, s, ac) {\n        a = md5_AddUnsigned(a, md5_AddUnsigned(md5_AddUnsigned(md5_G(b, c, d), x), ac));\n        return md5_AddUnsigned(md5_RotateLeft(a, s), b);\n    }\n\n    function md5_HH(a, b, c, d, x, s, ac) {\n        a = md5_AddUnsigned(a, md5_AddUnsigned(md5_AddUnsigned(md5_H(b, c, d), x), ac));\n        return md5_AddUnsigned(md5_RotateLeft(a, s), b);\n    }\n\n    function md5_II(a, b, c, d, x, s, ac) {\n        a = md5_AddUnsigned(a, md5_AddUnsigned(md5_AddUnsigned(md5_I(b, c, d), x), ac));\n        return md5_AddUnsigned(md5_RotateLeft(a, s), b);\n    }\n\n    function md5_ConvertToWordArray(string) {\n        let lWordCount;\n        let lMessageLength = string.length;\n        let lNumberOfWords_temp1 = lMessageLength + 8;\n        let lNumberOfWords_temp2 = (lNumberOfWords_temp1 - (lNumberOfWords_temp1 % 64)) / 64;\n        let lNumberOfWords = (lNumberOfWords_temp2 + 1) * 16;\n        let lWordArray = Array(lNumberOfWords - 1);\n        let lBytePosition = 0;\n        let lByteCount = 0;\n        while (lByteCount < lMessageLength) {\n            lWordCount = (lByteCount - (lByteCount % 4)) / 4;\n            lBytePosition = (lByteCount % 4) * 8;\n            lWordArray[lWordCount] = (lWordArray[lWordCount] | (string.charCodeAt(lByteCount) << lBytePosition));\n            lByteCount++;\n        }\n        lWordCount = (lByteCount - (lByteCount % 4)) / 4;\n        lBytePosition = (lByteCount % 4) * 8;\n        lWordArray[lWordCount] = lWordArray[lWordCount] | (0x80 << lBytePosition);\n        lWordArray[lNumberOfWords - 2] = lMessageLength << 3;\n        lWordArray[lNumberOfWords - 1] = lMessageLength >>> 29;\n        return lWordArray;\n    }\n\n    function md5_WordToHex(lValue) {\n        let WordToHexValue = '';\n        let WordToHexValue_temp = '';\n        let lByte;\n        let lCount;\n        for (lCount = 0;lCount <= 3;lCount++) {\n            lByte = (lValue >>> (lCount * 8)) & 255;\n            WordToHexValue_temp = '0' + lByte.toString(16);\n            WordToHexValue = WordToHexValue + WordToHexValue_temp.substr(WordToHexValue_temp.length - 2, 2);\n        }\n        return WordToHexValue;\n    }\n\n    function md5_Utf8Encode(string) {\n        string = string.replace(/\\r\\n/g, '\\n');\n        let utftext = '';\n        for (let n = 0;n < string.length;n++) {\n            let c = string.charCodeAt(n);\n            if (c < 128) {\n                utftext += String.fromCharCode(c);\n            }\n            else if ((c > 127) && (c < 2048)) {\n                utftext += String.fromCharCode((c >> 6) | 192);\n                utftext += String.fromCharCode((c & 63) | 128);\n            }\n            else {\n                utftext += String.fromCharCode((c >> 12) | 224);\n                utftext += String.fromCharCode(((c >> 6) & 63) | 128);\n                utftext += String.fromCharCode((c & 63) | 128);\n            }\n        }\n        return utftext;\n    }\n\n    let x = [];\n    let k;\n    let AA;\n    let BB;\n    let CC;\n    let DD;\n    let a;\n    let b;\n    let c;\n    let d;\n    let S11 = 7;\n    let S12 = 12;\n    let S13 = 17;\n    let S14 = 22;\n    let S21 = 5;\n    let S22 = 9;\n    let S23 = 14;\n    let S24 = 20;\n    let S31 = 4;\n    let S32 = 11;\n    let S33 = 16;\n    let S34 = 23;\n    let S41 = 6;\n    let S42 = 10;\n    let S43 = 15;\n    let S44 = 21;\n    string = md5_Utf8Encode(string);\n    x = md5_ConvertToWordArray(string);\n    a = 0x67452301;\n    b = 0xEFCDAB89;\n    c = 0x98BADCFE;\n    d = 0x10325476;\n    for (k = 0;k < x.length;k += 16) {\n        AA = a;\n        BB = b;\n        CC = c;\n        DD = d;\n        a = md5_FF(a, b, c, d, x[k + 0], S11, 0xD76AA478);\n        d = md5_FF(d, a, b, c, x[k + 1], S12, 0xE8C7B756);\n        c = md5_FF(c, d, a, b, x[k + 2], S13, 0x242070DB);\n        b = md5_FF(b, c, d, a, x[k + 3], S14, 0xC1BDCEEE);\n        a = md5_FF(a, b, c, d, x[k + 4], S11, 0xF57C0FAF);\n        d = md5_FF(d, a, b, c, x[k + 5], S12, 0x4787C62A);\n        c = md5_FF(c, d, a, b, x[k + 6], S13, 0xA8304613);\n        b = md5_FF(b, c, d, a, x[k + 7], S14, 0xFD469501);\n        a = md5_FF(a, b, c, d, x[k + 8], S11, 0x698098D8);\n        d = md5_FF(d, a, b, c, x[k + 9], S12, 0x8B44F7AF);\n        c = md5_FF(c, d, a, b, x[k + 10], S13, 0xFFFF5BB1);\n        b = md5_FF(b, c, d, a, x[k + 11], S14, 0x895CD7BE);\n        a = md5_FF(a, b, c, d, x[k + 12], S11, 0x6B901122);\n        d = md5_FF(d, a, b, c, x[k + 13], S12, 0xFD987193);\n        c = md5_FF(c, d, a, b, x[k + 14], S13, 0xA679438E);\n        b = md5_FF(b, c, d, a, x[k + 15], S14, 0x49B40821);\n        a = md5_GG(a, b, c, d, x[k + 1], S21, 0xF61E2562);\n        d = md5_GG(d, a, b, c, x[k + 6], S22, 0xC040B340);\n        c = md5_GG(c, d, a, b, x[k + 11], S23, 0x265E5A51);\n        b = md5_GG(b, c, d, a, x[k + 0], S24, 0xE9B6C7AA);\n        a = md5_GG(a, b, c, d, x[k + 5], S21, 0xD62F105D);\n        d = md5_GG(d, a, b, c, x[k + 10], S22, 0x2441453);\n        c = md5_GG(c, d, a, b, x[k + 15], S23, 0xD8A1E681);\n        b = md5_GG(b, c, d, a, x[k + 4], S24, 0xE7D3FBC8);\n        a = md5_GG(a, b, c, d, x[k + 9], S21, 0x21E1CDE6);\n        d = md5_GG(d, a, b, c, x[k + 14], S22, 0xC33707D6);\n        c = md5_GG(c, d, a, b, x[k + 3], S23, 0xF4D50D87);\n        b = md5_GG(b, c, d, a, x[k + 8], S24, 0x455A14ED);\n        a = md5_GG(a, b, c, d, x[k + 13], S21, 0xA9E3E905);\n        d = md5_GG(d, a, b, c, x[k + 2], S22, 0xFCEFA3F8);\n        c = md5_GG(c, d, a, b, x[k + 7], S23, 0x676F02D9);\n        b = md5_GG(b, c, d, a, x[k + 12], S24, 0x8D2A4C8A);\n        a = md5_HH(a, b, c, d, x[k + 5], S31, 0xFFFA3942);\n        d = md5_HH(d, a, b, c, x[k + 8], S32, 0x8771F681);\n        c = md5_HH(c, d, a, b, x[k + 11], S33, 0x6D9D6122);\n        b = md5_HH(b, c, d, a, x[k + 14], S34, 0xFDE5380C);\n        a = md5_HH(a, b, c, d, x[k + 1], S31, 0xA4BEEA44);\n        d = md5_HH(d, a, b, c, x[k + 4], S32, 0x4BDECFA9);\n        c = md5_HH(c, d, a, b, x[k + 7], S33, 0xF6BB4B60);\n        b = md5_HH(b, c, d, a, x[k + 10], S34, 0xBEBFBC70);\n        a = md5_HH(a, b, c, d, x[k + 13], S31, 0x289B7EC6);\n        d = md5_HH(d, a, b, c, x[k + 0], S32, 0xEAA127FA);\n        c = md5_HH(c, d, a, b, x[k + 3], S33, 0xD4EF3085);\n        b = md5_HH(b, c, d, a, x[k + 6], S34, 0x4881D05);\n        a = md5_HH(a, b, c, d, x[k + 9], S31, 0xD9D4D039);\n        d = md5_HH(d, a, b, c, x[k + 12], S32, 0xE6DB99E5);\n        c = md5_HH(c, d, a, b, x[k + 15], S33, 0x1FA27CF8);\n        b = md5_HH(b, c, d, a, x[k + 2], S34, 0xC4AC5665);\n        a = md5_II(a, b, c, d, x[k + 0], S41, 0xF4292244);\n        d = md5_II(d, a, b, c, x[k + 7], S42, 0x432AFF97);\n        c = md5_II(c, d, a, b, x[k + 14], S43, 0xAB9423A7);\n        b = md5_II(b, c, d, a, x[k + 5], S44, 0xFC93A039);\n        a = md5_II(a, b, c, d, x[k + 12], S41, 0x655B59C3);\n        d = md5_II(d, a, b, c, x[k + 3], S42, 0x8F0CCC92);\n        c = md5_II(c, d, a, b, x[k + 10], S43, 0xFFEFF47D);\n        b = md5_II(b, c, d, a, x[k + 1], S44, 0x85845DD1);\n        a = md5_II(a, b, c, d, x[k + 8], S41, 0x6FA87E4F);\n        d = md5_II(d, a, b, c, x[k + 15], S42, 0xFE2CE6E0);\n        c = md5_II(c, d, a, b, x[k + 6], S43, 0xA3014314);\n        b = md5_II(b, c, d, a, x[k + 13], S44, 0x4E0811A1);\n        a = md5_II(a, b, c, d, x[k + 4], S41, 0xF7537E82);\n        d = md5_II(d, a, b, c, x[k + 11], S42, 0xBD3AF235);\n        c = md5_II(c, d, a, b, x[k + 2], S43, 0x2AD7D2BB);\n        b = md5_II(b, c, d, a, x[k + 9], S44, 0xEB86D391);\n        a = md5_AddUnsigned(a, AA);\n        b = md5_AddUnsigned(b, BB);\n        c = md5_AddUnsigned(c, CC);\n        d = md5_AddUnsigned(d, DD);\n    }\n    return (md5_WordToHex(a) + md5_WordToHex(b) + md5_WordToHex(c) + md5_WordToHex(d)).toLowerCase();\n}\n\n/* eslint-enable camelcase */\n\n\n\n// WEBPACK FOOTER //\n// ./src/plugins/tool.js","module.exports = { \"default\": require(\"core-js/library/fn/promise\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/core-js/promise.js\n// module id = 566\n// module chunks = 1 2 3","\"use strict\";\n\nexports.__esModule = true;\n\nvar _from = require(\"../core-js/array/from\");\n\nvar _from2 = _interopRequireDefault(_from);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function (arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  } else {\n    return (0, _from2.default)(arr);\n  }\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/helpers/toConsumableArray.js\n// module id = 567\n// module chunks = 0 1 2","require('../modules/es6.object.to-string');\nrequire('../modules/es6.string.iterator');\nrequire('../modules/web.dom.iterable');\nrequire('../modules/es6.promise');\nmodule.exports = require('../modules/_core').Promise;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/fn/promise.js\n// module id = 568\n// module chunks = 1 2 3","module.exports = function(it, Constructor, name, forbiddenField){\n  if(!(it instanceof Constructor) || (forbiddenField !== undefined && forbiddenField in it)){\n    throw TypeError(name + ': incorrect invocation!');\n  } return it;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_an-instance.js\n// module id = 569\n// module chunks = 1 2 3","var ctx         = require('./_ctx')\n  , call        = require('./_iter-call')\n  , isArrayIter = require('./_is-array-iter')\n  , anObject    = require('./_an-object')\n  , toLength    = require('./_to-length')\n  , getIterFn   = require('./core.get-iterator-method')\n  , BREAK       = {}\n  , RETURN      = {};\nvar exports = module.exports = function(iterable, entries, fn, that, ITERATOR){\n  var iterFn = ITERATOR ? function(){ return iterable; } : getIterFn(iterable)\n    , f      = ctx(fn, that, entries ? 2 : 1)\n    , index  = 0\n    , length, step, iterator, result;\n  if(typeof iterFn != 'function')throw TypeError(iterable + ' is not iterable!');\n  // fast case for arrays with default iterator\n  if(isArrayIter(iterFn))for(length = toLength(iterable.length); length > index; index++){\n    result = entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);\n    if(result === BREAK || result === RETURN)return result;\n  } else for(iterator = iterFn.call(iterable); !(step = iterator.next()).done; ){\n    result = call(iterator, f, step.value, entries);\n    if(result === BREAK || result === RETURN)return result;\n  }\n};\nexports.BREAK  = BREAK;\nexports.RETURN = RETURN;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_for-of.js\n// module id = 570\n// module chunks = 1 2 3","// fast apply, http://jsperf.lnkit.com/fast-apply/5\nmodule.exports = function(fn, args, that){\n  var un = that === undefined;\n  switch(args.length){\n    case 0: return un ? fn()\n                      : fn.call(that);\n    case 1: return un ? fn(args[0])\n                      : fn.call(that, args[0]);\n    case 2: return un ? fn(args[0], args[1])\n                      : fn.call(that, args[0], args[1]);\n    case 3: return un ? fn(args[0], args[1], args[2])\n                      : fn.call(that, args[0], args[1], args[2]);\n    case 4: return un ? fn(args[0], args[1], args[2], args[3])\n                      : fn.call(that, args[0], args[1], args[2], args[3]);\n  } return              fn.apply(that, args);\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_invoke.js\n// module id = 571\n// module chunks = 1 2 3","var global    = require('./_global')\n  , macrotask = require('./_task').set\n  , Observer  = global.MutationObserver || global.WebKitMutationObserver\n  , process   = global.process\n  , Promise   = global.Promise\n  , isNode    = require('./_cof')(process) == 'process';\n\nmodule.exports = function(){\n  var head, last, notify;\n\n  var flush = function(){\n    var parent, fn;\n    if(isNode && (parent = process.domain))parent.exit();\n    while(head){\n      fn   = head.fn;\n      head = head.next;\n      try {\n        fn();\n      } catch(e){\n        if(head)notify();\n        else last = undefined;\n        throw e;\n      }\n    } last = undefined;\n    if(parent)parent.enter();\n  };\n\n  // Node.js\n  if(isNode){\n    notify = function(){\n      process.nextTick(flush);\n    };\n  // browsers with MutationObserver\n  } else if(Observer){\n    var toggle = true\n      , node   = document.createTextNode('');\n    new Observer(flush).observe(node, {characterData: true}); // eslint-disable-line no-new\n    notify = function(){\n      node.data = toggle = !toggle;\n    };\n  // environments with maybe non-completely correct, but existent Promise\n  } else if(Promise && Promise.resolve){\n    var promise = Promise.resolve();\n    notify = function(){\n      promise.then(flush);\n    };\n  // for other environments - macrotask based on:\n  // - setImmediate\n  // - MessageChannel\n  // - window.postMessag\n  // - onreadystatechange\n  // - setTimeout\n  } else {\n    notify = function(){\n      // strange IE + webpack dev server bug - use .call(global)\n      macrotask.call(global, flush);\n    };\n  }\n\n  return function(fn){\n    var task = {fn: fn, next: undefined};\n    if(last)last.next = task;\n    if(!head){\n      head = task;\n      notify();\n    } last = task;\n  };\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_microtask.js\n// module id = 572\n// module chunks = 1 2 3","var hide = require('./_hide');\nmodule.exports = function(target, src, safe){\n  for(var key in src){\n    if(safe && target[key])target[key] = src[key];\n    else hide(target, key, src[key]);\n  } return target;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_redefine-all.js\n// module id = 573\n// module chunks = 1 2 3","'use strict';\nvar global      = require('./_global')\n  , core        = require('./_core')\n  , dP          = require('./_object-dp')\n  , DESCRIPTORS = require('./_descriptors')\n  , SPECIES     = require('./_wks')('species');\n\nmodule.exports = function(KEY){\n  var C = typeof core[KEY] == 'function' ? core[KEY] : global[KEY];\n  if(DESCRIPTORS && C && !C[SPECIES])dP.f(C, SPECIES, {\n    configurable: true,\n    get: function(){ return this; }\n  });\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_set-species.js\n// module id = 574\n// module chunks = 1 2 3","// 7.3.20 SpeciesConstructor(O, defaultConstructor)\nvar anObject  = require('./_an-object')\n  , aFunction = require('./_a-function')\n  , SPECIES   = require('./_wks')('species');\nmodule.exports = function(O, D){\n  var C = anObject(O).constructor, S;\n  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? D : aFunction(S);\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_species-constructor.js\n// module id = 575\n// module chunks = 1 2 3","'use strict';\nvar LIBRARY            = require('./_library')\n  , global             = require('./_global')\n  , ctx                = require('./_ctx')\n  , classof            = require('./_classof')\n  , $export            = require('./_export')\n  , isObject           = require('./_is-object')\n  , aFunction          = require('./_a-function')\n  , anInstance         = require('./_an-instance')\n  , forOf              = require('./_for-of')\n  , speciesConstructor = require('./_species-constructor')\n  , task               = require('./_task').set\n  , microtask          = require('./_microtask')()\n  , PROMISE            = 'Promise'\n  , TypeError          = global.TypeError\n  , process            = global.process\n  , $Promise           = global[PROMISE]\n  , process            = global.process\n  , isNode             = classof(process) == 'process'\n  , empty              = function(){ /* empty */ }\n  , Internal, GenericPromiseCapability, Wrapper;\n\nvar USE_NATIVE = !!function(){\n  try {\n    // correct subclassing with @@species support\n    var promise     = $Promise.resolve(1)\n      , FakePromise = (promise.constructor = {})[require('./_wks')('species')] = function(exec){ exec(empty, empty); };\n    // unhandled rejections tracking support, NodeJS Promise without it fails @@species test\n    return (isNode || typeof PromiseRejectionEvent == 'function') && promise.then(empty) instanceof FakePromise;\n  } catch(e){ /* empty */ }\n}();\n\n// helpers\nvar sameConstructor = function(a, b){\n  // with library wrapper special case\n  return a === b || a === $Promise && b === Wrapper;\n};\nvar isThenable = function(it){\n  var then;\n  return isObject(it) && typeof (then = it.then) == 'function' ? then : false;\n};\nvar newPromiseCapability = function(C){\n  return sameConstructor($Promise, C)\n    ? new PromiseCapability(C)\n    : new GenericPromiseCapability(C);\n};\nvar PromiseCapability = GenericPromiseCapability = function(C){\n  var resolve, reject;\n  this.promise = new C(function($$resolve, $$reject){\n    if(resolve !== undefined || reject !== undefined)throw TypeError('Bad Promise constructor');\n    resolve = $$resolve;\n    reject  = $$reject;\n  });\n  this.resolve = aFunction(resolve);\n  this.reject  = aFunction(reject);\n};\nvar perform = function(exec){\n  try {\n    exec();\n  } catch(e){\n    return {error: e};\n  }\n};\nvar notify = function(promise, isReject){\n  if(promise._n)return;\n  promise._n = true;\n  var chain = promise._c;\n  microtask(function(){\n    var value = promise._v\n      , ok    = promise._s == 1\n      , i     = 0;\n    var run = function(reaction){\n      var handler = ok ? reaction.ok : reaction.fail\n        , resolve = reaction.resolve\n        , reject  = reaction.reject\n        , domain  = reaction.domain\n        , result, then;\n      try {\n        if(handler){\n          if(!ok){\n            if(promise._h == 2)onHandleUnhandled(promise);\n            promise._h = 1;\n          }\n          if(handler === true)result = value;\n          else {\n            if(domain)domain.enter();\n            result = handler(value);\n            if(domain)domain.exit();\n          }\n          if(result === reaction.promise){\n            reject(TypeError('Promise-chain cycle'));\n          } else if(then = isThenable(result)){\n            then.call(result, resolve, reject);\n          } else resolve(result);\n        } else reject(value);\n      } catch(e){\n        reject(e);\n      }\n    };\n    while(chain.length > i)run(chain[i++]); // variable length - can't use forEach\n    promise._c = [];\n    promise._n = false;\n    if(isReject && !promise._h)onUnhandled(promise);\n  });\n};\nvar onUnhandled = function(promise){\n  task.call(global, function(){\n    var value = promise._v\n      , abrupt, handler, console;\n    if(isUnhandled(promise)){\n      abrupt = perform(function(){\n        if(isNode){\n          process.emit('unhandledRejection', value, promise);\n        } else if(handler = global.onunhandledrejection){\n          handler({promise: promise, reason: value});\n        } else if((console = global.console) && console.error){\n          console.error('Unhandled promise rejection', value);\n        }\n      });\n      // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should\n      promise._h = isNode || isUnhandled(promise) ? 2 : 1;\n    } promise._a = undefined;\n    if(abrupt)throw abrupt.error;\n  });\n};\nvar isUnhandled = function(promise){\n  if(promise._h == 1)return false;\n  var chain = promise._a || promise._c\n    , i     = 0\n    , reaction;\n  while(chain.length > i){\n    reaction = chain[i++];\n    if(reaction.fail || !isUnhandled(reaction.promise))return false;\n  } return true;\n};\nvar onHandleUnhandled = function(promise){\n  task.call(global, function(){\n    var handler;\n    if(isNode){\n      process.emit('rejectionHandled', promise);\n    } else if(handler = global.onrejectionhandled){\n      handler({promise: promise, reason: promise._v});\n    }\n  });\n};\nvar $reject = function(value){\n  var promise = this;\n  if(promise._d)return;\n  promise._d = true;\n  promise = promise._w || promise; // unwrap\n  promise._v = value;\n  promise._s = 2;\n  if(!promise._a)promise._a = promise._c.slice();\n  notify(promise, true);\n};\nvar $resolve = function(value){\n  var promise = this\n    , then;\n  if(promise._d)return;\n  promise._d = true;\n  promise = promise._w || promise; // unwrap\n  try {\n    if(promise === value)throw TypeError(\"Promise can't be resolved itself\");\n    if(then = isThenable(value)){\n      microtask(function(){\n        var wrapper = {_w: promise, _d: false}; // wrap\n        try {\n          then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));\n        } catch(e){\n          $reject.call(wrapper, e);\n        }\n      });\n    } else {\n      promise._v = value;\n      promise._s = 1;\n      notify(promise, false);\n    }\n  } catch(e){\n    $reject.call({_w: promise, _d: false}, e); // wrap\n  }\n};\n\n// constructor polyfill\nif(!USE_NATIVE){\n  // 25.4.3.1 Promise(executor)\n  $Promise = function Promise(executor){\n    anInstance(this, $Promise, PROMISE, '_h');\n    aFunction(executor);\n    Internal.call(this);\n    try {\n      executor(ctx($resolve, this, 1), ctx($reject, this, 1));\n    } catch(err){\n      $reject.call(this, err);\n    }\n  };\n  Internal = function Promise(executor){\n    this._c = [];             // <- awaiting reactions\n    this._a = undefined;      // <- checked in isUnhandled reactions\n    this._s = 0;              // <- state\n    this._d = false;          // <- done\n    this._v = undefined;      // <- value\n    this._h = 0;              // <- rejection state, 0 - default, 1 - handled, 2 - unhandled\n    this._n = false;          // <- notify\n  };\n  Internal.prototype = require('./_redefine-all')($Promise.prototype, {\n    // 25.4.5.3 Promise.prototype.then(onFulfilled, onRejected)\n    then: function then(onFulfilled, onRejected){\n      var reaction    = newPromiseCapability(speciesConstructor(this, $Promise));\n      reaction.ok     = typeof onFulfilled == 'function' ? onFulfilled : true;\n      reaction.fail   = typeof onRejected == 'function' && onRejected;\n      reaction.domain = isNode ? process.domain : undefined;\n      this._c.push(reaction);\n      if(this._a)this._a.push(reaction);\n      if(this._s)notify(this, false);\n      return reaction.promise;\n    },\n    // 25.4.5.1 Promise.prototype.catch(onRejected)\n    'catch': function(onRejected){\n      return this.then(undefined, onRejected);\n    }\n  });\n  PromiseCapability = function(){\n    var promise  = new Internal;\n    this.promise = promise;\n    this.resolve = ctx($resolve, promise, 1);\n    this.reject  = ctx($reject, promise, 1);\n  };\n}\n\n$export($export.G + $export.W + $export.F * !USE_NATIVE, {Promise: $Promise});\nrequire('./_set-to-string-tag')($Promise, PROMISE);\nrequire('./_set-species')(PROMISE);\nWrapper = require('./_core')[PROMISE];\n\n// statics\n$export($export.S + $export.F * !USE_NATIVE, PROMISE, {\n  // 25.4.4.5 Promise.reject(r)\n  reject: function reject(r){\n    var capability = newPromiseCapability(this)\n      , $$reject   = capability.reject;\n    $$reject(r);\n    return capability.promise;\n  }\n});\n$export($export.S + $export.F * (LIBRARY || !USE_NATIVE), PROMISE, {\n  // 25.4.4.6 Promise.resolve(x)\n  resolve: function resolve(x){\n    // instanceof instead of internal slot check because we should fix it without replacement native Promise core\n    if(x instanceof $Promise && sameConstructor(x.constructor, this))return x;\n    var capability = newPromiseCapability(this)\n      , $$resolve  = capability.resolve;\n    $$resolve(x);\n    return capability.promise;\n  }\n});\n$export($export.S + $export.F * !(USE_NATIVE && require('./_iter-detect')(function(iter){\n  $Promise.all(iter)['catch'](empty);\n})), PROMISE, {\n  // 25.4.4.1 Promise.all(iterable)\n  all: function all(iterable){\n    var C          = this\n      , capability = newPromiseCapability(C)\n      , resolve    = capability.resolve\n      , reject     = capability.reject;\n    var abrupt = perform(function(){\n      var values    = []\n        , index     = 0\n        , remaining = 1;\n      forOf(iterable, false, function(promise){\n        var $index        = index++\n          , alreadyCalled = false;\n        values.push(undefined);\n        remaining++;\n        C.resolve(promise).then(function(value){\n          if(alreadyCalled)return;\n          alreadyCalled  = true;\n          values[$index] = value;\n          --remaining || resolve(values);\n        }, reject);\n      });\n      --remaining || resolve(values);\n    });\n    if(abrupt)reject(abrupt.error);\n    return capability.promise;\n  },\n  // 25.4.4.4 Promise.race(iterable)\n  race: function race(iterable){\n    var C          = this\n      , capability = newPromiseCapability(C)\n      , reject     = capability.reject;\n    var abrupt = perform(function(){\n      forOf(iterable, false, function(promise){\n        C.resolve(promise).then(capability.resolve, reject);\n      });\n    });\n    if(abrupt)reject(abrupt.error);\n    return capability.promise;\n  }\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/es6.promise.js\n// module id = 576\n// module chunks = 1 2 3","exports = module.exports = require(\"../../css-loader/lib/css-base.js\")(true);\n// imports\n\n\n// module\nexports.push([module.id, \".echarts{width:600px;height:400px}\", \"\", {\"version\":3,\"sources\":[\"/Users/yiche/Desktop/company/newfe/isp_feweb/node_modules/vue-echarts/components/ECharts.vue\"],\"names\":[],\"mappings\":\"AACA,SACE,YAAa,AACb,YAAc,CACf\",\"file\":\"ECharts.vue\",\"sourcesContent\":[\"\\n.echarts {\\n  width: 600px;\\n  height: 400px;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader?{\"minimize\":true,\"sourceMap\":true}!./~/vue-loader/lib/style-compiler?{\"id\":\"data-v-325aced1\",\"scoped\":false,\"hasInlineConfig\":false}!./~/vue-loader/lib/selector.js?type=styles&index=0!./~/vue-echarts/components/ECharts.vue\n// module id = 577\n// module chunks = 0 1 2","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var echartsAPIList = [\n        'getDom', 'getZr', 'getWidth', 'getHeight', 'getDevicePixelRatio', 'dispatchAction', 'isDisposed',\n        'on', 'off', 'getDataURL', 'getConnectedDataURL', 'getModel', 'getOption',\n        'getViewOfComponentModel', 'getViewOfSeriesModel'\n    ];\n    // And `getCoordinateSystems` and `getComponentByElement` will be injected in echarts.js\n\n    function ExtensionAPI(chartInstance) {\n        zrUtil.each(echartsAPIList, function (name) {\n            this[name] = zrUtil.bind(chartInstance[name], chartInstance);\n        }, this);\n    }\n\n    module.exports = ExtensionAPI;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/ExtensionAPI.js\n// module id = 579\n// module chunks = 0 1 2","/**\n * @module echarts/chart/helper/SymbolDraw\n */\n\n\n    var graphic = require('../../util/graphic');\n    var Symbol = require('./Symbol');\n\n    /**\n     * @constructor\n     * @alias module:echarts/chart/helper/SymbolDraw\n     * @param {module:zrender/graphic/Group} [symbolCtor]\n     */\n    function SymbolDraw(symbolCtor) {\n        this.group = new graphic.Group();\n\n        this._symbolCtor = symbolCtor || Symbol;\n    }\n\n    var symbolDrawProto = SymbolDraw.prototype;\n\n    function symbolNeedsDraw(data, idx, isIgnore) {\n        var point = data.getItemLayout(idx);\n        // Is an object\n        // if (point && point.hasOwnProperty('point')) {\n        //     point = point.point;\n        // }\n        return point && !isNaN(point[0]) && !isNaN(point[1]) && !(isIgnore && isIgnore(idx))\n                    && data.getItemVisual(idx, 'symbol') !== 'none';\n    }\n    /**\n     * Update symbols draw by new data\n     * @param {module:echarts/data/List} data\n     * @param {Array.<boolean>} [isIgnore]\n     */\n    symbolDrawProto.updateData = function (data, isIgnore) {\n        var group = this.group;\n        var seriesModel = data.hostModel;\n        var oldData = this._data;\n\n        var SymbolCtor = this._symbolCtor;\n\n        var seriesScope = {\n            itemStyle: seriesModel.getModel('itemStyle.normal').getItemStyle(['color']),\n            hoverItemStyle: seriesModel.getModel('itemStyle.emphasis').getItemStyle(),\n            symbolRotate: seriesModel.get('symbolRotate'),\n            symbolOffset: seriesModel.get('symbolOffset'),\n            hoverAnimation: seriesModel.get('hoverAnimation'),\n\n            labelModel: seriesModel.getModel('label.normal'),\n            hoverLabelModel: seriesModel.getModel('label.emphasis'),\n            cursorStyle: seriesModel.get('cursor')\n        };\n\n        data.diff(oldData)\n            .add(function (newIdx) {\n                var point = data.getItemLayout(newIdx);\n                if (symbolNeedsDraw(data, newIdx, isIgnore)) {\n                    var symbolEl = new SymbolCtor(data, newIdx, seriesScope);\n                    symbolEl.attr('position', point);\n                    data.setItemGraphicEl(newIdx, symbolEl);\n                    group.add(symbolEl);\n                }\n            })\n            .update(function (newIdx, oldIdx) {\n                var symbolEl = oldData.getItemGraphicEl(oldIdx);\n                var point = data.getItemLayout(newIdx);\n                if (!symbolNeedsDraw(data, newIdx, isIgnore)) {\n                    group.remove(symbolEl);\n                    return;\n                }\n                if (!symbolEl) {\n                    symbolEl = new SymbolCtor(data, newIdx);\n                    symbolEl.attr('position', point);\n                }\n                else {\n                    symbolEl.updateData(data, newIdx, seriesScope);\n                    graphic.updateProps(symbolEl, {\n                        position: point\n                    }, seriesModel);\n                }\n\n                // Add back\n                group.add(symbolEl);\n\n                data.setItemGraphicEl(newIdx, symbolEl);\n            })\n            .remove(function (oldIdx) {\n                var el = oldData.getItemGraphicEl(oldIdx);\n                el && el.fadeOut(function () {\n                    group.remove(el);\n                });\n            })\n            .execute();\n\n        this._data = data;\n    };\n\n    symbolDrawProto.updateLayout = function () {\n        var data = this._data;\n        if (data) {\n            // Not use animation\n            data.eachItemGraphicEl(function (el, idx) {\n                var point = data.getItemLayout(idx);\n                el.attr('position', point);\n            });\n        }\n    };\n\n    symbolDrawProto.remove = function (enableAnimation) {\n        var group = this.group;\n        var data = this._data;\n        if (data) {\n            if (enableAnimation) {\n                data.eachItemGraphicEl(function (el) {\n                    el.fadeOut(function () {\n                        group.remove(el);\n                    });\n                });\n            }\n            else {\n                group.removeAll();\n            }\n        }\n    };\n\n    module.exports = SymbolDraw;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/helper/SymbolDraw.js\n// module id = 580\n// module chunks = 0 1 2","/**\n * @module echarts/chart/helper/Symbol\n */\n\n\n    var graphic = require('../../util/graphic');\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../../util/model');\n\n    var helper = {};\n\n    helper.findLabelValueDim = function (data) {\n        var valueDim;\n        var labelDims = modelUtil.otherDimToDataDim(data, 'label');\n\n        if (labelDims.length) {\n            valueDim = labelDims[0];\n        }\n        else {\n            // Get last value dim\n            var dimensions = data.dimensions.slice();\n            var dataType;\n            while (dimensions.length && (\n                valueDim = dimensions.pop(),\n                dataType = data.getDimensionInfo(valueDim).type,\n                dataType === 'ordinal' || dataType === 'time'\n            )) {} // jshint ignore:line\n        }\n\n        return valueDim;\n    };\n\n    helper.setTextToStyle = function (\n        data, dataIndex, valueDim, elStyle, seriesModel, labelModel, color\n    ) {\n        if (valueDim != null && labelModel.getShallow('show')) {\n            graphic.setText(elStyle, labelModel, color);\n            elStyle.text = zrUtil.retrieve(\n                seriesModel.getFormattedLabel(dataIndex, 'normal'),\n                data.get(valueDim, dataIndex)\n            );\n        }\n        else {\n            elStyle.text = '';\n        }\n    };\n\n    module.exports = helper;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/helper/labelHelper.js\n// module id = 581\n// module chunks = 0 1 2","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var echarts = require('../echarts');\n    var PRIORITY = echarts.PRIORITY;\n\n    require('./line/LineSeries');\n    require('./line/LineView');\n\n    echarts.registerVisual(zrUtil.curry(\n        require('../visual/symbol'), 'line', 'circle', 'line'\n    ));\n    echarts.registerLayout(zrUtil.curry(\n        require('../layout/points'), 'line'\n    ));\n\n    // Down sample after filter\n    echarts.registerProcessor(PRIORITY.PROCESSOR.STATISTIC, zrUtil.curry(\n        require('../processor/dataSample'), 'line'\n    ));\n\n    // In case developer forget to include grid component\n    require('../component/gridSimple');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/line.js\n// module id = 582\n// module chunks = 0 1 2","'use strict';\n\n\n    var createListFromArray = require('../helper/createListFromArray');\n    var SeriesModel = require('../../model/Series');\n\n    module.exports = SeriesModel.extend({\n\n        type: 'series.line',\n\n        dependencies: ['grid', 'polar'],\n\n        getInitialData: function (option, ecModel) {\n            if (__DEV__) {\n                var coordSys = option.coordinateSystem;\n                if (coordSys !== 'polar' && coordSys !== 'cartesian2d') {\n                    throw new Error('Line not support coordinateSystem besides cartesian and polar');\n                }\n            }\n            return createListFromArray(option.data, this, ecModel);\n        },\n\n        defaultOption: {\n            zlevel: 0,                  // 一级层叠\n            z: 2,                       // 二级层叠\n            coordinateSystem: 'cartesian2d',\n            legendHoverLink: true,\n\n            hoverAnimation: true,\n            // stack: null\n            // xAxisIndex: 0,\n            // yAxisIndex: 0,\n\n            // polarIndex: 0,\n\n            // If clip the overflow value\n            clipOverflow: true,\n            // cursor: null,\n\n            label: {\n                normal: {\n                    position: 'top'\n                }\n            },\n            // itemStyle: {\n            //     normal: {},\n            //     emphasis: {}\n            // },\n            lineStyle: {\n                normal: {\n                    width: 2,\n                    type: 'solid'\n                }\n            },\n            // areaStyle: {},\n            // false, 'start', 'end', 'middle'\n            step: false,\n\n            // Disabled if step is true\n            smooth: false,\n            smoothMonotone: null,\n            // 拐点图形类型\n            symbol: 'emptyCircle',\n            // 拐点图形大小\n            symbolSize: 4,\n            // 拐点图形旋转控制\n            symbolRotate: null,\n\n            // 是否显示 symbol, 只有在 tooltip hover 的时候显示\n            showSymbol: true,\n            // 标志图形默认只有主轴显示（随主轴标签间隔隐藏策略）\n            showAllSymbol: false,\n\n            // 是否连接断点\n            connectNulls: false,\n\n            // 数据过滤，'average', 'max', 'min', 'sum'\n            sampling: 'none',\n\n            animationEasing: 'linear',\n\n            // Disable progressive\n            progressive: 0,\n            hoverLayerThreshold: Infinity\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/line/LineSeries.js\n// module id = 583\n// module chunks = 0 1 2","'use strict';\n// FIXME step not support polar\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var SymbolDraw = require('../helper/SymbolDraw');\n    var Symbol = require('../helper/Symbol');\n    var lineAnimationDiff = require('./lineAnimationDiff');\n    var graphic = require('../../util/graphic');\n    var modelUtil = require('../../util/model');\n    var polyHelper = require('./poly');\n    var ChartView = require('../../view/Chart');\n\n    function isPointsSame(points1, points2) {\n        if (points1.length !== points2.length) {\n            return;\n        }\n        for (var i = 0; i < points1.length; i++) {\n            var p1 = points1[i];\n            var p2 = points2[i];\n            if (p1[0] !== p2[0] || p1[1] !== p2[1]) {\n                return;\n            }\n        }\n        return true;\n    }\n\n    function getSmooth(smooth) {\n        return typeof (smooth) === 'number' ? smooth : (smooth ? 0.3 : 0);\n    }\n\n    function getAxisExtentWithGap(axis) {\n        var extent = axis.getGlobalExtent();\n        if (axis.onBand) {\n            // Remove extra 1px to avoid line miter in clipped edge\n            var halfBandWidth = axis.getBandWidth() / 2 - 1;\n            var dir = extent[1] > extent[0] ? 1 : -1;\n            extent[0] += dir * halfBandWidth;\n            extent[1] -= dir * halfBandWidth;\n        }\n        return extent;\n    }\n\n    function sign(val) {\n        return val >= 0 ? 1 : -1;\n    }\n    /**\n     * @param {module:echarts/coord/cartesian/Cartesian2D|module:echarts/coord/polar/Polar} coordSys\n     * @param {module:echarts/data/List} data\n     * @param {Array.<Array.<number>>} points\n     * @private\n     */\n    function getStackedOnPoints(coordSys, data) {\n        var baseAxis = coordSys.getBaseAxis();\n        var valueAxis = coordSys.getOtherAxis(baseAxis);\n        var valueStart = baseAxis.onZero\n            ? 0 : valueAxis.scale.getExtent()[0];\n\n        var valueDim = valueAxis.dim;\n\n        var baseDataOffset = valueDim === 'x' || valueDim === 'radius' ? 1 : 0;\n\n        return data.mapArray([valueDim], function (val, idx) {\n            var stackedOnSameSign;\n            var stackedOn = data.stackedOn;\n            // Find first stacked value with same sign\n            while (stackedOn &&\n                sign(stackedOn.get(valueDim, idx)) === sign(val)\n            ) {\n                stackedOnSameSign = stackedOn;\n                break;\n            }\n            var stackedData = [];\n            stackedData[baseDataOffset] = data.get(baseAxis.dim, idx);\n            stackedData[1 - baseDataOffset] = stackedOnSameSign\n                ? stackedOnSameSign.get(valueDim, idx, true) : valueStart;\n\n            return coordSys.dataToPoint(stackedData);\n        }, true);\n    }\n\n    function createGridClipShape(cartesian, hasAnimation, seriesModel) {\n        var xExtent = getAxisExtentWithGap(cartesian.getAxis('x'));\n        var yExtent = getAxisExtentWithGap(cartesian.getAxis('y'));\n        var isHorizontal = cartesian.getBaseAxis().isHorizontal();\n\n        var x = Math.min(xExtent[0], xExtent[1]);\n        var y = Math.min(yExtent[0], yExtent[1]);\n        var width = Math.max(xExtent[0], xExtent[1]) - x;\n        var height = Math.max(yExtent[0], yExtent[1]) - y;\n        var lineWidth = seriesModel.get('lineStyle.normal.width') || 2;\n        // Expand clip shape to avoid clipping when line value exceeds axis\n        var expandSize = seriesModel.get('clipOverflow') ? lineWidth / 2 : Math.max(width, height);\n        if (isHorizontal) {\n            y -= expandSize;\n            height += expandSize * 2;\n        }\n        else {\n            x -= expandSize;\n            width += expandSize * 2;\n        }\n\n        var clipPath = new graphic.Rect({\n            shape: {\n                x: x,\n                y: y,\n                width: width,\n                height: height\n            }\n        });\n\n        if (hasAnimation) {\n            clipPath.shape[isHorizontal ? 'width' : 'height'] = 0;\n            graphic.initProps(clipPath, {\n                shape: {\n                    width: width,\n                    height: height\n                }\n            }, seriesModel);\n        }\n\n        return clipPath;\n    }\n\n    function createPolarClipShape(polar, hasAnimation, seriesModel) {\n        var angleAxis = polar.getAngleAxis();\n        var radiusAxis = polar.getRadiusAxis();\n\n        var radiusExtent = radiusAxis.getExtent();\n        var angleExtent = angleAxis.getExtent();\n\n        var RADIAN = Math.PI / 180;\n\n        var clipPath = new graphic.Sector({\n            shape: {\n                cx: polar.cx,\n                cy: polar.cy,\n                r0: radiusExtent[0],\n                r: radiusExtent[1],\n                startAngle: -angleExtent[0] * RADIAN,\n                endAngle: -angleExtent[1] * RADIAN,\n                clockwise: angleAxis.inverse\n            }\n        });\n\n        if (hasAnimation) {\n            clipPath.shape.endAngle = -angleExtent[0] * RADIAN;\n            graphic.initProps(clipPath, {\n                shape: {\n                    endAngle: -angleExtent[1] * RADIAN\n                }\n            }, seriesModel);\n        }\n\n        return clipPath;\n    }\n\n    function createClipShape(coordSys, hasAnimation, seriesModel) {\n        return coordSys.type === 'polar'\n            ? createPolarClipShape(coordSys, hasAnimation, seriesModel)\n            : createGridClipShape(coordSys, hasAnimation, seriesModel);\n    }\n\n    function turnPointsIntoStep(points, coordSys, stepTurnAt) {\n        var baseAxis = coordSys.getBaseAxis();\n        var baseIndex = baseAxis.dim === 'x' || baseAxis.dim === 'radius' ? 0 : 1;\n\n        var stepPoints = [];\n        for (var i = 0; i < points.length - 1; i++) {\n            var nextPt = points[i + 1];\n            var pt = points[i];\n            stepPoints.push(pt);\n\n            var stepPt = [];\n            switch (stepTurnAt) {\n                case 'end':\n                    stepPt[baseIndex] = nextPt[baseIndex];\n                    stepPt[1 - baseIndex] = pt[1 - baseIndex];\n                    // default is start\n                    stepPoints.push(stepPt);\n                    break;\n                case 'middle':\n                    // default is start\n                    var middle = (pt[baseIndex] + nextPt[baseIndex]) / 2;\n                    var stepPt2 = [];\n                    stepPt[baseIndex] = stepPt2[baseIndex] = middle;\n                    stepPt[1 - baseIndex] = pt[1 - baseIndex];\n                    stepPt2[1 - baseIndex] = nextPt[1 - baseIndex];\n                    stepPoints.push(stepPt);\n                    stepPoints.push(stepPt2);\n                    break;\n                default:\n                    stepPt[baseIndex] = pt[baseIndex];\n                    stepPt[1 - baseIndex] = nextPt[1 - baseIndex];\n                    // default is start\n                    stepPoints.push(stepPt);\n            }\n        }\n        // Last points\n        points[i] && stepPoints.push(points[i]);\n        return stepPoints;\n    }\n\n    function getVisualGradient(data, coordSys) {\n        var visualMetaList = data.getVisual('visualMeta');\n        if (!visualMetaList || !visualMetaList.length || !data.count()) {\n            // When data.count() is 0, gradient range can not be calculated.\n            return;\n        }\n\n        var visualMeta;\n        for (var i = visualMetaList.length - 1; i >= 0; i--) {\n            // Can only be x or y\n            if (visualMetaList[i].dimension < 2) {\n                visualMeta = visualMetaList[i];\n                break;\n            }\n        }\n        if (!visualMeta || coordSys.type !== 'cartesian2d') {\n            if (__DEV__) {\n                console.warn('Visual map on line style only support x or y dimension.');\n            }\n            return;\n        }\n\n        // If the area to be rendered is bigger than area defined by LinearGradient,\n        // the canvas spec prescribes that the color of the first stop and the last\n        // stop should be used. But if two stops are added at offset 0, in effect\n        // browsers use the color of the second stop to render area outside\n        // LinearGradient. So we can only infinitesimally extend area defined in\n        // LinearGradient to render `outerColors`.\n\n        var dimension = visualMeta.dimension;\n        var dimName = data.dimensions[dimension];\n        var axis = coordSys.getAxis(dimName);\n\n        // dataToCoor mapping may not be linear, but must be monotonic.\n        var colorStops = zrUtil.map(visualMeta.stops, function (stop) {\n            return {\n                coord: axis.toGlobalCoord(axis.dataToCoord(stop.value)),\n                color: stop.color\n            };\n        });\n        var stopLen = colorStops.length;\n        var outerColors = visualMeta.outerColors.slice();\n\n        if (stopLen && colorStops[0].coord > colorStops[stopLen - 1].coord) {\n            colorStops.reverse();\n            outerColors.reverse();\n        }\n\n        var tinyExtent = 10; // Arbitrary value: 10px\n        var minCoord = colorStops[0].coord - tinyExtent;\n        var maxCoord = colorStops[stopLen - 1].coord + tinyExtent;\n        var coordSpan = maxCoord - minCoord;\n\n        if (coordSpan < 1e-3) {\n            return 'transparent';\n        }\n\n        zrUtil.each(colorStops, function (stop) {\n            stop.offset = (stop.coord - minCoord) / coordSpan;\n        });\n        colorStops.push({\n            offset: stopLen ? colorStops[stopLen - 1].offset : 0.5,\n            color: outerColors[1] || 'transparent'\n        });\n        colorStops.unshift({ // notice colorStops.length have been changed.\n            offset: stopLen ? colorStops[0].offset : 0.5,\n            color: outerColors[0] || 'transparent'\n        });\n\n        // zrUtil.each(colorStops, function (colorStop) {\n        //     // Make sure each offset has rounded px to avoid not sharp edge\n        //     colorStop.offset = (Math.round(colorStop.offset * (end - start) + start) - start) / (end - start);\n        // });\n\n        var gradient = new graphic.LinearGradient(0, 0, 0, 0, colorStops, true);\n        gradient[dimName] = minCoord;\n        gradient[dimName + '2'] = maxCoord;\n\n        return gradient;\n    }\n\n    module.exports = ChartView.extend({\n\n        type: 'line',\n\n        init: function () {\n            var lineGroup = new graphic.Group();\n\n            var symbolDraw = new SymbolDraw();\n            this.group.add(symbolDraw.group);\n\n            this._symbolDraw = symbolDraw;\n            this._lineGroup = lineGroup;\n        },\n\n        render: function (seriesModel, ecModel, api) {\n            var coordSys = seriesModel.coordinateSystem;\n            var group = this.group;\n            var data = seriesModel.getData();\n            var lineStyleModel = seriesModel.getModel('lineStyle.normal');\n            var areaStyleModel = seriesModel.getModel('areaStyle.normal');\n\n            var points = data.mapArray(data.getItemLayout, true);\n\n            var isCoordSysPolar = coordSys.type === 'polar';\n            var prevCoordSys = this._coordSys;\n\n            var symbolDraw = this._symbolDraw;\n            var polyline = this._polyline;\n            var polygon = this._polygon;\n\n            var lineGroup = this._lineGroup;\n\n            var hasAnimation = seriesModel.get('animation');\n\n            var isAreaChart = !areaStyleModel.isEmpty();\n            var stackedOnPoints = getStackedOnPoints(coordSys, data);\n\n            var showSymbol = seriesModel.get('showSymbol');\n\n            var isSymbolIgnore = showSymbol && !isCoordSysPolar && !seriesModel.get('showAllSymbol')\n                && this._getSymbolIgnoreFunc(data, coordSys);\n\n            // Remove temporary symbols\n            var oldData = this._data;\n            oldData && oldData.eachItemGraphicEl(function (el, idx) {\n                if (el.__temp) {\n                    group.remove(el);\n                    oldData.setItemGraphicEl(idx, null);\n                }\n            });\n\n            // Remove previous created symbols if showSymbol changed to false\n            if (!showSymbol) {\n                symbolDraw.remove();\n            }\n\n            group.add(lineGroup);\n\n            // FIXME step not support polar\n            var step = !isCoordSysPolar && seriesModel.get('step');\n            // Initialization animation or coordinate system changed\n            if (\n                !(polyline && prevCoordSys.type === coordSys.type && step === this._step)\n            ) {\n                showSymbol && symbolDraw.updateData(data, isSymbolIgnore);\n\n                if (step) {\n                    // TODO If stacked series is not step\n                    points = turnPointsIntoStep(points, coordSys, step);\n                    stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n                }\n\n                polyline = this._newPolyline(points, coordSys, hasAnimation);\n                if (isAreaChart) {\n                    polygon = this._newPolygon(\n                        points, stackedOnPoints,\n                        coordSys, hasAnimation\n                    );\n                }\n                lineGroup.setClipPath(createClipShape(coordSys, true, seriesModel));\n            }\n            else {\n                if (isAreaChart && !polygon) {\n                    // If areaStyle is added\n                    polygon = this._newPolygon(\n                        points, stackedOnPoints,\n                        coordSys, hasAnimation\n                    );\n                }\n                else if (polygon && !isAreaChart) {\n                    // If areaStyle is removed\n                    lineGroup.remove(polygon);\n                    polygon = this._polygon = null;\n                }\n\n                // Update clipPath\n                lineGroup.setClipPath(createClipShape(coordSys, false, seriesModel));\n\n                // Always update, or it is wrong in the case turning on legend\n                // because points are not changed\n                showSymbol && symbolDraw.updateData(data, isSymbolIgnore);\n\n                // Stop symbol animation and sync with line points\n                // FIXME performance?\n                data.eachItemGraphicEl(function (el) {\n                    el.stopAnimation(true);\n                });\n\n                // In the case data zoom triggerred refreshing frequently\n                // Data may not change if line has a category axis. So it should animate nothing\n                if (!isPointsSame(this._stackedOnPoints, stackedOnPoints)\n                    || !isPointsSame(this._points, points)\n                ) {\n                    if (hasAnimation) {\n                        this._updateAnimation(\n                            data, stackedOnPoints, coordSys, api, step\n                        );\n                    }\n                    else {\n                        // Not do it in update with animation\n                        if (step) {\n                            // TODO If stacked series is not step\n                            points = turnPointsIntoStep(points, coordSys, step);\n                            stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n                        }\n\n                        polyline.setShape({\n                            points: points\n                        });\n                        polygon && polygon.setShape({\n                            points: points,\n                            stackedOnPoints: stackedOnPoints\n                        });\n                    }\n                }\n            }\n\n            var visualColor = getVisualGradient(data, coordSys) || data.getVisual('color');\n\n            polyline.useStyle(zrUtil.defaults(\n                // Use color in lineStyle first\n                lineStyleModel.getLineStyle(),\n                {\n                    fill: 'none',\n                    stroke: visualColor,\n                    lineJoin: 'bevel'\n                }\n            ));\n\n            var smooth = seriesModel.get('smooth');\n            smooth = getSmooth(seriesModel.get('smooth'));\n            polyline.setShape({\n                smooth: smooth,\n                smoothMonotone: seriesModel.get('smoothMonotone'),\n                connectNulls: seriesModel.get('connectNulls')\n            });\n\n            if (polygon) {\n                var stackedOn = data.stackedOn;\n                var stackedOnSmooth = 0;\n\n                polygon.useStyle(zrUtil.defaults(\n                    areaStyleModel.getAreaStyle(),\n                    {\n                        fill: visualColor,\n                        opacity: 0.7,\n                        lineJoin: 'bevel'\n                    }\n                ));\n\n                if (stackedOn) {\n                    var stackedOnSeries = stackedOn.hostModel;\n                    stackedOnSmooth = getSmooth(stackedOnSeries.get('smooth'));\n                }\n\n                polygon.setShape({\n                    smooth: smooth,\n                    stackedOnSmooth: stackedOnSmooth,\n                    smoothMonotone: seriesModel.get('smoothMonotone'),\n                    connectNulls: seriesModel.get('connectNulls')\n                });\n            }\n\n            this._data = data;\n            // Save the coordinate system for transition animation when data changed\n            this._coordSys = coordSys;\n            this._stackedOnPoints = stackedOnPoints;\n            this._points = points;\n            this._step = step;\n        },\n\n        dispose: function () {},\n\n        highlight: function (seriesModel, ecModel, api, payload) {\n            var data = seriesModel.getData();\n            var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n            if (!(dataIndex instanceof Array) && dataIndex != null && dataIndex >= 0) {\n                var symbol = data.getItemGraphicEl(dataIndex);\n                if (!symbol) {\n                    // Create a temporary symbol if it is not exists\n                    var pt = data.getItemLayout(dataIndex);\n                    if (!pt) {\n                        // Null data\n                        return;\n                    }\n                    symbol = new Symbol(data, dataIndex);\n                    symbol.position = pt;\n                    symbol.setZ(\n                        seriesModel.get('zlevel'),\n                        seriesModel.get('z')\n                    );\n                    symbol.ignore = isNaN(pt[0]) || isNaN(pt[1]);\n                    symbol.__temp = true;\n                    data.setItemGraphicEl(dataIndex, symbol);\n\n                    // Stop scale animation\n                    symbol.stopSymbolAnimation(true);\n\n                    this.group.add(symbol);\n                }\n                symbol.highlight();\n            }\n            else {\n                // Highlight whole series\n                ChartView.prototype.highlight.call(\n                    this, seriesModel, ecModel, api, payload\n                );\n            }\n        },\n\n        downplay: function (seriesModel, ecModel, api, payload) {\n            var data = seriesModel.getData();\n            var dataIndex = modelUtil.queryDataIndex(data, payload);\n            if (dataIndex != null && dataIndex >= 0) {\n                var symbol = data.getItemGraphicEl(dataIndex);\n                if (symbol) {\n                    if (symbol.__temp) {\n                        data.setItemGraphicEl(dataIndex, null);\n                        this.group.remove(symbol);\n                    }\n                    else {\n                        symbol.downplay();\n                    }\n                }\n            }\n            else {\n                // FIXME\n                // can not downplay completely.\n                // Downplay whole series\n                ChartView.prototype.downplay.call(\n                    this, seriesModel, ecModel, api, payload\n                );\n            }\n        },\n\n        /**\n         * @param {module:zrender/container/Group} group\n         * @param {Array.<Array.<number>>} points\n         * @private\n         */\n        _newPolyline: function (points) {\n            var polyline = this._polyline;\n            // Remove previous created polyline\n            if (polyline) {\n                this._lineGroup.remove(polyline);\n            }\n\n            polyline = new polyHelper.Polyline({\n                shape: {\n                    points: points\n                },\n                silent: true,\n                z2: 10\n            });\n\n            this._lineGroup.add(polyline);\n\n            this._polyline = polyline;\n\n            return polyline;\n        },\n\n        /**\n         * @param {module:zrender/container/Group} group\n         * @param {Array.<Array.<number>>} stackedOnPoints\n         * @param {Array.<Array.<number>>} points\n         * @private\n         */\n        _newPolygon: function (points, stackedOnPoints) {\n            var polygon = this._polygon;\n            // Remove previous created polygon\n            if (polygon) {\n                this._lineGroup.remove(polygon);\n            }\n\n            polygon = new polyHelper.Polygon({\n                shape: {\n                    points: points,\n                    stackedOnPoints: stackedOnPoints\n                },\n                silent: true\n            });\n\n            this._lineGroup.add(polygon);\n\n            this._polygon = polygon;\n            return polygon;\n        },\n        /**\n         * @private\n         */\n        _getSymbolIgnoreFunc: function (data, coordSys) {\n            var categoryAxis = coordSys.getAxesByScale('ordinal')[0];\n            // `getLabelInterval` is provided by echarts/component/axis\n            if (categoryAxis && categoryAxis.isLabelIgnored) {\n                return zrUtil.bind(categoryAxis.isLabelIgnored, categoryAxis);\n            }\n        },\n\n        /**\n         * @private\n         */\n        // FIXME Two value axis\n        _updateAnimation: function (data, stackedOnPoints, coordSys, api, step) {\n            var polyline = this._polyline;\n            var polygon = this._polygon;\n            var seriesModel = data.hostModel;\n\n            var diff = lineAnimationDiff(\n                this._data, data,\n                this._stackedOnPoints, stackedOnPoints,\n                this._coordSys, coordSys\n            );\n\n            var current = diff.current;\n            var stackedOnCurrent = diff.stackedOnCurrent;\n            var next = diff.next;\n            var stackedOnNext = diff.stackedOnNext;\n            if (step) {\n                // TODO If stacked series is not step\n                current = turnPointsIntoStep(diff.current, coordSys, step);\n                stackedOnCurrent = turnPointsIntoStep(diff.stackedOnCurrent, coordSys, step);\n                next = turnPointsIntoStep(diff.next, coordSys, step);\n                stackedOnNext = turnPointsIntoStep(diff.stackedOnNext, coordSys, step);\n            }\n            // `diff.current` is subset of `current` (which should be ensured by\n            // turnPointsIntoStep), so points in `__points` can be updated when\n            // points in `current` are update during animation.\n            polyline.shape.__points = diff.current;\n            polyline.shape.points = current;\n\n            graphic.updateProps(polyline, {\n                shape: {\n                    points: next\n                }\n            }, seriesModel);\n\n            if (polygon) {\n                polygon.setShape({\n                    points: current,\n                    stackedOnPoints: stackedOnCurrent\n                });\n                graphic.updateProps(polygon, {\n                    shape: {\n                        points: next,\n                        stackedOnPoints: stackedOnNext\n                    }\n                }, seriesModel);\n            }\n\n            var updatedDataInfo = [];\n            var diffStatus = diff.status;\n\n            for (var i = 0; i < diffStatus.length; i++) {\n                var cmd = diffStatus[i].cmd;\n                if (cmd === '=') {\n                    var el = data.getItemGraphicEl(diffStatus[i].idx1);\n                    if (el) {\n                        updatedDataInfo.push({\n                            el: el,\n                            ptIdx: i    // Index of points\n                        });\n                    }\n                }\n            }\n\n            if (polyline.animators && polyline.animators.length) {\n                polyline.animators[0].during(function () {\n                    for (var i = 0; i < updatedDataInfo.length; i++) {\n                        var el = updatedDataInfo[i].el;\n                        el.attr('position', polyline.shape.__points[updatedDataInfo[i].ptIdx]);\n                    }\n                });\n            }\n        },\n\n        remove: function (ecModel) {\n            var group = this.group;\n            var oldData = this._data;\n            this._lineGroup.removeAll();\n            this._symbolDraw.remove(true);\n            // Remove temporary created elements when highlighting\n            oldData && oldData.eachItemGraphicEl(function (el, idx) {\n                if (el.__temp) {\n                    group.remove(el);\n                    oldData.setItemGraphicEl(idx, null);\n                }\n            });\n\n            this._polyline =\n            this._polygon =\n            this._coordSys =\n            this._points =\n            this._stackedOnPoints =\n            this._data = null;\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/line/LineView.js\n// module id = 584\n// module chunks = 0 1 2","\n\n    // var arrayDiff = require('zrender/lib/core/arrayDiff');\n    // 'zrender/core/arrayDiff' has been used before, but it did\n    // not do well in performance when roam with fixed dataZoom window.\n\n    function sign(val) {\n        return val >= 0 ? 1 : -1;\n    }\n\n    function getStackedOnPoint(coordSys, data, idx) {\n        var baseAxis = coordSys.getBaseAxis();\n        var valueAxis = coordSys.getOtherAxis(baseAxis);\n        var valueStart = baseAxis.onZero\n            ? 0 : valueAxis.scale.getExtent()[0];\n\n        var valueDim = valueAxis.dim;\n        var baseDataOffset = valueDim === 'x' || valueDim === 'radius' ? 1 : 0;\n\n        var stackedOnSameSign;\n        var stackedOn = data.stackedOn;\n        var val = data.get(valueDim, idx);\n        // Find first stacked value with same sign\n        while (stackedOn &&\n            sign(stackedOn.get(valueDim, idx)) === sign(val)\n        ) {\n            stackedOnSameSign = stackedOn;\n            break;\n        }\n        var stackedData = [];\n        stackedData[baseDataOffset] = data.get(baseAxis.dim, idx);\n        stackedData[1 - baseDataOffset] = stackedOnSameSign\n            ? stackedOnSameSign.get(valueDim, idx, true) : valueStart;\n\n        return coordSys.dataToPoint(stackedData);\n    }\n\n    // function convertToIntId(newIdList, oldIdList) {\n    //     // Generate int id instead of string id.\n    //     // Compare string maybe slow in score function of arrDiff\n\n    //     // Assume id in idList are all unique\n    //     var idIndicesMap = {};\n    //     var idx = 0;\n    //     for (var i = 0; i < newIdList.length; i++) {\n    //         idIndicesMap[newIdList[i]] = idx;\n    //         newIdList[i] = idx++;\n    //     }\n    //     for (var i = 0; i < oldIdList.length; i++) {\n    //         var oldId = oldIdList[i];\n    //         // Same with newIdList\n    //         if (idIndicesMap[oldId]) {\n    //             oldIdList[i] = idIndicesMap[oldId];\n    //         }\n    //         else {\n    //             oldIdList[i] = idx++;\n    //         }\n    //     }\n    // }\n\n    function diffData(oldData, newData) {\n        var diffResult = [];\n\n        newData.diff(oldData)\n            .add(function (idx) {\n                diffResult.push({cmd: '+', idx: idx});\n            })\n            .update(function (newIdx, oldIdx) {\n                diffResult.push({cmd: '=', idx: oldIdx, idx1: newIdx});\n            })\n            .remove(function (idx) {\n                diffResult.push({cmd: '-', idx: idx});\n            })\n            .execute();\n\n        return diffResult;\n    }\n\n    module.exports = function (\n        oldData, newData,\n        oldStackedOnPoints, newStackedOnPoints,\n        oldCoordSys, newCoordSys\n    ) {\n        var diff = diffData(oldData, newData);\n\n        // var newIdList = newData.mapArray(newData.getId);\n        // var oldIdList = oldData.mapArray(oldData.getId);\n\n        // convertToIntId(newIdList, oldIdList);\n\n        // // FIXME One data ?\n        // diff = arrayDiff(oldIdList, newIdList);\n\n        var currPoints = [];\n        var nextPoints = [];\n        // Points for stacking base line\n        var currStackedPoints = [];\n        var nextStackedPoints = [];\n\n        var status = [];\n        var sortedIndices = [];\n        var rawIndices = [];\n        var dims = newCoordSys.dimensions;\n        for (var i = 0; i < diff.length; i++) {\n            var diffItem = diff[i];\n            var pointAdded = true;\n\n            // FIXME, animation is not so perfect when dataZoom window moves fast\n            // Which is in case remvoing or add more than one data in the tail or head\n            switch (diffItem.cmd) {\n                case '=':\n                    var currentPt = oldData.getItemLayout(diffItem.idx);\n                    var nextPt = newData.getItemLayout(diffItem.idx1);\n                    // If previous data is NaN, use next point directly\n                    if (isNaN(currentPt[0]) || isNaN(currentPt[1])) {\n                        currentPt = nextPt.slice();\n                    }\n                    currPoints.push(currentPt);\n                    nextPoints.push(nextPt);\n\n                    currStackedPoints.push(oldStackedOnPoints[diffItem.idx]);\n                    nextStackedPoints.push(newStackedOnPoints[diffItem.idx1]);\n\n                    rawIndices.push(newData.getRawIndex(diffItem.idx1));\n                    break;\n                case '+':\n                    var idx = diffItem.idx;\n                    currPoints.push(\n                        oldCoordSys.dataToPoint([\n                            newData.get(dims[0], idx, true), newData.get(dims[1], idx, true)\n                        ])\n                    );\n\n                    nextPoints.push(newData.getItemLayout(idx).slice());\n\n                    currStackedPoints.push(\n                        getStackedOnPoint(oldCoordSys, newData, idx)\n                    );\n                    nextStackedPoints.push(newStackedOnPoints[idx]);\n\n                    rawIndices.push(newData.getRawIndex(idx));\n                    break;\n                case '-':\n                    var idx = diffItem.idx;\n                    var rawIndex = oldData.getRawIndex(idx);\n                    // Data is replaced. In the case of dynamic data queue\n                    // FIXME FIXME FIXME\n                    if (rawIndex !== idx) {\n                        currPoints.push(oldData.getItemLayout(idx));\n                        nextPoints.push(newCoordSys.dataToPoint([\n                            oldData.get(dims[0], idx, true), oldData.get(dims[1], idx, true)\n                        ]));\n\n                        currStackedPoints.push(oldStackedOnPoints[idx]);\n                        nextStackedPoints.push(\n                            getStackedOnPoint(\n                                newCoordSys, oldData, idx\n                            )\n                        );\n\n                        rawIndices.push(rawIndex);\n                    }\n                    else {\n                        pointAdded = false;\n                    }\n            }\n\n            // Original indices\n            if (pointAdded) {\n                status.push(diffItem);\n                sortedIndices.push(sortedIndices.length);\n            }\n        }\n\n        // Diff result may be crossed if all items are changed\n        // Sort by data index\n        sortedIndices.sort(function (a, b) {\n            return rawIndices[a] - rawIndices[b];\n        });\n\n        var sortedCurrPoints = [];\n        var sortedNextPoints = [];\n\n        var sortedCurrStackedPoints = [];\n        var sortedNextStackedPoints = [];\n\n        var sortedStatus = [];\n        for (var i = 0; i < sortedIndices.length; i++) {\n            var idx = sortedIndices[i];\n            sortedCurrPoints[i] = currPoints[idx];\n            sortedNextPoints[i] = nextPoints[idx];\n\n            sortedCurrStackedPoints[i] = currStackedPoints[idx];\n            sortedNextStackedPoints[i] = nextStackedPoints[idx];\n\n            sortedStatus[i] = status[idx];\n        }\n\n        return {\n            current: sortedCurrPoints,\n            next: sortedNextPoints,\n\n            stackedOnCurrent: sortedCurrStackedPoints,\n            stackedOnNext: sortedNextStackedPoints,\n\n            status: sortedStatus\n        };\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/line/lineAnimationDiff.js\n// module id = 585\n// module chunks = 0 1 2","// Poly path support NaN point\n\n\n    var Path = require('zrender/lib/graphic/Path');\n    var vec2 = require('zrender/lib/core/vector');\n\n    var vec2Min = vec2.min;\n    var vec2Max = vec2.max;\n\n    var scaleAndAdd = vec2.scaleAndAdd;\n    var v2Copy = vec2.copy;\n\n    // Temporary variable\n    var v = [];\n    var cp0 = [];\n    var cp1 = [];\n\n    function isPointNull(p) {\n        return isNaN(p[0]) || isNaN(p[1]);\n    }\n\n    function drawSegment(\n        ctx, points, start, segLen, allLen,\n        dir, smoothMin, smoothMax, smooth, smoothMonotone, connectNulls\n    ) {\n        var prevIdx = 0;\n        var idx = start;\n        for (var k = 0; k < segLen; k++) {\n            var p = points[idx];\n            if (idx >= allLen || idx < 0) {\n                break;\n            }\n            if (isPointNull(p)) {\n                if (connectNulls) {\n                    idx += dir;\n                    continue;\n                }\n                break;\n            }\n\n            if (idx === start) {\n                ctx[dir > 0 ? 'moveTo' : 'lineTo'](p[0], p[1]);\n                v2Copy(cp0, p);\n            }\n            else {\n                if (smooth > 0) {\n                    var nextIdx = idx + dir;\n                    var nextP = points[nextIdx];\n                    if (connectNulls) {\n                        // Find next point not null\n                        while (nextP && isPointNull(points[nextIdx])) {\n                            nextIdx += dir;\n                            nextP = points[nextIdx];\n                        }\n                    }\n\n                    var ratioNextSeg = 0.5;\n                    var prevP = points[prevIdx];\n                    var nextP = points[nextIdx];\n                    // Last point\n                    if (!nextP || isPointNull(nextP)) {\n                        v2Copy(cp1, p);\n                    }\n                    else {\n                        // If next data is null in not connect case\n                        if (isPointNull(nextP) && !connectNulls) {\n                            nextP = p;\n                        }\n\n                        vec2.sub(v, nextP, prevP);\n\n                        var lenPrevSeg;\n                        var lenNextSeg;\n                        if (smoothMonotone === 'x' || smoothMonotone === 'y') {\n                            var dim = smoothMonotone === 'x' ? 0 : 1;\n                            lenPrevSeg = Math.abs(p[dim] - prevP[dim]);\n                            lenNextSeg = Math.abs(p[dim] - nextP[dim]);\n                        }\n                        else {\n                            lenPrevSeg = vec2.dist(p, prevP);\n                            lenNextSeg = vec2.dist(p, nextP);\n                        }\n\n                        // Use ratio of seg length\n                        ratioNextSeg = lenNextSeg / (lenNextSeg + lenPrevSeg);\n\n                        scaleAndAdd(cp1, p, v, -smooth * (1 - ratioNextSeg));\n                    }\n                    // Smooth constraint\n                    vec2Min(cp0, cp0, smoothMax);\n                    vec2Max(cp0, cp0, smoothMin);\n                    vec2Min(cp1, cp1, smoothMax);\n                    vec2Max(cp1, cp1, smoothMin);\n\n                    ctx.bezierCurveTo(\n                        cp0[0], cp0[1],\n                        cp1[0], cp1[1],\n                        p[0], p[1]\n                    );\n                    // cp0 of next segment\n                    scaleAndAdd(cp0, p, v, smooth * ratioNextSeg);\n                }\n                else {\n                    ctx.lineTo(p[0], p[1]);\n                }\n            }\n\n            prevIdx = idx;\n            idx += dir;\n        }\n\n        return k;\n    }\n\n    function getBoundingBox(points, smoothConstraint) {\n        var ptMin = [Infinity, Infinity];\n        var ptMax = [-Infinity, -Infinity];\n        if (smoothConstraint) {\n            for (var i = 0; i < points.length; i++) {\n                var pt = points[i];\n                if (pt[0] < ptMin[0]) { ptMin[0] = pt[0]; }\n                if (pt[1] < ptMin[1]) { ptMin[1] = pt[1]; }\n                if (pt[0] > ptMax[0]) { ptMax[0] = pt[0]; }\n                if (pt[1] > ptMax[1]) { ptMax[1] = pt[1]; }\n            }\n        }\n        return {\n            min: smoothConstraint ? ptMin : ptMax,\n            max: smoothConstraint ? ptMax : ptMin\n        };\n    }\n\n    module.exports = {\n\n        Polyline: Path.extend({\n\n            type: 'ec-polyline',\n\n            shape: {\n                points: [],\n\n                smooth: 0,\n\n                smoothConstraint: true,\n\n                smoothMonotone: null,\n\n                connectNulls: false\n            },\n\n            style: {\n                fill: null,\n\n                stroke: '#000'\n            },\n\n            buildPath: function (ctx, shape) {\n                var points = shape.points;\n\n                var i = 0;\n                var len = points.length;\n\n                var result = getBoundingBox(points, shape.smoothConstraint);\n\n                if (shape.connectNulls) {\n                    // Must remove first and last null values avoid draw error in polygon\n                    for (; len > 0; len--) {\n                        if (!isPointNull(points[len - 1])) {\n                            break;\n                        }\n                    }\n                    for (; i < len; i++) {\n                        if (!isPointNull(points[i])) {\n                            break;\n                        }\n                    }\n                }\n                while (i < len) {\n                    i += drawSegment(\n                        ctx, points, i, len, len,\n                        1, result.min, result.max, shape.smooth,\n                        shape.smoothMonotone, shape.connectNulls\n                    ) + 1;\n                }\n            }\n        }),\n\n        Polygon: Path.extend({\n\n            type: 'ec-polygon',\n\n            shape: {\n                points: [],\n\n                // Offset between stacked base points and points\n                stackedOnPoints: [],\n\n                smooth: 0,\n\n                stackedOnSmooth: 0,\n\n                smoothConstraint: true,\n\n                smoothMonotone: null,\n\n                connectNulls: false\n            },\n\n            buildPath: function (ctx, shape) {\n                var points = shape.points;\n                var stackedOnPoints = shape.stackedOnPoints;\n\n                var i = 0;\n                var len = points.length;\n                var smoothMonotone = shape.smoothMonotone;\n                var bbox = getBoundingBox(points, shape.smoothConstraint);\n                var stackedOnBBox = getBoundingBox(stackedOnPoints, shape.smoothConstraint);\n\n                if (shape.connectNulls) {\n                    // Must remove first and last null values avoid draw error in polygon\n                    for (; len > 0; len--) {\n                        if (!isPointNull(points[len - 1])) {\n                            break;\n                        }\n                    }\n                    for (; i < len; i++) {\n                        if (!isPointNull(points[i])) {\n                            break;\n                        }\n                    }\n                }\n                while (i < len) {\n                    var k = drawSegment(\n                        ctx, points, i, len, len,\n                        1, bbox.min, bbox.max, shape.smooth,\n                        smoothMonotone, shape.connectNulls\n                    );\n                    drawSegment(\n                        ctx, stackedOnPoints, i + k - 1, k, len,\n                        -1, stackedOnBBox.min, stackedOnBBox.max, shape.stackedOnSmooth,\n                        smoothMonotone, shape.connectNulls\n                    );\n                    i += k + 1;\n\n                    ctx.closePath();\n                }\n            }\n        })\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/line/poly.js\n// module id = 586\n// module chunks = 0 1 2","'use strict';\n// TODO boundaryGap\n\n\n    require('../coord/cartesian/AxisModel');\n\n    require('./axis/CartesianAxisView');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axis.js\n// module id = 587\n// module chunks = 0 1 2","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var graphic = require('../../util/graphic');\n    var AxisBuilder = require('./AxisBuilder');\n    var AxisView = require('./AxisView');\n    var cartesianAxisHelper = require('./cartesianAxisHelper');\n    var ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick;\n    var getInterval = AxisBuilder.getInterval;\n\n    var axisBuilderAttrs = [\n        'axisLine', 'axisLabel', 'axisTick', 'axisName'\n    ];\n    var selfBuilderAttrs = [\n        'splitArea', 'splitLine'\n    ];\n\n    // function getAlignWithLabel(model, axisModel) {\n    //     var alignWithLabel = model.get('alignWithLabel');\n    //     if (alignWithLabel === 'auto') {\n    //         alignWithLabel = axisModel.get('axisTick.alignWithLabel');\n    //     }\n    //     return alignWithLabel;\n    // }\n\n    var CartesianAxisView = AxisView.extend({\n\n        type: 'cartesianAxis',\n\n        axisPointerClass: 'CartesianAxisPointer',\n\n        /**\n         * @override\n         */\n        render: function (axisModel, ecModel, api, payload) {\n\n            this.group.removeAll();\n\n            var oldAxisGroup = this._axisGroup;\n            this._axisGroup = new graphic.Group();\n\n            this.group.add(this._axisGroup);\n\n            if (!axisModel.get('show')) {\n                return;\n            }\n\n            var gridModel = axisModel.getCoordSysModel();\n\n            var layout = cartesianAxisHelper.layout(gridModel, axisModel);\n\n            var axisBuilder = new AxisBuilder(axisModel, layout);\n\n            zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n\n            this._axisGroup.add(axisBuilder.getGroup());\n\n            zrUtil.each(selfBuilderAttrs, function (name) {\n                if (axisModel.get(name + '.show')) {\n                    this['_' + name](axisModel, gridModel, layout.labelInterval);\n                }\n            }, this);\n\n            graphic.groupTransition(oldAxisGroup, this._axisGroup, axisModel);\n\n            CartesianAxisView.superCall(this, 'render', axisModel, ecModel, api, payload);\n        },\n\n        /**\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/coord/cartesian/GridModel} gridModel\n         * @param {number|Function} labelInterval\n         * @private\n         */\n        _splitLine: function (axisModel, gridModel, labelInterval) {\n            var axis = axisModel.axis;\n\n            if (axis.scale.isBlank()) {\n                return;\n            }\n\n            var splitLineModel = axisModel.getModel('splitLine');\n            var lineStyleModel = splitLineModel.getModel('lineStyle');\n            var lineColors = lineStyleModel.get('color');\n\n            var lineInterval = getInterval(splitLineModel, labelInterval);\n\n            lineColors = zrUtil.isArray(lineColors) ? lineColors : [lineColors];\n\n            var gridRect = gridModel.coordinateSystem.getRect();\n            var isHorizontal = axis.isHorizontal();\n\n            var lineCount = 0;\n\n            var ticksCoords = axis.getTicksCoords(\n                // splitLineModel.get('alignWithLabel')\n            );\n            var ticks = axis.scale.getTicks();\n\n            var p1 = [];\n            var p2 = [];\n            // Simple optimization\n            // Batching the lines if color are the same\n            var lineStyle = lineStyleModel.getLineStyle();\n            for (var i = 0; i < ticksCoords.length; i++) {\n                if (ifIgnoreOnTick(axis, i, lineInterval)) {\n                    continue;\n                }\n\n                var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n\n                if (isHorizontal) {\n                    p1[0] = tickCoord;\n                    p1[1] = gridRect.y;\n                    p2[0] = tickCoord;\n                    p2[1] = gridRect.y + gridRect.height;\n                }\n                else {\n                    p1[0] = gridRect.x;\n                    p1[1] = tickCoord;\n                    p2[0] = gridRect.x + gridRect.width;\n                    p2[1] = tickCoord;\n                }\n\n                var colorIndex = (lineCount++) % lineColors.length;\n                this._axisGroup.add(new graphic.Line(graphic.subPixelOptimizeLine({\n                    anid: 'line_' + ticks[i],\n\n                    shape: {\n                        x1: p1[0],\n                        y1: p1[1],\n                        x2: p2[0],\n                        y2: p2[1]\n                    },\n                    style: zrUtil.defaults({\n                        stroke: lineColors[colorIndex]\n                    }, lineStyle),\n                    silent: true\n                })));\n            }\n        },\n\n        /**\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/coord/cartesian/GridModel} gridModel\n         * @param {number|Function} labelInterval\n         * @private\n         */\n        _splitArea: function (axisModel, gridModel, labelInterval) {\n            var axis = axisModel.axis;\n\n            if (axis.scale.isBlank()) {\n                return;\n            }\n\n            var splitAreaModel = axisModel.getModel('splitArea');\n            var areaStyleModel = splitAreaModel.getModel('areaStyle');\n            var areaColors = areaStyleModel.get('color');\n\n            var gridRect = gridModel.coordinateSystem.getRect();\n\n            var ticksCoords = axis.getTicksCoords(\n                // splitAreaModel.get('alignWithLabel')\n            );\n            var ticks = axis.scale.getTicks();\n\n            var prevX = axis.toGlobalCoord(ticksCoords[0]);\n            var prevY = axis.toGlobalCoord(ticksCoords[0]);\n\n            var count = 0;\n\n            var areaInterval = getInterval(splitAreaModel, labelInterval);\n\n            var areaStyle = areaStyleModel.getAreaStyle();\n            areaColors = zrUtil.isArray(areaColors) ? areaColors : [areaColors];\n\n            for (var i = 1; i < ticksCoords.length; i++) {\n                if (ifIgnoreOnTick(axis, i, areaInterval)) {\n                    continue;\n                }\n\n                var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n\n                var x;\n                var y;\n                var width;\n                var height;\n                if (axis.isHorizontal()) {\n                    x = prevX;\n                    y = gridRect.y;\n                    width = tickCoord - x;\n                    height = gridRect.height;\n                }\n                else {\n                    x = gridRect.x;\n                    y = prevY;\n                    width = gridRect.width;\n                    height = tickCoord - y;\n                }\n\n                var colorIndex = (count++) % areaColors.length;\n                this._axisGroup.add(new graphic.Rect({\n                    anid: 'area_' + ticks[i],\n\n                    shape: {\n                        x: x,\n                        y: y,\n                        width: width,\n                        height: height\n                    },\n                    style: zrUtil.defaults({\n                        fill: areaColors[colorIndex]\n                    }, areaStyle),\n                    silent: true\n                }));\n\n                prevX = x + width;\n                prevY = y + height;\n            }\n        }\n    });\n\n    CartesianAxisView.extend({\n        type: 'xAxis'\n    });\n    CartesianAxisView.extend({\n        type: 'yAxis'\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axis/CartesianAxisView.js\n// module id = 588\n// module chunks = 0 1 2","\n\n    var echarts = require('../echarts');\n    var axisPointerModelHelper = require('./axisPointer/modelHelper');\n    var axisTrigger = require('./axisPointer/axisTrigger');\n    var zrUtil = require('zrender/lib/core/util');\n\n    require('./axisPointer/AxisPointerModel');\n    require('./axisPointer/AxisPointerView');\n\n    // CartesianAxisPointer is not supposed to be required here. But consider\n    // echarts.simple.js and online build tooltip, which only require gridSimple,\n    // CartesianAxisPointer should be able to required somewhere.\n    require('./axisPointer/CartesianAxisPointer');\n\n    echarts.registerPreprocessor(function (option) {\n        // Always has a global axisPointerModel for default setting.\n        if (option) {\n            (!option.axisPointer || option.axisPointer.length === 0)\n                && (option.axisPointer = {});\n\n            var link = option.axisPointer.link;\n            // Normalize to array to avoid object mergin. But if link\n            // is not set, remain null/undefined, otherwise it will\n            // override existent link setting.\n            if (link && !zrUtil.isArray(link)) {\n                option.axisPointer.link = [link];\n            }\n        }\n    });\n\n    // This process should proformed after coordinate systems created\n    // and series data processed. So put it on statistic processing stage.\n    echarts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, function (ecModel, api) {\n        // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n        // allAxesInfo should be updated when setOption performed.\n        ecModel.getComponent('axisPointer').coordSysAxesInfo\n            = axisPointerModelHelper.collect(ecModel, api);\n    });\n\n    // Broadcast to all views.\n    echarts.registerAction({\n        type: 'updateAxisPointer',\n        event: 'updateAxisPointer',\n        update: ':updateAxisPointer'\n    }, axisTrigger);\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer.js\n// module id = 589\n// module chunks = 0 1 2","\n\n    var echarts = require('../../echarts');\n\n    var AxisPointerModel = echarts.extendComponentModel({\n\n        type: 'axisPointer',\n\n        coordSysAxesInfo: null,\n\n        defaultOption: {\n            // 'auto' means that show when triggered by tooltip or handle.\n            show: 'auto',\n            // 'click' | 'mousemove' | 'none'\n            triggerOn: null, // set default in AxisPonterView.js\n\n            zlevel: 0,\n            z: 50,\n\n            type: 'line',\n            // axispointer triggered by tootip determine snap automatically,\n            // see `modelHelper`.\n            snap: false,\n            triggerTooltip: true,\n\n            value: null,\n            status: null, // Init value depends on whether handle is used.\n\n            // [group0, group1, ...]\n            // Each group can be: {\n            //      mapper: function () {},\n            //      singleTooltip: 'multiple',  // 'multiple' or 'single'\n            //      xAxisId: ...,\n            //      yAxisName: ...,\n            //      angleAxisIndex: ...\n            // }\n            // mapper: can be ignored.\n            //      input: {axisInfo, value}\n            //      output: {axisInfo, value}\n            link: [],\n\n            // Do not set 'auto' here, otherwise global animation: false\n            // will not effect at this axispointer.\n            animation: null,\n            animationDurationUpdate: 200,\n\n            lineStyle: {\n                color: '#aaa',\n                width: 1,\n                type: 'solid'\n            },\n\n            shadowStyle: {\n                color: 'rgba(150,150,150,0.3)'\n            },\n\n            label: {\n                show: true,\n                formatter: null, // string | Function\n                precision: 'auto', // Or a number like 0, 1, 2 ...\n                margin: 3,\n                textStyle: {\n                    color: '#fff'\n                },\n                padding: [5, 7, 5, 7],\n                backgroundColor: 'auto', // default: axis line color\n                borderColor: null,\n                borderWidth: 0,\n                shadowBlur: 3,\n                shadowColor: '#aaa'\n                // Considering applicability, common style should\n                // better not have shadowOffset.\n                // shadowOffsetX: 0,\n                // shadowOffsetY: 2\n            },\n\n            handle: {\n                show: false,\n                icon: 'M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4h1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7v-1.2h6.6z M13.3,22H6.7v-1.2h6.6z M13.3,19.6H6.7v-1.2h6.6z', // jshint ignore:line\n                size: 45,\n                // handle margin is from symbol center to axis, which is stable when circular move.\n                margin: 50,\n                // color: '#1b8bbd'\n                // color: '#2f4554'\n                color: '#333',\n                shadowBlur: 3,\n                shadowColor: '#aaa',\n                shadowOffsetX: 0,\n                shadowOffsetY: 2,\n\n                // For mobile performance\n                throttle: 40\n            }\n        }\n\n    });\n\n    module.exports = AxisPointerModel;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/AxisPointerModel.js\n// module id = 590\n// module chunks = 0 1 2","\n\n    var globalListener = require('./globalListener');\n\n    var AxisPonterView = require('../../echarts').extendComponentView({\n\n        type: 'axisPointer',\n\n        render: function (globalAxisPointerModel, ecModel, api) {\n            var globalTooltipModel = ecModel.getComponent('tooltip');\n            var triggerOn = globalAxisPointerModel.get('triggerOn')\n                || (globalTooltipModel && globalTooltipModel.get('triggerOn') || 'mousemove|click');\n\n            // Register global listener in AxisPointerView to enable\n            // AxisPointerView to be independent to Tooltip.\n            globalListener.register(\n                'axisPointer',\n                api,\n                function (currTrigger, e, dispatchAction) {\n                    // If 'none', it is not controlled by mouse totally.\n                    if (triggerOn !== 'none'\n                        && (currTrigger === 'leave' || triggerOn.indexOf(currTrigger) >= 0)\n                    ) {\n                        dispatchAction({\n                            type: 'updateAxisPointer',\n                            currTrigger: currTrigger,\n                            x: e && e.offsetX,\n                            y: e && e.offsetY\n                        });\n                    }\n                }\n            );\n        },\n\n        /**\n         * @override\n         */\n        remove: function (ecModel, api) {\n            globalListener.disopse(api.getZr(), 'axisPointer');\n            AxisPonterView.superApply(this._model, 'remove', arguments);\n        },\n\n        /**\n         * @override\n         */\n        dispose: function (ecModel, api) {\n            globalListener.unregister('axisPointer', api);\n            AxisPonterView.superApply(this._model, 'dispose', arguments);\n        }\n\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/AxisPointerView.js\n// module id = 591\n// module chunks = 0 1 2","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var clazzUtil = require('../../util/clazz');\n    var graphic = require('../../util/graphic');\n    var get = require('../../util/model').makeGetter();\n    var axisPointerModelHelper = require('./modelHelper');\n    var eventTool = require('zrender/lib/core/event');\n    var throttle = require('../../util/throttle');\n\n    var clone = zrUtil.clone;\n    var bind = zrUtil.bind;\n\n    /**\n     * Base axis pointer class in 2D.\n     * Implemenents {module:echarts/component/axis/IAxisPointer}.\n     */\n    function BaseAxisPointer () {\n    }\n\n    BaseAxisPointer.prototype = {\n\n        /**\n         * @private\n         */\n        _group: null,\n\n        /**\n         * @private\n         */\n        _lastGraphicKey: null,\n\n        /**\n         * @private\n         */\n        _handle: null,\n\n        /**\n         * @private\n         */\n        _dragging: false,\n\n        /**\n         * @private\n         */\n        _lastValue: null,\n\n        /**\n         * @private\n         */\n        _lastStatus: null,\n\n        /**\n         * @private\n         */\n        _payloadInfo: null,\n\n        /**\n         * In px, arbitrary value. Do not set too small,\n         * no animation is ok for most cases.\n         * @protected\n         */\n        animationThreshold: 15,\n\n        /**\n         * @implement\n         */\n        render: function (axisModel, axisPointerModel, api, forceRender) {\n            var value = axisPointerModel.get('value');\n            var status = axisPointerModel.get('status');\n\n            // Bind them to `this`, not in closure, otherwise they will not\n            // be replaced when user calling setOption in not merge mode.\n            this._axisModel = axisModel;\n            this._axisPointerModel = axisPointerModel;\n            this._api = api;\n\n            // Optimize: `render` will be called repeatly during mouse move.\n            // So it is power consuming if performing `render` each time,\n            // especially on mobile device.\n            if (!forceRender\n                && this._lastValue === value\n                && this._lastStatus === status\n            ) {\n                return;\n            }\n            this._lastValue = value;\n            this._lastStatus = status;\n\n            var group = this._group;\n            var handle = this._handle;\n\n            if (!status || status === 'hide') {\n                // Do not clear here, for animation better.\n                group && group.hide();\n                handle && handle.hide();\n                return;\n            }\n            group && group.show();\n            handle && handle.show();\n\n            // Otherwise status is 'show'\n            var elOption = {};\n            this.makeElOption(elOption, value, axisModel, axisPointerModel, api);\n\n            // Enable change axis pointer type.\n            var graphicKey = elOption.graphicKey;\n            if (graphicKey !== this._lastGraphicKey) {\n                this.clear(api);\n            }\n            this._lastGraphicKey = graphicKey;\n\n            var moveAnimation = this._moveAnimation =\n                this.determineAnimation(axisModel, axisPointerModel);\n\n            if (!group) {\n                group = this._group = new graphic.Group();\n                this.createPointerEl(group, elOption, axisModel, axisPointerModel);\n                this.createLabelEl(group, elOption, axisModel, axisPointerModel);\n                api.getZr().add(group);\n            }\n            else {\n                var doUpdateProps = zrUtil.curry(updateProps, axisPointerModel, moveAnimation);\n                this.updatePointerEl(group, elOption, doUpdateProps, axisPointerModel);\n                this.updateLabelEl(group, elOption, doUpdateProps, axisPointerModel);\n            }\n\n            updateMandatoryProps(group, axisPointerModel, true);\n\n            this._renderHandle(value);\n        },\n\n        /**\n         * @implement\n         */\n        remove: function (api) {\n            this.clear(api);\n        },\n\n        /**\n         * @implement\n         */\n        dispose: function (api) {\n            this.clear(api);\n        },\n\n        /**\n         * @protected\n         */\n        determineAnimation: function (axisModel, axisPointerModel) {\n            var animation = axisPointerModel.get('animation');\n            var axis = axisModel.axis;\n            var isCategoryAxis = axis.type === 'category';\n            var useSnap = axisPointerModel.get('snap');\n\n            // Value axis without snap always do not snap.\n            if (!useSnap && !isCategoryAxis) {\n                return false;\n            }\n\n            if (animation === 'auto' || animation == null) {\n                var animationThreshold = this.animationThreshold;\n                if (isCategoryAxis && axis.getBandWidth() > animationThreshold) {\n                    return true;\n                }\n\n                // It is important to auto animation when snap used. Consider if there is\n                // a dataZoom, animation will be disabled when too many points exist, while\n                // it will be enabled for better visual effect when little points exist.\n                if (useSnap) {\n                    var seriesDataCount = axisPointerModelHelper.getAxisInfo(axisModel).seriesDataCount;\n                    var axisExtent = axis.getExtent();\n                    // Approximate band width\n                    return Math.abs(axisExtent[0] - axisExtent[1]) / seriesDataCount > animationThreshold;\n                }\n\n                return false;\n            }\n\n            return animation === true;\n        },\n\n        /**\n         * add {pointer, label, graphicKey} to elOption\n         * @protected\n         */\n        makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n            // Shoule be implemenented by sub-class.\n        },\n\n        /**\n         * @protected\n         */\n        createPointerEl: function (group, elOption, axisModel, axisPointerModel) {\n            var pointerOption = elOption.pointer;\n            if (pointerOption) {\n                var pointerEl = get(group).pointerEl = new graphic[pointerOption.type](\n                    clone(elOption.pointer)\n                );\n                group.add(pointerEl);\n            }\n        },\n\n        /**\n         * @protected\n         */\n        createLabelEl: function (group, elOption, axisModel, axisPointerModel) {\n            if (elOption.label) {\n                var labelEl = get(group).labelEl = new graphic.Rect(\n                    clone(elOption.label)\n                );\n\n                group.add(labelEl);\n                updateLabelShowHide(labelEl, axisPointerModel);\n            }\n        },\n\n        /**\n         * @protected\n         */\n        updatePointerEl: function (group, elOption, updateProps) {\n            var pointerEl = get(group).pointerEl;\n            if (pointerEl) {\n                pointerEl.setStyle(elOption.pointer.style);\n                updateProps(pointerEl, {shape: elOption.pointer.shape});\n            }\n        },\n\n        /**\n         * @protected\n         */\n        updateLabelEl: function (group, elOption, updateProps, axisPointerModel) {\n            var labelEl = get(group).labelEl;\n            if (labelEl) {\n                labelEl.setStyle(elOption.label.style);\n                updateProps(labelEl, {\n                    // Consider text length change in vertical axis, animation should\n                    // be used on shape, otherwise the effect will be weird.\n                    shape: elOption.label.shape,\n                    position: elOption.label.position\n                });\n\n                updateLabelShowHide(labelEl, axisPointerModel);\n            }\n        },\n\n        /**\n         * @private\n         */\n        _renderHandle: function (value) {\n            if (this._dragging || !this.updateHandleTransform) {\n                return;\n            }\n\n            var axisPointerModel = this._axisPointerModel;\n            var zr = this._api.getZr();\n            var handle = this._handle;\n            var handleModel = axisPointerModel.getModel('handle');\n\n            var status = axisPointerModel.get('status');\n            if (!handleModel.get('show') || !status || status === 'hide') {\n                handle && zr.remove(handle);\n                this._handle = null;\n                return;\n            }\n\n            var isInit;\n            if (!this._handle) {\n                isInit = true;\n                handle = this._handle = createIcon(handleModel, {\n                    onmousemove: function (e) {\n                        // Fot mobile devicem, prevent screen slider on the button.\n                        eventTool.stop(e.event);\n                    },\n                    onmousedown: bind(this._onHandleDragMove, this, 0, 0),\n                    drift: bind(this._onHandleDragMove, this),\n                    ondragend: bind(this._onHandleDragEnd, this)\n                });\n                zr.add(handle);\n            }\n\n            updateMandatoryProps(handle, axisPointerModel, false);\n\n            // update style\n            var includeStyles = [\n                'color', 'borderColor', 'borderWidth', 'opacity',\n                'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY'\n            ];\n            handle.setStyle(handleModel.getItemStyle(null, includeStyles));\n\n            // update position\n            var handleSize = handleModel.get('size');\n            if (!zrUtil.isArray(handleSize)) {\n                handleSize = [handleSize, handleSize];\n            }\n            handle.attr('scale', [handleSize[0] / 2, handleSize[1] / 2]);\n\n            throttle.createOrUpdate(\n                this,\n                '_doDispatchAxisPointer',\n                handleModel.get('throttle') || 0,\n                'fixRate'\n            );\n\n            this._moveHandleToValue(value, isInit);\n        },\n\n        /**\n         * @private\n         */\n        _moveHandleToValue: function (value, isInit) {\n            updateProps(\n                this._axisPointerModel,\n                !isInit && this._moveAnimation,\n                this._handle,\n                getHandleTransProps(this.getHandleTransform(\n                    value, this._axisModel, this._axisPointerModel\n                ))\n            );\n        },\n\n        /**\n         * @private\n         */\n        _onHandleDragMove: function (dx, dy) {\n            var handle = this._handle;\n            if (!handle) {\n                return;\n            }\n\n            this._dragging = true;\n\n            // Persistent for throttle.\n            var trans = this.updateHandleTransform(\n                getHandleTransProps(handle),\n                [dx, dy],\n                this._axisModel,\n                this._axisPointerModel\n            );\n            this._payloadInfo = trans;\n\n            handle.stopAnimation();\n            handle.attr(getHandleTransProps(trans));\n            get(handle).lastProp = null;\n\n            this._doDispatchAxisPointer();\n        },\n\n        /**\n         * Throttled method.\n         * @private\n         */\n        _doDispatchAxisPointer: function () {\n            var handle = this._handle;\n            if (!handle) {\n                return;\n            }\n\n            var payloadInfo = this._payloadInfo;\n            var axisModel = this._axisModel;\n            this._api.dispatchAction({\n                type: 'updateAxisPointer',\n                x: payloadInfo.cursorPoint[0],\n                y: payloadInfo.cursorPoint[1],\n                tooltipOption: payloadInfo.tooltipOption,\n                axesInfo: [{\n                    axisDim: axisModel.axis.dim,\n                    axisIndex: axisModel.componentIndex\n                }]\n            });\n        },\n\n        /**\n         * @private\n         */\n        _onHandleDragEnd: function (moveAnimation) {\n            this._dragging = false;\n            var handle = this._handle;\n            if (!handle) {\n                return;\n            }\n\n            var value = this._axisPointerModel.get('value');\n            // Consider snap or categroy axis, handle may be not consistent with\n            // axisPointer. So move handle to align the exact value position when\n            // drag ended.\n            this._moveHandleToValue(value);\n\n            // For the effect: tooltip will be shown when finger holding on handle\n            // button, and will be hidden after finger left handle button.\n            this._api.dispatchAction({\n                type: 'hideTip'\n            });\n        },\n\n        /**\n         * Should be implemenented by sub-class if support `handle`.\n         * @protected\n         * @param {number} value\n         * @param {module:echarts/model/Model} axisModel\n         * @param {module:echarts/model/Model} axisPointerModel\n         * @return {Object} {position: [x, y], rotation: 0}\n         */\n        getHandleTransform: null,\n\n        /**\n         * * Should be implemenented by sub-class if support `handle`.\n         * @protected\n         * @param {Object} transform {position, rotation}\n         * @param {Array.<number>} delta [dx, dy]\n         * @param {module:echarts/model/Model} axisModel\n         * @param {module:echarts/model/Model} axisPointerModel\n         * @return {Object} {position: [x, y], rotation: 0, cursorPoint: [x, y]}\n         */\n        updateHandleTransform: null,\n\n        /**\n         * @private\n         */\n        clear: function (api) {\n            this._lastValue = null;\n            this._lastStatus = null;\n\n            var zr = api.getZr();\n            var group = this._group;\n            var handle = this._handle;\n            if (zr && group) {\n                this._lastGraphicKey = null;\n                group && zr.remove(group);\n                handle && zr.remove(handle);\n                this._group = null;\n                this._handle = null;\n                this._payloadInfo = null;\n            }\n        },\n\n        /**\n         * @protected\n         */\n        doClear: function () {\n            // Implemented by sub-class if necessary.\n        },\n\n        /**\n         * @protected\n         * @param {Array.<number>} xy\n         * @param {Array.<number>} wh\n         * @param {number} [xDimIndex=0] or 1\n         */\n        buildLabel: function (xy, wh, xDimIndex) {\n            xDimIndex = xDimIndex || 0;\n            return {\n                x: xy[xDimIndex],\n                y: xy[1 - xDimIndex],\n                width: wh[xDimIndex],\n                height: wh[1 - xDimIndex]\n            };\n        }\n    };\n\n    BaseAxisPointer.prototype.constructor = BaseAxisPointer;\n\n\n    function updateProps(animationModel, moveAnimation, el, props) {\n        // Animation optimize.\n        if (!propsEqual(get(el).lastProp, props)) {\n            get(el).lastProp = props;\n            moveAnimation\n                ? graphic.updateProps(el, props, animationModel)\n                : (el.stopAnimation(), el.attr(props));\n        }\n    }\n\n    function propsEqual(lastProps, newProps) {\n        if (zrUtil.isObject(lastProps) && zrUtil.isObject(newProps)) {\n            var equals = true;\n            zrUtil.each(newProps, function (item, key) {\n                equals &= propsEqual(lastProps[key], item);\n            });\n            return !!equals;\n        }\n        else {\n            return lastProps === newProps;\n        }\n    }\n\n    function updateLabelShowHide(labelEl, axisPointerModel) {\n        labelEl[axisPointerModel.get('label.show') ? 'show' : 'hide']();\n    }\n\n    function getHandleTransProps(trans) {\n        return {\n            position: trans.position.slice(),\n            rotation: trans.rotation || 0\n        };\n    }\n\n    function createIcon(handleModel, handlers) {\n        var iconStr = handleModel.get('icon');\n        var style = {\n            x: -1, y: -1, width: 2, height: 2\n        };\n        var opt = zrUtil.extend({\n            style: {\n                strokeNoScale: true\n            },\n            rectHover: true,\n            cursor: 'move',\n            draggable: true\n        }, handlers);\n\n        return iconStr.indexOf('image://') === 0\n            ? (\n                style.image = iconStr.slice(8),\n                opt.style = style,\n                new graphic.Image(opt)\n            )\n            : graphic.makePath(\n                iconStr.replace('path://', ''),\n                opt,\n                style,\n                'center'\n            );\n    }\n\n    function updateMandatoryProps(group, axisPointerModel, silent) {\n        var z = axisPointerModel.get('z');\n        var zlevel = axisPointerModel.get('zlevel');\n\n        group && group.traverse(function (el) {\n            if (el.type !== 'group') {\n                z != null && (el.z = z);\n                zlevel != null && (el.zlevel = zlevel);\n                el.silent = silent;\n            }\n        });\n    }\n\n    clazzUtil.enableClassExtend(BaseAxisPointer);\n\n    module.exports = BaseAxisPointer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/BaseAxisPointer.js\n// module id = 592\n// module chunks = 0 1 2","'use strict';\n\n\n    var graphic = require('../../util/graphic');\n    var BaseAxisPointer = require('./BaseAxisPointer');\n    var viewHelper = require('./viewHelper');\n    var cartesianAxisHelper = require('../axis/cartesianAxisHelper');\n    var AxisView = require('../axis/AxisView');\n\n    var CartesianAxisPointer = BaseAxisPointer.extend({\n\n        /**\n         * @override\n         */\n        makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n            var axis = axisModel.axis;\n            var grid = axis.grid;\n            var axisPointerType = axisPointerModel.get('type');\n            var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n            var pixelValue = axis.toGlobalCoord(axis.dataToCoord(value, true));\n\n            if (axisPointerType && axisPointerType !== 'none') {\n                var elStyle = viewHelper.buildElStyle(axisPointerModel);\n                var pointerOption = pointerShapeBuilder[axisPointerType](\n                    axis, pixelValue, otherExtent, elStyle\n                );\n                pointerOption.style = elStyle;\n                elOption.graphicKey = pointerOption.type;\n                elOption.pointer = pointerOption;\n            }\n\n            var layoutInfo = cartesianAxisHelper.layout(grid.model, axisModel);\n            viewHelper.buildCartesianSingleLabelElOption(\n                value, elOption, layoutInfo, axisModel, axisPointerModel, api\n            );\n        },\n\n        /**\n         * @override\n         */\n        getHandleTransform: function (value, axisModel, axisPointerModel) {\n            var layoutInfo = cartesianAxisHelper.layout(axisModel.axis.grid.model, axisModel, {\n                labelInside: false\n            });\n            layoutInfo.labelMargin = axisPointerModel.get('handle.margin');\n            return {\n                position: viewHelper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n                rotation: layoutInfo.rotation + (layoutInfo.labelDirection < 0 ? Math.PI : 0)\n            };\n        },\n\n        /**\n         * @override\n         */\n        updateHandleTransform: function (transform, delta, axisModel, axisPointerModel) {\n            var axis = axisModel.axis;\n            var grid = axis.grid;\n            var axisExtent = axis.getGlobalExtent(true);\n            var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n            var dimIndex = axis.dim === 'x' ? 0 : 1;\n\n            var currPosition = transform.position;\n            currPosition[dimIndex] += delta[dimIndex];\n            currPosition[dimIndex] = Math.min(axisExtent[1], currPosition[dimIndex]);\n            currPosition[dimIndex] = Math.max(axisExtent[0], currPosition[dimIndex]);\n\n            var cursorOtherValue = (otherExtent[1] + otherExtent[0]) / 2;\n            var cursorPoint = [cursorOtherValue, cursorOtherValue];\n            cursorPoint[dimIndex] = currPosition[dimIndex];\n\n            // Make tooltip do not overlap axisPointer and in the middle of the grid.\n            var tooltipOptions = [{verticalAlign: 'middle'}, {align: 'center'}];\n\n            return {\n                position: currPosition,\n                rotation: transform.rotation,\n                cursorPoint: cursorPoint,\n                tooltipOption: tooltipOptions[dimIndex]\n            };\n        }\n\n    });\n\n    function getCartesian(grid, axis) {\n        var opt = {};\n        opt[axis.dim + 'AxisIndex'] = axis.index;\n        return grid.getCartesian(opt);\n    }\n\n    var pointerShapeBuilder = {\n\n        line: function (axis, pixelValue, otherExtent, elStyle) {\n            var targetShape = viewHelper.makeLineShape(\n                [pixelValue, otherExtent[0]],\n                [pixelValue, otherExtent[1]],\n                getAxisDimIndex(axis)\n            );\n            graphic.subPixelOptimizeLine({\n                shape: targetShape,\n                style: elStyle\n            });\n            return {\n                type: 'Line',\n                shape: targetShape\n            };\n        },\n\n        shadow: function (axis, pixelValue, otherExtent, elStyle) {\n            var bandWidth = axis.getBandWidth();\n            var span = otherExtent[1] - otherExtent[0];\n            return {\n                type: 'Rect',\n                shape: viewHelper.makeRectShape(\n                    [pixelValue - bandWidth / 2, otherExtent[0]],\n                    [bandWidth, span],\n                    getAxisDimIndex(axis)\n                )\n            };\n        }\n    };\n\n    function getAxisDimIndex(axis) {\n        return axis.dim === 'x' ? 0 : 1;\n    }\n\n    AxisView.registerAxisPointerClass('CartesianAxisPointer', CartesianAxisPointer);\n\n    module.exports = CartesianAxisPointer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/CartesianAxisPointer.js\n// module id = 593\n// module chunks = 0 1 2","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../../util/model');\n    var modelHelper = require('./modelHelper');\n    var findPointFromSeries = require('./findPointFromSeries');\n\n    var each = zrUtil.each;\n    var curry = zrUtil.curry;\n    var get = modelUtil.makeGetter();\n\n    /**\n     * Basic logic: check all axis, if they do not demand show/highlight,\n     * then hide/downplay them.\n     *\n     * @param {Object} coordSysAxesInfo\n     * @param {Object} payload\n     * @param {string} [payload.currTrigger] 'click' | 'mousemove' | 'leave'\n     * @param {Array.<number>} [payload.x] x and y, which are mandatory, specify a point to\n     *              trigger axisPointer and tooltip.\n     * @param {Array.<number>} [payload.y] x and y, which are mandatory, specify a point to\n     *              trigger axisPointer and tooltip.\n     * @param {Object} [payload.seriesIndex] finder, optional, restrict target axes.\n     * @param {Object} [payload.dataIndex] finder, restrict target axes.\n     * @param {Object} [payload.axesInfo] finder, restrict target axes.\n     *        [{\n     *          axisDim: 'x'|'y'|'angle'|...,\n     *          axisIndex: ...,\n     *          value: ...\n     *        }, ...]\n     * @param {Function} [payload.dispatchAction]\n     * @param {Object} [payload.tooltipOption]\n     * @param {Object|Array.<number>|Function} [payload.position] Tooltip position,\n     *        which can be specified in dispatchAction\n     * @param {module:echarts/model/Global} ecModel\n     * @param {module:echarts/ExtensionAPI} api\n     * @return {Object} content of event obj for echarts.connect.\n     */\n    function axisTrigger(payload, ecModel, api) {\n        var currTrigger = payload.currTrigger;\n        var point = [payload.x, payload.y];\n        var finder = payload;\n        var dispatchAction = payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n        var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo;\n\n        if (illegalPoint(point)) {\n            // Used in the default behavior of `connection`: use the sample seriesIndex\n            // and dataIndex. And also used in the tooltipView trigger.\n            point = findPointFromSeries({\n                seriesIndex: finder.seriesIndex,\n                // Do not use dataIndexInside from other ec instance.\n                // FIXME: auto detect it?\n                dataIndex: finder.dataIndex\n            }, ecModel).point;\n        }\n        var isIllegalPoint = illegalPoint(point);\n\n        // Axis and value can be specified when calling dispatchAction({type: 'updateAxisPointer'}).\n        // Notice: In this case, it is difficult to get the `point` (which is necessary to show\n        // tooltip, so if point is not given, we just use the point found by sample seriesIndex\n        // and dataIndex.\n        var inputAxesInfo = finder.axesInfo;\n\n        var axesInfo = coordSysAxesInfo.axesInfo;\n        var shouldHide = currTrigger === 'leave' || illegalPoint(point);\n        var outputFinder = {};\n\n        var showValueMap = {};\n        var dataByCoordSys = {list: [], map: {}};\n        var updaters = {\n            showPointer: curry(showPointer, showValueMap),\n            showTooltip: curry(showTooltip, dataByCoordSys)\n        };\n\n        // Process for triggered axes.\n        each(coordSysAxesInfo.coordSysMap, function (coordSys, coordSysKey) {\n            // If a point given, it must be contained by the coordinate system.\n            var coordSysContainsPoint = isIllegalPoint || coordSys.containPoint(point);\n\n            each(coordSysAxesInfo.coordSysAxesInfo[coordSysKey], function (axisInfo, key) {\n                var axis = axisInfo.axis;\n                var inputAxisInfo = findInputAxisInfo(inputAxesInfo, axisInfo);\n                // If no inputAxesInfo, no axis is restricted.\n                if (!shouldHide && coordSysContainsPoint && (!inputAxesInfo || inputAxisInfo)) {\n                    var val = inputAxisInfo && inputAxisInfo.value;\n                    if (val == null && !isIllegalPoint) {\n                        val = axis.pointToData(point);\n                    }\n                    val != null && processOnAxis(axisInfo, val, updaters, false, outputFinder);\n                }\n            });\n        });\n\n        // Process for linked axes.\n        var linkTriggers = {};\n        each(axesInfo, function (tarAxisInfo, tarKey) {\n            var linkGroup = tarAxisInfo.linkGroup;\n\n            // If axis has been triggered in the previous stage, it should not be triggered by link.\n            if (linkGroup && !showValueMap[tarKey]) {\n                each(linkGroup.axesInfo, function (srcAxisInfo, srcKey) {\n                    var srcValItem = showValueMap[srcKey];\n                    // If srcValItem exist, source axis is triggered, so link to target axis.\n                    if (srcAxisInfo !== tarAxisInfo && srcValItem) {\n                        var val = srcValItem.value;\n                        linkGroup.mapper && (val = tarAxisInfo.axis.scale.parse(linkGroup.mapper(\n                            val, makeMapperParam(srcAxisInfo), makeMapperParam(tarAxisInfo)\n                        )));\n                        linkTriggers[tarAxisInfo.key] = val;\n                    }\n                });\n            }\n        });\n        each(linkTriggers, function (val, tarKey) {\n            processOnAxis(axesInfo[tarKey], val, updaters, true, outputFinder);\n        });\n\n        updateModelActually(showValueMap, axesInfo, outputFinder);\n        dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction);\n        dispatchHighDownActually(axesInfo, dispatchAction, api);\n\n        return outputFinder;\n    }\n\n    function processOnAxis(axisInfo, newValue, updaters, dontSnap, outputFinder) {\n        var axis = axisInfo.axis;\n\n        if (axis.scale.isBlank() || !axis.containData(newValue)) {\n            return;\n        }\n\n        if (!axisInfo.involveSeries) {\n            updaters.showPointer(axisInfo, newValue);\n            return;\n        }\n\n        // Heavy calculation. So put it after axis.containData checking.\n        var payloadInfo = buildPayloadsBySeries(newValue, axisInfo);\n        var payloadBatch = payloadInfo.payloadBatch;\n        var snapToValue = payloadInfo.snapToValue;\n\n        // Fill content of event obj for echarts.connect.\n        // By defualt use the first involved series data as a sample to connect.\n        if (payloadBatch[0] && outputFinder.seriesIndex == null) {\n            zrUtil.extend(outputFinder, payloadBatch[0]);\n        }\n\n        // If no linkSource input, this process is for collecting link\n        // target, where snap should not be accepted.\n        if (!dontSnap && axisInfo.snap) {\n            if (axis.containData(snapToValue) && snapToValue != null) {\n                newValue = snapToValue;\n            }\n        }\n\n        updaters.showPointer(axisInfo, newValue, payloadBatch, outputFinder);\n        // Tooltip should always be snapToValue, otherwise there will be\n        // incorrect \"axis value ~ series value\" mapping displayed in tooltip.\n        updaters.showTooltip(axisInfo, payloadInfo, snapToValue);\n    }\n\n    function buildPayloadsBySeries(value, axisInfo) {\n        var axis = axisInfo.axis;\n        var dim = axis.dim;\n        var snapToValue = value;\n        var payloadBatch = [];\n        var minDist = Number.MAX_VALUE;\n        var minDiff = -1;\n\n        each(axisInfo.seriesModels, function (series, idx) {\n            var dataDim = series.coordDimToDataDim(dim);\n            var seriesNestestValue;\n            var dataIndices;\n\n            if (series.getAxisTooltipData) {\n                var result = series.getAxisTooltipData(dataDim, value, axis);\n                dataIndices = result.dataIndices;\n                seriesNestestValue = result.nestestValue;\n            }\n            else {\n                dataIndices = series.getData().indicesOfNearest(\n                    dataDim[0],\n                    value,\n                    // Add a threshold to avoid find the wrong dataIndex\n                    // when data length is not same.\n                    false, axis.type === 'category' ? 0.5 : null\n                );\n                if (!dataIndices.length) {\n                    return;\n                }\n                seriesNestestValue = series.getData().get(dataDim[0], dataIndices[0]);\n            }\n\n            if (seriesNestestValue == null || !isFinite(seriesNestestValue)) {\n                return;\n            }\n\n            var diff = value - seriesNestestValue;\n            var dist = Math.abs(diff);\n            // Consider category case\n            if (dist <= minDist) {\n                if (dist < minDist || (diff >= 0 && minDiff < 0)) {\n                    minDist = dist;\n                    minDiff = diff;\n                    snapToValue = seriesNestestValue;\n                    payloadBatch.length = 0;\n                }\n                each(dataIndices, function (dataIndex) {\n                    payloadBatch.push({\n                        seriesIndex: series.seriesIndex,\n                        dataIndexInside: dataIndex,\n                        dataIndex: series.getData().getRawIndex(dataIndex)\n                    });\n                });\n            }\n        });\n\n        return {\n            payloadBatch: payloadBatch,\n            snapToValue: snapToValue\n        };\n    }\n\n    function showPointer(showValueMap, axisInfo, value, payloadBatch) {\n        showValueMap[axisInfo.key] = {value: value, payloadBatch: payloadBatch};\n    }\n\n    function showTooltip(dataByCoordSys, axisInfo, payloadInfo, value) {\n        var payloadBatch = payloadInfo.payloadBatch;\n        var axis = axisInfo.axis;\n        var axisModel = axis.model;\n        var axisPointerModel = axisInfo.axisPointerModel;\n\n        // If no data, do not create anything in dataByCoordSys,\n        // whose length will be used to judge whether dispatch action.\n        if (!axisInfo.triggerTooltip || !payloadBatch.length) {\n            return;\n        }\n\n        var coordSysModel = axisInfo.coordSys.model;\n        var coordSysKey = modelHelper.makeKey(coordSysModel);\n        var coordSysItem = dataByCoordSys.map[coordSysKey];\n        if (!coordSysItem) {\n            coordSysItem = dataByCoordSys.map[coordSysKey] = {\n                coordSysId: coordSysModel.id,\n                coordSysIndex: coordSysModel.componentIndex,\n                coordSysType: coordSysModel.type,\n                coordSysMainType: coordSysModel.mainType,\n                dataByAxis: []\n            };\n            dataByCoordSys.list.push(coordSysItem);\n        }\n\n        coordSysItem.dataByAxis.push({\n            axisDim: axis.dim,\n            axisIndex: axisModel.componentIndex,\n            axisType: axisModel.type,\n            axisId: axisModel.id,\n            value: value,\n            // Caustion: viewHelper.getValueLabel is actually on \"view stage\", which\n            // depends that all models have been updated. So it should not be performed\n            // here. Considering axisPointerModel used here is volatile, which is hard\n            // to be retrieve in TooltipView, we prepare parameters here.\n            valueLabelOpt: {\n                precision: axisPointerModel.get('label.precision'),\n                formatter: axisPointerModel.get('label.formatter')\n            },\n            seriesDataIndices: payloadBatch.slice()\n        });\n    }\n\n    function updateModelActually(showValueMap, axesInfo, outputFinder) {\n        var outputAxesInfo = outputFinder.axesInfo = [];\n        // Basic logic: If no 'show' required, 'hide' this axisPointer.\n        each(axesInfo, function (axisInfo, key) {\n            var option = axisInfo.axisPointerModel.option;\n            var valItem = showValueMap[key];\n\n            if (valItem) {\n                !axisInfo.useHandle && (option.status = 'show');\n                option.value = valItem.value;\n                // For label formatter param and highlight.\n                option.seriesDataIndices = (valItem.payloadBatch || []).slice();\n            }\n            // When always show (e.g., handle used), remain\n            // original value and status.\n            else {\n                // If hide, value still need to be set, consider\n                // click legend to toggle axis blank.\n                !axisInfo.useHandle && (option.status = 'hide');\n            }\n\n            // If status is 'hide', should be no info in payload.\n            option.status === 'show' && outputAxesInfo.push({\n                axisDim: axisInfo.axis.dim,\n                axisIndex: axisInfo.axis.model.componentIndex,\n                value: option.value\n            });\n        });\n    }\n\n    function dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction) {\n        // Basic logic: If no showTip required, hideTip will be dispatched.\n        if (illegalPoint(point) || !dataByCoordSys.list.length) {\n            dispatchAction({type: 'hideTip'});\n            return;\n        }\n\n        // In most case only one axis (or event one series is used). It is\n        // convinient to fetch payload.seriesIndex and payload.dataIndex\n        // dirtectly. So put the first seriesIndex and dataIndex of the first\n        // axis on the payload.\n        var sampleItem = ((dataByCoordSys.list[0].dataByAxis[0] || {}).seriesDataIndices || [])[0] || {};\n\n        dispatchAction({\n            type: 'showTip',\n            escapeConnect: true,\n            x: point[0],\n            y: point[1],\n            tooltipOption: payload.tooltipOption,\n            position: payload.position,\n            dataIndexInside: sampleItem.dataIndexInside,\n            dataIndex: sampleItem.dataIndex,\n            seriesIndex: sampleItem.seriesIndex,\n            dataByCoordSys: dataByCoordSys.list\n        });\n    }\n\n    function dispatchHighDownActually(axesInfo, dispatchAction, api) {\n        // FIXME\n        // highlight status modification shoule be a stage of main process?\n        // (Consider confilct (e.g., legend and axisPointer) and setOption)\n\n        var zr = api.getZr();\n        var highDownKey = 'axisPointerLastHighlights';\n        var lastHighlights = get(zr)[highDownKey] || {};\n        var newHighlights = get(zr)[highDownKey] = {};\n\n        // Update highlight/downplay status according to axisPointer model.\n        // Build hash map and remove duplicate incidentally.\n        each(axesInfo, function (axisInfo, key) {\n            var option = axisInfo.axisPointerModel.option;\n            option.status === 'show' && each(option.seriesDataIndices, function (batchItem) {\n                var key = batchItem.seriesIndex + ' | ' + batchItem.dataIndex;\n                newHighlights[key] = batchItem;\n            });\n        });\n\n        // Diff.\n        var toHighlight = [];\n        var toDownplay = [];\n        zrUtil.each(lastHighlights, function (batchItem, key) {\n            !newHighlights[key] && toDownplay.push(batchItem);\n        });\n        zrUtil.each(newHighlights, function (batchItem, key) {\n            !lastHighlights[key] && toHighlight.push(batchItem);\n        });\n\n        toDownplay.length && api.dispatchAction({\n            type: 'downplay', escapeConnect: true, batch: toDownplay\n        });\n        toHighlight.length && api.dispatchAction({\n            type: 'highlight', escapeConnect: true, batch: toHighlight\n        });\n    }\n\n    function findInputAxisInfo(inputAxesInfo, axisInfo) {\n        for (var i = 0; i < (inputAxesInfo || []).length; i++) {\n            var inputAxisInfo = inputAxesInfo[i];\n            if (axisInfo.axis.dim === inputAxisInfo.axisDim\n                && axisInfo.axis.model.componentIndex === inputAxisInfo.axisIndex\n            ) {\n                return inputAxisInfo;\n            }\n        }\n    }\n\n    function makeMapperParam(axisInfo) {\n        var axisModel = axisInfo.axis.model;\n        var item = {};\n        var dim = item.axisDim = axisInfo.axis.dim;\n        item.axisIndex = item[dim + 'AxisIndex'] = axisModel.componentIndex;\n        item.axisName = item[dim + 'AxisName'] = axisModel.name;\n        item.axisId = item[dim + 'AxisId'] = axisModel.id;\n        return item;\n    }\n\n    function illegalPoint(point) {\n        return !point || point[0] == null || isNaN(point[0]) || point[1] == null || isNaN(point[1]);\n    }\n\n    module.exports = axisTrigger;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/axisTrigger.js\n// module id = 594\n// module chunks = 0 1 2","/**\n * DataZoom component entry\n */\n\n\n    require('./dataZoom/typeDefaulter');\n\n    require('./dataZoom/DataZoomModel');\n    require('./dataZoom/DataZoomView');\n\n    require('./dataZoom/SliderZoomModel');\n    require('./dataZoom/SliderZoomView');\n\n    require('./dataZoom/InsideZoomModel');\n    require('./dataZoom/InsideZoomView');\n\n    require('./dataZoom/dataZoomProcessor');\n    require('./dataZoom/dataZoomAction');\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/dataZoom.js\n// module id = 595\n// module chunks = 0 1 2","/**\n * @file Axis operator\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var numberUtil = require('../../util/number');\n    var helper = require('./helper');\n    var each = zrUtil.each;\n    var asc = numberUtil.asc;\n\n    /**\n     * Operate single axis.\n     * One axis can only operated by one axis operator.\n     * Different dataZoomModels may be defined to operate the same axis.\n     * (i.e. 'inside' data zoom and 'slider' data zoom components)\n     * So dataZoomModels share one axisProxy in that case.\n     *\n     * @class\n     */\n    var AxisProxy = function (dimName, axisIndex, dataZoomModel, ecModel) {\n\n        /**\n         * @private\n         * @type {string}\n         */\n        this._dimName = dimName;\n\n        /**\n         * @private\n         */\n        this._axisIndex = axisIndex;\n\n        /**\n         * @private\n         * @type {Array.<number>}\n         */\n        this._valueWindow;\n\n        /**\n         * @private\n         * @type {Array.<number>}\n         */\n        this._percentWindow;\n\n        /**\n         * @private\n         * @type {Array.<number>}\n         */\n        this._dataExtent;\n\n        /**\n         * {minSpan, maxSpan, minValueSpan, maxValueSpan}\n         * @private\n         * @type {Object}\n         */\n        this._minMaxSpan;\n\n        /**\n         * @readOnly\n         * @type {module: echarts/model/Global}\n         */\n        this.ecModel = ecModel;\n\n        /**\n         * @private\n         * @type {module: echarts/component/dataZoom/DataZoomModel}\n         */\n        this._dataZoomModel = dataZoomModel;\n    };\n\n    AxisProxy.prototype = {\n\n        constructor: AxisProxy,\n\n        /**\n         * Whether the axisProxy is hosted by dataZoomModel.\n         *\n         * @public\n         * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n         * @return {boolean}\n         */\n        hostedBy: function (dataZoomModel) {\n            return this._dataZoomModel === dataZoomModel;\n        },\n\n        /**\n         * @return {Array.<number>} Value can only be NaN or finite value.\n         */\n        getDataValueWindow: function () {\n            return this._valueWindow.slice();\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getDataPercentWindow: function () {\n            return this._percentWindow.slice();\n        },\n\n        /**\n         * @public\n         * @param {number} axisIndex\n         * @return {Array} seriesModels\n         */\n        getTargetSeriesModels: function () {\n            var seriesModels = [];\n            var ecModel = this.ecModel;\n\n            ecModel.eachSeries(function (seriesModel) {\n                if (helper.isCoordSupported(seriesModel.get('coordinateSystem'))) {\n                    var dimName = this._dimName;\n                    var axisModel = ecModel.queryComponents({\n                        mainType: dimName + 'Axis',\n                        index: seriesModel.get(dimName + 'AxisIndex'),\n                        id: seriesModel.get(dimName + 'AxisId')\n                    })[0];\n                    if (this._axisIndex === (axisModel && axisModel.componentIndex)) {\n                        seriesModels.push(seriesModel);\n                    }\n                }\n            }, this);\n\n            return seriesModels;\n        },\n\n        getAxisModel: function () {\n            return this.ecModel.getComponent(this._dimName + 'Axis', this._axisIndex);\n        },\n\n        getOtherAxisModel: function () {\n            var axisDim = this._dimName;\n            var ecModel = this.ecModel;\n            var axisModel = this.getAxisModel();\n            var isCartesian = axisDim === 'x' || axisDim === 'y';\n            var otherAxisDim;\n            var coordSysIndexName;\n            if (isCartesian) {\n                coordSysIndexName = 'gridIndex';\n                otherAxisDim = axisDim === 'x' ? 'y' : 'x';\n            }\n            else {\n                coordSysIndexName = 'polarIndex';\n                otherAxisDim = axisDim === 'angle' ? 'radius' : 'angle';\n            }\n            var foundOtherAxisModel;\n            ecModel.eachComponent(otherAxisDim + 'Axis', function (otherAxisModel) {\n                if ((otherAxisModel.get(coordSysIndexName) || 0)\n                    === (axisModel.get(coordSysIndexName) || 0)\n                ) {\n                    foundOtherAxisModel = otherAxisModel;\n                }\n            });\n            return foundOtherAxisModel;\n        },\n\n        getMinMaxSpan: function () {\n            return zrUtil.clone(this._minMaxSpan);\n        },\n\n        /**\n         * Only calculate by given range and this._dataExtent, do not change anything.\n         *\n         * @param {Object} opt\n         * @param {number} [opt.start]\n         * @param {number} [opt.end]\n         * @param {number} [opt.startValue]\n         * @param {number} [opt.endValue]\n         */\n        calculateDataWindow: function (opt) {\n            var dataExtent = this._dataExtent;\n            var axisModel = this.getAxisModel();\n            var scale = axisModel.axis.scale;\n            var rangePropMode = this._dataZoomModel.getRangePropMode();\n            var percentExtent = [0, 100];\n            var percentWindow = [\n                opt.start,\n                opt.end\n            ];\n            var valueWindow = [];\n\n            each(['startValue', 'endValue'], function (prop) {\n                valueWindow.push(opt[prop] != null ? scale.parse(opt[prop]) : null);\n            });\n\n            // Normalize bound.\n            each([0, 1], function (idx) {\n                var boundValue = valueWindow[idx];\n                var boundPercent = percentWindow[idx];\n\n                // Notice: dataZoom is based either on `percentProp` ('start', 'end') or\n                // on `valueProp` ('startValue', 'endValue'). The former one is suitable\n                // for cases that a dataZoom component controls multiple axes with different\n                // unit or extent, and the latter one is suitable for accurate zoom by pixel\n                // (e.g., in dataZoomSelect). `valueProp` can be calculated from `percentProp`,\n                // but it is awkward that `percentProp` can not be obtained from `valueProp`\n                // accurately (because all of values that are overflow the `dataExtent` will\n                // be calculated to percent '100%'). So we have to use\n                // `dataZoom.getRangePropMode()` to mark which prop is used.\n                // `rangePropMode` is updated only when setOption or dispatchAction, otherwise\n                // it remains its original value.\n\n                if (rangePropMode[idx] === 'percent') {\n                    if (boundPercent == null) {\n                        boundPercent = percentExtent[idx];\n                    }\n                    // Use scale.parse to math round for category or time axis.\n                    boundValue = scale.parse(numberUtil.linearMap(\n                        boundPercent, percentExtent, dataExtent, true\n                    ));\n                }\n                else {\n                    // Calculating `percent` from `value` may be not accurate, because\n                    // This calculation can not be inversed, because all of values that\n                    // are overflow the `dataExtent` will be calculated to percent '100%'\n                    boundPercent = numberUtil.linearMap(\n                        boundValue, dataExtent, percentExtent, true\n                    );\n                }\n\n                // valueWindow[idx] = round(boundValue);\n                // percentWindow[idx] = round(boundPercent);\n                valueWindow[idx] = boundValue;\n                percentWindow[idx] = boundPercent;\n            });\n\n            return {\n                valueWindow: asc(valueWindow),\n                percentWindow: asc(percentWindow)\n            };\n        },\n\n        /**\n         * Notice: reset should not be called before series.restoreData() called,\n         * so it is recommanded to be called in \"process stage\" but not \"model init\n         * stage\".\n         *\n         * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n         */\n        reset: function (dataZoomModel) {\n            if (dataZoomModel !== this._dataZoomModel) {\n                return;\n            }\n\n            // Culculate data window and data extent, and record them.\n            this._dataExtent = calculateDataExtent(\n                this, this._dimName, this.getTargetSeriesModels()\n            );\n\n            var dataWindow = this.calculateDataWindow(dataZoomModel.option);\n\n            this._valueWindow = dataWindow.valueWindow;\n            this._percentWindow = dataWindow.percentWindow;\n\n            setMinMaxSpan(this);\n\n            // Update axis setting then.\n            setAxisModel(this);\n        },\n\n        /**\n         * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n         */\n        restore: function (dataZoomModel) {\n            if (dataZoomModel !== this._dataZoomModel) {\n                return;\n            }\n\n            this._valueWindow = this._percentWindow = null;\n            setAxisModel(this, true);\n        },\n\n        /**\n         * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n         */\n        filterData: function (dataZoomModel) {\n            if (dataZoomModel !== this._dataZoomModel) {\n                return;\n            }\n\n            var axisDim = this._dimName;\n            var seriesModels = this.getTargetSeriesModels();\n            var filterMode = dataZoomModel.get('filterMode');\n            var valueWindow = this._valueWindow;\n\n            if (filterMode === 'none') {\n                return;\n            }\n\n            // FIXME\n            // Toolbox may has dataZoom injected. And if there are stacked bar chart\n            // with NaN data, NaN will be filtered and stack will be wrong.\n            // So we need to force the mode to be set empty.\n            // In fect, it is not a big deal that do not support filterMode-'filter'\n            // when using toolbox#dataZoom, utill tooltip#dataZoom support \"single axis\n            // selection\" some day, which might need \"adapt to data extent on the\n            // otherAxis\", which is disabled by filterMode-'empty'.\n            var otherAxisModel = this.getOtherAxisModel();\n            if (dataZoomModel.get('$fromToolbox')\n                && otherAxisModel\n                && otherAxisModel.get('type') === 'category'\n            ) {\n                filterMode = 'empty';\n            }\n\n            // Process series data\n            each(seriesModels, function (seriesModel) {\n                var seriesData = seriesModel.getData();\n                var dataDims = seriesModel.coordDimToDataDim(axisDim);\n\n                if (filterMode === 'weakFilter') {\n                    seriesData && seriesData.filterSelf(function (dataIndex) {\n                        var leftOut;\n                        var rightOut;\n                        var hasValue;\n                        for (var i = 0; i < dataDims.length; i++) {\n                            var value = seriesData.get(dataDims[i], dataIndex);\n                            var thisHasValue = !isNaN(value);\n                            var thisLeftOut = value < valueWindow[0];\n                            var thisRightOut = value > valueWindow[1];\n                            if (thisHasValue && !thisLeftOut && !thisRightOut) {\n                                return true;\n                            }\n                            thisHasValue && (hasValue = true);\n                            thisLeftOut && (leftOut = true);\n                            thisRightOut && (rightOut = true);\n                        }\n                        // If both left out and right out, do not filter.\n                        return hasValue && leftOut && rightOut;\n                    });\n                }\n                else {\n                    seriesData && each(dataDims, function (dim) {\n                        if (filterMode === 'empty') {\n                            seriesModel.setData(\n                                seriesData.map(dim, function (value) {\n                                    return !isInWindow(value) ? NaN : value;\n                                })\n                            );\n                        }\n                        else {\n                            seriesData.filterSelf(dim, isInWindow);\n                        }\n                    });\n                }\n            });\n\n            function isInWindow(value) {\n                return value >= valueWindow[0] && value <= valueWindow[1];\n            }\n        }\n    };\n\n    function calculateDataExtent(axisProxy, axisDim, seriesModels) {\n        var dataExtent = [Infinity, -Infinity];\n\n        each(seriesModels, function (seriesModel) {\n            var seriesData = seriesModel.getData();\n            if (seriesData) {\n                each(seriesModel.coordDimToDataDim(axisDim), function (dim) {\n                    var seriesExtent = seriesData.getDataExtent(dim);\n                    seriesExtent[0] < dataExtent[0] && (dataExtent[0] = seriesExtent[0]);\n                    seriesExtent[1] > dataExtent[1] && (dataExtent[1] = seriesExtent[1]);\n                });\n            }\n        });\n\n        if (dataExtent[1] < dataExtent[0]) {\n            dataExtent = [NaN, NaN];\n        }\n\n        // It is important to get \"consistent\" extent when more then one axes is\n        // controlled by a `dataZoom`, otherwise those axes will not be synchronized\n        // when zooming. But it is difficult to know what is \"consistent\", considering\n        // axes have different type or even different meanings (For example, two\n        // time axes are used to compare data of the same date in different years).\n        // So basically dataZoom just obtains extent by series.data (in category axis\n        // extent can be obtained from axis.data).\n        // Nevertheless, user can set min/max/scale on axes to make extent of axes\n        // consistent.\n        fixExtentByAxis(axisProxy, dataExtent);\n\n        return dataExtent;\n    }\n\n    function fixExtentByAxis(axisProxy, dataExtent) {\n        var axisModel = axisProxy.getAxisModel();\n        var min = axisModel.getMin(true);\n\n        // For category axis, if min/max/scale are not set, extent is determined\n        // by axis.data by default.\n        var isCategoryAxis = axisModel.get('type') === 'category';\n        var axisDataLen = isCategoryAxis && (axisModel.get('data') || []).length;\n\n        if (min != null && min !== 'dataMin') {\n            dataExtent[0] = min;\n        }\n        else if (isCategoryAxis) {\n            dataExtent[0] = axisDataLen > 0 ? 0 : NaN;\n        }\n\n        var max = axisModel.getMax(true);\n        if (max != null && max !== 'dataMax') {\n            dataExtent[1] = max;\n        }\n        else if (isCategoryAxis) {\n            dataExtent[1] = axisDataLen > 0 ? axisDataLen - 1 : NaN;\n        }\n\n        if (!axisModel.get('scale', true)) {\n            dataExtent[0] > 0 && (dataExtent[0] = 0);\n            dataExtent[1] < 0 && (dataExtent[1] = 0);\n        }\n\n        // For value axis, if min/max/scale are not set, we just use the extent obtained\n        // by series data, which may be a little different from the extent calculated by\n        // `axisHelper.getScaleExtent`. But the different just affects the experience a\n        // little when zooming. So it will not be fixed until some users require it strongly.\n\n        return dataExtent;\n    }\n\n    function setAxisModel(axisProxy, isRestore) {\n        var axisModel = axisProxy.getAxisModel();\n\n        var percentWindow = axisProxy._percentWindow;\n        var valueWindow = axisProxy._valueWindow;\n\n        if (!percentWindow) {\n            return;\n        }\n\n        // [0, 500]: arbitrary value, guess axis extent.\n        var precision = numberUtil.getPixelPrecision(valueWindow, [0, 500]);\n        // isRestore or isFull\n        var useOrigin = isRestore || (percentWindow[0] === 0 && percentWindow[1] === 100);\n\n        axisModel.setRange(\n            useOrigin ? null : +valueWindow[0].toFixed(precision),\n            useOrigin ? null : +valueWindow[1].toFixed(precision)\n        );\n    }\n\n    function setMinMaxSpan(axisProxy) {\n        var minMaxSpan = axisProxy._minMaxSpan = {};\n        var dataZoomModel = axisProxy._dataZoomModel;\n\n        each(['min', 'max'], function (minMax) {\n            minMaxSpan[minMax + 'Span'] = dataZoomModel.get(minMax + 'Span');\n\n            // minValueSpan and maxValueSpan has higher priority than minSpan and maxSpan\n            var valueSpan = dataZoomModel.get(minMax + 'ValueSpan');\n            if (valueSpan != null) {\n                minMaxSpan[minMax + 'ValueSpan'] = valueSpan;\n\n                valueSpan = axisProxy.getAxisModel().axis.scale.parse(valueSpan);\n                if (valueSpan != null) {\n                    minMaxSpan[minMax + 'Span'] = numberUtil.linearMap(\n                        valueSpan, axisProxy._dataExtent, [0, 100], true\n                    );\n                }\n            }\n        });\n    }\n\n    module.exports = AxisProxy;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/dataZoom/AxisProxy.js\n// module id = 596\n// module chunks = 0 1 2","/**\n * @file Data zoom model\n */\n\n\n    module.exports = require('./DataZoomModel').extend({\n\n        type: 'dataZoom.inside',\n\n        /**\n         * @protected\n         */\n        defaultOption: {\n            disabled: false,   // Whether disable this inside zoom.\n            zoomLock: false,   // Whether disable zoom but only pan.\n            zoomOnMouseWheel: true, // Can be: true / false / 'shift' / 'ctrl' / 'alt'.\n            moveOnMouseMove: true,   // Can be: true / false / 'shift' / 'ctrl' / 'alt'.\n            preventDefaultMouseMove: true\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/dataZoom/InsideZoomModel.js\n// module id = 597\n// module chunks = 0 1 2","\n\n    var DataZoomView = require('./DataZoomView');\n    var zrUtil = require('zrender/lib/core/util');\n    var sliderMove = require('../helper/sliderMove');\n    var roams = require('./roams');\n    var bind = zrUtil.bind;\n\n    var InsideZoomView = DataZoomView.extend({\n\n        type: 'dataZoom.inside',\n\n        /**\n         * @override\n         */\n        init: function (ecModel, api) {\n            /**\n             * 'throttle' is used in this.dispatchAction, so we save range\n             * to avoid missing some 'pan' info.\n             * @private\n             * @type {Array.<number>}\n             */\n            this._range;\n        },\n\n        /**\n         * @override\n         */\n        render: function (dataZoomModel, ecModel, api, payload) {\n            InsideZoomView.superApply(this, 'render', arguments);\n\n            // Notice: origin this._range should be maintained, and should not be re-fetched\n            // from dataZoomModel when payload.type is 'dataZoom', otherwise 'pan' or 'zoom'\n            // info will be missed because of 'throttle' of this.dispatchAction.\n            if (roams.shouldRecordRange(payload, dataZoomModel.id)) {\n                this._range = dataZoomModel.getPercentRange();\n            }\n\n            // Reset controllers.\n            zrUtil.each(this.getTargetCoordInfo(), function (coordInfoList, coordSysName) {\n\n                var allCoordIds = zrUtil.map(coordInfoList, function (coordInfo) {\n                    return roams.generateCoordId(coordInfo.model);\n                });\n\n                zrUtil.each(coordInfoList, function (coordInfo) {\n                    var coordModel = coordInfo.model;\n                    var dataZoomOption = dataZoomModel.option;\n\n                    roams.register(\n                        api,\n                        {\n                            coordId: roams.generateCoordId(coordModel),\n                            allCoordIds: allCoordIds,\n                            containsPoint: function (e, x, y) {\n                                return coordModel.coordinateSystem.containPoint([x, y]);\n                            },\n                            dataZoomId: dataZoomModel.id,\n                            throttleRate: dataZoomModel.get('throttle', true),\n                            panGetRange: bind(this._onPan, this, coordInfo, coordSysName),\n                            zoomGetRange: bind(this._onZoom, this, coordInfo, coordSysName),\n                            zoomLock: dataZoomOption.zoomLock,\n                            disabled: dataZoomOption.disabled,\n                            roamControllerOpt: {\n                                zoomOnMouseWheel: dataZoomOption.zoomOnMouseWheel,\n                                moveOnMouseMove: dataZoomOption.moveOnMouseMove,\n                                preventDefaultMouseMove: dataZoomOption.preventDefaultMouseMove\n                            }\n                        }\n                    );\n                }, this);\n\n            }, this);\n        },\n\n        /**\n         * @override\n         */\n        dispose: function () {\n            roams.unregister(this.api, this.dataZoomModel.id);\n            InsideZoomView.superApply(this, 'dispose', arguments);\n            this._range = null;\n        },\n\n        /**\n         * @private\n         */\n        _onPan: function (coordInfo, coordSysName, controller, dx, dy, oldX, oldY, newX, newY) {\n            var range = this._range.slice();\n\n            // Calculate transform by the first axis.\n            var axisModel = coordInfo.axisModels[0];\n            if (!axisModel) {\n                return;\n            }\n\n            var directionInfo = getDirectionInfo[coordSysName](\n                [oldX, oldY], [newX, newY], axisModel, controller, coordInfo\n            );\n\n            var percentDelta = directionInfo.signal\n                * (range[1] - range[0])\n                * directionInfo.pixel / directionInfo.pixelLength;\n\n            sliderMove(percentDelta, range, [0, 100], 'all');\n\n            return (this._range = range);\n        },\n\n        /**\n         * @private\n         */\n        _onZoom: function (coordInfo, coordSysName, controller, scale, mouseX, mouseY) {\n            var range = this._range.slice();\n\n            // Calculate transform by the first axis.\n            var axisModel = coordInfo.axisModels[0];\n            if (!axisModel) {\n                return;\n            }\n\n            var directionInfo = getDirectionInfo[coordSysName](\n                null, [mouseX, mouseY], axisModel, controller, coordInfo\n            );\n            var percentPoint = (\n                directionInfo.signal > 0\n                    ? (directionInfo.pixelStart + directionInfo.pixelLength - directionInfo.pixel)\n                    : (directionInfo.pixel - directionInfo.pixelStart)\n                ) / directionInfo.pixelLength * (range[1] - range[0]) + range[0];\n\n            scale = Math.max(1 / scale, 0);\n            range[0] = (range[0] - percentPoint) * scale + percentPoint;\n            range[1] = (range[1] - percentPoint) * scale + percentPoint;\n\n            // Restrict range.\n            var minMaxSpan = this.dataZoomModel.findRepresentativeAxisProxy().getMinMaxSpan();\n            sliderMove(0, range, [0, 100], 0, minMaxSpan.minSpan, minMaxSpan.maxSpan);\n\n            return (this._range = range);\n        }\n\n    });\n\n    var getDirectionInfo = {\n\n        grid: function (oldPoint, newPoint, axisModel, controller, coordInfo) {\n            var axis = axisModel.axis;\n            var ret = {};\n            var rect = coordInfo.model.coordinateSystem.getRect();\n            oldPoint = oldPoint || [0, 0];\n\n            if (axis.dim === 'x') {\n                ret.pixel = newPoint[0] - oldPoint[0];\n                ret.pixelLength = rect.width;\n                ret.pixelStart = rect.x;\n                ret.signal = axis.inverse ? 1 : -1;\n            }\n            else { // axis.dim === 'y'\n                ret.pixel = newPoint[1] - oldPoint[1];\n                ret.pixelLength = rect.height;\n                ret.pixelStart = rect.y;\n                ret.signal = axis.inverse ? -1 : 1;\n            }\n\n            return ret;\n        },\n\n        polar: function (oldPoint, newPoint, axisModel, controller, coordInfo) {\n            var axis = axisModel.axis;\n            var ret = {};\n            var polar = coordInfo.model.coordinateSystem;\n            var radiusExtent = polar.getRadiusAxis().getExtent();\n            var angleExtent = polar.getAngleAxis().getExtent();\n\n            oldPoint = oldPoint ? polar.pointToCoord(oldPoint) : [0, 0];\n            newPoint = polar.pointToCoord(newPoint);\n\n            if (axisModel.mainType === 'radiusAxis') {\n                ret.pixel = newPoint[0] - oldPoint[0];\n                // ret.pixelLength = Math.abs(radiusExtent[1] - radiusExtent[0]);\n                // ret.pixelStart = Math.min(radiusExtent[0], radiusExtent[1]);\n                ret.pixelLength = radiusExtent[1] - radiusExtent[0];\n                ret.pixelStart = radiusExtent[0];\n                ret.signal = axis.inverse ? 1 : -1;\n            }\n            else { // 'angleAxis'\n                ret.pixel = newPoint[1] - oldPoint[1];\n                // ret.pixelLength = Math.abs(angleExtent[1] - angleExtent[0]);\n                // ret.pixelStart = Math.min(angleExtent[0], angleExtent[1]);\n                ret.pixelLength = angleExtent[1] - angleExtent[0];\n                ret.pixelStart = angleExtent[0];\n                ret.signal = axis.inverse ? -1 : 1;\n            }\n\n            return ret;\n        },\n\n        singleAxis: function (oldPoint, newPoint, axisModel, controller, coordInfo) {\n            var axis = axisModel.axis;\n            var rect = coordInfo.model.coordinateSystem.getRect();\n            var ret = {};\n\n            oldPoint = oldPoint || [0, 0];\n\n            if (axis.orient === 'horizontal') {\n                ret.pixel = newPoint[0] - oldPoint[0];\n                ret.pixelLength = rect.width;\n                ret.pixelStart = rect.x;\n                ret.signal = axis.inverse ? 1 : -1;\n            }\n            else { // 'vertical'\n                ret.pixel = newPoint[1] - oldPoint[1];\n                ret.pixelLength = rect.height;\n                ret.pixelStart = rect.y;\n                ret.signal = axis.inverse ? -1 : 1;\n            }\n\n            return ret;\n        }\n    };\n\n    module.exports = InsideZoomView;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/dataZoom/InsideZoomView.js\n// module id = 598\n// module chunks = 0 1 2","/**\n * @file Data zoom model\n */\n\n\n    var DataZoomModel = require('./DataZoomModel');\n\n    var SliderZoomModel = DataZoomModel.extend({\n\n        type: 'dataZoom.slider',\n\n        layoutMode: 'box',\n\n        /**\n         * @protected\n         */\n        defaultOption: {\n            show: true,\n\n            // ph => placeholder. Using placehoder here because\n            // deault value can only be drived in view stage.\n            right: 'ph',  // Default align to grid rect.\n            top: 'ph',    // Default align to grid rect.\n            width: 'ph',  // Default align to grid rect.\n            height: 'ph', // Default align to grid rect.\n            left: null,   // Default align to grid rect.\n            bottom: null, // Default align to grid rect.\n\n            backgroundColor: 'rgba(47,69,84,0)',    // Background of slider zoom component.\n            // dataBackgroundColor: '#ddd',         // Background coor of data shadow and border of box,\n                                                    // highest priority, remain for compatibility of\n                                                    // previous version, but not recommended any more.\n            dataBackground: {\n                lineStyle: {\n                    color: '#2f4554',\n                    width: 0.5,\n                    opacity: 0.3\n                },\n                areaStyle: {\n                    color: 'rgba(47,69,84,0.3)',\n                    opacity: 0.3\n                }\n            },\n            borderColor: '#ddd',                    // border color of the box. For compatibility,\n                                                    // if dataBackgroundColor is set, borderColor\n                                                    // is ignored.\n\n            fillerColor: 'rgba(167,183,204,0.4)',     // Color of selected area.\n            // handleColor: 'rgba(89,170,216,0.95)',     // Color of handle.\n            // handleIcon: 'path://M4.9,17.8c0-1.4,4.5-10.5,5.5-12.4c0-0.1,0.6-1.1,0.9-1.1c0.4,0,0.9,1,0.9,1.1c1.1,2.2,5.4,11,5.4,12.4v17.8c0,1.5-0.6,2.1-1.3,2.1H6.1c-0.7,0-1.3-0.6-1.3-2.1V17.8z',\n            handleIcon: 'M8.2,13.6V3.9H6.3v9.7H3.1v14.9h3.3v9.7h1.8v-9.7h3.3V13.6H8.2z M9.7,24.4H4.8v-1.4h4.9V24.4z M9.7,19.1H4.8v-1.4h4.9V19.1z',\n            // Percent of the slider height\n            handleSize: '100%',\n\n            handleStyle: {\n                color: '#a7b7cc'\n            },\n\n            labelPrecision: null,\n            labelFormatter: null,\n            showDetail: true,\n            showDataShadow: 'auto',                 // Default auto decision.\n            realtime: true,\n            zoomLock: false,                        // Whether disable zoom.\n            textStyle: {\n                color: '#333'\n            }\n        }\n\n    });\n\n    module.exports = SliderZoomModel;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/dataZoom/SliderZoomModel.js\n// module id = 599\n// module chunks = 0 1 2","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var graphic = require('../../util/graphic');\n    var throttle = require('../../util/throttle');\n    var DataZoomView = require('./DataZoomView');\n    var Rect = graphic.Rect;\n    var numberUtil = require('../../util/number');\n    var linearMap = numberUtil.linearMap;\n    var layout = require('../../util/layout');\n    var sliderMove = require('../helper/sliderMove');\n    var eventTool = require('zrender/lib/core/event');\n\n    var asc = numberUtil.asc;\n    var bind = zrUtil.bind;\n    // var mathMax = Math.max;\n    var each = zrUtil.each;\n\n    // Constants\n    var DEFAULT_LOCATION_EDGE_GAP = 7;\n    var DEFAULT_FRAME_BORDER_WIDTH = 1;\n    var DEFAULT_FILLER_SIZE = 30;\n    var HORIZONTAL = 'horizontal';\n    var VERTICAL = 'vertical';\n    var LABEL_GAP = 5;\n    var SHOW_DATA_SHADOW_SERIES_TYPE = ['line', 'bar', 'candlestick', 'scatter'];\n\n    var SliderZoomView = DataZoomView.extend({\n\n        type: 'dataZoom.slider',\n\n        init: function (ecModel, api) {\n\n            /**\n             * @private\n             * @type {Object}\n             */\n            this._displayables = {};\n\n            /**\n             * @private\n             * @type {string}\n             */\n            this._orient;\n\n            /**\n             * [0, 100]\n             * @private\n             */\n            this._range;\n\n            /**\n             * [coord of the first handle, coord of the second handle]\n             * @private\n             */\n            this._handleEnds;\n\n            /**\n             * [length, thick]\n             * @private\n             * @type {Array.<number>}\n             */\n            this._size;\n\n            /**\n             * @private\n             * @type {number}\n             */\n            this._handleWidth;\n\n            /**\n             * @private\n             * @type {number}\n             */\n            this._handleHeight;\n\n            /**\n             * @private\n             */\n            this._location;\n\n            /**\n             * @private\n             */\n            this._dragging;\n\n            /**\n             * @private\n             */\n            this._dataShadowInfo;\n\n            this.api = api;\n        },\n\n        /**\n         * @override\n         */\n        render: function (dataZoomModel, ecModel, api, payload) {\n            SliderZoomView.superApply(this, 'render', arguments);\n\n            throttle.createOrUpdate(\n                this,\n                '_dispatchZoomAction',\n                this.dataZoomModel.get('throttle'),\n                'fixRate'\n            );\n\n            this._orient = dataZoomModel.get('orient');\n\n            if (this.dataZoomModel.get('show') === false) {\n                this.group.removeAll();\n                return;\n            }\n\n            // Notice: this._resetInterval() should not be executed when payload.type\n            // is 'dataZoom', origin this._range should be maintained, otherwise 'pan'\n            // or 'zoom' info will be missed because of 'throttle' of this.dispatchAction,\n            if (!payload || payload.type !== 'dataZoom' || payload.from !== this.uid) {\n                this._buildView();\n            }\n\n            this._updateView();\n        },\n\n        /**\n         * @override\n         */\n        remove: function () {\n            SliderZoomView.superApply(this, 'remove', arguments);\n            throttle.clear(this, '_dispatchZoomAction');\n        },\n\n        /**\n         * @override\n         */\n        dispose: function () {\n            SliderZoomView.superApply(this, 'dispose', arguments);\n            throttle.clear(this, '_dispatchZoomAction');\n        },\n\n        _buildView: function () {\n            var thisGroup = this.group;\n\n            thisGroup.removeAll();\n\n            this._resetLocation();\n            this._resetInterval();\n\n            var barGroup = this._displayables.barGroup = new graphic.Group();\n\n            this._renderBackground();\n\n            this._renderHandle();\n\n            this._renderDataShadow();\n\n            thisGroup.add(barGroup);\n\n            this._positionGroup();\n        },\n\n        /**\n         * @private\n         */\n        _resetLocation: function () {\n            var dataZoomModel = this.dataZoomModel;\n            var api = this.api;\n\n            // If some of x/y/width/height are not specified,\n            // auto-adapt according to target grid.\n            var coordRect = this._findCoordRect();\n            var ecSize = {width: api.getWidth(), height: api.getHeight()};\n            // Default align by coordinate system rect.\n            var positionInfo = this._orient === HORIZONTAL\n                ? {\n                    // Why using 'right', because right should be used in vertical,\n                    // and it is better to be consistent for dealing with position param merge.\n                    right: ecSize.width - coordRect.x - coordRect.width,\n                    top: (ecSize.height - DEFAULT_FILLER_SIZE - DEFAULT_LOCATION_EDGE_GAP),\n                    width: coordRect.width,\n                    height: DEFAULT_FILLER_SIZE\n                }\n                : { // vertical\n                    right: DEFAULT_LOCATION_EDGE_GAP,\n                    top: coordRect.y,\n                    width: DEFAULT_FILLER_SIZE,\n                    height: coordRect.height\n                };\n\n            // Do not write back to option and replace value 'ph', because\n            // the 'ph' value should be recalculated when resize.\n            var layoutParams = layout.getLayoutParams(dataZoomModel.option);\n\n            // Replace the placeholder value.\n            zrUtil.each(['right', 'top', 'width', 'height'], function (name) {\n                if (layoutParams[name] === 'ph') {\n                    layoutParams[name] = positionInfo[name];\n                }\n            });\n\n            var layoutRect = layout.getLayoutRect(\n                layoutParams,\n                ecSize,\n                dataZoomModel.padding\n            );\n\n            this._location = {x: layoutRect.x, y: layoutRect.y};\n            this._size = [layoutRect.width, layoutRect.height];\n            this._orient === VERTICAL && this._size.reverse();\n        },\n\n        /**\n         * @private\n         */\n        _positionGroup: function () {\n            var thisGroup = this.group;\n            var location = this._location;\n            var orient = this._orient;\n\n            // Just use the first axis to determine mapping.\n            var targetAxisModel = this.dataZoomModel.getFirstTargetAxisModel();\n            var inverse = targetAxisModel && targetAxisModel.get('inverse');\n\n            var barGroup = this._displayables.barGroup;\n            var otherAxisInverse = (this._dataShadowInfo || {}).otherAxisInverse;\n\n            // Transform barGroup.\n            barGroup.attr(\n                (orient === HORIZONTAL && !inverse)\n                ? {scale: otherAxisInverse ? [1, 1] : [1, -1]}\n                : (orient === HORIZONTAL && inverse)\n                ? {scale: otherAxisInverse ? [-1, 1] : [-1, -1]}\n                : (orient === VERTICAL && !inverse)\n                ? {scale: otherAxisInverse ? [1, -1] : [1, 1], rotation: Math.PI / 2}\n                // Dont use Math.PI, considering shadow direction.\n                : {scale: otherAxisInverse ? [-1, -1] : [-1, 1], rotation: Math.PI / 2}\n            );\n\n            // Position barGroup\n            var rect = thisGroup.getBoundingRect([barGroup]);\n            thisGroup.attr('position', [location.x - rect.x, location.y - rect.y]);\n        },\n\n        /**\n         * @private\n         */\n        _getViewExtent: function () {\n            return [0, this._size[0]];\n        },\n\n        _renderBackground: function () {\n            var dataZoomModel = this.dataZoomModel;\n            var size = this._size;\n            var barGroup = this._displayables.barGroup;\n\n            barGroup.add(new Rect({\n                silent: true,\n                shape: {\n                    x: 0, y: 0, width: size[0], height: size[1]\n                },\n                style: {\n                    fill: dataZoomModel.get('backgroundColor')\n                },\n                z2: -40\n            }));\n\n            // Click panel, over shadow, below handles.\n            barGroup.add(new Rect({\n                shape: {\n                    x: 0, y: 0, width: size[0], height: size[1]\n                },\n                style: {\n                    fill: 'transparent'\n                },\n                z2: 0,\n                onclick: zrUtil.bind(this._onClickPanelClick, this)\n            }));\n        },\n\n        _renderDataShadow: function () {\n            var info = this._dataShadowInfo = this._prepareDataShadowInfo();\n\n            if (!info) {\n                return;\n            }\n\n            var size = this._size;\n            var seriesModel = info.series;\n            var data = seriesModel.getRawData();\n            var otherDim = seriesModel.getShadowDim\n                ? seriesModel.getShadowDim() // @see candlestick\n                : info.otherDim;\n\n            if (otherDim == null) {\n                return;\n            }\n\n            var otherDataExtent = data.getDataExtent(otherDim);\n            // Nice extent.\n            var otherOffset = (otherDataExtent[1] - otherDataExtent[0]) * 0.3;\n            otherDataExtent = [\n                otherDataExtent[0] - otherOffset,\n                otherDataExtent[1] + otherOffset\n            ];\n            var otherShadowExtent = [0, size[1]];\n\n            var thisShadowExtent = [0, size[0]];\n\n            var areaPoints = [[size[0], 0], [0, 0]];\n            var linePoints = [];\n            var step = thisShadowExtent[1] / (data.count() - 1);\n            var thisCoord = 0;\n\n            // Optimize for large data shadow\n            var stride = Math.round(data.count() / size[0]);\n            var lastIsEmpty;\n            data.each([otherDim], function (value, index) {\n                if (stride > 0 && (index % stride)) {\n                    thisCoord += step;\n                    return;\n                }\n\n                // FIXME\n                // Should consider axis.min/axis.max when drawing dataShadow.\n\n                // FIXME\n                // 应该使用统一的空判断？还是在list里进行空判断？\n                var isEmpty = value == null || isNaN(value) || value === '';\n                // See #4235.\n                var otherCoord = isEmpty\n                    ? 0 : linearMap(value, otherDataExtent, otherShadowExtent, true);\n\n                // Attempt to draw data shadow precisely when there are empty value.\n                if (isEmpty && !lastIsEmpty && index) {\n                    areaPoints.push([areaPoints[areaPoints.length - 1][0], 0]);\n                    linePoints.push([linePoints[linePoints.length - 1][0], 0]);\n                }\n                else if (!isEmpty && lastIsEmpty) {\n                    areaPoints.push([thisCoord, 0]);\n                    linePoints.push([thisCoord, 0]);\n                }\n\n                areaPoints.push([thisCoord, otherCoord]);\n                linePoints.push([thisCoord, otherCoord]);\n\n                thisCoord += step;\n                lastIsEmpty = isEmpty;\n            });\n\n            var dataZoomModel = this.dataZoomModel;\n            // var dataBackgroundModel = dataZoomModel.getModel('dataBackground');\n            this._displayables.barGroup.add(new graphic.Polygon({\n                shape: {points: areaPoints},\n                style: zrUtil.defaults(\n                    {fill: dataZoomModel.get('dataBackgroundColor')},\n                    dataZoomModel.getModel('dataBackground.areaStyle').getAreaStyle()\n                ),\n                silent: true,\n                z2: -20\n            }));\n            this._displayables.barGroup.add(new graphic.Polyline({\n                shape: {points: linePoints},\n                style: dataZoomModel.getModel('dataBackground.lineStyle').getLineStyle(),\n                silent: true,\n                z2: -19\n            }));\n        },\n\n        _prepareDataShadowInfo: function () {\n            var dataZoomModel = this.dataZoomModel;\n            var showDataShadow = dataZoomModel.get('showDataShadow');\n\n            if (showDataShadow === false) {\n                return;\n            }\n\n            // Find a representative series.\n            var result;\n            var ecModel = this.ecModel;\n\n            dataZoomModel.eachTargetAxis(function (dimNames, axisIndex) {\n                var seriesModels = dataZoomModel\n                    .getAxisProxy(dimNames.name, axisIndex)\n                    .getTargetSeriesModels();\n\n                zrUtil.each(seriesModels, function (seriesModel) {\n                    if (result) {\n                        return;\n                    }\n\n                    if (showDataShadow !== true && zrUtil.indexOf(\n                            SHOW_DATA_SHADOW_SERIES_TYPE, seriesModel.get('type')\n                        ) < 0\n                    ) {\n                        return;\n                    }\n\n                    var thisAxis = ecModel.getComponent(dimNames.axis, axisIndex).axis;\n                    var otherDim = getOtherDim(dimNames.name);\n                    var otherAxisInverse;\n                    var coordSys = seriesModel.coordinateSystem;\n                    if (otherDim != null && coordSys.getOtherAxis) {\n                        otherAxisInverse = coordSys.getOtherAxis(thisAxis).inverse;\n                    }\n\n                    result = {\n                        thisAxis: thisAxis,\n                        series: seriesModel,\n                        thisDim: dimNames.name,\n                        otherDim: otherDim,\n                        otherAxisInverse: otherAxisInverse\n                    };\n\n                }, this);\n\n            }, this);\n\n            return result;\n        },\n\n        _renderHandle: function () {\n            var displaybles = this._displayables;\n            var handles = displaybles.handles = [];\n            var handleLabels = displaybles.handleLabels = [];\n            var barGroup = this._displayables.barGroup;\n            var size = this._size;\n            var dataZoomModel = this.dataZoomModel;\n\n            barGroup.add(displaybles.filler = new Rect({\n                draggable: true,\n                cursor: 'move',\n                drift: bind(this._onDragMove, this, 'all'),\n                onmousemove: function (e) {\n                    // Fot mobile devicem, prevent screen slider on the button.\n                    eventTool.stop(e.event);\n                },\n                ondragstart: bind(this._showDataInfo, this, true),\n                ondragend: bind(this._onDragEnd, this),\n                onmouseover: bind(this._showDataInfo, this, true),\n                onmouseout: bind(this._showDataInfo, this, false),\n                style: {\n                    fill: dataZoomModel.get('fillerColor'),\n                    textPosition : 'inside'\n                }\n            }));\n\n            // Frame border.\n            barGroup.add(new Rect(graphic.subPixelOptimizeRect({\n                silent: true,\n                shape: {\n                    x: 0,\n                    y: 0,\n                    width: size[0],\n                    height: size[1]\n                },\n                style: {\n                    stroke: dataZoomModel.get('dataBackgroundColor')\n                        || dataZoomModel.get('borderColor'),\n                    lineWidth: DEFAULT_FRAME_BORDER_WIDTH,\n                    fill: 'rgba(0,0,0,0)'\n                }\n            })));\n\n            var iconStr = dataZoomModel.get('handleIcon');\n            each([0, 1], function (handleIndex) {\n                var iconOpt = {\n                    style: {\n                        strokeNoScale: true\n                    },\n                    rectHover: true,\n                    cursor: this._orient === 'vertical' ? 'ns-resize' : 'ew-resize',\n                    draggable: true,\n                    drift: bind(this._onDragMove, this, handleIndex),\n                    onmousemove: function (e) {\n                        // Fot mobile devicem, prevent screen slider on the button.\n                        eventTool.stop(e.event);\n                    },\n                    ondragend: bind(this._onDragEnd, this),\n                    onmouseover: bind(this._showDataInfo, this, true),\n                    onmouseout: bind(this._showDataInfo, this, false)\n                };\n                var iconStyle = {x: -1, y: 0, width: 2, height: 2};\n\n                var path = iconStr.indexOf('image://') === 0\n                    ? (\n                        iconStyle.image = iconStr.slice(8),\n                        iconOpt.style = iconStyle,\n                        new graphic.Image(iconOpt)\n                    )\n                    : graphic.makePath(\n                        iconStr.replace('path://', ''),\n                        iconOpt,\n                        iconStyle,\n                        'center'\n                    );\n\n                var bRect = path.getBoundingRect();\n                this._handleHeight = numberUtil.parsePercent(dataZoomModel.get('handleSize'), this._size[1]);\n                this._handleWidth = bRect.width / bRect.height * this._handleHeight;\n\n                path.setStyle(dataZoomModel.getModel('handleStyle').getItemStyle());\n                var handleColor = dataZoomModel.get('handleColor');\n                // Compatitable with previous version\n                if (handleColor != null) {\n                    path.style.fill = handleColor;\n                }\n\n                barGroup.add(handles[handleIndex] = path);\n\n                var textStyleModel = dataZoomModel.textStyleModel;\n\n                this.group.add(\n                    handleLabels[handleIndex] = new graphic.Text({\n                    silent: true,\n                    invisible: true,\n                    style: {\n                        x: 0, y: 0, text: '',\n                        textVerticalAlign: 'middle',\n                        textAlign: 'center',\n                        fill: textStyleModel.getTextColor(),\n                        textFont: textStyleModel.getFont()\n                    },\n                    z2: 10\n                }));\n\n            }, this);\n        },\n\n        /**\n         * @private\n         */\n        _resetInterval: function () {\n            var range = this._range = this.dataZoomModel.getPercentRange();\n            var viewExtent = this._getViewExtent();\n\n            this._handleEnds = [\n                linearMap(range[0], [0, 100], viewExtent, true),\n                linearMap(range[1], [0, 100], viewExtent, true)\n            ];\n        },\n\n        /**\n         * @private\n         * @param {(number|string)} handleIndex 0 or 1 or 'all'\n         * @param {number} delta\n         */\n        _updateInterval: function (handleIndex, delta) {\n            var dataZoomModel = this.dataZoomModel;\n            var handleEnds = this._handleEnds;\n            var viewExtend = this._getViewExtent();\n            var minMaxSpan = dataZoomModel.findRepresentativeAxisProxy().getMinMaxSpan();\n            var percentExtent = [0, 100];\n\n            sliderMove(\n                delta,\n                handleEnds,\n                viewExtend,\n                dataZoomModel.get('zoomLock') ? 'all' : handleIndex,\n                minMaxSpan.minSpan != null\n                    ? linearMap(minMaxSpan.minSpan, percentExtent, viewExtend, true) : null,\n                minMaxSpan.maxSpan != null\n                    ? linearMap(minMaxSpan.maxSpan, percentExtent, viewExtend, true) : null\n            );\n\n            this._range = asc([\n                linearMap(handleEnds[0], viewExtend, percentExtent, true),\n                linearMap(handleEnds[1], viewExtend, percentExtent, true)\n            ]);\n        },\n\n        /**\n         * @private\n         */\n        _updateView: function (nonRealtime) {\n            var displaybles = this._displayables;\n            var handleEnds = this._handleEnds;\n            var handleInterval = asc(handleEnds.slice());\n            var size = this._size;\n\n            each([0, 1], function (handleIndex) {\n                // Handles\n                var handle = displaybles.handles[handleIndex];\n                var handleHeight = this._handleHeight;\n                handle.attr({\n                    scale: [handleHeight / 2, handleHeight / 2],\n                    position: [handleEnds[handleIndex], size[1] / 2 - handleHeight / 2]\n                });\n            }, this);\n\n            // Filler\n            displaybles.filler.setShape({\n                x: handleInterval[0],\n                y: 0,\n                width: handleInterval[1] - handleInterval[0],\n                height: size[1]\n            });\n\n            this._updateDataInfo(nonRealtime);\n        },\n\n        /**\n         * @private\n         */\n        _updateDataInfo: function (nonRealtime) {\n            var dataZoomModel = this.dataZoomModel;\n            var displaybles = this._displayables;\n            var handleLabels = displaybles.handleLabels;\n            var orient = this._orient;\n            var labelTexts = ['', ''];\n\n            // FIXME\n            // date型，支持formatter，autoformatter（ec2 date.getAutoFormatter）\n            if (dataZoomModel.get('showDetail')) {\n                var axisProxy = dataZoomModel.findRepresentativeAxisProxy();\n\n                if (axisProxy) {\n                    var axis = axisProxy.getAxisModel().axis;\n                    var range = this._range;\n\n                    var dataInterval = nonRealtime\n                        // See #4434, data and axis are not processed and reset yet in non-realtime mode.\n                        ? axisProxy.calculateDataWindow({\n                            start: range[0], end: range[1]\n                        }).valueWindow\n                        : axisProxy.getDataValueWindow();\n\n                    labelTexts = [\n                        this._formatLabel(dataInterval[0], axis),\n                        this._formatLabel(dataInterval[1], axis)\n                    ];\n                }\n            }\n\n            var orderedHandleEnds = asc(this._handleEnds.slice());\n\n            setLabel.call(this, 0);\n            setLabel.call(this, 1);\n\n            function setLabel(handleIndex) {\n                // Label\n                // Text should not transform by barGroup.\n                // Ignore handlers transform\n                var barTransform = graphic.getTransform(\n                    displaybles.handles[handleIndex].parent, this.group\n                );\n                var direction = graphic.transformDirection(\n                    handleIndex === 0 ? 'right' : 'left', barTransform\n                );\n                var offset = this._handleWidth / 2 + LABEL_GAP;\n                var textPoint = graphic.applyTransform(\n                    [\n                        orderedHandleEnds[handleIndex] + (handleIndex === 0 ? -offset : offset),\n                        this._size[1] / 2\n                    ],\n                    barTransform\n                );\n                handleLabels[handleIndex].setStyle({\n                    x: textPoint[0],\n                    y: textPoint[1],\n                    textVerticalAlign: orient === HORIZONTAL ? 'middle' : direction,\n                    textAlign: orient === HORIZONTAL ? direction : 'center',\n                    text: labelTexts[handleIndex]\n                });\n            }\n        },\n\n        /**\n         * @private\n         */\n        _formatLabel: function (value, axis) {\n            var dataZoomModel = this.dataZoomModel;\n            var labelFormatter = dataZoomModel.get('labelFormatter');\n\n            var labelPrecision = dataZoomModel.get('labelPrecision');\n            if (labelPrecision == null || labelPrecision === 'auto') {\n                labelPrecision = axis.getPixelPrecision();\n            }\n\n            var valueStr = (value == null || isNaN(value))\n                ? ''\n                // FIXME Glue code\n                : (axis.type === 'category' || axis.type === 'time')\n                    ? axis.scale.getLabel(Math.round(value))\n                    // param of toFixed should less then 20.\n                    : value.toFixed(Math.min(labelPrecision, 20));\n\n            return zrUtil.isFunction(labelFormatter)\n                ? labelFormatter(value, valueStr)\n                : zrUtil.isString(labelFormatter)\n                ? labelFormatter.replace('{value}', valueStr)\n                : valueStr;\n        },\n\n        /**\n         * @private\n         * @param {boolean} showOrHide true: show, false: hide\n         */\n        _showDataInfo: function (showOrHide) {\n            // Always show when drgging.\n            showOrHide = this._dragging || showOrHide;\n\n            var handleLabels = this._displayables.handleLabels;\n            handleLabels[0].attr('invisible', !showOrHide);\n            handleLabels[1].attr('invisible', !showOrHide);\n        },\n\n        _onDragMove: function (handleIndex, dx, dy) {\n            this._dragging = true;\n\n            // Transform dx, dy to bar coordination.\n            var barTransform = this._displayables.barGroup.getLocalTransform();\n            var vertex = graphic.applyTransform([dx, dy], barTransform, true);\n\n            this._updateInterval(handleIndex, vertex[0]);\n\n            var realtime = this.dataZoomModel.get('realtime');\n\n            this._updateView(!realtime);\n\n            if (realtime) {\n                realtime && this._dispatchZoomAction();\n            }\n        },\n\n        _onDragEnd: function () {\n            this._dragging = false;\n            this._showDataInfo(false);\n            this._dispatchZoomAction();\n        },\n\n        _onClickPanelClick: function (e) {\n            var size = this._size;\n            var localPoint = this._displayables.barGroup.transformCoordToLocal(e.offsetX, e.offsetY);\n\n            if (localPoint[0] < 0 || localPoint[0] > size[0]\n                || localPoint[1] < 0 || localPoint[1] > size[1]\n            ) {\n                return;\n            }\n\n            var handleEnds = this._handleEnds;\n            var center = (handleEnds[0] + handleEnds[1]) / 2;\n\n            this._updateInterval('all', localPoint[0] - center);\n            this._updateView();\n            this._dispatchZoomAction();\n        },\n\n        /**\n         * This action will be throttled.\n         * @private\n         */\n        _dispatchZoomAction: function () {\n            var range = this._range;\n\n            this.api.dispatchAction({\n                type: 'dataZoom',\n                from: this.uid,\n                dataZoomId: this.dataZoomModel.id,\n                start: range[0],\n                end: range[1]\n            });\n        },\n\n        /**\n         * @private\n         */\n        _findCoordRect: function () {\n            // Find the grid coresponding to the first axis referred by dataZoom.\n            var rect;\n            each(this.getTargetCoordInfo(), function (coordInfoList) {\n                if (!rect && coordInfoList.length) {\n                    var coordSys = coordInfoList[0].model.coordinateSystem;\n                    rect = coordSys.getRect && coordSys.getRect();\n                }\n            });\n            if (!rect) {\n                var width = this.api.getWidth();\n                var height = this.api.getHeight();\n                rect = {\n                    x: width * 0.2,\n                    y: height * 0.2,\n                    width: width * 0.6,\n                    height: height * 0.6\n                };\n            }\n\n            return rect;\n        }\n\n    });\n\n    function getOtherDim(thisDim) {\n        // FIXME\n        // 这个逻辑和getOtherAxis里一致，但是写在这里是否不好\n        var map = {x: 'y', y: 'x', radius: 'angle', angle: 'radius'};\n        return map[thisDim];\n    }\n\n    module.exports = SliderZoomView;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/dataZoom/SliderZoomView.js\n// module id = 600\n// module chunks = 0 1 2","/**\n * @file Data zoom action\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var helper = require('./helper');\n    var echarts = require('../../echarts');\n\n\n    echarts.registerAction('dataZoom', function (payload, ecModel) {\n\n        var linkedNodesFinder = helper.createLinkedNodesFinder(\n            zrUtil.bind(ecModel.eachComponent, ecModel, 'dataZoom'),\n            helper.eachAxisDim,\n            function (model, dimNames) {\n                return model.get(dimNames.axisIndex);\n            }\n        );\n\n        var effectedModels = [];\n\n        ecModel.eachComponent(\n            {mainType: 'dataZoom', query: payload},\n            function (model, index) {\n                effectedModels.push.apply(\n                    effectedModels, linkedNodesFinder(model).nodes\n                );\n            }\n        );\n\n        zrUtil.each(effectedModels, function (dataZoomModel, index) {\n            dataZoomModel.setRawRange({\n                start: payload.start,\n                end: payload.end,\n                startValue: payload.startValue,\n                endValue: payload.endValue\n            });\n        });\n\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/dataZoom/dataZoomAction.js\n// module id = 601\n// module chunks = 0 1 2","/**\n * @file Data zoom processor\n */\n\n\n    var echarts = require('../../echarts');\n\n    echarts.registerProcessor(function (ecModel, api) {\n\n        ecModel.eachComponent('dataZoom', function (dataZoomModel) {\n            // We calculate window and reset axis here but not in model\n            // init stage and not after action dispatch handler, because\n            // reset should be called after seriesData.restoreData.\n            dataZoomModel.eachTargetAxis(resetSingleAxis);\n\n            // Caution: data zoom filtering is order sensitive when using\n            // percent range and no min/max/scale set on axis.\n            // For example, we have dataZoom definition:\n            // [\n            //      {xAxisIndex: 0, start: 30, end: 70},\n            //      {yAxisIndex: 0, start: 20, end: 80}\n            // ]\n            // In this case, [20, 80] of y-dataZoom should be based on data\n            // that have filtered by x-dataZoom using range of [30, 70],\n            // but should not be based on full raw data. Thus sliding\n            // x-dataZoom will change both ranges of xAxis and yAxis,\n            // while sliding y-dataZoom will only change the range of yAxis.\n            // So we should filter x-axis after reset x-axis immediately,\n            // and then reset y-axis and filter y-axis.\n            dataZoomModel.eachTargetAxis(filterSingleAxis);\n        });\n\n        ecModel.eachComponent('dataZoom', function (dataZoomModel) {\n            // Fullfill all of the range props so that user\n            // is able to get them from chart.getOption().\n            var axisProxy = dataZoomModel.findRepresentativeAxisProxy();\n            var percentRange = axisProxy.getDataPercentWindow();\n            var valueRange = axisProxy.getDataValueWindow();\n\n            dataZoomModel.setRawRange({\n                start: percentRange[0],\n                end: percentRange[1],\n                startValue: valueRange[0],\n                endValue: valueRange[1]\n            }, true);\n        });\n    });\n\n    function resetSingleAxis(dimNames, axisIndex, dataZoomModel) {\n        dataZoomModel.getAxisProxy(dimNames.name, axisIndex).reset(dataZoomModel);\n    }\n\n    function filterSingleAxis(dimNames, axisIndex, dataZoomModel) {\n        dataZoomModel.getAxisProxy(dimNames.name, axisIndex).filterData(dataZoomModel);\n    }\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/dataZoom/dataZoomProcessor.js\n// module id = 602\n// module chunks = 0 1 2","/**\n * @file Roam controller manager.\n */\n\n\n    // Only create one roam controller for each coordinate system.\n    // one roam controller might be refered by two inside data zoom\n    // components (for example, one for x and one for y). When user\n    // pan or zoom, only dispatch one action for those data zoom\n    // components.\n\n    var zrUtil = require('zrender/lib/core/util');\n    var RoamController = require('../../component/helper/RoamController');\n    var throttle = require('../../util/throttle');\n    var curry = zrUtil.curry;\n\n    var ATTR = '\\0_ec_dataZoom_roams';\n\n    var roams = {\n\n        /**\n         * @public\n         * @param {module:echarts/ExtensionAPI} api\n         * @param {Object} dataZoomInfo\n         * @param {string} dataZoomInfo.coordId\n         * @param {Function} dataZoomInfo.containsPoint\n         * @param {Array.<string>} dataZoomInfo.allCoordIds\n         * @param {string} dataZoomInfo.dataZoomId\n         * @param {number} dataZoomInfo.throttleRate\n         * @param {Function} dataZoomInfo.panGetRange\n         * @param {Function} dataZoomInfo.zoomGetRange\n         * @param {boolean} [dataZoomInfo.zoomLock]\n         * @param {boolean} [dataZoomInfo.disabled]\n         */\n        register: function (api, dataZoomInfo) {\n            var store = giveStore(api);\n            var theDataZoomId = dataZoomInfo.dataZoomId;\n            var theCoordId = dataZoomInfo.coordId;\n\n            // Do clean when a dataZoom changes its target coordnate system.\n            // Avoid memory leak, dispose all not-used-registered.\n            zrUtil.each(store, function (record, coordId) {\n                var dataZoomInfos = record.dataZoomInfos;\n                if (dataZoomInfos[theDataZoomId]\n                    && zrUtil.indexOf(dataZoomInfo.allCoordIds, theCoordId) < 0\n                ) {\n                    delete dataZoomInfos[theDataZoomId];\n                    record.count--;\n                }\n            });\n\n            cleanStore(store);\n\n            var record = store[theCoordId];\n            // Create if needed.\n            if (!record) {\n                record = store[theCoordId] = {\n                    coordId: theCoordId,\n                    dataZoomInfos: {},\n                    count: 0\n                };\n                record.controller = createController(api, record);\n                record.dispatchAction = zrUtil.curry(dispatchAction, api);\n            }\n\n            // Update reference of dataZoom.\n            !(record.dataZoomInfos[theDataZoomId]) && record.count++;\n            record.dataZoomInfos[theDataZoomId] = dataZoomInfo;\n\n            var controllerParams = mergeControllerParams(record.dataZoomInfos);\n            record.controller.enable(controllerParams.controlType, controllerParams.opt);\n\n            // Consider resize, area should be always updated.\n            record.controller.setPointerChecker(dataZoomInfo.containsPoint);\n\n            // Update throttle.\n            throttle.createOrUpdate(\n                record,\n                'dispatchAction',\n                dataZoomInfo.throttleRate,\n                'fixRate'\n            );\n        },\n\n        /**\n         * @public\n         * @param {module:echarts/ExtensionAPI} api\n         * @param {string} dataZoomId\n         */\n        unregister: function (api, dataZoomId) {\n            var store = giveStore(api);\n\n            zrUtil.each(store, function (record) {\n                record.controller.dispose();\n                var dataZoomInfos = record.dataZoomInfos;\n                if (dataZoomInfos[dataZoomId]) {\n                    delete dataZoomInfos[dataZoomId];\n                    record.count--;\n                }\n            });\n\n            cleanStore(store);\n        },\n\n        /**\n         * @public\n         */\n        shouldRecordRange: function (payload, dataZoomId) {\n            if (payload && payload.type === 'dataZoom' && payload.batch) {\n                for (var i = 0, len = payload.batch.length; i < len; i++) {\n                    if (payload.batch[i].dataZoomId === dataZoomId) {\n                        return false;\n                    }\n                }\n            }\n            return true;\n        },\n\n        /**\n         * @public\n         */\n        generateCoordId: function (coordModel) {\n            return coordModel.type + '\\0_' + coordModel.id;\n        }\n    };\n\n    /**\n     * Key: coordId, value: {dataZoomInfos: [], count, controller}\n     * @type {Array.<Object>}\n     */\n    function giveStore(api) {\n        // Mount store on zrender instance, so that we do not\n        // need to worry about dispose.\n        var zr = api.getZr();\n        return zr[ATTR] || (zr[ATTR] = {});\n    }\n\n    function createController(api, newRecord) {\n        var controller = new RoamController(api.getZr());\n        controller.on('pan', curry(onPan, newRecord));\n        controller.on('zoom', curry(onZoom, newRecord));\n\n        return controller;\n    }\n\n    function cleanStore(store) {\n        zrUtil.each(store, function (record, coordId) {\n            if (!record.count) {\n                record.controller.dispose();\n                delete store[coordId];\n            }\n        });\n    }\n\n    function onPan(record, dx, dy, oldX, oldY, newX, newY) {\n        wrapAndDispatch(record, function (info) {\n            return info.panGetRange(record.controller, dx, dy, oldX, oldY, newX, newY);\n        });\n    }\n\n    function onZoom(record, scale, mouseX, mouseY) {\n        wrapAndDispatch(record, function (info) {\n            return info.zoomGetRange(record.controller, scale, mouseX, mouseY);\n        });\n    }\n\n    function wrapAndDispatch(record, getRange) {\n        var batch = [];\n\n        zrUtil.each(record.dataZoomInfos, function (info) {\n            var range = getRange(info);\n            !info.disabled && range && batch.push({\n                dataZoomId: info.dataZoomId,\n                start: range[0],\n                end: range[1]\n            });\n        });\n\n        record.dispatchAction(batch);\n    }\n\n    /**\n     * This action will be throttled.\n     */\n    function dispatchAction(api, batch) {\n        api.dispatchAction({\n            type: 'dataZoom',\n            batch: batch\n        });\n    }\n\n    /**\n     * Merge roamController settings when multiple dataZooms share one roamController.\n     */\n    function mergeControllerParams(dataZoomInfos) {\n        var controlType;\n        var opt = {};\n        var typePriority = {\n            'true': 2,\n            'move': 1,\n            'false': 0,\n            'undefined': -1\n        };\n        zrUtil.each(dataZoomInfos, function (dataZoomInfo) {\n            var oneType = dataZoomInfo.disabled ? false : dataZoomInfo.zoomLock ? 'move' : true;\n            typePriority[oneType] > typePriority[controlType] && (controlType = oneType);\n            // Do not support that different 'shift'/'ctrl'/'alt' setting used in one coord sys.\n            zrUtil.extend(opt, dataZoomInfo.roamControllerOpt);\n        });\n\n        return {\n            controlType: controlType,\n            opt: opt\n        };\n    }\n\n    module.exports = roams;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/dataZoom/roams.js\n// module id = 603\n// module chunks = 0 1 2","\n\n    require('../../model/Component').registerSubTypeDefaulter('dataZoom', function (option) {\n        // Default 'slider' when no type specified.\n        return 'slider';\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/dataZoom/typeDefaulter.js\n// module id = 604\n// module chunks = 0 1 2","'use strict';\n\n\n    var graphic = require('../util/graphic');\n    var zrUtil = require('zrender/lib/core/util');\n    var echarts = require('../echarts');\n\n    require('../coord/cartesian/Grid');\n\n    require('./axis');\n\n    // Grid view\n    echarts.extendComponentView({\n\n        type: 'grid',\n\n        render: function (gridModel, ecModel) {\n            this.group.removeAll();\n            if (gridModel.get('show')) {\n                this.group.add(new graphic.Rect({\n                    shape: gridModel.coordinateSystem.getRect(),\n                    style: zrUtil.defaults({\n                        fill: gridModel.get('backgroundColor')\n                    }, gridModel.getItemStyle()),\n                    silent: true,\n                    z2: -1\n                }));\n            }\n        }\n\n    });\n\n    echarts.registerPreprocessor(function (option) {\n        // Only create grid when need\n        if (option.xAxis && option.yAxis && !option.grid) {\n            option.grid = {};\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/gridSimple.js\n// module id = 605\n// module chunks = 0 1 2","/**\n * @module echarts/component/helper/RoamController\n */\n\n\n    var Eventful = require('zrender/lib/mixin/Eventful');\n    var zrUtil = require('zrender/lib/core/util');\n    var eventTool = require('zrender/lib/core/event');\n    var interactionMutex = require('./interactionMutex');\n\n    /**\n     * @alias module:echarts/component/helper/RoamController\n     * @constructor\n     * @mixin {module:zrender/mixin/Eventful}\n     *\n     * @param {module:zrender/zrender~ZRender} zr\n     */\n    function RoamController(zr) {\n\n        /**\n         * @type {Function}\n         */\n        this.pointerChecker;\n\n        /**\n         * @type {module:zrender}\n         */\n        this._zr = zr;\n\n        /**\n         * @type {Object}\n         */\n        this._opt = {};\n\n        // Avoid two roamController bind the same handler\n        var bind = zrUtil.bind;\n        var mousedownHandler = bind(mousedown, this);\n        var mousemoveHandler = bind(mousemove, this);\n        var mouseupHandler = bind(mouseup, this);\n        var mousewheelHandler = bind(mousewheel, this);\n        var pinchHandler = bind(pinch, this);\n\n        Eventful.call(this);\n\n        /**\n         * @param {Function} pointerChecker\n         *                   input: x, y\n         *                   output: boolean\n         */\n        this.setPointerChecker = function (pointerChecker) {\n            this.pointerChecker = pointerChecker;\n        };\n\n        /**\n         * Notice: only enable needed types. For example, if 'zoom'\n         * is not needed, 'zoom' should not be enabled, otherwise\n         * default mousewheel behaviour (scroll page) will be disabled.\n         *\n         * @param  {boolean|string} [controlType=true] Specify the control type,\n         *                          which can be null/undefined or true/false\n         *                          or 'pan/move' or 'zoom'/'scale'\n         * @param {Object} [opt]\n         * @param {Object} [opt.zoomOnMouseWheel=true]\n         * @param {Object} [opt.moveOnMouseMove=true]\n         * @param {Object} [opt.preventDefaultMouseMove=true] When pan.\n         */\n        this.enable = function (controlType, opt) {\n\n            // Disable previous first\n            this.disable();\n\n            this._opt = zrUtil.defaults(zrUtil.clone(opt) || {}, {\n                zoomOnMouseWheel: true,\n                moveOnMouseMove: true,\n                preventDefaultMouseMove: true\n            });\n\n            if (controlType == null) {\n                controlType = true;\n            }\n\n            if (controlType === true || (controlType === 'move' || controlType === 'pan')) {\n                zr.on('mousedown', mousedownHandler);\n                zr.on('mousemove', mousemoveHandler);\n                zr.on('mouseup', mouseupHandler);\n            }\n            if (controlType === true || (controlType === 'scale' || controlType === 'zoom')) {\n                zr.on('mousewheel', mousewheelHandler);\n                zr.on('pinch', pinchHandler);\n            }\n        };\n\n        this.disable = function () {\n            zr.off('mousedown', mousedownHandler);\n            zr.off('mousemove', mousemoveHandler);\n            zr.off('mouseup', mouseupHandler);\n            zr.off('mousewheel', mousewheelHandler);\n            zr.off('pinch', pinchHandler);\n        };\n\n        this.dispose = this.disable;\n\n        this.isDragging = function () {\n            return this._dragging;\n        };\n\n        this.isPinching = function () {\n            return this._pinching;\n        };\n    }\n\n    zrUtil.mixin(RoamController, Eventful);\n\n\n    function mousedown(e) {\n        if (e.target && e.target.draggable) {\n            return;\n        }\n\n        var x = e.offsetX;\n        var y = e.offsetY;\n\n        // Only check on mosedown, but not mousemove.\n        // Mouse can be out of target when mouse moving.\n        if (this.pointerChecker && this.pointerChecker(e, x, y)) {\n            this._x = x;\n            this._y = y;\n            this._dragging = true;\n        }\n    }\n\n    function mousemove(e) {\n        if (!checkKeyBinding(this, 'moveOnMouseMove', e) || !this._dragging) {\n            return;\n        }\n\n        if (e.gestureEvent === 'pinch') {\n            return;\n        }\n\n        if (interactionMutex.isTaken(this._zr, 'globalPan')) {\n            return;\n        }\n\n        var x = e.offsetX;\n        var y = e.offsetY;\n\n        var oldX = this._x;\n        var oldY = this._y;\n\n        var dx = x - oldX;\n        var dy = y - oldY;\n\n        this._x = x;\n        this._y = y;\n\n        this._opt.preventDefaultMouseMove && eventTool.stop(e.event);\n\n        this.trigger('pan', dx, dy, oldX, oldY, x, y);\n    }\n\n    function mouseup(e) {\n        this._dragging = false;\n    }\n\n    function mousewheel(e) {\n        // wheelDelta maybe -0 in chrome mac.\n        if (!checkKeyBinding(this, 'zoomOnMouseWheel', e) || e.wheelDelta === 0) {\n            return;\n        }\n\n        // Convenience:\n        // Mac and VM Windows on Mac: scroll up: zoom out.\n        // Windows: scroll up: zoom in.\n        var zoomDelta = e.wheelDelta > 0 ? 1.1 : 1 / 1.1;\n        zoom.call(this, e, zoomDelta, e.offsetX, e.offsetY);\n    }\n\n    function pinch(e) {\n        if (interactionMutex.isTaken(this._zr, 'globalPan')) {\n            return;\n        }\n        var zoomDelta = e.pinchScale > 1 ? 1.1 : 1 / 1.1;\n        zoom.call(this, e, zoomDelta, e.pinchX, e.pinchY);\n    }\n\n    function zoom(e, zoomDelta, zoomX, zoomY) {\n        if (this.pointerChecker && this.pointerChecker(e, zoomX, zoomY)) {\n            // When mouse is out of roamController rect,\n            // default befavoius should not be be disabled, otherwise\n            // page sliding is disabled, contrary to expectation.\n            eventTool.stop(e.event);\n\n            this.trigger('zoom', zoomDelta, zoomX, zoomY);\n        }\n    }\n\n    function checkKeyBinding(roamController, prop, e) {\n        var setting = roamController._opt[prop];\n        return setting\n            && (!zrUtil.isString(setting) || e.event[setting + 'Key']);\n    }\n\n    module.exports = RoamController;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/helper/RoamController.js\n// module id = 606\n// module chunks = 0 1 2","\n\n    var ATTR = '\\0_ec_interaction_mutex';\n\n    var interactionMutex = {\n\n        take: function (zr, resourceKey, userKey) {\n            var store = getStore(zr);\n            store[resourceKey] = userKey;\n        },\n\n        release: function (zr, resourceKey, userKey) {\n            var store = getStore(zr);\n            var uKey = store[resourceKey];\n\n            if (uKey === userKey) {\n                store[resourceKey] = null;\n            }\n        },\n\n        isTaken: function (zr, resourceKey) {\n            return !!getStore(zr)[resourceKey];\n        }\n    };\n\n    function getStore(zr) {\n        return zr[ATTR] || (zr[ATTR] = {});\n    }\n\n    /**\n     * payload: {\n     *     type: 'takeGlobalCursor',\n     *     key: 'dataZoomSelect', or 'brush', or ...,\n     *         If no userKey, release global cursor.\n     * }\n     */\n    require('../../echarts').registerAction(\n        {type: 'takeGlobalCursor', event: 'globalCursorTaken', update: 'update'},\n        function () {}\n    );\n\n    module.exports = interactionMutex;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/helper/interactionMutex.js\n// module id = 607\n// module chunks = 0 1 2","// FIXME Better way to pack data in graphic element\n\n\n    require('./axisPointer');\n\n    require('./tooltip/TooltipModel');\n\n    require('./tooltip/TooltipView');\n\n\n    // Show tip action\n    /**\n     * @action\n     * @property {string} type\n     * @property {number} seriesIndex\n     * @property {number} dataIndex\n     * @property {number} [x]\n     * @property {number} [y]\n     */\n    require('../echarts').registerAction(\n        {\n            type: 'showTip',\n            event: 'showTip',\n            update: 'tooltip:manuallyShowTip'\n        },\n        // noop\n        function () {}\n    );\n    // Hide tip action\n    require('../echarts').registerAction(\n        {\n            type: 'hideTip',\n            event: 'hideTip',\n            update: 'tooltip:manuallyHideTip'\n        },\n        // noop\n        function () {}\n    );\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/tooltip.js\n// module id = 608\n// module chunks = 0 1 2","/**\n * @module echarts/component/tooltip/TooltipContent\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var zrColor = require('zrender/lib/tool/color');\n    var eventUtil = require('zrender/lib/core/event');\n    var formatUtil = require('../../util/format');\n    var each = zrUtil.each;\n    var toCamelCase = formatUtil.toCamelCase;\n    var env = require('zrender/lib/core/env');\n\n    var vendors = ['', '-webkit-', '-moz-', '-o-'];\n\n    var gCssText = 'position:absolute;display:block;border-style:solid;white-space:nowrap;z-index:9999999;';\n\n    /**\n     * @param {number} duration\n     * @return {string}\n     * @inner\n     */\n    function assembleTransition(duration) {\n        var transitionCurve = 'cubic-bezier(0.23, 1, 0.32, 1)';\n        var transitionText = 'left ' + duration + 's ' + transitionCurve + ','\n                            + 'top ' + duration + 's ' + transitionCurve;\n        return zrUtil.map(vendors, function (vendorPrefix) {\n            return vendorPrefix + 'transition:' + transitionText;\n        }).join(';');\n    }\n\n    /**\n     * @param {Object} textStyle\n     * @return {string}\n     * @inner\n     */\n    function assembleFont(textStyleModel) {\n        var cssText = [];\n\n        var fontSize = textStyleModel.get('fontSize');\n        var color = textStyleModel.getTextColor();\n\n        color && cssText.push('color:' + color);\n\n        cssText.push('font:' + textStyleModel.getFont());\n\n        fontSize &&\n            cssText.push('line-height:' + Math.round(fontSize * 3 / 2) + 'px');\n\n        each(['decoration', 'align'], function (name) {\n            var val = textStyleModel.get(name);\n            val && cssText.push('text-' + name + ':' + val);\n        });\n\n        return cssText.join(';');\n    }\n\n    /**\n     * @param {Object} tooltipModel\n     * @return {string}\n     * @inner\n     */\n    function assembleCssText(tooltipModel) {\n\n        var cssText = [];\n\n        var transitionDuration = tooltipModel.get('transitionDuration');\n        var backgroundColor = tooltipModel.get('backgroundColor');\n        var textStyleModel = tooltipModel.getModel('textStyle');\n        var padding = tooltipModel.get('padding');\n\n        // Animation transition. Do not animate when transitionDuration is 0.\n        transitionDuration &&\n            cssText.push(assembleTransition(transitionDuration));\n\n        if (backgroundColor) {\n            if (env.canvasSupported) {\n                cssText.push('background-Color:' + backgroundColor);\n            }\n            else {\n                // for ie\n                cssText.push(\n                    'background-Color:#' + zrColor.toHex(backgroundColor)\n                );\n                cssText.push('filter:alpha(opacity=70)');\n            }\n        }\n\n        // Border style\n        each(['width', 'color', 'radius'], function (name) {\n            var borderName = 'border-' + name;\n            var camelCase = toCamelCase(borderName);\n            var val = tooltipModel.get(camelCase);\n            val != null &&\n                cssText.push(borderName + ':' + val + (name === 'color' ? '' : 'px'));\n        });\n\n        // Text style\n        cssText.push(assembleFont(textStyleModel));\n\n        // Padding\n        if (padding != null) {\n            cssText.push('padding:' + formatUtil.normalizeCssArray(padding).join('px ') + 'px');\n        }\n\n        return cssText.join(';') + ';';\n    }\n\n    /**\n     * @alias module:echarts/component/tooltip/TooltipContent\n     * @constructor\n     */\n    function TooltipContent(container, api) {\n        var el = document.createElement('div');\n        var zr = this._zr = api.getZr();\n\n        this.el = el;\n\n        this._x = api.getWidth() / 2;\n        this._y = api.getHeight() / 2;\n\n        container.appendChild(el);\n\n        this._container = container;\n\n        this._show = false;\n\n        /**\n         * @private\n         */\n        this._hideTimeout;\n\n        var self = this;\n        el.onmouseenter = function () {\n            // clear the timeout in hideLater and keep showing tooltip\n            if (self._enterable) {\n                clearTimeout(self._hideTimeout);\n                self._show = true;\n            }\n            self._inContent = true;\n        };\n        el.onmousemove = function (e) {\n            e = e || window.event;\n            if (!self._enterable) {\n                // Try trigger zrender event to avoid mouse\n                // in and out shape too frequently\n                var handler = zr.handler;\n                eventUtil.normalizeEvent(container, e, true);\n                handler.dispatch('mousemove', e);\n            }\n        };\n        el.onmouseleave = function () {\n            if (self._enterable) {\n                if (self._show) {\n                    self.hideLater(self._hideDelay);\n                }\n            }\n            self._inContent = false;\n        };\n    }\n\n    TooltipContent.prototype = {\n\n        constructor: TooltipContent,\n\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _enterable: true,\n\n        /**\n         * Update when tooltip is rendered\n         */\n        update: function () {\n            // FIXME\n            // Move this logic to ec main?\n            var container = this._container;\n            var stl = container.currentStyle\n                || document.defaultView.getComputedStyle(container);\n            var domStyle = container.style;\n            if (domStyle.position !== 'absolute' && stl.position !== 'absolute') {\n                domStyle.position = 'relative';\n            }\n            // Hide the tooltip\n            // PENDING\n            // this.hide();\n        },\n\n        show: function (tooltipModel) {\n            clearTimeout(this._hideTimeout);\n            var el = this.el;\n\n            el.style.cssText = gCssText + assembleCssText(tooltipModel)\n                // http://stackoverflow.com/questions/21125587/css3-transition-not-working-in-chrome-anymore\n                + ';left:' + this._x + 'px;top:' + this._y + 'px;'\n                + (tooltipModel.get('extraCssText') || '');\n\n            el.style.display = el.innerHTML ?  'block' : 'none';\n\n            this._show = true;\n        },\n\n        setContent: function (content) {\n            this.el.innerHTML = content == null ? '' : content;\n        },\n\n        setEnterable: function (enterable) {\n            this._enterable = enterable;\n        },\n\n        getSize: function () {\n            var el = this.el;\n            return [el.clientWidth, el.clientHeight];\n        },\n\n        moveTo: function (x, y) {\n            // xy should be based on canvas root. But tooltipContent is\n            // the sibling of canvas root. So padding of ec container\n            // should be considered here.\n            var zr = this._zr;\n            var viewportRoot;\n            if (zr && zr.painter && (viewportRoot = zr.painter.getViewportRoot())) {\n                x += viewportRoot.offsetLeft || 0;\n                y += viewportRoot.offsetTop || 0;\n            }\n\n            var style = this.el.style;\n            style.left = x + 'px';\n            style.top = y + 'px';\n\n            this._x = x;\n            this._y = y;\n        },\n\n        hide: function () {\n            this.el.style.display = 'none';\n            this._show = false;\n        },\n\n        hideLater: function (time) {\n            if (this._show && !(this._inContent && this._enterable)) {\n                if (time) {\n                    this._hideDelay = time;\n                    // Set show false to avoid invoke hideLater mutiple times\n                    this._show = false;\n                    this._hideTimeout = setTimeout(zrUtil.bind(this.hide, this), time);\n                }\n                else {\n                    this.hide();\n                }\n            }\n        },\n\n        isShow: function () {\n            return this._show;\n        }\n    };\n\n    module.exports = TooltipContent;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/tooltip/TooltipContent.js\n// module id = 609\n// module chunks = 0 1 2","\n\n    require('../../echarts').extendComponentModel({\n\n        type: 'tooltip',\n\n        dependencies: ['axisPointer'],\n\n        defaultOption: {\n            zlevel: 0,\n\n            z: 8,\n\n            show: true,\n\n            // tooltip主体内容\n            showContent: true,\n\n            // 'trigger' only works on coordinate system.\n            // 'item' | 'axis' | 'none'\n            trigger: 'item',\n\n            // 'click' | 'mousemove' | 'none'\n            triggerOn: 'mousemove|click',\n\n            alwaysShowContent: false,\n\n            displayMode: 'single', // 'single' | 'multipleByCoordSys'\n\n            // 位置 {Array} | {Function}\n            // position: null\n            // Consider triggered from axisPointer handle, verticalAlign should be 'middle'\n            // align: null,\n            // verticalAlign: null,\n\n            // 是否约束 content 在 viewRect 中。默认 false 是为了兼容以前版本。\n            confine: false,\n\n            // 内容格式器：{string}（Template） ¦ {Function}\n            // formatter: null\n\n            showDelay: 0,\n\n            // 隐藏延迟，单位ms\n            hideDelay: 100,\n\n            // 动画变换时间，单位s\n            transitionDuration: 0.4,\n\n            enterable: false,\n\n            // 提示背景颜色，默认为透明度为0.7的黑色\n            backgroundColor: 'rgba(50,50,50,0.7)',\n\n            // 提示边框颜色\n            borderColor: '#333',\n\n            // 提示边框圆角，单位px，默认为4\n            borderRadius: 4,\n\n            // 提示边框线宽，单位px，默认为0（无边框）\n            borderWidth: 0,\n\n            // 提示内边距，单位px，默认各方向内边距为5，\n            // 接受数组分别设定上右下左边距，同css\n            padding: 5,\n\n            // Extra css text\n            extraCssText: '',\n\n            // 坐标轴指示器，坐标轴触发有效\n            axisPointer: {\n                // 默认为直线\n                // 可选为：'line' | 'shadow' | 'cross'\n                type: 'line',\n\n                // type 为 line 的时候有效，指定 tooltip line 所在的轴，可选\n                // 可选 'x' | 'y' | 'angle' | 'radius' | 'auto'\n                // 默认 'auto'，会选择类型为 cateogry 的轴，对于双数值轴，笛卡尔坐标系会默认选择 x 轴\n                // 极坐标系会默认选择 angle 轴\n                axis: 'auto',\n\n                animation: 'auto',\n                animationDurationUpdate: 200,\n                animationEasingUpdate: 'exponentialOut',\n\n                crossStyle: {\n                    color: '#999',\n                    width: 1,\n                    type: 'dashed',\n\n                    // TODO formatter\n                    textStyle: {}\n                }\n\n                // lineStyle and shadowStyle should not be specified here,\n                // otherwise it will always override those styles on option.axisPointer.\n            },\n            textStyle: {\n                color: '#fff',\n                fontSize: 14\n            }\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/tooltip/TooltipModel.js\n// module id = 610\n// module chunks = 0 1 2","\n\n    var TooltipContent = require('./TooltipContent');\n    var zrUtil = require('zrender/lib/core/util');\n    var formatUtil = require('../../util/format');\n    var numberUtil = require('../../util/number');\n    var graphic = require('../../util/graphic');\n    var findPointFromSeries = require('../axisPointer/findPointFromSeries');\n    var layoutUtil = require('../../util/layout');\n    var env = require('zrender/lib/core/env');\n    var Model = require('../../model/Model');\n    var globalListener = require('../axisPointer/globalListener');\n    var axisHelper = require('../../coord/axisHelper');\n    var axisPointerViewHelper = require('../axisPointer/viewHelper');\n\n    var bind = zrUtil.bind;\n    var each = zrUtil.each;\n    var parsePercent = numberUtil.parsePercent;\n\n\n    var proxyRect = new graphic.Rect({\n        shape: {x: -1, y: -1, width: 2, height: 2}\n    });\n\n    require('../../echarts').extendComponentView({\n\n        type: 'tooltip',\n\n        init: function (ecModel, api) {\n            if (env.node) {\n                return;\n            }\n            var tooltipContent = new TooltipContent(api.getDom(), api);\n            this._tooltipContent = tooltipContent;\n        },\n\n        render: function (tooltipModel, ecModel, api) {\n            if (env.node) {\n                return;\n            }\n\n            // Reset\n            this.group.removeAll();\n\n            /**\n             * @private\n             * @type {module:echarts/component/tooltip/TooltipModel}\n             */\n            this._tooltipModel = tooltipModel;\n\n            /**\n             * @private\n             * @type {module:echarts/model/Global}\n             */\n            this._ecModel = ecModel;\n\n            /**\n             * @private\n             * @type {module:echarts/ExtensionAPI}\n             */\n            this._api = api;\n\n            /**\n             * Should be cleaned when render.\n             * @private\n             * @type {Array.<Array.<Object>>}\n             */\n            this._lastDataByCoordSys = null;\n\n            /**\n             * @private\n             * @type {boolean}\n             */\n            this._alwaysShowContent = tooltipModel.get('alwaysShowContent');\n\n            var tooltipContent = this._tooltipContent;\n            tooltipContent.update();\n            tooltipContent.setEnterable(tooltipModel.get('enterable'));\n\n            this._initGlobalListener();\n\n            this._keepShow();\n        },\n\n        _initGlobalListener: function () {\n            var tooltipModel = this._tooltipModel;\n            var triggerOn = tooltipModel.get('triggerOn');\n\n            globalListener.register(\n                'itemTooltip',\n                this._api,\n                bind(function (currTrigger, e, dispatchAction) {\n                    // If 'none', it is not controlled by mouse totally.\n                    if (triggerOn !== 'none') {\n                        if (triggerOn.indexOf(currTrigger) >= 0) {\n                            this._tryShow(e, dispatchAction);\n                        }\n                        else if (currTrigger === 'leave') {\n                            this._hide(dispatchAction);\n                        }\n                    }\n                }, this)\n            );\n        },\n\n        _keepShow: function () {\n            var tooltipModel = this._tooltipModel;\n            var ecModel = this._ecModel;\n            var api = this._api;\n\n            // Try to keep the tooltip show when refreshing\n            if (this._lastX != null\n                && this._lastY != null\n                // When user is willing to control tooltip totally using API,\n                // self.manuallyShowTip({x, y}) might cause tooltip hide,\n                // which is not expected.\n                && tooltipModel.get('triggerOn') !== 'none'\n            ) {\n                var self = this;\n                clearTimeout(this._refreshUpdateTimeout);\n                this._refreshUpdateTimeout = setTimeout(function () {\n                    // Show tip next tick after other charts are rendered\n                    // In case highlight action has wrong result\n                    // FIXME\n                    self.manuallyShowTip(tooltipModel, ecModel, api, {\n                        x: self._lastX,\n                        y: self._lastY\n                    });\n                });\n            }\n        },\n\n        /**\n         * Show tip manually by\n         * dispatchAction({\n         *     type: 'showTip',\n         *     x: 10,\n         *     y: 10\n         * });\n         * Or\n         * dispatchAction({\n         *      type: 'showTip',\n         *      seriesIndex: 0,\n         *      dataIndex or dataIndexInside or name\n         * });\n         *\n         *  TODO Batch\n         */\n        manuallyShowTip: function (tooltipModel, ecModel, api, payload) {\n            if (payload.from === this.uid || env.node) {\n                return;\n            }\n\n            var dispatchAction = makeDispatchAction(payload, api);\n\n            // Reset ticket\n            this._ticket = '';\n\n            // When triggered from axisPointer.\n            var dataByCoordSys = payload.dataByCoordSys;\n\n            if (payload.tooltip && payload.x != null && payload.y != null) {\n                var el = proxyRect;\n                el.position = [payload.x, payload.y];\n                el.update();\n                el.tooltip = payload.tooltip;\n                // Manually show tooltip while view is not using zrender elements.\n                this._tryShow({\n                    offsetX: payload.x,\n                    offsetY: payload.y,\n                    target: el\n                }, dispatchAction);\n            }\n            else if (dataByCoordSys) {\n                this._tryShow({\n                    offsetX: payload.x,\n                    offsetY: payload.y,\n                    position: payload.position,\n                    event: {},\n                    dataByCoordSys: payload.dataByCoordSys,\n                    tooltipOption: payload.tooltipOption\n                }, dispatchAction);\n            }\n            else if (payload.seriesIndex != null) {\n\n                if (this._manuallyAxisShowTip(tooltipModel, ecModel, api, payload)) {\n                    return;\n                }\n\n                var pointInfo = findPointFromSeries(payload, ecModel);\n                var cx = pointInfo.point[0];\n                var cy = pointInfo.point[1];\n                if (cx != null && cy != null) {\n                    this._tryShow({\n                        offsetX: cx,\n                        offsetY: cy,\n                        position: payload.position,\n                        target: pointInfo.el,\n                        event: {}\n                    }, dispatchAction);\n                }\n            }\n            else if (payload.x != null && payload.y != null) {\n                // FIXME\n                // should wrap dispatchAction like `axisPointer/globalListener` ?\n                api.dispatchAction({\n                    type: 'updateAxisPointer',\n                    x: payload.x,\n                    y: payload.y\n                });\n\n                this._tryShow({\n                    offsetX: payload.x,\n                    offsetY: payload.y,\n                    position: payload.position,\n                    target: api.getZr().findHover(payload.x, payload.y).target,\n                    event: {}\n                }, dispatchAction);\n            }\n        },\n\n        manuallyHideTip: function (tooltipModel, ecModel, api, payload) {\n            var tooltipContent = this._tooltipContent;\n\n            if (!this._alwaysShowContent) {\n                tooltipContent.hideLater(this._tooltipModel.get('hideDelay'));\n            }\n\n            this._lastX = this._lastY = null;\n\n            if (payload.from !== this.uid) {\n                this._hide(makeDispatchAction(payload, api));\n            }\n        },\n\n        // Be compatible with previous design, that is, when tooltip.type is 'axis' and\n        // dispatchAction 'showTip' with seriesIndex and dataIndex will trigger axis pointer\n        // and tooltip.\n        _manuallyAxisShowTip: function (tooltipModel, ecModel, api, payload) {\n            var seriesIndex = payload.seriesIndex;\n            var dataIndex = payload.dataIndex;\n            var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo;\n\n            if (seriesIndex == null || dataIndex == null || coordSysAxesInfo == null) {\n                return;\n            }\n\n            var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n            if (!seriesModel) {\n                return;\n            }\n\n            var data = seriesModel.getData();\n            var tooltipModel = buildTooltipModel([\n                data.getItemModel(dataIndex),\n                seriesModel,\n                (seriesModel.coordinateSystem || {}).model,\n                tooltipModel\n            ]);\n\n            if (tooltipModel.get('trigger') !== 'axis') {\n                return;\n            }\n\n            api.dispatchAction({\n                type: 'updateAxisPointer',\n                seriesIndex: seriesIndex,\n                dataIndex: dataIndex,\n                position: payload.position\n            });\n\n            return true;\n        },\n\n        _tryShow: function (e, dispatchAction) {\n            var el = e.target;\n            var tooltipModel = this._tooltipModel;\n\n            if (!tooltipModel) {\n                return;\n            }\n\n            // Save mouse x, mouse y. So we can try to keep showing the tip if chart is refreshed\n            this._lastX = e.offsetX;\n            this._lastY = e.offsetY;\n\n            var dataByCoordSys = e.dataByCoordSys;\n            if (dataByCoordSys && dataByCoordSys.length) {\n                this._showAxisTooltip(dataByCoordSys, e);\n            }\n            // Always show item tooltip if mouse is on the element with dataIndex\n            else if (el && el.dataIndex != null) {\n                this._lastDataByCoordSys = null;\n                this._showSeriesItemTooltip(e, el, dispatchAction);\n            }\n            // Tooltip provided directly. Like legend.\n            else if (el && el.tooltip) {\n                this._lastDataByCoordSys = null;\n                this._showComponentItemTooltip(e, el, dispatchAction);\n            }\n            else {\n                this._lastDataByCoordSys = null;\n                this._hide(dispatchAction);\n            }\n        },\n\n        _showOrMove: function (tooltipModel, cb) {\n            // showDelay is used in this case: tooltip.enterable is set\n            // as true. User intent to move mouse into tooltip and click\n            // something. `showDelay` makes it easyer to enter the content\n            // but tooltip do not move immediately.\n            var delay = tooltipModel.get('showDelay');\n            cb = zrUtil.bind(cb, this);\n            clearTimeout(this._showTimout);\n            delay > 0\n                ? (this._showTimout = setTimeout(cb, delay))\n                : cb();\n        },\n\n        _showAxisTooltip: function (dataByCoordSys, e) {\n            var ecModel = this._ecModel;\n            var globalTooltipModel = this._tooltipModel;\n            var point = [e.offsetX, e.offsetY];\n            var singleDefaultHTML = [];\n            var singleParamsList = [];\n            var singleTooltipModel = buildTooltipModel([\n                e.tooltipOption,\n                globalTooltipModel\n            ]);\n\n            each(dataByCoordSys, function (itemCoordSys) {\n                // var coordParamList = [];\n                // var coordDefaultHTML = [];\n                // var coordTooltipModel = buildTooltipModel([\n                //     e.tooltipOption,\n                //     itemCoordSys.tooltipOption,\n                //     ecModel.getComponent(itemCoordSys.coordSysMainType, itemCoordSys.coordSysIndex),\n                //     globalTooltipModel\n                // ]);\n                // var displayMode = coordTooltipModel.get('displayMode');\n                // var paramsList = displayMode === 'single' ? singleParamsList : [];\n\n                each(itemCoordSys.dataByAxis, function (item) {\n                    var axisModel = ecModel.getComponent(item.axisDim + 'Axis', item.axisIndex);\n                    var axisValue = item.value;\n                    var seriesDefaultHTML = [];\n\n                    if (!axisModel || axisValue == null) {\n                        return;\n                    }\n\n                    var valueLabel = axisPointerViewHelper.getValueLabel(\n                        axisValue, axisModel.axis, ecModel,\n                        item.seriesDataIndices,\n                        item.valueLabelOpt\n                    );\n\n                    zrUtil.each(item.seriesDataIndices, function (idxItem) {\n                        var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n                        var dataIndex = idxItem.dataIndexInside;\n                        var dataParams = series && series.getDataParams(dataIndex);\n                        dataParams.axisDim = item.axisDim;\n                        dataParams.axisIndex = item.axisIndex;\n                        dataParams.axisType = item.axisType;\n                        dataParams.axisId = item.axisId;\n                        dataParams.axisValue = axisHelper.getAxisRawValue(axisModel.axis, axisValue);\n                        dataParams.axisValueLabel = valueLabel;\n\n                        if (dataParams) {\n                            singleParamsList.push(dataParams);\n                            seriesDefaultHTML.push(series.formatTooltip(dataIndex, true));\n                        }\n                    });\n\n                    // Default tooltip content\n                    // FIXME\n                    // (1) shold be the first data which has name?\n                    // (2) themeRiver, firstDataIndex is array, and first line is unnecessary.\n                    var firstLine = valueLabel;\n                    singleDefaultHTML.push(\n                        (firstLine ? formatUtil.encodeHTML(firstLine) + '<br />' : '')\n                        + seriesDefaultHTML.join('<br />')\n                    );\n                });\n            }, this);\n\n            // In most case, the second axis is shown upper than the first one.\n            singleDefaultHTML.reverse();\n            singleDefaultHTML = singleDefaultHTML.join('<br /><br />');\n\n            var positionExpr = e.position;\n            this._showOrMove(singleTooltipModel, function () {\n                if (this._updateContentNotChangedOnAxis(dataByCoordSys)) {\n                    this._updatePosition(\n                        singleTooltipModel,\n                        positionExpr,\n                        point[0], point[1],\n                        this._tooltipContent,\n                        singleParamsList\n                    );\n                }\n                else {\n                    this._showTooltipContent(\n                        singleTooltipModel, singleDefaultHTML, singleParamsList, Math.random(),\n                        point[0], point[1], positionExpr\n                    );\n                }\n            });\n\n            // Do not trigger events here, because this branch only be entered\n            // from dispatchAction.\n        },\n\n        _showSeriesItemTooltip: function (e, el, dispatchAction) {\n            var ecModel = this._ecModel;\n            // Use dataModel in element if possible\n            // Used when mouseover on a element like markPoint or edge\n            // In which case, the data is not main data in series.\n            var seriesIndex = el.seriesIndex;\n            var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n\n            // For example, graph link.\n            var dataModel = el.dataModel || seriesModel;\n            var dataIndex = el.dataIndex;\n            var dataType = el.dataType;\n            var data = dataModel.getData();\n\n            var tooltipModel = buildTooltipModel([\n                data.getItemModel(dataIndex),\n                dataModel,\n                seriesModel && (seriesModel.coordinateSystem || {}).model,\n                this._tooltipModel\n            ]);\n\n            var tooltipTrigger = tooltipModel.get('trigger');\n            if (tooltipTrigger != null && tooltipTrigger !== 'item') {\n                return;\n            }\n\n            var params = dataModel.getDataParams(dataIndex, dataType);\n            var defaultHtml = dataModel.formatTooltip(dataIndex, false, dataType);\n            var asyncTicket = 'item_' + dataModel.name + '_' + dataIndex;\n\n            this._showOrMove(tooltipModel, function () {\n                this._showTooltipContent(\n                    tooltipModel, defaultHtml, params, asyncTicket,\n                    e.offsetX, e.offsetY, e.position, e.target\n                );\n            });\n\n            // FIXME\n            // duplicated showtip if manuallyShowTip is called from dispatchAction.\n            dispatchAction({\n                type: 'showTip',\n                dataIndexInside: dataIndex,\n                dataIndex: data.getRawIndex(dataIndex),\n                seriesIndex: seriesIndex,\n                from: this.uid\n            });\n        },\n\n        _showComponentItemTooltip: function (e, el, dispatchAction) {\n            var tooltipOpt = el.tooltip;\n            if (typeof tooltipOpt === 'string') {\n                var content = tooltipOpt;\n                tooltipOpt = {\n                    content: content,\n                    // Fixed formatter\n                    formatter: content\n                };\n            }\n            var subTooltipModel = new Model(tooltipOpt, this._tooltipModel, this._ecModel);\n            var defaultHtml = subTooltipModel.get('content');\n            var asyncTicket = Math.random();\n\n            // Do not check whether `trigger` is 'none' here, because `trigger`\n            // only works on cooridinate system. In fact, we have not found case\n            // that requires setting `trigger` nothing on component yet.\n\n            this._showOrMove(subTooltipModel, function () {\n                this._showTooltipContent(\n                    subTooltipModel, defaultHtml, subTooltipModel.get('formatterParams') || {},\n                    asyncTicket, e.offsetX, e.offsetY, e.position, el\n                );\n            });\n\n            // If not dispatch showTip, tip may be hide triggered by axis.\n            dispatchAction({\n                type: 'showTip',\n                from: this.uid\n            });\n        },\n\n        _showTooltipContent: function (\n            tooltipModel, defaultHtml, params, asyncTicket, x, y, positionExpr, el\n        ) {\n            // Reset ticket\n            this._ticket = '';\n\n            if (!tooltipModel.get('showContent') || !tooltipModel.get('show')) {\n                return;\n            }\n\n            var tooltipContent = this._tooltipContent;\n\n            var formatter = tooltipModel.get('formatter');\n            positionExpr = positionExpr || tooltipModel.get('position');\n            var html = defaultHtml;\n\n            if (formatter && typeof formatter === 'string') {\n                html = formatUtil.formatTpl(formatter, params, true);\n            }\n            else if (typeof formatter === 'function') {\n                var callback = bind(function (cbTicket, html) {\n                    if (cbTicket === this._ticket) {\n                        tooltipContent.setContent(html);\n                        this._updatePosition(\n                            tooltipModel, positionExpr, x, y, tooltipContent, params, el\n                        );\n                    }\n                }, this);\n                this._ticket = asyncTicket;\n                html = formatter(params, asyncTicket, callback);\n            }\n\n            tooltipContent.setContent(html);\n            tooltipContent.show(tooltipModel);\n\n            this._updatePosition(\n                tooltipModel, positionExpr, x, y, tooltipContent, params, el\n            );\n        },\n\n        /**\n         * @param  {string|Function|Array.<number>} positionExpr\n         * @param  {number} x Mouse x\n         * @param  {number} y Mouse y\n         * @param  {boolean} confine Whether confine tooltip content in view rect.\n         * @param  {Object|<Array.<Object>} params\n         * @param  {module:zrender/Element} el target element\n         * @param  {module:echarts/ExtensionAPI} api\n         * @return {Array.<number>}\n         */\n        _updatePosition: function (tooltipModel, positionExpr, x, y, content, params, el) {\n            var viewWidth = this._api.getWidth();\n            var viewHeight = this._api.getHeight();\n            positionExpr = positionExpr || tooltipModel.get('position');\n\n            var contentSize = content.getSize();\n            var align = tooltipModel.get('align');\n            var vAlign = tooltipModel.get('verticalAlign');\n            var rect = el && el.getBoundingRect().clone();\n            el && rect.applyTransform(el.transform);\n\n            if (typeof positionExpr === 'function') {\n                // Callback of position can be an array or a string specify the position\n                positionExpr = positionExpr([x, y], params, content.el, rect, {\n                    viewSize: [viewWidth, viewHeight],\n                    contentSize: contentSize.slice()\n                });\n            }\n\n            if (zrUtil.isArray(positionExpr)) {\n                x = parsePercent(positionExpr[0], viewWidth);\n                y = parsePercent(positionExpr[1], viewHeight);\n            }\n            else if (zrUtil.isObject(positionExpr)) {\n                positionExpr.width = contentSize[0];\n                positionExpr.height = contentSize[1];\n                var layoutRect = layoutUtil.getLayoutRect(\n                    positionExpr, {width: viewWidth, height: viewHeight}\n                );\n                x = layoutRect.x;\n                y = layoutRect.y;\n                align = null;\n                // When positionExpr is left/top/right/bottom,\n                // align and verticalAlign will not work.\n                vAlign = null;\n            }\n            // Specify tooltip position by string 'top' 'bottom' 'left' 'right' around graphic element\n            else if (typeof positionExpr === 'string' && el) {\n                var pos = calcTooltipPosition(\n                    positionExpr, rect, contentSize\n                );\n                x = pos[0];\n                y = pos[1];\n            }\n            else {\n                var pos = refixTooltipPosition(\n                    x, y, content.el, viewWidth, viewHeight, align ? null : 20, vAlign ? null : 20\n                );\n                x = pos[0];\n                y = pos[1];\n            }\n\n            align && (x -= isCenterAlign(align) ? contentSize[0] / 2 : align === 'right' ? contentSize[0] : 0);\n            vAlign && (y -= isCenterAlign(vAlign) ? contentSize[1] / 2 : vAlign === 'bottom' ? contentSize[1] : 0);\n\n            if (tooltipModel.get('confine')) {\n                var pos = confineTooltipPosition(\n                    x, y, content.el, viewWidth, viewHeight\n                );\n                x = pos[0];\n                y = pos[1];\n            }\n\n            content.moveTo(x, y);\n        },\n\n        // FIXME\n        // Should we remove this but leave this to user?\n        _updateContentNotChangedOnAxis: function (dataByCoordSys) {\n            var lastCoordSys = this._lastDataByCoordSys;\n            var contentNotChanged = !!lastCoordSys\n                && lastCoordSys.length === dataByCoordSys.length;\n\n            contentNotChanged && each(lastCoordSys, function (lastItemCoordSys, indexCoordSys) {\n                var lastDataByAxis = lastItemCoordSys.dataByAxis || {};\n                var thisItemCoordSys = dataByCoordSys[indexCoordSys] || {};\n                var thisDataByAxis = thisItemCoordSys.dataByAxis || [];\n                contentNotChanged &= lastDataByAxis.length === thisDataByAxis.length;\n\n                contentNotChanged && each(lastDataByAxis, function (lastItem, indexAxis) {\n                    var thisItem = thisDataByAxis[indexAxis] || {};\n                    var lastIndices = lastItem.seriesDataIndices || [];\n                    var newIndices = thisItem.seriesDataIndices || [];\n\n                    contentNotChanged &=\n                        lastItem.value === thisItem.value\n                        && lastItem.axisType === thisItem.axisType\n                        && lastItem.axisId === thisItem.axisId\n                        && lastIndices.length === newIndices.length;\n\n                    contentNotChanged && each(lastIndices, function (lastIdxItem, j) {\n                        var newIdxItem = newIndices[j];\n                        contentNotChanged &=\n                            lastIdxItem.seriesIndex === newIdxItem.seriesIndex\n                            && lastIdxItem.dataIndex === newIdxItem.dataIndex;\n                    });\n                });\n            });\n\n            this._lastDataByCoordSys = dataByCoordSys;\n\n            return !!contentNotChanged;\n        },\n\n        _hide: function (dispatchAction) {\n            // Do not directly hideLater here, because this behavior may be prevented\n            // in dispatchAction when showTip is dispatched.\n\n            // FIXME\n            // duplicated hideTip if manuallyHideTip is called from dispatchAction.\n            this._lastDataByCoordSys = null;\n            dispatchAction({\n                type: 'hideTip',\n                from: this.uid\n            });\n        },\n\n        dispose: function (ecModel, api) {\n            if (env.node) {\n                return;\n            }\n            this._tooltipContent.hide();\n            globalListener.unregister('itemTooltip', api);\n        }\n    });\n\n\n    /**\n     * @param {Array.<Object|module:echarts/model/Model>} modelCascade\n     * From top to bottom. (the last one should be globalTooltipModel);\n     */\n    function buildTooltipModel(modelCascade) {\n        var resultModel = modelCascade.pop();\n        while (modelCascade.length) {\n            var tooltipOpt = modelCascade.pop();\n            if (tooltipOpt) {\n                if (tooltipOpt instanceof Model) {\n                    tooltipOpt = tooltipOpt.get('tooltip', true);\n                }\n                // In each data item tooltip can be simply write:\n                // {\n                //  value: 10,\n                //  tooltip: 'Something you need to know'\n                // }\n                if (typeof tooltipOpt === 'string') {\n                    tooltipOpt = {formatter: tooltipOpt};\n                }\n                resultModel = new Model(tooltipOpt, resultModel, resultModel.ecModel);\n            }\n        }\n        return resultModel;\n    }\n\n    function makeDispatchAction(payload, api) {\n        return payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n    }\n\n    function refixTooltipPosition(x, y, el, viewWidth, viewHeight, gapH, gapV) {\n        var width = el.clientWidth;\n        var height = el.clientHeight;\n\n        if (gapH != null) {\n            if (x + width + gapH > viewWidth) {\n                x -= width + gapH;\n            }\n            else {\n                x += gapH;\n            }\n        }\n        if (gapV != null) {\n            if (y + height + gapV > viewHeight) {\n                y -= height + gapV;\n            }\n            else {\n                y += gapV;\n            }\n        }\n        return [x, y];\n    }\n\n    function confineTooltipPosition(x, y, el, viewWidth, viewHeight) {\n        var width = el.clientWidth;\n        var height = el.clientHeight;\n\n        x = Math.min(x + width, viewWidth) - width;\n        y = Math.min(y + height, viewHeight) - height;\n        x = Math.max(x, 0);\n        y = Math.max(y, 0);\n\n        return [x, y];\n    }\n\n    function calcTooltipPosition(position, rect, contentSize) {\n        var domWidth = contentSize[0];\n        var domHeight = contentSize[1];\n        var gap = 5;\n        var x = 0;\n        var y = 0;\n        var rectWidth = rect.width;\n        var rectHeight = rect.height;\n        switch (position) {\n            case 'inside':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n                break;\n            case 'top':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y - domHeight - gap;\n                break;\n            case 'bottom':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y + rectHeight + gap;\n                break;\n            case 'left':\n                x = rect.x - domWidth - gap;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n                break;\n            case 'right':\n                x = rect.x + rectWidth + gap;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n        }\n        return [x, y];\n    }\n\n    function isCenterAlign(align) {\n        return align === 'center' || align === 'middle';\n    }\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/tooltip/TooltipView.js\n// module id = 611\n// module chunks = 0 1 2","\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var defaultOption = {\n        show: true,\n        zlevel: 0,                  // 一级层叠\n        z: 0,                       // 二级层叠\n        // 反向坐标轴\n        inverse: false,\n\n        // 坐标轴名字，默认为空\n        name: '',\n        // 坐标轴名字位置，支持'start' | 'middle' | 'end'\n        nameLocation: 'end',\n        // 坐标轴名字旋转，degree。\n        nameRotate: null, // Adapt to axis rotate, when nameLocation is 'middle'.\n        nameTruncate: {\n            maxWidth: null,\n            ellipsis: '...',\n            placeholder: '.'\n        },\n        // 坐标轴文字样式，默认取全局样式\n        nameTextStyle: {},\n        // 文字与轴线距离\n        nameGap: 15,\n\n        silent: false, // Default false to support tooltip.\n        triggerEvent: false, // Default false to avoid legacy user event listener fail.\n\n        tooltip: {\n            show: false\n        },\n\n        axisPointer: {},\n\n        // 坐标轴线\n        axisLine: {\n            // 默认显示，属性show控制显示与否\n            show: true,\n            onZero: true,\n            // 属性lineStyle控制线条样式\n            lineStyle: {\n                color: '#333',\n                width: 1,\n                type: 'solid'\n            }\n        },\n        // 坐标轴小标记\n        axisTick: {\n            // 属性show控制显示与否，默认显示\n            show: true,\n            // 控制小标记是否在grid里\n            inside: false,\n            // 属性length控制线长\n            length: 5,\n            // 属性lineStyle控制线条样式\n            lineStyle: {\n                width: 1\n            }\n        },\n        // 坐标轴文本标签，详见axis.axisLabel\n        axisLabel: {\n            show: true,\n            // 控制文本标签是否在grid里\n            inside: false,\n            rotate: 0,\n            showMinLabel: null, // true | false | null (auto)\n            showMaxLabel: null, // true | false | null (auto)\n            margin: 8,\n            // formatter: null,\n            // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n            textStyle: {\n                fontSize: 12\n            }\n        },\n        // 分隔线\n        splitLine: {\n            // 默认显示，属性show控制显示与否\n            show: true,\n            // 属性lineStyle（详见lineStyle）控制线条样式\n            lineStyle: {\n                color: ['#ccc'],\n                width: 1,\n                type: 'solid'\n            }\n        },\n        // 分隔区域\n        splitArea: {\n            // 默认不显示，属性show控制显示与否\n            show: false,\n            // 属性areaStyle（详见areaStyle）控制区域样式\n            areaStyle: {\n                color: ['rgba(250,250,250,0.3)','rgba(200,200,200,0.3)']\n            }\n        }\n    };\n\n    var categoryAxis = zrUtil.merge({\n        // 类目起始和结束两端空白策略\n        boundaryGap: true,\n        // splitArea: {\n            // show: false\n        // },\n        splitLine: {\n            show: false\n        },\n        // 坐标轴小标记\n        axisTick: {\n            // If tick is align with label when boundaryGap is true\n            alignWithLabel: false,\n            interval: 'auto'\n        },\n        // 坐标轴文本标签，详见axis.axisLabel\n        axisLabel: {\n            interval: 'auto'\n        }\n    }, defaultOption);\n\n    var valueAxis = zrUtil.merge({\n        // 数值起始和结束两端空白策略\n        boundaryGap: [0, 0],\n        // 最小值, 设置成 'dataMin' 则从数据中计算最小值\n        // min: null,\n        // 最大值，设置成 'dataMax' 则从数据中计算最大值\n        // max: null,\n        // Readonly prop, specifies start value of the range when using data zoom.\n        // rangeStart: null\n        // Readonly prop, specifies end value of the range when using data zoom.\n        // rangeEnd: null\n        // 脱离0值比例，放大聚焦到最终_min，_max区间\n        // scale: false,\n        // 分割段数，默认为5\n        splitNumber: 5\n        // Minimum interval\n        // minInterval: null\n    }, defaultOption);\n\n    // FIXME\n    var timeAxis = zrUtil.defaults({\n        scale: true,\n        min: 'dataMin',\n        max: 'dataMax'\n    }, valueAxis);\n\n    var logAxis = zrUtil.defaults({\n        scale: true,\n        logBase: 10\n    }, valueAxis);\n\n    module.exports = {\n        categoryAxis: categoryAxis,\n        valueAxis: valueAxis,\n        timeAxis: timeAxis,\n        logAxis: logAxis\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/axisDefault.js\n// module id = 612\n// module chunks = 0 1 2","\n\n    var axisDefault = require('./axisDefault');\n    var zrUtil = require('zrender/lib/core/util');\n    var ComponentModel = require('../model/Component');\n    var layout = require('../util/layout');\n\n    // FIXME axisType is fixed ?\n    var AXIS_TYPES = ['value', 'category', 'time', 'log'];\n\n    /**\n     * Generate sub axis model class\n     * @param {string} axisName 'x' 'y' 'radius' 'angle' 'parallel'\n     * @param {module:echarts/model/Component} BaseAxisModelClass\n     * @param {Function} axisTypeDefaulter\n     * @param {Object} [extraDefaultOption]\n     */\n    module.exports = function (axisName, BaseAxisModelClass, axisTypeDefaulter, extraDefaultOption) {\n\n        zrUtil.each(AXIS_TYPES, function (axisType) {\n\n            BaseAxisModelClass.extend({\n\n                type: axisName + 'Axis.' + axisType,\n\n                mergeDefaultAndTheme: function (option, ecModel) {\n                    var layoutMode = this.layoutMode;\n                    var inputPositionParams = layoutMode\n                        ? layout.getLayoutParams(option) : {};\n\n                    var themeModel = ecModel.getTheme();\n                    zrUtil.merge(option, themeModel.get(axisType + 'Axis'));\n                    zrUtil.merge(option, this.getDefaultOption());\n\n                    option.type = axisTypeDefaulter(axisName, option);\n\n                    if (layoutMode) {\n                        layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n                    }\n                },\n\n                defaultOption: zrUtil.mergeAll(\n                    [\n                        {},\n                        axisDefault[axisType + 'Axis'],\n                        extraDefaultOption\n                    ],\n                    true\n                )\n            });\n        });\n\n        ComponentModel.registerSubTypeDefaulter(\n            axisName + 'Axis',\n            zrUtil.curry(axisTypeDefaulter, axisName)\n        );\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/axisModelCreator.js\n// module id = 613\n// module chunks = 0 1 2","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Axis = require('../Axis');\n\n    /**\n     * Extend axis 2d\n     * @constructor module:echarts/coord/cartesian/Axis2D\n     * @extends {module:echarts/coord/cartesian/Axis}\n     * @param {string} dim\n     * @param {*} scale\n     * @param {Array.<number>} coordExtent\n     * @param {string} axisType\n     * @param {string} position\n     */\n    var Axis2D = function (dim, scale, coordExtent, axisType, position) {\n        Axis.call(this, dim, scale, coordExtent);\n        /**\n         * Axis type\n         *  - 'category'\n         *  - 'value'\n         *  - 'time'\n         *  - 'log'\n         * @type {string}\n         */\n        this.type = axisType || 'value';\n\n        /**\n         * Axis position\n         *  - 'top'\n         *  - 'bottom'\n         *  - 'left'\n         *  - 'right'\n         */\n        this.position = position || 'bottom';\n    };\n\n    Axis2D.prototype = {\n\n        constructor: Axis2D,\n\n        /**\n         * Index of axis, can be used as key\n         */\n        index: 0,\n        /**\n         * If axis is on the zero position of the other axis\n         * @type {boolean}\n         */\n        onZero: false,\n\n        /**\n         * Axis model\n         * @param {module:echarts/coord/cartesian/AxisModel}\n         */\n        model: null,\n\n        isHorizontal: function () {\n            var position = this.position;\n            return position === 'top' || position === 'bottom';\n        },\n\n        /**\n         * Each item cooresponds to this.getExtent(), which\n         * means globalExtent[0] may greater than globalExtent[1],\n         * unless `asc` is input.\n         *\n         * @param {boolean} [asc]\n         * @return {Array.<number>}\n         */\n        getGlobalExtent: function (asc) {\n            var ret = this.getExtent();\n            ret[0] = this.toGlobalCoord(ret[0]);\n            ret[1] = this.toGlobalCoord(ret[1]);\n            asc && ret[0] > ret[1] && ret.reverse();\n            return ret;\n        },\n\n        getOtherAxis: function () {\n            this.grid.getOtherAxis();\n        },\n\n        /**\n         * If label is ignored.\n         * Automatically used when axis is category and label can not be all shown\n         * @param  {number}  idx\n         * @return {boolean}\n         */\n        isLabelIgnored: function (idx) {\n            if (this.type === 'category') {\n                var labelInterval = this.getLabelInterval();\n                return ((typeof labelInterval === 'function')\n                    && !labelInterval(idx, this.scale.getLabel(idx)))\n                    || idx % (labelInterval + 1);\n            }\n        },\n\n        /**\n         * @override\n         */\n        pointToData: function (point, clamp) {\n            return this.coordToData(this.toLocalCoord(point[this.dim === 'x' ? 0 : 1]), clamp);\n        },\n\n        /**\n         * Transform global coord to local coord,\n         * i.e. var localCoord = axis.toLocalCoord(80);\n         * designate by module:echarts/coord/cartesian/Grid.\n         * @type {Function}\n         */\n        toLocalCoord: null,\n\n        /**\n         * Transform global coord to local coord,\n         * i.e. var globalCoord = axis.toLocalCoord(40);\n         * designate by module:echarts/coord/cartesian/Grid.\n         * @type {Function}\n         */\n        toGlobalCoord: null\n\n    };\n    zrUtil.inherits(Axis2D, Axis);\n\n    module.exports = Axis2D;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/cartesian/Axis2D.js\n// module id = 614\n// module chunks = 0 1 2","'use strict';\n/**\n * Cartesian coordinate system\n * @module  echarts/coord/Cartesian\n *\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    function dimAxisMapper(dim) {\n        return this._axes[dim];\n    }\n\n    /**\n     * @alias module:echarts/coord/Cartesian\n     * @constructor\n     */\n    var Cartesian = function (name) {\n        this._axes = {};\n\n        this._dimList = [];\n\n        /**\n         * @type {string}\n         */\n        this.name = name || '';\n    };\n\n    Cartesian.prototype = {\n\n        constructor: Cartesian,\n\n        type: 'cartesian',\n\n        /**\n         * Get axis\n         * @param  {number|string} dim\n         * @return {module:echarts/coord/Cartesian~Axis}\n         */\n        getAxis: function (dim) {\n            return this._axes[dim];\n        },\n\n        /**\n         * Get axes list\n         * @return {Array.<module:echarts/coord/Cartesian~Axis>}\n         */\n        getAxes: function () {\n            return zrUtil.map(this._dimList, dimAxisMapper, this);\n        },\n\n        /**\n         * Get axes list by given scale type\n         */\n        getAxesByScale: function (scaleType) {\n            scaleType = scaleType.toLowerCase();\n            return zrUtil.filter(\n                this.getAxes(),\n                function (axis) {\n                    return axis.scale.type === scaleType;\n                }\n            );\n        },\n\n        /**\n         * Add axis\n         * @param {module:echarts/coord/Cartesian.Axis}\n         */\n        addAxis: function (axis) {\n            var dim = axis.dim;\n\n            this._axes[dim] = axis;\n\n            this._dimList.push(dim);\n        },\n\n        /**\n         * Convert data to coord in nd space\n         * @param {Array.<number>|Object.<string, number>} val\n         * @return {Array.<number>|Object.<string, number>}\n         */\n        dataToCoord: function (val) {\n            return this._dataCoordConvert(val, 'dataToCoord');\n        },\n\n        /**\n         * Convert coord in nd space to data\n         * @param  {Array.<number>|Object.<string, number>} val\n         * @return {Array.<number>|Object.<string, number>}\n         */\n        coordToData: function (val) {\n            return this._dataCoordConvert(val, 'coordToData');\n        },\n\n        _dataCoordConvert: function (input, method) {\n            var dimList = this._dimList;\n\n            var output = input instanceof Array ? [] : {};\n\n            for (var i = 0; i < dimList.length; i++) {\n                var dim = dimList[i];\n                var axis = this._axes[dim];\n\n                output[dim] = axis[method](input[dim]);\n            }\n\n            return output;\n        }\n    };\n\n    module.exports = Cartesian;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/cartesian/Cartesian.js\n// module id = 615\n// module chunks = 0 1 2","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Cartesian = require('./Cartesian');\n\n    function Cartesian2D(name) {\n\n        Cartesian.call(this, name);\n    }\n\n    Cartesian2D.prototype = {\n\n        constructor: Cartesian2D,\n\n        type: 'cartesian2d',\n\n        /**\n         * @type {Array.<string>}\n         * @readOnly\n         */\n        dimensions: ['x', 'y'],\n\n        /**\n         * Base axis will be used on stacking.\n         *\n         * @return {module:echarts/coord/cartesian/Axis2D}\n         */\n        getBaseAxis: function () {\n            return this.getAxesByScale('ordinal')[0]\n                || this.getAxesByScale('time')[0]\n                || this.getAxis('x');\n        },\n\n        /**\n         * If contain point\n         * @param {Array.<number>} point\n         * @return {boolean}\n         */\n        containPoint: function (point) {\n            var axisX = this.getAxis('x');\n            var axisY = this.getAxis('y');\n            return axisX.contain(axisX.toLocalCoord(point[0]))\n                && axisY.contain(axisY.toLocalCoord(point[1]));\n        },\n\n        /**\n         * If contain data\n         * @param {Array.<number>} data\n         * @return {boolean}\n         */\n        containData: function (data) {\n            return this.getAxis('x').containData(data[0])\n                && this.getAxis('y').containData(data[1]);\n        },\n\n        /**\n         * Convert series data to an array of points\n         * @param {module:echarts/data/List} data\n         * @param {boolean} stack\n         * @return {Array}\n         *  Return array of points. For example:\n         *  `[[10, 10], [20, 20], [30, 30]]`\n         */\n        dataToPoints: function (data, stack) {\n            return data.mapArray(['x', 'y'], function (x, y) {\n                return this.dataToPoint([x, y]);\n            }, stack, this);\n        },\n\n        /**\n         * @param {Array.<number>} data\n         * @param {boolean} [clamp=false]\n         * @return {Array.<number>}\n         */\n        dataToPoint: function (data, clamp) {\n            var xAxis = this.getAxis('x');\n            var yAxis = this.getAxis('y');\n            return [\n                xAxis.toGlobalCoord(xAxis.dataToCoord(data[0], clamp)),\n                yAxis.toGlobalCoord(yAxis.dataToCoord(data[1], clamp))\n            ];\n        },\n\n        /**\n         * @param {Array.<number>} point\n         * @param {boolean} [clamp=false]\n         * @return {Array.<number>}\n         */\n        pointToData: function (point, clamp) {\n            var xAxis = this.getAxis('x');\n            var yAxis = this.getAxis('y');\n            return [\n                xAxis.coordToData(xAxis.toLocalCoord(point[0]), clamp),\n                yAxis.coordToData(yAxis.toLocalCoord(point[1]), clamp)\n            ];\n        },\n\n        /**\n         * Get other axis\n         * @param {module:echarts/coord/cartesian/Axis2D} axis\n         */\n        getOtherAxis: function (axis) {\n            return this.getAxis(axis.dim === 'x' ? 'y' : 'x');\n        }\n\n    };\n\n    zrUtil.inherits(Cartesian2D, Cartesian);\n\n    module.exports = Cartesian2D;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/cartesian/Cartesian2D.js\n// module id = 616\n// module chunks = 0 1 2","/**\n * Grid is a region which contains at most 4 cartesian systems\n *\n * TODO Default cartesian\n */\nvar factory = exports;\n\n    var layout = require('../../util/layout');\n    var axisHelper = require('../../coord/axisHelper');\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Cartesian2D = require('./Cartesian2D');\n    var Axis2D = require('./Axis2D');\n\n    var each = zrUtil.each;\n\n    var ifAxisCrossZero = axisHelper.ifAxisCrossZero;\n    var niceScaleExtent = axisHelper.niceScaleExtent;\n\n    // 依赖 GridModel, AxisModel 做预处理\n    require('./GridModel');\n\n    /**\n     * Check if the axis is used in the specified grid\n     * @inner\n     */\n    function isAxisUsedInTheGrid(axisModel, gridModel, ecModel) {\n        return axisModel.getCoordSysModel() === gridModel;\n    }\n\n    function getLabelUnionRect(axis) {\n        var axisModel = axis.model;\n        var labels = axisModel.getFormattedLabels();\n        var textStyleModel = axisModel.getModel('axisLabel.textStyle');\n        var rect;\n        var step = 1;\n        var labelCount = labels.length;\n        if (labelCount > 40) {\n            // Simple optimization for large amount of labels\n            step = Math.ceil(labelCount / 40);\n        }\n        for (var i = 0; i < labelCount; i += step) {\n            if (!axis.isLabelIgnored(i)) {\n                var singleRect = textStyleModel.getTextRect(labels[i]);\n                // FIXME consider label rotate\n                rect ? rect.union(singleRect) : (rect = singleRect);\n            }\n        }\n        return rect;\n    }\n\n    function Grid(gridModel, ecModel, api) {\n        /**\n         * @type {Object.<string, module:echarts/coord/cartesian/Cartesian2D>}\n         * @private\n         */\n        this._coordsMap = {};\n\n        /**\n         * @type {Array.<module:echarts/coord/cartesian/Cartesian>}\n         * @private\n         */\n        this._coordsList = [];\n\n        /**\n         * @type {Object.<string, module:echarts/coord/cartesian/Axis2D>}\n         * @private\n         */\n        this._axesMap = {};\n\n        /**\n         * @type {Array.<module:echarts/coord/cartesian/Axis2D>}\n         * @private\n         */\n        this._axesList = [];\n\n        this._initCartesian(gridModel, ecModel, api);\n\n        this.model = gridModel;\n    }\n\n    var gridProto = Grid.prototype;\n\n    gridProto.type = 'grid';\n\n    gridProto.axisPointerEnabled = true;\n\n    gridProto.getRect = function () {\n        return this._rect;\n    };\n\n    gridProto.update = function (ecModel, api) {\n\n        var axesMap = this._axesMap;\n\n        this._updateScale(ecModel, this.model);\n\n        function ifAxisCanNotOnZero(otherAxisDim) {\n            var axes = axesMap[otherAxisDim];\n            for (var idx in axes) {\n                if (axes.hasOwnProperty(idx)) {\n                    var axis = axes[idx];\n                    if (axis && (\n                        axis.type === 'category' || axis.type === 'time' || !ifAxisCrossZero(axis)\n                    )) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        }\n\n        each(axesMap.x, function (xAxis) {\n            niceScaleExtent(xAxis.scale, xAxis.model);\n        });\n        each(axesMap.y, function (yAxis) {\n            niceScaleExtent(yAxis.scale, yAxis.model);\n        });\n        // Fix configuration\n        each(axesMap.x, function (xAxis) {\n            // onZero can not be enabled in these two situations\n            // 1. When any other axis is a category axis\n            // 2. When any other axis not across 0 point\n            if (ifAxisCanNotOnZero('y')) {\n                xAxis.onZero = false;\n            }\n        });\n        each(axesMap.y, function (yAxis) {\n            if (ifAxisCanNotOnZero('x')) {\n                yAxis.onZero = false;\n            }\n        });\n\n        // Resize again if containLabel is enabled\n        // FIXME It may cause getting wrong grid size in data processing stage\n        this.resize(this.model, api);\n    };\n\n    /**\n     * Resize the grid\n     * @param {module:echarts/coord/cartesian/GridModel} gridModel\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    gridProto.resize = function (gridModel, api, ignoreContainLabel) {\n\n        var gridRect = layout.getLayoutRect(\n            gridModel.getBoxLayoutParams(), {\n                width: api.getWidth(),\n                height: api.getHeight()\n            });\n\n        this._rect = gridRect;\n\n        var axesList = this._axesList;\n\n        adjustAxes();\n\n        // Minus label size\n        if (!ignoreContainLabel && gridModel.get('containLabel')) {\n            each(axesList, function (axis) {\n                if (!axis.model.get('axisLabel.inside')) {\n                    var labelUnionRect = getLabelUnionRect(axis);\n                    if (labelUnionRect) {\n                        var dim = axis.isHorizontal() ? 'height' : 'width';\n                        var margin = axis.model.get('axisLabel.margin');\n                        gridRect[dim] -= labelUnionRect[dim] + margin;\n                        if (axis.position === 'top') {\n                            gridRect.y += labelUnionRect.height + margin;\n                        }\n                        else if (axis.position === 'left')  {\n                            gridRect.x += labelUnionRect.width + margin;\n                        }\n                    }\n                }\n            });\n\n            adjustAxes();\n        }\n\n        function adjustAxes() {\n            each(axesList, function (axis) {\n                var isHorizontal = axis.isHorizontal();\n                var extent = isHorizontal ? [0, gridRect.width] : [0, gridRect.height];\n                var idx = axis.inverse ? 1 : 0;\n                axis.setExtent(extent[idx], extent[1 - idx]);\n                updateAxisTransfrom(axis, isHorizontal ? gridRect.x : gridRect.y);\n            });\n        }\n    };\n\n    /**\n     * @param {string} axisType\n     * @param {ndumber} [axisIndex]\n     */\n    gridProto.getAxis = function (axisType, axisIndex) {\n        var axesMapOnDim = this._axesMap[axisType];\n        if (axesMapOnDim != null) {\n            if (axisIndex == null) {\n                // Find first axis\n                for (var name in axesMapOnDim) {\n                    if (axesMapOnDim.hasOwnProperty(name)) {\n                        return axesMapOnDim[name];\n                    }\n                }\n            }\n            return axesMapOnDim[axisIndex];\n        }\n    };\n\n    /**\n     * @return {Array.<module:echarts/coord/Axis>}\n     */\n    gridProto.getAxes = function () {\n        return this._axesList.slice();\n    };\n\n    /**\n     * Usage:\n     *      grid.getCartesian(xAxisIndex, yAxisIndex);\n     *      grid.getCartesian(xAxisIndex);\n     *      grid.getCartesian(null, yAxisIndex);\n     *      grid.getCartesian({xAxisIndex: ..., yAxisIndex: ...});\n     *\n     * @param {number|Object} [xAxisIndex]\n     * @param {number} [yAxisIndex]\n     */\n    gridProto.getCartesian = function (xAxisIndex, yAxisIndex) {\n        if (xAxisIndex != null && yAxisIndex != null) {\n            var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n            return this._coordsMap[key];\n        }\n\n        if (zrUtil.isObject(xAxisIndex)) {\n            yAxisIndex = xAxisIndex.yAxisIndex;\n            xAxisIndex = xAxisIndex.xAxisIndex;\n        }\n        // When only xAxisIndex or yAxisIndex given, find its first cartesian.\n        for (var i = 0, coordList = this._coordsList; i < coordList.length; i++) {\n            if (coordList[i].getAxis('x').index === xAxisIndex\n                || coordList[i].getAxis('y').index === yAxisIndex\n            ) {\n                return coordList[i];\n            }\n        }\n    };\n\n    gridProto.getCartesians = function () {\n        return this._coordsList.slice();\n    };\n\n    /**\n     * @implements\n     * see {module:echarts/CoodinateSystem}\n     */\n    gridProto.convertToPixel = function (ecModel, finder, value) {\n        var target = this._findConvertTarget(ecModel, finder);\n\n        return target.cartesian\n            ? target.cartesian.dataToPoint(value)\n            : target.axis\n            ? target.axis.toGlobalCoord(target.axis.dataToCoord(value))\n            : null;\n    };\n\n    /**\n     * @implements\n     * see {module:echarts/CoodinateSystem}\n     */\n    gridProto.convertFromPixel = function (ecModel, finder, value) {\n        var target = this._findConvertTarget(ecModel, finder);\n\n        return target.cartesian\n            ? target.cartesian.pointToData(value)\n            : target.axis\n            ? target.axis.coordToData(target.axis.toLocalCoord(value))\n            : null;\n    };\n\n    /**\n     * @inner\n     */\n    gridProto._findConvertTarget = function (ecModel, finder) {\n        var seriesModel = finder.seriesModel;\n        var xAxisModel = finder.xAxisModel\n            || (seriesModel && seriesModel.getReferringComponents('xAxis')[0]);\n        var yAxisModel = finder.yAxisModel\n            || (seriesModel && seriesModel.getReferringComponents('yAxis')[0]);\n        var gridModel = finder.gridModel;\n        var coordsList = this._coordsList;\n        var cartesian;\n        var axis;\n\n        if (seriesModel) {\n            cartesian = seriesModel.coordinateSystem;\n            zrUtil.indexOf(coordsList, cartesian) < 0 && (cartesian = null);\n        }\n        else if (xAxisModel && yAxisModel) {\n            cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n        }\n        else if (xAxisModel) {\n            axis = this.getAxis('x', xAxisModel.componentIndex);\n        }\n        else if (yAxisModel) {\n            axis = this.getAxis('y', yAxisModel.componentIndex);\n        }\n        // Lowest priority.\n        else if (gridModel) {\n            var grid = gridModel.coordinateSystem;\n            if (grid === this) {\n                cartesian = this._coordsList[0];\n            }\n        }\n\n        return {cartesian: cartesian, axis: axis};\n    };\n\n    /**\n     * @implements\n     * see {module:echarts/CoodinateSystem}\n     */\n    gridProto.containPoint = function (point) {\n        var coord = this._coordsList[0];\n        if (coord) {\n            return coord.containPoint(point);\n        }\n    };\n\n    /**\n     * Initialize cartesian coordinate systems\n     * @private\n     */\n    gridProto._initCartesian = function (gridModel, ecModel, api) {\n        var axisPositionUsed = {\n            left: false,\n            right: false,\n            top: false,\n            bottom: false\n        };\n\n        var axesMap = {\n            x: {},\n            y: {}\n        };\n        var axesCount = {\n            x: 0,\n            y: 0\n        };\n\n        /// Create axis\n        ecModel.eachComponent('xAxis', createAxisCreator('x'), this);\n        ecModel.eachComponent('yAxis', createAxisCreator('y'), this);\n\n        if (!axesCount.x || !axesCount.y) {\n            // Roll back when there no either x or y axis\n            this._axesMap = {};\n            this._axesList = [];\n            return;\n        }\n\n        this._axesMap = axesMap;\n\n        /// Create cartesian2d\n        each(axesMap.x, function (xAxis, xAxisIndex) {\n            each(axesMap.y, function (yAxis, yAxisIndex) {\n                var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n                var cartesian = new Cartesian2D(key);\n\n                cartesian.grid = this;\n                cartesian.model = gridModel;\n\n                this._coordsMap[key] = cartesian;\n                this._coordsList.push(cartesian);\n\n                cartesian.addAxis(xAxis);\n                cartesian.addAxis(yAxis);\n            }, this);\n        }, this);\n\n        function createAxisCreator(axisType) {\n            return function (axisModel, idx) {\n                if (!isAxisUsedInTheGrid(axisModel, gridModel, ecModel)) {\n                    return;\n                }\n\n                var axisPosition = axisModel.get('position');\n                if (axisType === 'x') {\n                    // Fix position\n                    if (axisPosition !== 'top' && axisPosition !== 'bottom') {\n                        // Default bottom of X\n                        axisPosition = 'bottom';\n                        if (axisPositionUsed[axisPosition]) {\n                            axisPosition = axisPosition === 'top' ? 'bottom' : 'top';\n                        }\n                    }\n                }\n                else {\n                    // Fix position\n                    if (axisPosition !== 'left' && axisPosition !== 'right') {\n                        // Default left of Y\n                        axisPosition = 'left';\n                        if (axisPositionUsed[axisPosition]) {\n                            axisPosition = axisPosition === 'left' ? 'right' : 'left';\n                        }\n                    }\n                }\n                axisPositionUsed[axisPosition] = true;\n\n                var axis = new Axis2D(\n                    axisType, axisHelper.createScaleByModel(axisModel),\n                    [0, 0],\n                    axisModel.get('type'),\n                    axisPosition\n                );\n\n                var isCategory = axis.type === 'category';\n                axis.onBand = isCategory && axisModel.get('boundaryGap');\n                axis.inverse = axisModel.get('inverse');\n\n                axis.onZero = axisModel.get('axisLine.onZero');\n\n                // Inject axis into axisModel\n                axisModel.axis = axis;\n\n                // Inject axisModel into axis\n                axis.model = axisModel;\n\n                // Inject grid info axis\n                axis.grid = this;\n\n                // Index of axis, can be used as key\n                axis.index = idx;\n\n                this._axesList.push(axis);\n\n                axesMap[axisType][idx] = axis;\n                axesCount[axisType]++;\n            };\n        }\n    };\n\n    /**\n     * Update cartesian properties from series\n     * @param  {module:echarts/model/Option} option\n     * @private\n     */\n    gridProto._updateScale = function (ecModel, gridModel) {\n        // Reset scale\n        zrUtil.each(this._axesList, function (axis) {\n            axis.scale.setExtent(Infinity, -Infinity);\n        });\n        ecModel.eachSeries(function (seriesModel) {\n            if (isCartesian2D(seriesModel)) {\n                var axesModels = findAxesModels(seriesModel, ecModel);\n                var xAxisModel = axesModels[0];\n                var yAxisModel = axesModels[1];\n\n                if (!isAxisUsedInTheGrid(xAxisModel, gridModel, ecModel)\n                    || !isAxisUsedInTheGrid(yAxisModel, gridModel, ecModel)\n                 ) {\n                    return;\n                }\n\n                var cartesian = this.getCartesian(\n                    xAxisModel.componentIndex, yAxisModel.componentIndex\n                );\n                var data = seriesModel.getData();\n                var xAxis = cartesian.getAxis('x');\n                var yAxis = cartesian.getAxis('y');\n\n                if (data.type === 'list') {\n                    unionExtent(data, xAxis, seriesModel);\n                    unionExtent(data, yAxis, seriesModel);\n                }\n            }\n        }, this);\n\n        function unionExtent(data, axis, seriesModel) {\n            each(seriesModel.coordDimToDataDim(axis.dim), function (dim) {\n                axis.scale.unionExtentFromData(data, dim);\n            });\n        }\n    };\n\n    /**\n     * @param {string} [dim] 'x' or 'y' or 'auto' or null/undefined\n     * @return {Object} {baseAxes: [], otherAxes: []}\n     */\n    gridProto.getTooltipAxes = function (dim) {\n        var baseAxes = [];\n        var otherAxes = [];\n\n        each(this.getCartesians(), function (cartesian) {\n            var baseAxis = (dim != null && dim !== 'auto')\n                ? cartesian.getAxis(dim) : cartesian.getBaseAxis();\n            var otherAxis = cartesian.getOtherAxis(baseAxis);\n            zrUtil.indexOf(baseAxes, baseAxis) < 0 && baseAxes.push(baseAxis);\n            zrUtil.indexOf(otherAxes, otherAxis) < 0 && otherAxes.push(otherAxis);\n        });\n\n        return {baseAxes: baseAxes, otherAxes: otherAxes};\n    };\n\n    /**\n     * @inner\n     */\n    function updateAxisTransfrom(axis, coordBase) {\n        var axisExtent = axis.getExtent();\n        var axisExtentSum = axisExtent[0] + axisExtent[1];\n\n        // Fast transform\n        axis.toGlobalCoord = axis.dim === 'x'\n            ? function (coord) {\n                return coord + coordBase;\n            }\n            : function (coord) {\n                return axisExtentSum - coord + coordBase;\n            };\n        axis.toLocalCoord = axis.dim === 'x'\n            ? function (coord) {\n                return coord - coordBase;\n            }\n            : function (coord) {\n                return axisExtentSum - coord + coordBase;\n            };\n    }\n\n    var axesTypes = ['xAxis', 'yAxis'];\n    /**\n     * @inner\n     */\n    function findAxesModels(seriesModel, ecModel) {\n        return zrUtil.map(axesTypes, function (axisType) {\n            var axisModel = seriesModel.getReferringComponents(axisType)[0];\n\n            if (__DEV__) {\n                if (!axisModel) {\n                    throw new Error(axisType + ' \"' + zrUtil.retrieve(\n                        seriesModel.get(axisType + 'Index'),\n                        seriesModel.get(axisType + 'Id'),\n                        0\n                    ) + '\" not found');\n                }\n            }\n            return axisModel;\n        });\n    }\n\n    /**\n     * @inner\n     */\n    function isCartesian2D(seriesModel) {\n        return seriesModel.get('coordinateSystem') === 'cartesian2d';\n    }\n\n    Grid.create = function (ecModel, api) {\n        var grids = [];\n        ecModel.eachComponent('grid', function (gridModel, idx) {\n            var grid = new Grid(gridModel, ecModel, api);\n            grid.name = 'grid_' + idx;\n            // dataSampling requires axis extent, so resize\n            // should be performed in create stage.\n            grid.resize(gridModel, api, true);\n\n            gridModel.coordinateSystem = grid;\n\n            grids.push(grid);\n        });\n\n        // Inject the coordinateSystems into seriesModel\n        ecModel.eachSeries(function (seriesModel) {\n            if (!isCartesian2D(seriesModel)) {\n                return;\n            }\n\n            var axesModels = findAxesModels(seriesModel, ecModel);\n            var xAxisModel = axesModels[0];\n            var yAxisModel = axesModels[1];\n\n            var gridModel = xAxisModel.getCoordSysModel();\n\n            if (__DEV__) {\n                if (!gridModel) {\n                    throw new Error(\n                        'Grid \"' + zrUtil.retrieve(\n                            xAxisModel.get('gridIndex'),\n                            xAxisModel.get('gridId'),\n                            0\n                        ) + '\" not found'\n                    );\n                }\n                if (xAxisModel.getCoordSysModel() !== yAxisModel.getCoordSysModel()) {\n                    throw new Error('xAxis and yAxis must use the same grid');\n                }\n            }\n\n            var grid = gridModel.coordinateSystem;\n\n            seriesModel.coordinateSystem = grid.getCartesian(\n                xAxisModel.componentIndex, yAxisModel.componentIndex\n            );\n        });\n\n        return grids;\n    };\n\n    // For deciding which dimensions to use when creating list data\n    Grid.dimensions = Grid.prototype.dimensions = Cartesian2D.prototype.dimensions;\n\n    require('../../CoordinateSystem').register('cartesian2d', Grid);\n\n    module.exports = Grid;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/cartesian/Grid.js\n// module id = 617\n// module chunks = 0 1 2","'use strict';\n// Grid 是在有直角坐标系的时候必须要存在的\n// 所以这里也要被 Cartesian2D 依赖\n\n\n    require('./AxisModel');\n\n    var ComponentModel = require('../../model/Component');\n\n    module.exports = ComponentModel.extend({\n\n        type: 'grid',\n\n        dependencies: ['xAxis', 'yAxis'],\n\n        layoutMode: 'box',\n\n        /**\n         * @type {module:echarts/coord/cartesian/Grid}\n         */\n        coordinateSystem: null,\n\n        defaultOption: {\n            show: false,\n            zlevel: 0,\n            z: 0,\n            left: '10%',\n            top: 60,\n            right: '10%',\n            bottom: 60,\n            // If grid size contain label\n            containLabel: false,\n            // width: {totalWidth} - left - right,\n            // height: {totalHeight} - top - bottom,\n            backgroundColor: 'rgba(0,0,0,0)',\n            borderWidth: 1,\n            borderColor: '#ccc'\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/cartesian/GridModel.js\n// module id = 618\n// module chunks = 0 1 2","'use strict';\n\n\n    function defaultKeyGetter(item) {\n        return item;\n    }\n\n    function DataDiffer(oldArr, newArr, oldKeyGetter, newKeyGetter) {\n        this._old = oldArr;\n        this._new = newArr;\n\n        this._oldKeyGetter = oldKeyGetter || defaultKeyGetter;\n        this._newKeyGetter = newKeyGetter || defaultKeyGetter;\n    }\n\n    DataDiffer.prototype = {\n\n        constructor: DataDiffer,\n\n        /**\n         * Callback function when add a data\n         */\n        add: function (func) {\n            this._add = func;\n            return this;\n        },\n\n        /**\n         * Callback function when update a data\n         */\n        update: function (func) {\n            this._update = func;\n            return this;\n        },\n\n        /**\n         * Callback function when remove a data\n         */\n        remove: function (func) {\n            this._remove = func;\n            return this;\n        },\n\n        execute: function () {\n            var oldArr = this._old;\n            var newArr = this._new;\n            var oldKeyGetter = this._oldKeyGetter;\n            var newKeyGetter = this._newKeyGetter;\n\n            var oldDataIndexMap = {};\n            var newDataIndexMap = {};\n            var oldDataKeyArr = [];\n            var newDataKeyArr = [];\n            var i;\n\n            initIndexMap(oldArr, oldDataIndexMap, oldDataKeyArr, oldKeyGetter);\n            initIndexMap(newArr, newDataIndexMap, newDataKeyArr, newKeyGetter);\n\n            // Travel by inverted order to make sure order consistency\n            // when duplicate keys exists (consider newDataIndex.pop() below).\n            // For performance consideration, these code below do not look neat.\n            for (i = 0; i < oldArr.length; i++) {\n                var key = oldDataKeyArr[i];\n                var idx = newDataIndexMap[key];\n\n                // idx can never be empty array here. see 'set null' logic below.\n                if (idx != null) {\n                    // Consider there is duplicate key (for example, use dataItem.name as key).\n                    // We should make sure every item in newArr and oldArr can be visited.\n                    var len = idx.length;\n                    if (len) {\n                        len === 1 && (newDataIndexMap[key] = null);\n                        idx = idx.unshift();\n                    }\n                    else {\n                        newDataIndexMap[key] = null;\n                    }\n                    this._update && this._update(idx, i);\n                }\n                else {\n                    this._remove && this._remove(i);\n                }\n            }\n\n            for (var i = 0; i < newDataKeyArr.length; i++) {\n                var key = newDataKeyArr[i];\n                if (newDataIndexMap.hasOwnProperty(key)) {\n                    var idx = newDataIndexMap[key];\n                    if (idx == null) {\n                        continue;\n                    }\n                    // idx can never be empty array here. see 'set null' logic above.\n                    if (!idx.length) {\n                        this._add && this._add(idx);\n                    }\n                    else {\n                        for (var j = 0, len = idx.length; j < len; j++) {\n                            this._add && this._add(idx[j]);\n                        }\n                    }\n                }\n            }\n        }\n    };\n\n    function initIndexMap(arr, map, keyArr, keyGetter) {\n        for (var i = 0; i < arr.length; i++) {\n            // Add prefix to avoid conflict with Object.prototype.\n            var key = '_ec_' + keyGetter(arr[i], i);\n            var existence = map[key];\n            if (existence == null) {\n                keyArr.push(key);\n                map[key] = i;\n            }\n            else {\n                if (!existence.length) {\n                    map[key] = existence = [existence];\n                }\n                existence.push(i);\n            }\n        }\n    }\n\n    module.exports = DataDiffer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/data/DataDiffer.js\n// module id = 619\n// module chunks = 0 1 2","\n\n    var createListFromArray = require('./chart/helper/createListFromArray');\n    var symbolUtil = require('./util/symbol');\n    var axisHelper = require('./coord/axisHelper');\n    var axisModelCommonMixin = require('./coord/axisModelCommonMixin');\n    var Model = require('./model/Model');\n    var util = require('zrender/lib/core/util');\n\n    module.exports = {\n        /**\n         * Create a muti dimension List structure from seriesModel.\n         * @param  {module:echarts/model/Model} seriesModel\n         * @return {module:echarts/data/List} list\n         */\n        createList: function (seriesModel) {\n            var data = seriesModel.get('data');\n            return createListFromArray(data, seriesModel, seriesModel.ecModel);\n        },\n\n        /**\n         * @see {module:echarts/data/helper/completeDimensions}\n         */\n        completeDimensions: require('./data/helper/completeDimensions'),\n\n        /**\n         * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n         * @see http://echarts.baidu.com/option.html#series-scatter.symbol\n         * @param {string} symbolDesc\n         * @param {number} x\n         * @param {number} y\n         * @param {number} w\n         * @param {number} h\n         * @param {string} color\n         */\n        createSymbol: symbolUtil.createSymbol,\n\n        /**\n         * Create scale\n         * @param {Array.<number>} dataExtent\n         * @param {Object|module:echarts/Model} option\n         */\n        createScale: function (dataExtent, option) {\n            var axisModel = option;\n            if (!(option instanceof Model)) {\n                axisModel = new Model(option);\n                util.mixin(axisModel, axisModelCommonMixin);\n            }\n\n            var scale = axisHelper.createScaleByModel(axisModel);\n            scale.setExtent(dataExtent[0], dataExtent[1]);\n\n            axisHelper.niceScaleExtent(scale, axisModel);\n            return scale;\n        },\n\n        /**\n         * Mixin common methods to axis model,\n         *\n         * Inlcude methods\n         * `getFormattedLabels() => Array.<string>`\n         * `getCategories() => Array.<string>`\n         * `getMin(origin: boolean) => number`\n         * `getMax(origin: boolean) => number`\n         * `getNeedCrossZero() => boolean`\n         * `setRange(start: number, end: number)`\n         * `resetRange()`\n         */\n        mixinAxisModelCommonMethods: function (Model) {\n            util.mixin(Model, axisModelCommonMixin);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/helper.js\n// module id = 620\n// module chunks = 0 1 2","\n\n    module.exports = function (seriesType, ecModel) {\n        ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n            var data = seriesModel.getData();\n            var coordSys = seriesModel.coordinateSystem;\n\n            if (!coordSys) {\n                return;\n            }\n\n            var dims = [];\n            var coordDims = coordSys.dimensions;\n            for (var i = 0; i < coordDims.length; i++) {\n                dims.push(seriesModel.coordDimToDataDim(coordSys.dimensions[i])[0]);\n            }\n\n            if (dims.length === 1) {\n                data.each(dims[0], function (x, idx) {\n                    // Also {Array.<number>}, not undefined to avoid if...else... statement\n                    data.setItemLayout(idx, isNaN(x) ? [NaN, NaN] : coordSys.dataToPoint(x));\n                });\n            }\n            else if (dims.length === 2) {\n                data.each(dims, function (x, y, idx) {\n                    // Also {Array.<number>}, not undefined to avoid if...else... statement\n                    data.setItemLayout(\n                        idx, (isNaN(x) || isNaN(y)) ? [NaN, NaN] : coordSys.dataToPoint([x, y])\n                    );\n                }, true);\n            }\n        });\n    };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/layout/points.js\n// module id = 621\n// module chunks = 0 1 2","\n\n    var graphic = require('../util/graphic');\n    var zrUtil = require('zrender/lib/core/util');\n    var PI = Math.PI;\n    /**\n     * @param {module:echarts/ExtensionAPI} api\n     * @param {Object} [opts]\n     * @param {string} [opts.text]\n     * @param {string} [opts.color]\n     * @param {string} [opts.textColor]\n     * @return {module:zrender/Element}\n     */\n    module.exports = function (api, opts) {\n        opts = opts || {};\n        zrUtil.defaults(opts, {\n            text: 'loading',\n            color: '#c23531',\n            textColor: '#000',\n            maskColor: 'rgba(255, 255, 255, 0.8)',\n            zlevel: 0\n        });\n        var mask = new graphic.Rect({\n            style: {\n                fill: opts.maskColor\n            },\n            zlevel: opts.zlevel,\n            z: 10000\n        });\n        var arc = new graphic.Arc({\n            shape: {\n                startAngle: -PI / 2,\n                endAngle: -PI / 2 + 0.1,\n                r: 10\n            },\n            style: {\n                stroke: opts.color,\n                lineCap: 'round',\n                lineWidth: 5\n            },\n            zlevel: opts.zlevel,\n            z: 10001\n        });\n        var labelRect = new graphic.Rect({\n            style: {\n                fill: 'none',\n                text: opts.text,\n                textPosition: 'right',\n                textDistance: 10,\n                textFill: opts.textColor\n            },\n            zlevel: opts.zlevel,\n            z: 10001\n        });\n\n        arc.animateShape(true)\n            .when(1000, {\n                endAngle: PI * 3 / 2\n            })\n            .start('circularInOut');\n        arc.animateShape(true)\n            .when(1000, {\n                startAngle: PI * 3 / 2\n            })\n            .delay(300)\n            .start('circularInOut');\n\n        var group = new graphic.Group();\n        group.add(arc);\n        group.add(labelRect);\n        group.add(mask);\n        // Inject resize\n        group.resize = function () {\n            var cx = api.getWidth() / 2;\n            var cy = api.getHeight() / 2;\n            arc.setShape({\n                cx: cx,\n                cy: cy\n            });\n            var r = arc.shape.r;\n            labelRect.setShape({\n                x: cx - r,\n                y: cy - r,\n                width: r * 2,\n                height: r * 2\n            });\n\n            mask.setShape({\n                x: 0,\n                y: 0,\n                width: api.getWidth(),\n                height: api.getHeight()\n            });\n        };\n        group.resize();\n        return group;\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/loading/default.js\n// module id = 622\n// module chunks = 0 1 2","/**\n * ECharts global model\n *\n * @module {echarts/model/Global}\n */\n\n\n\n    /**\n     * Caution: If the mechanism should be changed some day, these cases\n     * should be considered:\n     *\n     * (1) In `merge option` mode, if using the same option to call `setOption`\n     * many times, the result should be the same (try our best to ensure that).\n     * (2) In `merge option` mode, if a component has no id/name specified, it\n     * will be merged by index, and the result sequence of the components is\n     * consistent to the original sequence.\n     * (3) `reset` feature (in toolbox). Find detailed info in comments about\n     * `mergeOption` in module:echarts/model/OptionManager.\n     */\n\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../util/model');\n    var Model = require('./Model');\n    var each = zrUtil.each;\n    var filter = zrUtil.filter;\n    var map = zrUtil.map;\n    var isArray = zrUtil.isArray;\n    var indexOf = zrUtil.indexOf;\n    var isObject = zrUtil.isObject;\n\n    var ComponentModel = require('./Component');\n\n    var globalDefault = require('./globalDefault');\n\n    var OPTION_INNER_KEY = '\\0_ec_inner';\n\n    /**\n     * @alias module:echarts/model/Global\n     *\n     * @param {Object} option\n     * @param {module:echarts/model/Model} parentModel\n     * @param {Object} theme\n     */\n    var GlobalModel = Model.extend({\n\n        constructor: GlobalModel,\n\n        init: function (option, parentModel, theme, optionManager) {\n            theme = theme || {};\n\n            this.option = null; // Mark as not initialized.\n\n            /**\n             * @type {module:echarts/model/Model}\n             * @private\n             */\n            this._theme = new Model(theme);\n\n            /**\n             * @type {module:echarts/model/OptionManager}\n             */\n            this._optionManager = optionManager;\n        },\n\n        setOption: function (option, optionPreprocessorFuncs) {\n            zrUtil.assert(\n                !(OPTION_INNER_KEY in option),\n                'please use chart.getOption()'\n            );\n\n            this._optionManager.setOption(option, optionPreprocessorFuncs);\n\n            this.resetOption(null);\n        },\n\n        /**\n         * @param {string} type null/undefined: reset all.\n         *                      'recreate': force recreate all.\n         *                      'timeline': only reset timeline option\n         *                      'media': only reset media query option\n         * @return {boolean} Whether option changed.\n         */\n        resetOption: function (type) {\n            var optionChanged = false;\n            var optionManager = this._optionManager;\n\n            if (!type || type === 'recreate') {\n                var baseOption = optionManager.mountOption(type === 'recreate');\n\n                if (!this.option || type === 'recreate') {\n                    initBase.call(this, baseOption);\n                }\n                else {\n                    this.restoreData();\n                    this.mergeOption(baseOption);\n                }\n                optionChanged = true;\n            }\n\n            if (type === 'timeline' || type === 'media') {\n                this.restoreData();\n            }\n\n            if (!type || type === 'recreate' || type === 'timeline') {\n                var timelineOption = optionManager.getTimelineOption(this);\n                timelineOption && (this.mergeOption(timelineOption), optionChanged = true);\n            }\n\n            if (!type || type === 'recreate' || type === 'media') {\n                var mediaOptions = optionManager.getMediaOption(this, this._api);\n                if (mediaOptions.length) {\n                    each(mediaOptions, function (mediaOption) {\n                        this.mergeOption(mediaOption, optionChanged = true);\n                    }, this);\n                }\n            }\n\n            return optionChanged;\n        },\n\n        /**\n         * @protected\n         */\n        mergeOption: function (newOption) {\n            var option = this.option;\n            var componentsMap = this._componentsMap;\n            var newCptTypes = [];\n\n            // 如果不存在对应的 component model 则直接 merge\n            each(newOption, function (componentOption, mainType) {\n                if (componentOption == null) {\n                    return;\n                }\n\n                if (!ComponentModel.hasClass(mainType)) {\n                    option[mainType] = option[mainType] == null\n                        ? zrUtil.clone(componentOption)\n                        : zrUtil.merge(option[mainType], componentOption, true);\n                }\n                else {\n                    newCptTypes.push(mainType);\n                }\n            });\n\n            // FIXME OPTION 同步是否要改回原来的\n            ComponentModel.topologicalTravel(\n                newCptTypes, ComponentModel.getAllClassMainTypes(), visitComponent, this\n            );\n\n            this._seriesIndices = this._seriesIndices || [];\n\n            function visitComponent(mainType, dependencies) {\n                var newCptOptionList = modelUtil.normalizeToArray(newOption[mainType]);\n\n                var mapResult = modelUtil.mappingToExists(\n                    componentsMap.get(mainType), newCptOptionList\n                );\n\n                modelUtil.makeIdAndName(mapResult);\n\n                // Set mainType and complete subType.\n                each(mapResult, function (item, index) {\n                    var opt = item.option;\n                    if (isObject(opt)) {\n                        item.keyInfo.mainType = mainType;\n                        item.keyInfo.subType = determineSubType(mainType, opt, item.exist);\n                    }\n                });\n\n                var dependentModels = getComponentsByTypes(\n                    componentsMap, dependencies\n                );\n\n                option[mainType] = [];\n                componentsMap.set(mainType, []);\n\n                each(mapResult, function (resultItem, index) {\n                    var componentModel = resultItem.exist;\n                    var newCptOption = resultItem.option;\n\n                    zrUtil.assert(\n                        isObject(newCptOption) || componentModel,\n                        'Empty component definition'\n                    );\n\n                    // Consider where is no new option and should be merged using {},\n                    // see removeEdgeAndAdd in topologicalTravel and\n                    // ComponentModel.getAllClassMainTypes.\n                    if (!newCptOption) {\n                        componentModel.mergeOption({}, this);\n                        componentModel.optionUpdated({}, false);\n                    }\n                    else {\n                        var ComponentModelClass = ComponentModel.getClass(\n                            mainType, resultItem.keyInfo.subType, true\n                        );\n\n                        if (componentModel && componentModel instanceof ComponentModelClass) {\n                            componentModel.name = resultItem.keyInfo.name;\n                            componentModel.mergeOption(newCptOption, this);\n                            componentModel.optionUpdated(newCptOption, false);\n                        }\n                        else {\n                            // PENDING Global as parent ?\n                            var extraOpt = zrUtil.extend(\n                                {\n                                    dependentModels: dependentModels,\n                                    componentIndex: index\n                                },\n                                resultItem.keyInfo\n                            );\n                            componentModel = new ComponentModelClass(\n                                newCptOption, this, this, extraOpt\n                            );\n                            zrUtil.extend(componentModel, extraOpt);\n                            componentModel.init(newCptOption, this, this, extraOpt);\n                            // Call optionUpdated after init.\n                            // newCptOption has been used as componentModel.option\n                            // and may be merged with theme and default, so pass null\n                            // to avoid confusion.\n                            componentModel.optionUpdated(null, true);\n                        }\n                    }\n\n                    componentsMap.get(mainType)[index] = componentModel;\n                    option[mainType][index] = componentModel.option;\n                }, this);\n\n                // Backup series for filtering.\n                if (mainType === 'series') {\n                    this._seriesIndices = createSeriesIndices(componentsMap.get('series'));\n                }\n            }\n        },\n\n        /**\n         * Get option for output (cloned option and inner info removed)\n         * @public\n         * @return {Object}\n         */\n        getOption: function () {\n            var option = zrUtil.clone(this.option);\n\n            each(option, function (opts, mainType) {\n                if (ComponentModel.hasClass(mainType)) {\n                    var opts = modelUtil.normalizeToArray(opts);\n                    for (var i = opts.length - 1; i >= 0; i--) {\n                        // Remove options with inner id.\n                        if (modelUtil.isIdInner(opts[i])) {\n                            opts.splice(i, 1);\n                        }\n                    }\n                    option[mainType] = opts;\n                }\n            });\n\n            delete option[OPTION_INNER_KEY];\n\n            return option;\n        },\n\n        /**\n         * @return {module:echarts/model/Model}\n         */\n        getTheme: function () {\n            return this._theme;\n        },\n\n        /**\n         * @param {string} mainType\n         * @param {number} [idx=0]\n         * @return {module:echarts/model/Component}\n         */\n        getComponent: function (mainType, idx) {\n            var list = this._componentsMap.get(mainType);\n            if (list) {\n                return list[idx || 0];\n            }\n        },\n\n        /**\n         * If none of index and id and name used, return all components with mainType.\n         * @param {Object} condition\n         * @param {string} condition.mainType\n         * @param {string} [condition.subType] If ignore, only query by mainType\n         * @param {number|Array.<number>} [condition.index] Either input index or id or name.\n         * @param {string|Array.<string>} [condition.id] Either input index or id or name.\n         * @param {string|Array.<string>} [condition.name] Either input index or id or name.\n         * @return {Array.<module:echarts/model/Component>}\n         */\n        queryComponents: function (condition) {\n            var mainType = condition.mainType;\n            if (!mainType) {\n                return [];\n            }\n\n            var index = condition.index;\n            var id = condition.id;\n            var name = condition.name;\n\n            var cpts = this._componentsMap.get(mainType);\n\n            if (!cpts || !cpts.length) {\n                return [];\n            }\n\n            var result;\n\n            if (index != null) {\n                if (!isArray(index)) {\n                    index = [index];\n                }\n                result = filter(map(index, function (idx) {\n                    return cpts[idx];\n                }), function (val) {\n                    return !!val;\n                });\n            }\n            else if (id != null) {\n                var isIdArray = isArray(id);\n                result = filter(cpts, function (cpt) {\n                    return (isIdArray && indexOf(id, cpt.id) >= 0)\n                        || (!isIdArray && cpt.id === id);\n                });\n            }\n            else if (name != null) {\n                var isNameArray = isArray(name);\n                result = filter(cpts, function (cpt) {\n                    return (isNameArray && indexOf(name, cpt.name) >= 0)\n                        || (!isNameArray && cpt.name === name);\n                });\n            }\n            else {\n                // Return all components with mainType\n                result = cpts.slice();\n            }\n\n            return filterBySubType(result, condition);\n        },\n\n        /**\n         * The interface is different from queryComponents,\n         * which is convenient for inner usage.\n         *\n         * @usage\n         * var result = findComponents(\n         *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}}\n         * );\n         * var result = findComponents(\n         *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}}\n         * );\n         * var result = findComponents(\n         *     {mainType: 'series'},\n         *     function (model, index) {...}\n         * );\n         * // result like [component0, componnet1, ...]\n         *\n         * @param {Object} condition\n         * @param {string} condition.mainType Mandatory.\n         * @param {string} [condition.subType] Optional.\n         * @param {Object} [condition.query] like {xxxIndex, xxxId, xxxName},\n         *        where xxx is mainType.\n         *        If query attribute is null/undefined or has no index/id/name,\n         *        do not filtering by query conditions, which is convenient for\n         *        no-payload situations or when target of action is global.\n         * @param {Function} [condition.filter] parameter: component, return boolean.\n         * @return {Array.<module:echarts/model/Component>}\n         */\n        findComponents: function (condition) {\n            var query = condition.query;\n            var mainType = condition.mainType;\n\n            var queryCond = getQueryCond(query);\n            var result = queryCond\n                ? this.queryComponents(queryCond)\n                : this._componentsMap.get(mainType);\n\n            return doFilter(filterBySubType(result, condition));\n\n            function getQueryCond(q) {\n                var indexAttr = mainType + 'Index';\n                var idAttr = mainType + 'Id';\n                var nameAttr = mainType + 'Name';\n                return q && (\n                        q[indexAttr] != null\n                        || q[idAttr] != null\n                        || q[nameAttr] != null\n                    )\n                    ? {\n                        mainType: mainType,\n                        // subType will be filtered finally.\n                        index: q[indexAttr],\n                        id: q[idAttr],\n                        name: q[nameAttr]\n                    }\n                    : null;\n            }\n\n            function doFilter(res) {\n                return condition.filter\n                     ? filter(res, condition.filter)\n                     : res;\n            }\n        },\n\n        /**\n         * @usage\n         * eachComponent('legend', function (legendModel, index) {\n         *     ...\n         * });\n         * eachComponent(function (componentType, model, index) {\n         *     // componentType does not include subType\n         *     // (componentType is 'xxx' but not 'xxx.aa')\n         * });\n         * eachComponent(\n         *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}},\n         *     function (model, index) {...}\n         * );\n         * eachComponent(\n         *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}},\n         *     function (model, index) {...}\n         * );\n         *\n         * @param {string|Object=} mainType When mainType is object, the definition\n         *                                  is the same as the method 'findComponents'.\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachComponent: function (mainType, cb, context) {\n            var componentsMap = this._componentsMap;\n\n            if (typeof mainType === 'function') {\n                context = cb;\n                cb = mainType;\n                componentsMap.each(function (components, componentType) {\n                    each(components, function (component, index) {\n                        cb.call(context, componentType, component, index);\n                    });\n                });\n            }\n            else if (zrUtil.isString(mainType)) {\n                each(componentsMap.get(mainType), cb, context);\n            }\n            else if (isObject(mainType)) {\n                var queryResult = this.findComponents(mainType);\n                each(queryResult, cb, context);\n            }\n        },\n\n        /**\n         * @param {string} name\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeriesByName: function (name) {\n            var series = this._componentsMap.get('series');\n            return filter(series, function (oneSeries) {\n                return oneSeries.name === name;\n            });\n        },\n\n        /**\n         * @param {number} seriesIndex\n         * @return {module:echarts/model/Series}\n         */\n        getSeriesByIndex: function (seriesIndex) {\n            return this._componentsMap.get('series')[seriesIndex];\n        },\n\n        /**\n         * @param {string} subType\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeriesByType: function (subType) {\n            var series = this._componentsMap.get('series');\n            return filter(series, function (oneSeries) {\n                return oneSeries.subType === subType;\n            });\n        },\n\n        /**\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeries: function () {\n            return this._componentsMap.get('series').slice();\n        },\n\n        /**\n         * After filtering, series may be different\n         * frome raw series.\n         *\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachSeries: function (cb, context) {\n            assertSeriesInitialized(this);\n            each(this._seriesIndices, function (rawSeriesIndex) {\n                var series = this._componentsMap.get('series')[rawSeriesIndex];\n                cb.call(context, series, rawSeriesIndex);\n            }, this);\n        },\n\n        /**\n         * Iterate raw series before filtered.\n         *\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachRawSeries: function (cb, context) {\n            each(this._componentsMap.get('series'), cb, context);\n        },\n\n        /**\n         * After filtering, series may be different.\n         * frome raw series.\n         *\n         * @parma {string} subType\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachSeriesByType: function (subType, cb, context) {\n            assertSeriesInitialized(this);\n            each(this._seriesIndices, function (rawSeriesIndex) {\n                var series = this._componentsMap.get('series')[rawSeriesIndex];\n                if (series.subType === subType) {\n                    cb.call(context, series, rawSeriesIndex);\n                }\n            }, this);\n        },\n\n        /**\n         * Iterate raw series before filtered of given type.\n         *\n         * @parma {string} subType\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachRawSeriesByType: function (subType, cb, context) {\n            return each(this.getSeriesByType(subType), cb, context);\n        },\n\n        /**\n         * @param {module:echarts/model/Series} seriesModel\n         */\n        isSeriesFiltered: function (seriesModel) {\n            assertSeriesInitialized(this);\n            return zrUtil.indexOf(this._seriesIndices, seriesModel.componentIndex) < 0;\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getCurrentSeriesIndices: function () {\n            return (this._seriesIndices || []).slice();\n        },\n\n        /**\n         * @param {Function} cb\n         * @param {*} context\n         */\n        filterSeries: function (cb, context) {\n            assertSeriesInitialized(this);\n            var filteredSeries = filter(\n                this._componentsMap.get('series'), cb, context\n            );\n            this._seriesIndices = createSeriesIndices(filteredSeries);\n        },\n\n        restoreData: function () {\n            var componentsMap = this._componentsMap;\n\n            this._seriesIndices = createSeriesIndices(componentsMap.get('series'));\n\n            var componentTypes = [];\n            componentsMap.each(function (components, componentType) {\n                componentTypes.push(componentType);\n            });\n\n            ComponentModel.topologicalTravel(\n                componentTypes,\n                ComponentModel.getAllClassMainTypes(),\n                function (componentType, dependencies) {\n                    each(componentsMap.get(componentType), function (component) {\n                        component.restoreData();\n                    });\n                }\n            );\n        }\n\n    });\n\n    /**\n     * @inner\n     */\n    function mergeTheme(option, theme) {\n        zrUtil.each(theme, function (themeItem, name) {\n            // 如果有 component model 则把具体的 merge 逻辑交给该 model 处理\n            if (!ComponentModel.hasClass(name)) {\n                if (typeof themeItem === 'object') {\n                    option[name] = !option[name]\n                        ? zrUtil.clone(themeItem)\n                        : zrUtil.merge(option[name], themeItem, false);\n                }\n                else {\n                    if (option[name] == null) {\n                        option[name] = themeItem;\n                    }\n                }\n            }\n        });\n    }\n\n    function initBase(baseOption) {\n        baseOption = baseOption;\n\n        // Using OPTION_INNER_KEY to mark that this option can not be used outside,\n        // i.e. `chart.setOption(chart.getModel().option);` is forbiden.\n        this.option = {};\n        this.option[OPTION_INNER_KEY] = 1;\n\n        /**\n         * Init with series: [], in case of calling findSeries method\n         * before series initialized.\n         * @type {Object.<string, Array.<module:echarts/model/Model>>}\n         * @private\n         */\n        this._componentsMap = zrUtil.createHashMap({series: []});\n\n        /**\n         * Mapping between filtered series list and raw series list.\n         * key: filtered series indices, value: raw series indices.\n         * @type {Array.<nubmer>}\n         * @private\n         */\n        this._seriesIndices = null;\n\n        mergeTheme(baseOption, this._theme.option);\n\n        // TODO Needs clone when merging to the unexisted property\n        zrUtil.merge(baseOption, globalDefault, false);\n\n        this.mergeOption(baseOption);\n    }\n\n    /**\n     * @inner\n     * @param {Array.<string>|string} types model types\n     * @return {Object} key: {string} type, value: {Array.<Object>} models\n     */\n    function getComponentsByTypes(componentsMap, types) {\n        if (!zrUtil.isArray(types)) {\n            types = types ? [types] : [];\n        }\n\n        var ret = {};\n        each(types, function (type) {\n            ret[type] = (componentsMap.get(type) || []).slice();\n        });\n\n        return ret;\n    }\n\n    /**\n     * @inner\n     */\n    function determineSubType(mainType, newCptOption, existComponent) {\n        var subType = newCptOption.type\n            ? newCptOption.type\n            : existComponent\n            ? existComponent.subType\n            // Use determineSubType only when there is no existComponent.\n            : ComponentModel.determineSubType(mainType, newCptOption);\n\n        // tooltip, markline, markpoint may always has no subType\n        return subType;\n    }\n\n    /**\n     * @inner\n     */\n    function createSeriesIndices(seriesModels) {\n        return map(seriesModels, function (series) {\n            return series.componentIndex;\n        }) || [];\n    }\n\n    /**\n     * @inner\n     */\n    function filterBySubType(components, condition) {\n        // Using hasOwnProperty for restrict. Consider\n        // subType is undefined in user payload.\n        return condition.hasOwnProperty('subType')\n            ? filter(components, function (cpt) {\n                return cpt.subType === condition.subType;\n            })\n            : components;\n    }\n\n    /**\n     * @inner\n     */\n    function assertSeriesInitialized(ecModel) {\n        // Components that use _seriesIndices should depends on series component,\n        // which make sure that their initialization is after series.\n        if (__DEV__) {\n            if (!ecModel._seriesIndices) {\n                throw new Error('Option should contains series.');\n            }\n        }\n    }\n\n    zrUtil.mixin(GlobalModel, require('./mixin/colorPalette'));\n\n    module.exports = GlobalModel;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/Global.js\n// module id = 623\n// module chunks = 0 1 2","/**\n * ECharts option manager\n *\n * @module {echarts/model/OptionManager}\n */\n\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../util/model');\n    var ComponentModel = require('./Component');\n    var each = zrUtil.each;\n    var clone = zrUtil.clone;\n    var map = zrUtil.map;\n    var merge = zrUtil.merge;\n\n    var QUERY_REG = /^(min|max)?(.+)$/;\n\n    /**\n     * TERM EXPLANATIONS:\n     *\n     * [option]:\n     *\n     *     An object that contains definitions of components. For example:\n     *     var option = {\n     *         title: {...},\n     *         legend: {...},\n     *         visualMap: {...},\n     *         series: [\n     *             {data: [...]},\n     *             {data: [...]},\n     *             ...\n     *         ]\n     *     };\n     *\n     * [rawOption]:\n     *\n     *     An object input to echarts.setOption. 'rawOption' may be an\n     *     'option', or may be an object contains multi-options. For example:\n     *     var option = {\n     *         baseOption: {\n     *             title: {...},\n     *             legend: {...},\n     *             series: [\n     *                 {data: [...]},\n     *                 {data: [...]},\n     *                 ...\n     *             ]\n     *         },\n     *         timeline: {...},\n     *         options: [\n     *             {title: {...}, series: {data: [...]}},\n     *             {title: {...}, series: {data: [...]}},\n     *             ...\n     *         ],\n     *         media: [\n     *             {\n     *                 query: {maxWidth: 320},\n     *                 option: {series: {x: 20}, visualMap: {show: false}}\n     *             },\n     *             {\n     *                 query: {minWidth: 320, maxWidth: 720},\n     *                 option: {series: {x: 500}, visualMap: {show: true}}\n     *             },\n     *             {\n     *                 option: {series: {x: 1200}, visualMap: {show: true}}\n     *             }\n     *         ]\n     *     };\n     *\n     * @alias module:echarts/model/OptionManager\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    function OptionManager(api) {\n\n        /**\n         * @private\n         * @type {module:echarts/ExtensionAPI}\n         */\n        this._api = api;\n\n        /**\n         * @private\n         * @type {Array.<number>}\n         */\n        this._timelineOptions = [];\n\n        /**\n         * @private\n         * @type {Array.<Object>}\n         */\n        this._mediaList = [];\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._mediaDefault;\n\n        /**\n         * -1, means default.\n         * empty means no media.\n         * @private\n         * @type {Array.<number>}\n         */\n        this._currentMediaIndices = [];\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._optionBackup;\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._newBaseOption;\n    }\n\n    // timeline.notMerge is not supported in ec3. Firstly there is rearly\n    // case that notMerge is needed. Secondly supporting 'notMerge' requires\n    // rawOption cloned and backuped when timeline changed, which does no\n    // good to performance. What's more, that both timeline and setOption\n    // method supply 'notMerge' brings complex and some problems.\n    // Consider this case:\n    // (step1) chart.setOption({timeline: {notMerge: false}, ...}, false);\n    // (step2) chart.setOption({timeline: {notMerge: true}, ...}, false);\n\n    OptionManager.prototype = {\n\n        constructor: OptionManager,\n\n        /**\n         * @public\n         * @param {Object} rawOption Raw option.\n         * @param {module:echarts/model/Global} ecModel\n         * @param {Array.<Function>} optionPreprocessorFuncs\n         * @return {Object} Init option\n         */\n        setOption: function (rawOption, optionPreprocessorFuncs) {\n            rawOption = clone(rawOption, true);\n\n            // FIXME\n            // 如果 timeline options 或者 media 中设置了某个属性，而baseOption中没有设置，则进行警告。\n\n            var oldOptionBackup = this._optionBackup;\n            var newParsedOption = parseRawOption.call(\n                this, rawOption, optionPreprocessorFuncs, !oldOptionBackup\n            );\n            this._newBaseOption = newParsedOption.baseOption;\n\n            // For setOption at second time (using merge mode);\n            if (oldOptionBackup) {\n                // Only baseOption can be merged.\n                mergeOption(oldOptionBackup.baseOption, newParsedOption.baseOption);\n\n                // For simplicity, timeline options and media options do not support merge,\n                // that is, if you `setOption` twice and both has timeline options, the latter\n                // timeline opitons will not be merged to the formers, but just substitude them.\n                if (newParsedOption.timelineOptions.length) {\n                    oldOptionBackup.timelineOptions = newParsedOption.timelineOptions;\n                }\n                if (newParsedOption.mediaList.length) {\n                    oldOptionBackup.mediaList = newParsedOption.mediaList;\n                }\n                if (newParsedOption.mediaDefault) {\n                    oldOptionBackup.mediaDefault = newParsedOption.mediaDefault;\n                }\n            }\n            else {\n                this._optionBackup = newParsedOption;\n            }\n        },\n\n        /**\n         * @param {boolean} isRecreate\n         * @return {Object}\n         */\n        mountOption: function (isRecreate) {\n            var optionBackup = this._optionBackup;\n\n            // TODO\n            // 如果没有reset功能则不clone。\n\n            this._timelineOptions = map(optionBackup.timelineOptions, clone);\n            this._mediaList = map(optionBackup.mediaList, clone);\n            this._mediaDefault = clone(optionBackup.mediaDefault);\n            this._currentMediaIndices = [];\n\n            return clone(isRecreate\n                // this._optionBackup.baseOption, which is created at the first `setOption`\n                // called, and is merged into every new option by inner method `mergeOption`\n                // each time `setOption` called, can be only used in `isRecreate`, because\n                // its reliability is under suspicion. In other cases option merge is\n                // performed by `model.mergeOption`.\n                ? optionBackup.baseOption : this._newBaseOption\n            );\n        },\n\n        /**\n         * @param {module:echarts/model/Global} ecModel\n         * @return {Object}\n         */\n        getTimelineOption: function (ecModel) {\n            var option;\n            var timelineOptions = this._timelineOptions;\n\n            if (timelineOptions.length) {\n                // getTimelineOption can only be called after ecModel inited,\n                // so we can get currentIndex from timelineModel.\n                var timelineModel = ecModel.getComponent('timeline');\n                if (timelineModel) {\n                    option = clone(\n                        timelineOptions[timelineModel.getCurrentIndex()],\n                        true\n                    );\n                }\n            }\n\n            return option;\n        },\n\n        /**\n         * @param {module:echarts/model/Global} ecModel\n         * @return {Array.<Object>}\n         */\n        getMediaOption: function (ecModel) {\n            var ecWidth = this._api.getWidth();\n            var ecHeight = this._api.getHeight();\n            var mediaList = this._mediaList;\n            var mediaDefault = this._mediaDefault;\n            var indices = [];\n            var result = [];\n\n            // No media defined.\n            if (!mediaList.length && !mediaDefault) {\n                return result;\n            }\n\n            // Multi media may be applied, the latter defined media has higher priority.\n            for (var i = 0, len = mediaList.length; i < len; i++) {\n                if (applyMediaQuery(mediaList[i].query, ecWidth, ecHeight)) {\n                    indices.push(i);\n                }\n            }\n\n            // FIXME\n            // 是否mediaDefault应该强制用户设置，否则可能修改不能回归。\n            if (!indices.length && mediaDefault) {\n                indices = [-1];\n            }\n\n            if (indices.length && !indicesEquals(indices, this._currentMediaIndices)) {\n                result = map(indices, function (index) {\n                    return clone(\n                        index === -1 ? mediaDefault.option : mediaList[index].option\n                    );\n                });\n            }\n            // Otherwise return nothing.\n\n            this._currentMediaIndices = indices;\n\n            return result;\n        }\n    };\n\n    function parseRawOption(rawOption, optionPreprocessorFuncs, isNew) {\n        var timelineOptions = [];\n        var mediaList = [];\n        var mediaDefault;\n        var baseOption;\n\n        // Compatible with ec2.\n        var timelineOpt = rawOption.timeline;\n\n        if (rawOption.baseOption) {\n            baseOption = rawOption.baseOption;\n        }\n\n        // For timeline\n        if (timelineOpt || rawOption.options) {\n            baseOption = baseOption || {};\n            timelineOptions = (rawOption.options || []).slice();\n        }\n\n        // For media query\n        if (rawOption.media) {\n            baseOption = baseOption || {};\n            var media = rawOption.media;\n            each(media, function (singleMedia) {\n                if (singleMedia && singleMedia.option) {\n                    if (singleMedia.query) {\n                        mediaList.push(singleMedia);\n                    }\n                    else if (!mediaDefault) {\n                        // Use the first media default.\n                        mediaDefault = singleMedia;\n                    }\n                }\n            });\n        }\n\n        // For normal option\n        if (!baseOption) {\n            baseOption = rawOption;\n        }\n\n        // Set timelineOpt to baseOption in ec3,\n        // which is convenient for merge option.\n        if (!baseOption.timeline) {\n            baseOption.timeline = timelineOpt;\n        }\n\n        // Preprocess.\n        each([baseOption].concat(timelineOptions)\n            .concat(zrUtil.map(mediaList, function (media) {\n                return media.option;\n            })),\n            function (option) {\n                each(optionPreprocessorFuncs, function (preProcess) {\n                    preProcess(option, isNew);\n                });\n            }\n        );\n\n        return {\n            baseOption: baseOption,\n            timelineOptions: timelineOptions,\n            mediaDefault: mediaDefault,\n            mediaList: mediaList\n        };\n    }\n\n    /**\n     * @see <http://www.w3.org/TR/css3-mediaqueries/#media1>\n     * Support: width, height, aspectRatio\n     * Can use max or min as prefix.\n     */\n    function applyMediaQuery(query, ecWidth, ecHeight) {\n        var realMap = {\n            width: ecWidth,\n            height: ecHeight,\n            aspectratio: ecWidth / ecHeight // lowser case for convenientce.\n        };\n\n        var applicatable = true;\n\n        zrUtil.each(query, function (value, attr) {\n            var matched = attr.match(QUERY_REG);\n\n            if (!matched || !matched[1] || !matched[2]) {\n                return;\n            }\n\n            var operator = matched[1];\n            var realAttr = matched[2].toLowerCase();\n\n            if (!compare(realMap[realAttr], value, operator)) {\n                applicatable = false;\n            }\n        });\n\n        return applicatable;\n    }\n\n    function compare(real, expect, operator) {\n        if (operator === 'min') {\n            return real >= expect;\n        }\n        else if (operator === 'max') {\n            return real <= expect;\n        }\n        else { // Equals\n            return real === expect;\n        }\n    }\n\n    function indicesEquals(indices1, indices2) {\n        // indices is always order by asc and has only finite number.\n        return indices1.join(',') === indices2.join(',');\n    }\n\n    /**\n     * Consider case:\n     * `chart.setOption(opt1);`\n     * Then user do some interaction like dataZoom, dataView changing.\n     * `chart.setOption(opt2);`\n     * Then user press 'reset button' in toolbox.\n     *\n     * After doing that all of the interaction effects should be reset, the\n     * chart should be the same as the result of invoke\n     * `chart.setOption(opt1); chart.setOption(opt2);`.\n     *\n     * Although it is not able ensure that\n     * `chart.setOption(opt1); chart.setOption(opt2);` is equivalents to\n     * `chart.setOption(merge(opt1, opt2));` exactly,\n     * this might be the only simple way to implement that feature.\n     *\n     * MEMO: We've considered some other approaches:\n     * 1. Each model handle its self restoration but not uniform treatment.\n     *     (Too complex in logic and error-prone)\n     * 2. Use a shadow ecModel. (Performace expensive)\n     */\n    function mergeOption(oldOption, newOption) {\n        newOption = newOption || {};\n\n        each(newOption, function (newCptOpt, mainType) {\n            if (newCptOpt == null) {\n                return;\n            }\n\n            var oldCptOpt = oldOption[mainType];\n\n            if (!ComponentModel.hasClass(mainType)) {\n                oldOption[mainType] = merge(oldCptOpt, newCptOpt, true);\n            }\n            else {\n                newCptOpt = modelUtil.normalizeToArray(newCptOpt);\n                oldCptOpt = modelUtil.normalizeToArray(oldCptOpt);\n\n                var mapResult = modelUtil.mappingToExists(oldCptOpt, newCptOpt);\n\n                oldOption[mainType] = map(mapResult, function (item) {\n                    return (item.option && item.exist)\n                        ? merge(item.exist, item.option, true)\n                        : (item.exist || item.option);\n                });\n            }\n        });\n    }\n\n    module.exports = OptionManager;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/OptionManager.js\n// module id = 624\n// module chunks = 0 1 2","\n    var platform = '';\n    // Navigator not exists in node\n    if (typeof navigator !== 'undefined') {\n        platform = navigator.platform || '';\n    }\n    module.exports = {\n        // 全图默认背景\n        // backgroundColor: 'rgba(0,0,0,0)',\n\n        // https://dribbble.com/shots/1065960-Infographic-Pie-chart-visualization\n        // color: ['#5793f3', '#d14a61', '#fd9c35', '#675bba', '#fec42c', '#dd4444', '#d4df5a', '#cd4870'],\n        // 浅色\n        // color: ['#bcd3bb', '#e88f70', '#edc1a5', '#9dc5c8', '#e1e8c8', '#7b7c68', '#e5b5b5', '#f0b489', '#928ea8', '#bda29a'],\n        // color: ['#cc5664', '#9bd6ec', '#ea946e', '#8acaaa', '#f1ec64', '#ee8686', '#a48dc1', '#5da6bc', '#b9dcae'],\n        // 深色\n        color: ['#c23531','#2f4554', '#61a0a8', '#d48265', '#91c7ae','#749f83',  '#ca8622', '#bda29a','#6e7074', '#546570', '#c4ccd3'],\n\n        // 默认需要 Grid 配置项\n        // grid: {},\n        // 主题，主题\n        textStyle: {\n            // color: '#000',\n            // decoration: 'none',\n            // PENDING\n            fontFamily: platform.match(/^Win/) ? 'Microsoft YaHei' : 'sans-serif',\n            // fontFamily: 'Arial, Verdana, sans-serif',\n            fontSize: 12,\n            fontStyle: 'normal',\n            fontWeight: 'normal'\n        },\n\n        // http://blogs.adobe.com/webplatform/2014/02/24/using-blend-modes-in-html-canvas/\n        // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n        // Default is source-over\n        blendMode: null,\n\n        animation: 'auto',\n        animationDuration: 1000,\n        animationDurationUpdate: 300,\n        animationEasing: 'exponentialOut',\n        animationEasingUpdate: 'cubicOut',\n\n        animationThreshold: 2000,\n        // Configuration for progressive/incremental rendering\n        progressiveThreshold: 3000,\n        progressive: 400,\n\n        // Threshold of if use single hover layer to optimize.\n        // It is recommended that `hoverLayerThreshold` is equivalent to or less than\n        // `progressiveThreshold`, otherwise hover will cause restart of progressive,\n        // which is unexpected.\n        // see example <echarts/test/heatmap-large.html>.\n        hoverLayerThreshold: 3000,\n\n        // See: module:echarts/scale/Time\n        useUTC: false\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/globalDefault.js\n// module id = 625\n// module chunks = 0 1 2","\n    module.exports = {\n        getAreaStyle: require('./makeStyleMapper')(\n            [\n                ['fill', 'color'],\n                ['shadowBlur'],\n                ['shadowOffsetX'],\n                ['shadowOffsetY'],\n                ['opacity'],\n                ['shadowColor']\n            ]\n        )\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/areaStyle.js\n// module id = 626\n// module chunks = 0 1 2","\n\n    module.exports = {\n        getBoxLayoutParams: function () {\n            return {\n                left: this.get('left'),\n                top: this.get('top'),\n                right: this.get('right'),\n                bottom: this.get('bottom'),\n                width: this.get('width'),\n                height: this.get('height')\n            };\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/boxLayout.js\n// module id = 627\n// module chunks = 0 1 2","\n    var getItemStyle = require('./makeStyleMapper')(\n        [\n            ['fill', 'color'],\n            ['stroke', 'borderColor'],\n            ['lineWidth', 'borderWidth'],\n            ['opacity'],\n            ['shadowBlur'],\n            ['shadowOffsetX'],\n            ['shadowOffsetY'],\n            ['shadowColor'],\n            ['textPosition'],\n            ['textAlign']\n        ]\n    );\n    module.exports = {\n        getItemStyle: function (excludes, includes) {\n            var style = getItemStyle.call(this, excludes, includes);\n            var lineDash = this.getBorderLineDash();\n            lineDash && (style.lineDash = lineDash);\n            return style;\n        },\n\n        getBorderLineDash: function () {\n            var lineType = this.get('borderType');\n            return (lineType === 'solid' || lineType == null) ? null\n                : (lineType === 'dashed' ? [5, 5] : [1, 1]);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/itemStyle.js\n// module id = 628\n// module chunks = 0 1 2","\n    var getLineStyle = require('./makeStyleMapper')(\n        [\n            ['lineWidth', 'width'],\n            ['stroke', 'color'],\n            ['opacity'],\n            ['shadowBlur'],\n            ['shadowOffsetX'],\n            ['shadowOffsetY'],\n            ['shadowColor']\n        ]\n    );\n    module.exports = {\n        getLineStyle: function (excludes) {\n            var style = getLineStyle.call(this, excludes);\n            var lineDash = this.getLineDash(style.lineWidth);\n            lineDash && (style.lineDash = lineDash);\n            return style;\n        },\n\n        getLineDash: function (lineWidth) {\n            if (lineWidth == null) {\n                lineWidth = 1;\n            }\n            var lineType = this.get('type');\n            var dotSize = Math.max(lineWidth, 2);\n            var dashSize = lineWidth * 4;\n            return (lineType === 'solid' || lineType == null) ? null\n                : (lineType === 'dashed' ? [dashSize, dashSize] : [dotSize, dotSize]);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/lineStyle.js\n// module id = 629\n// module chunks = 0 1 2","\n\n    var textContain = require('zrender/lib/contain/text');\n    var graphicUtil = require('../../util/graphic');\n\n    module.exports = {\n        /**\n         * Get color property or get color from option.textStyle.color\n         * @return {string}\n         */\n        getTextColor: function () {\n            var ecModel = this.ecModel;\n            return this.getShallow('color')\n                || (ecModel && ecModel.get('textStyle.color'));\n        },\n\n        /**\n         * Create font string from fontStyle, fontWeight, fontSize, fontFamily\n         * @return {string}\n         */\n        getFont: function () {\n            return graphicUtil.getFont({\n                fontStyle: this.getShallow('fontStyle'),\n                fontWeight: this.getShallow('fontWeight'),\n                fontSize: this.getShallow('fontSize'),\n                fontFamily: this.getShallow('fontFamily')\n            }, this.ecModel);\n        },\n\n        getTextRect: function (text) {\n            return textContain.getBoundingRect(\n                text,\n                this.getFont(),\n                this.getShallow('align'),\n                this.getShallow('baseline')\n            );\n        },\n\n        truncateText: function (text, containerWidth, ellipsis, options) {\n            return textContain.truncateText(\n                text, containerWidth, this.getFont(), ellipsis, options\n            );\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/textStyle.js\n// module id = 630\n// module chunks = 0 1 2","// Compatitable with 2.0\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var compatStyle = require('./helper/compatStyle');\n\n    function get(opt, path) {\n        path = path.split(',');\n        var obj = opt;\n        for (var i = 0; i < path.length; i++) {\n            obj = obj && obj[path[i]];\n            if (obj == null) {\n                break;\n            }\n        }\n        return obj;\n    }\n\n    function set(opt, path, val, overwrite) {\n        path = path.split(',');\n        var obj = opt;\n        var key;\n        for (var i = 0; i < path.length - 1; i++) {\n            key = path[i];\n            if (obj[key] == null) {\n                obj[key] = {};\n            }\n            obj = obj[key];\n        }\n        if (overwrite || obj[path[i]] == null) {\n            obj[path[i]] = val;\n        }\n    }\n\n    function compatLayoutProperties(option) {\n        each(LAYOUT_PROPERTIES, function (prop) {\n            if (prop[0] in option && !(prop[1] in option)) {\n                option[prop[1]] = option[prop[0]];\n            }\n        });\n    }\n\n    var LAYOUT_PROPERTIES = [\n        ['x', 'left'], ['y', 'top'], ['x2', 'right'], ['y2', 'bottom']\n    ];\n\n    var COMPATITABLE_COMPONENTS = [\n        'grid', 'geo', 'parallel', 'legend', 'toolbox', 'title', 'visualMap', 'dataZoom', 'timeline'\n    ];\n\n    var COMPATITABLE_SERIES = [\n        'bar', 'boxplot', 'candlestick', 'chord', 'effectScatter',\n        'funnel', 'gauge', 'lines', 'graph', 'heatmap', 'line', 'map', 'parallel',\n        'pie', 'radar', 'sankey', 'scatter', 'treemap'\n    ];\n\n    var each = zrUtil.each;\n\n    module.exports = function (option) {\n        each(option.series, function (seriesOpt) {\n            if (!zrUtil.isObject(seriesOpt)) {\n                return;\n            }\n\n            var seriesType = seriesOpt.type;\n\n            compatStyle(seriesOpt);\n\n            if (seriesType === 'pie' || seriesType === 'gauge') {\n                if (seriesOpt.clockWise != null) {\n                    seriesOpt.clockwise = seriesOpt.clockWise;\n                }\n            }\n            if (seriesType === 'gauge') {\n                var pointerColor = get(seriesOpt, 'pointer.color');\n                pointerColor != null\n                    && set(seriesOpt, 'itemStyle.normal.color', pointerColor);\n            }\n\n            for (var i = 0; i < COMPATITABLE_SERIES.length; i++) {\n                if (COMPATITABLE_SERIES[i] === seriesOpt.type) {\n                    compatLayoutProperties(seriesOpt);\n                    break;\n                }\n            }\n        });\n\n        // dataRange has changed to visualMap\n        if (option.dataRange) {\n            option.visualMap = option.dataRange;\n        }\n\n        each(COMPATITABLE_COMPONENTS, function (componentName) {\n            var options = option[componentName];\n            if (options) {\n                if (!zrUtil.isArray(options)) {\n                    options = [options];\n                }\n                each(options, function (option) {\n                    compatLayoutProperties(option);\n                });\n            }\n        });\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/preprocessor/backwardCompat.js\n// module id = 631\n// module chunks = 0 1 2","\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var POSSIBLE_STYLES = [\n        'areaStyle', 'lineStyle', 'nodeStyle', 'linkStyle',\n        'chordStyle', 'label', 'labelLine'\n    ];\n\n    function compatItemStyle(opt) {\n        var itemStyleOpt = opt && opt.itemStyle;\n        if (itemStyleOpt) {\n            zrUtil.each(POSSIBLE_STYLES, function (styleName) {\n                var normalItemStyleOpt = itemStyleOpt.normal;\n                var emphasisItemStyleOpt = itemStyleOpt.emphasis;\n                if (normalItemStyleOpt && normalItemStyleOpt[styleName]) {\n                    opt[styleName] = opt[styleName] || {};\n                    if (!opt[styleName].normal) {\n                        opt[styleName].normal = normalItemStyleOpt[styleName];\n                    }\n                    else {\n                        zrUtil.merge(opt[styleName].normal, normalItemStyleOpt[styleName]);\n                    }\n                    normalItemStyleOpt[styleName] = null;\n                }\n                if (emphasisItemStyleOpt && emphasisItemStyleOpt[styleName]) {\n                    opt[styleName] = opt[styleName] || {};\n                    if (!opt[styleName].emphasis) {\n                        opt[styleName].emphasis = emphasisItemStyleOpt[styleName];\n                    }\n                    else {\n                        zrUtil.merge(opt[styleName].emphasis, emphasisItemStyleOpt[styleName]);\n                    }\n                    emphasisItemStyleOpt[styleName] = null;\n                }\n            });\n        }\n    }\n\n    module.exports = function (seriesOpt) {\n        if (!seriesOpt) {\n            return;\n        }\n        compatItemStyle(seriesOpt);\n        compatItemStyle(seriesOpt.markPoint);\n        compatItemStyle(seriesOpt.markLine);\n        var data = seriesOpt.data;\n        if (data) {\n            for (var i = 0; i < data.length; i++) {\n                compatItemStyle(data[i]);\n            }\n            // mark point data\n            var markPoint = seriesOpt.markPoint;\n            if (markPoint && markPoint.data) {\n                var mpData = markPoint.data;\n                for (var i = 0; i < mpData.length; i++) {\n                    compatItemStyle(mpData[i]);\n                }\n            }\n            // mark line data\n            var markLine = seriesOpt.markLine;\n            if (markLine && markLine.data) {\n                var mlData = markLine.data;\n                for (var i = 0; i < mlData.length; i++) {\n                    if (zrUtil.isArray(mlData[i])) {\n                        compatItemStyle(mlData[i][0]);\n                        compatItemStyle(mlData[i][1]);\n                    }\n                    else {\n                        compatItemStyle(mlData[i]);\n                    }\n                }\n            }\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/preprocessor/helper/compatStyle.js\n// module id = 632\n// module chunks = 0 1 2","\n    var samplers = {\n        average: function (frame) {\n            var sum = 0;\n            var count = 0;\n            for (var i = 0; i < frame.length; i++) {\n                if (!isNaN(frame[i])) {\n                    sum += frame[i];\n                    count++;\n                }\n            }\n            // Return NaN if count is 0\n            return count === 0 ? NaN : sum / count;\n        },\n        sum: function (frame) {\n            var sum = 0;\n            for (var i = 0; i < frame.length; i++) {\n                // Ignore NaN\n                sum += frame[i] || 0;\n            }\n            return sum;\n        },\n        max: function (frame) {\n            var max = -Infinity;\n            for (var i = 0; i < frame.length; i++) {\n                frame[i] > max && (max = frame[i]);\n            }\n            return max;\n        },\n        min: function (frame) {\n            var min = Infinity;\n            for (var i = 0; i < frame.length; i++) {\n                frame[i] < min && (min = frame[i]);\n            }\n            return min;\n        },\n        // TODO\n        // Median\n        nearest: function (frame) {\n            return frame[0];\n        }\n    };\n\n    var indexSampler = function (frame, value) {\n        return Math.round(frame.length / 2);\n    };\n    module.exports = function (seriesType, ecModel, api) {\n        ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n            var data = seriesModel.getData();\n            var sampling = seriesModel.get('sampling');\n            var coordSys = seriesModel.coordinateSystem;\n            // Only cartesian2d support down sampling\n            if (coordSys.type === 'cartesian2d' && sampling) {\n                var baseAxis = coordSys.getBaseAxis();\n                var valueAxis = coordSys.getOtherAxis(baseAxis);\n                var extent = baseAxis.getExtent();\n                // Coordinste system has been resized\n                var size = extent[1] - extent[0];\n                var rate = Math.round(data.count() / size);\n                if (rate > 1) {\n                    var sampler;\n                    if (typeof sampling === 'string') {\n                        sampler = samplers[sampling];\n                    }\n                    else if (typeof sampling === 'function') {\n                        sampler = sampling;\n                    }\n                    if (sampler) {\n                        data = data.downSample(\n                            valueAxis.dim, 1 / rate, sampler, indexSampler\n                        );\n                        seriesModel.setData(data);\n                    }\n                }\n            }\n        }, this);\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/processor/dataSample.js\n// module id = 633\n// module chunks = 0 1 2","/**\n * Log scale\n * @module echarts/scale/Log\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Scale = require('./Scale');\n    var numberUtil = require('../util/number');\n\n    // Use some method of IntervalScale\n    var IntervalScale = require('./Interval');\n\n    var scaleProto = Scale.prototype;\n    var intervalScaleProto = IntervalScale.prototype;\n\n    var getPrecisionSafe = numberUtil.getPrecisionSafe;\n    var roundingErrorFix = numberUtil.round;\n\n    var mathFloor = Math.floor;\n    var mathCeil = Math.ceil;\n    var mathPow = Math.pow;\n\n    var mathLog = Math.log;\n\n    var LogScale = Scale.extend({\n\n        type: 'log',\n\n        base: 10,\n\n        $constructor: function () {\n            Scale.apply(this, arguments);\n            this._originalScale = new IntervalScale();\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getTicks: function () {\n            var originalScale = this._originalScale;\n            var extent = this._extent;\n            var originalExtent = originalScale.getExtent();\n\n            return zrUtil.map(intervalScaleProto.getTicks.call(this), function (val) {\n                var powVal = numberUtil.round(mathPow(this.base, val));\n\n                // Fix #4158\n                powVal = (val === extent[0] && originalScale.__fixMin)\n                    ? fixRoundingError(powVal, originalExtent[0])\n                    : powVal;\n                powVal = (val === extent[1] && originalScale.__fixMax)\n                    ? fixRoundingError(powVal, originalExtent[1])\n                    : powVal;\n\n                return powVal;\n            }, this);\n        },\n\n        /**\n         * @param {number} val\n         * @return {string}\n         */\n        getLabel: intervalScaleProto.getLabel,\n\n        /**\n         * @param  {number} val\n         * @return {number}\n         */\n        scale: function (val) {\n            val = scaleProto.scale.call(this, val);\n            return mathPow(this.base, val);\n        },\n\n        /**\n         * @param {number} start\n         * @param {number} end\n         */\n        setExtent: function (start, end) {\n            var base = this.base;\n            start = mathLog(start) / mathLog(base);\n            end = mathLog(end) / mathLog(base);\n            intervalScaleProto.setExtent.call(this, start, end);\n        },\n\n        /**\n         * @return {number} end\n         */\n        getExtent: function () {\n            var base = this.base;\n            var extent = scaleProto.getExtent.call(this);\n            extent[0] = mathPow(base, extent[0]);\n            extent[1] = mathPow(base, extent[1]);\n\n            // Fix #4158\n            var originalScale = this._originalScale;\n            var originalExtent = originalScale.getExtent();\n            originalScale.__fixMin && (extent[0] = fixRoundingError(extent[0], originalExtent[0]));\n            originalScale.__fixMax && (extent[1] = fixRoundingError(extent[1], originalExtent[1]));\n\n            return extent;\n        },\n\n        /**\n         * @param  {Array.<number>} extent\n         */\n        unionExtent: function (extent) {\n            this._originalScale.unionExtent(extent);\n\n            var base = this.base;\n            extent[0] = mathLog(extent[0]) / mathLog(base);\n            extent[1] = mathLog(extent[1]) / mathLog(base);\n            scaleProto.unionExtent.call(this, extent);\n        },\n\n        /**\n         * @override\n         */\n        unionExtentFromData: function (data, dim) {\n            this.unionExtent(data.getDataExtent(dim, true, function (val) {\n                return val > 0;\n            }));\n        },\n\n        /**\n         * Update interval and extent of intervals for nice ticks\n         * @param  {number} [approxTickNum = 10] Given approx tick number\n         */\n        niceTicks: function (approxTickNum) {\n            approxTickNum = approxTickNum || 10;\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            if (span === Infinity || span <= 0) {\n                return;\n            }\n\n            var interval = numberUtil.quantity(span);\n            var err = approxTickNum / span * interval;\n\n            // Filter ticks to get closer to the desired count.\n            if (err <= 0.5) {\n                interval *= 10;\n            }\n\n            // Interval should be integer\n            while (!isNaN(interval) && Math.abs(interval) < 1 && Math.abs(interval) > 0) {\n                interval *= 10;\n            }\n\n            var niceExtent = [\n                numberUtil.round(mathCeil(extent[0] / interval) * interval),\n                numberUtil.round(mathFloor(extent[1] / interval) * interval)\n            ];\n\n            this._interval = interval;\n            this._niceExtent = niceExtent;\n        },\n\n        /**\n         * Nice extent.\n         * @override\n         */\n        niceExtent: function (opt) {\n            intervalScaleProto.niceExtent.call(this, opt);\n\n            var originalScale = this._originalScale;\n            originalScale.__fixMin = opt.fixMin;\n            originalScale.__fixMax = opt.fixMax;\n        }\n\n    });\n\n    zrUtil.each(['contain', 'normalize'], function (methodName) {\n        LogScale.prototype[methodName] = function (val) {\n            val = mathLog(val) / mathLog(this.base);\n            return scaleProto[methodName].call(this, val);\n        };\n    });\n\n    LogScale.create = function () {\n        return new LogScale();\n    };\n\n    function fixRoundingError(val, originalVal) {\n        return roundingErrorFix(val, getPrecisionSafe(originalVal));\n    }\n\n    module.exports = LogScale;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/scale/Log.js\n// module id = 634\n// module chunks = 0 1 2","/**\n * Linear continuous scale\n * @module echarts/coord/scale/Ordinal\n *\n * http://en.wikipedia.org/wiki/Level_of_measurement\n */\n\n// FIXME only one data\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Scale = require('./Scale');\n\n    var scaleProto = Scale.prototype;\n\n    var OrdinalScale = Scale.extend({\n\n        type: 'ordinal',\n\n        init: function (data, extent) {\n            this._data = data;\n            this._extent = extent || [0, data.length - 1];\n        },\n\n        parse: function (val) {\n            return typeof val === 'string'\n                ? zrUtil.indexOf(this._data, val)\n                // val might be float.\n                : Math.round(val);\n        },\n\n        contain: function (rank) {\n            rank = this.parse(rank);\n            return scaleProto.contain.call(this, rank)\n                && this._data[rank] != null;\n        },\n\n        /**\n         * Normalize given rank or name to linear [0, 1]\n         * @param {number|string} [val]\n         * @return {number}\n         */\n        normalize: function (val) {\n            return scaleProto.normalize.call(this, this.parse(val));\n        },\n\n        scale: function (val) {\n            return Math.round(scaleProto.scale.call(this, val));\n        },\n\n        /**\n         * @return {Array}\n         */\n        getTicks: function () {\n            var ticks = [];\n            var extent = this._extent;\n            var rank = extent[0];\n\n            while (rank <= extent[1]) {\n                ticks.push(rank);\n                rank++;\n            }\n\n            return ticks;\n        },\n\n        /**\n         * Get item on rank n\n         * @param {number} n\n         * @return {string}\n         */\n        getLabel: function (n) {\n            return this._data[n];\n        },\n\n        /**\n         * @return {number}\n         */\n        count: function () {\n            return this._extent[1] - this._extent[0] + 1;\n        },\n\n        /**\n         * @override\n         */\n        unionExtentFromData: function (data, dim) {\n            this.unionExtent(data.getDataExtent(dim, false));\n        },\n\n        niceTicks: zrUtil.noop,\n        niceExtent: zrUtil.noop\n    });\n\n    /**\n     * @return {module:echarts/scale/Time}\n     */\n    OrdinalScale.create = function () {\n        return new OrdinalScale();\n    };\n\n    module.exports = OrdinalScale;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/scale/Ordinal.js\n// module id = 635\n// module chunks = 0 1 2","/**\n * Interval scale\n * @module echarts/coord/scale/Time\n */\n\n\n\n    // [About UTC and local time zone]:\n    // In most cases, `number.parseDate` will treat input data string as local time\n    // (except time zone is specified in time string). And `format.formateTime` returns\n    // local time by default. option.useUTC is false by default. This design have\n    // concidered these common case:\n    // (1) Time that is persistent in server is in UTC, but it is needed to be diplayed\n    // in local time by default.\n    // (2) By default, the input data string (e.g., '2011-01-02') should be displayed\n    // as its original time, without any time difference.\n\n    var zrUtil = require('zrender/lib/core/util');\n    var numberUtil = require('../util/number');\n    var formatUtil = require('../util/format');\n    var scaleHelper = require('./helper');\n\n    var IntervalScale = require('./Interval');\n\n    var intervalScaleProto = IntervalScale.prototype;\n\n    var mathCeil = Math.ceil;\n    var mathFloor = Math.floor;\n    var ONE_SECOND = 1000;\n    var ONE_MINUTE = ONE_SECOND * 60;\n    var ONE_HOUR = ONE_MINUTE * 60;\n    var ONE_DAY = ONE_HOUR * 24;\n\n    // FIXME 公用？\n    var bisect = function (a, x, lo, hi) {\n        while (lo < hi) {\n            var mid = lo + hi >>> 1;\n            if (a[mid][2] < x) {\n                lo = mid + 1;\n            }\n            else {\n                hi  = mid;\n            }\n        }\n        return lo;\n    };\n\n    /**\n     * @alias module:echarts/coord/scale/Time\n     * @constructor\n     */\n    var TimeScale = IntervalScale.extend({\n        type: 'time',\n\n        /**\n         * @override\n         */\n        getLabel: function (val) {\n            var stepLvl = this._stepLvl;\n\n            var date = new Date(val);\n\n            return formatUtil.formatTime(stepLvl[0], date, this.getSetting('useUTC'));\n        },\n\n        /**\n         * @override\n         */\n        niceExtent: function (opt) {\n            var extent = this._extent;\n            // If extent start and end are same, expand them\n            if (extent[0] === extent[1]) {\n                // Expand extent\n                extent[0] -= ONE_DAY;\n                extent[1] += ONE_DAY;\n            }\n            // If there are no data and extent are [Infinity, -Infinity]\n            if (extent[1] === -Infinity && extent[0] === Infinity) {\n                var d = new Date();\n                extent[1] = new Date(d.getFullYear(), d.getMonth(), d.getDate());\n                extent[0] = extent[1] - ONE_DAY;\n            }\n\n            this.niceTicks(opt.splitNumber);\n\n            // var extent = this._extent;\n            var interval = this._interval;\n\n            if (!opt.fixMin) {\n                extent[0] = numberUtil.round(mathFloor(extent[0] / interval) * interval);\n            }\n            if (!opt.fixMax) {\n                extent[1] = numberUtil.round(mathCeil(extent[1] / interval) * interval);\n            }\n        },\n\n        /**\n         * @override\n         */\n        niceTicks: function (approxTickNum) {\n            var timezoneOffset = this.getSetting('useUTC')\n                ? 0 : numberUtil.getTimezoneOffset() * 60 * 1000;\n            approxTickNum = approxTickNum || 10;\n\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            var approxInterval = span / approxTickNum;\n            var scaleLevelsLen = scaleLevels.length;\n            var idx = bisect(scaleLevels, approxInterval, 0, scaleLevelsLen);\n\n            var level = scaleLevels[Math.min(idx, scaleLevelsLen - 1)];\n            var interval = level[2];\n            // Same with interval scale if span is much larger than 1 year\n            if (level[0] === 'year') {\n                var yearSpan = span / interval;\n\n                // From \"Nice Numbers for Graph Labels\" of Graphic Gems\n                // var niceYearSpan = numberUtil.nice(yearSpan, false);\n                var yearStep = numberUtil.nice(yearSpan / approxTickNum, true);\n\n                interval *= yearStep;\n            }\n\n            var niceExtent = [\n                Math.round(mathCeil((extent[0] - timezoneOffset) / interval) * interval + timezoneOffset),\n                Math.round(mathFloor((extent[1] - timezoneOffset)/ interval) * interval + timezoneOffset)\n            ];\n\n            scaleHelper.fixExtent(niceExtent, extent);\n\n            this._stepLvl = level;\n            // Interval will be used in getTicks\n            this._interval = interval;\n            this._niceExtent = niceExtent;\n        },\n\n        parse: function (val) {\n            // val might be float.\n            return +numberUtil.parseDate(val);\n        }\n    });\n\n    zrUtil.each(['contain', 'normalize'], function (methodName) {\n        TimeScale.prototype[methodName] = function (val) {\n            return intervalScaleProto[methodName].call(this, this.parse(val));\n        };\n    });\n\n    // Steps from d3\n    var scaleLevels = [\n        // Format       step    interval\n        ['hh:mm:ss',    1,      ONE_SECOND],           // 1s\n        ['hh:mm:ss',    5,      ONE_SECOND * 5],       // 5s\n        ['hh:mm:ss',    10,     ONE_SECOND * 10],      // 10s\n        ['hh:mm:ss',    15,     ONE_SECOND * 15],      // 15s\n        ['hh:mm:ss',    30,     ONE_SECOND * 30],      // 30s\n        ['hh:mm\\nMM-dd',1,      ONE_MINUTE],          // 1m\n        ['hh:mm\\nMM-dd',5,      ONE_MINUTE * 5],      // 5m\n        ['hh:mm\\nMM-dd',10,     ONE_MINUTE * 10],     // 10m\n        ['hh:mm\\nMM-dd',15,     ONE_MINUTE * 15],     // 15m\n        ['hh:mm\\nMM-dd',30,     ONE_MINUTE * 30],     // 30m\n        ['hh:mm\\nMM-dd',1,      ONE_HOUR],        // 1h\n        ['hh:mm\\nMM-dd',2,      ONE_HOUR * 2],    // 2h\n        ['hh:mm\\nMM-dd',6,      ONE_HOUR * 6],    // 6h\n        ['hh:mm\\nMM-dd',12,     ONE_HOUR * 12],   // 12h\n        ['MM-dd\\nyyyy', 1,      ONE_DAY],   // 1d\n        ['week',        7,      ONE_DAY * 7],        // 7d\n        ['month',       1,      ONE_DAY * 31],       // 1M\n        ['quarter',     3,      ONE_DAY * 380 / 4],  // 3M\n        ['half-year',   6,      ONE_DAY * 380 / 2],  // 6M\n        ['year',        1,      ONE_DAY * 380]       // 1Y\n    ];\n\n    /**\n     * @param {module:echarts/model/Model}\n     * @return {module:echarts/scale/Time}\n     */\n    TimeScale.create = function (model) {\n        return new TimeScale({useUTC: model.ecModel.get('useUTC')});\n    };\n\n    module.exports = TimeScale;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/scale/Time.js\n// module id = 636\n// module chunks = 0 1 2","\n    var Gradient = require('zrender/lib/graphic/Gradient');\n    module.exports = function (ecModel) {\n        function encodeColor(seriesModel) {\n            var colorAccessPath = (seriesModel.visualColorAccessPath || 'itemStyle.normal.color').split('.');\n            var data = seriesModel.getData();\n            var color = seriesModel.get(colorAccessPath) // Set in itemStyle\n                || seriesModel.getColorFromPalette(seriesModel.get('name'));  // Default color\n\n            // FIXME Set color function or use the platte color\n            data.setVisual('color', color);\n\n            // Only visible series has each data be visual encoded\n            if (!ecModel.isSeriesFiltered(seriesModel)) {\n                if (typeof color === 'function' && !(color instanceof Gradient)) {\n                    data.each(function (idx) {\n                        data.setItemVisual(\n                            idx, 'color', color(seriesModel.getDataParams(idx))\n                        );\n                    });\n                }\n\n                // itemStyle in each data item\n                data.each(function (idx) {\n                    var itemModel = data.getItemModel(idx);\n                    var color = itemModel.get(colorAccessPath, true);\n                    if (color != null) {\n                        data.setItemVisual(idx, 'color', color);\n                    }\n                });\n            }\n        }\n        ecModel.eachRawSeries(encodeColor);\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/visual/seriesColor.js\n// module id = 637\n// module chunks = 0 1 2","\n\n    module.exports = function (seriesType, defaultSymbolType, legendSymbol, ecModel, api) {\n\n        // Encoding visual for all series include which is filtered for legend drawing\n        ecModel.eachRawSeriesByType(seriesType, function (seriesModel) {\n            var data = seriesModel.getData();\n\n            var symbolType = seriesModel.get('symbol') || defaultSymbolType;\n            var symbolSize = seriesModel.get('symbolSize');\n\n            data.setVisual({\n                legendSymbol: legendSymbol || symbolType,\n                symbol: symbolType,\n                symbolSize: symbolSize\n            });\n\n            // Only visible series has each data be visual encoded\n            if (!ecModel.isSeriesFiltered(seriesModel)) {\n                if (typeof symbolSize === 'function') {\n                    data.each(function (idx) {\n                        var rawValue = seriesModel.getRawValue(idx);\n                        // FIXME\n                        var params = seriesModel.getDataParams(idx);\n                        data.setItemVisual(idx, 'symbolSize', symbolSize(rawValue, params));\n                    });\n                }\n                data.each(function (idx) {\n                    var itemModel = data.getItemModel(idx);\n                    var itemSymbolType = itemModel.getShallow('symbol', true);\n                    var itemSymbolSize = itemModel.getShallow('symbolSize', true);\n                    // If has item symbol\n                    if (itemSymbolType != null) {\n                        data.setItemVisual(idx, 'symbol', itemSymbolType);\n                    }\n                    if (itemSymbolSize != null) {\n                        // PENDING Transform symbolSize ?\n                        data.setItemVisual(idx, 'symbolSize', itemSymbolSize);\n                    }\n                });\n            }\n        });\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/visual/symbol.js\n// module id = 638\n// module chunks = 0 1 2","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../css-loader/index.js?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../vue-loader/lib/style-compiler/index.js?{\\\"id\\\":\\\"data-v-325aced1\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../vue-loader/lib/selector.js?type=styles&index=0!./ECharts.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../vue-style-loader/lib/addStylesClient.js\")(\"53007b78\", content, true);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/extract-text-webpack-plugin/loader.js?{\"omit\":1,\"remove\":true}!./~/vue-style-loader!./~/css-loader?{\"minimize\":true,\"sourceMap\":true}!./~/vue-loader/lib/style-compiler?{\"id\":\"data-v-325aced1\",\"scoped\":false,\"hasInlineConfig\":false}!./~/vue-loader/lib/selector.js?type=styles&index=0!./~/vue-echarts/components/ECharts.vue\n// module id = 639\n// module chunks = 0 1 2","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        result = wait - timeSinceLastCall;\n\n    return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = debounce;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash.debounce/index.js\n// module id = 641\n// module chunks = 0 1 2","'use strict';\n\nvar utils = require('./utils');\n\nvar has = Object.prototype.hasOwnProperty;\n\nvar defaults = {\n    allowDots: false,\n    allowPrototypes: false,\n    arrayLimit: 20,\n    decoder: utils.decode,\n    delimiter: '&',\n    depth: 5,\n    parameterLimit: 1000,\n    plainObjects: false,\n    strictNullHandling: false\n};\n\nvar parseValues = function parseQueryStringValues(str, options) {\n    var obj = {};\n    var parts = str.split(options.delimiter, options.parameterLimit === Infinity ? undefined : options.parameterLimit);\n\n    for (var i = 0; i < parts.length; ++i) {\n        var part = parts[i];\n        var pos = part.indexOf(']=') === -1 ? part.indexOf('=') : part.indexOf(']=') + 1;\n\n        var key, val;\n        if (pos === -1) {\n            key = options.decoder(part);\n            val = options.strictNullHandling ? null : '';\n        } else {\n            key = options.decoder(part.slice(0, pos));\n            val = options.decoder(part.slice(pos + 1));\n        }\n        if (has.call(obj, key)) {\n            obj[key] = [].concat(obj[key]).concat(val);\n        } else {\n            obj[key] = val;\n        }\n    }\n\n    return obj;\n};\n\nvar parseObject = function parseObjectRecursive(chain, val, options) {\n    if (!chain.length) {\n        return val;\n    }\n\n    var root = chain.shift();\n\n    var obj;\n    if (root === '[]') {\n        obj = [];\n        obj = obj.concat(parseObject(chain, val, options));\n    } else {\n        obj = options.plainObjects ? Object.create(null) : {};\n        var cleanRoot = root.charAt(0) === '[' && root.charAt(root.length - 1) === ']' ? root.slice(1, -1) : root;\n        var index = parseInt(cleanRoot, 10);\n        if (\n            !isNaN(index) &&\n            root !== cleanRoot &&\n            String(index) === cleanRoot &&\n            index >= 0 &&\n            (options.parseArrays && index <= options.arrayLimit)\n        ) {\n            obj = [];\n            obj[index] = parseObject(chain, val, options);\n        } else {\n            obj[cleanRoot] = parseObject(chain, val, options);\n        }\n    }\n\n    return obj;\n};\n\nvar parseKeys = function parseQueryStringKeys(givenKey, val, options) {\n    if (!givenKey) {\n        return;\n    }\n\n    // Transform dot notation to bracket notation\n    var key = options.allowDots ? givenKey.replace(/\\.([^.[]+)/g, '[$1]') : givenKey;\n\n    // The regex chunks\n\n    var brackets = /(\\[[^[\\]]*])/;\n    var child = /(\\[[^[\\]]*])/g;\n\n    // Get the parent\n\n    var segment = brackets.exec(key);\n    var parent = segment ? key.slice(0, segment.index) : key;\n\n    // Stash the parent if it exists\n\n    var keys = [];\n    if (parent) {\n        // If we aren't using plain objects, optionally prefix keys\n        // that would overwrite object prototype properties\n        if (!options.plainObjects && has.call(Object.prototype, parent)) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n\n        keys.push(parent);\n    }\n\n    // Loop through children appending to the array until we hit depth\n\n    var i = 0;\n    while ((segment = child.exec(key)) !== null && i < options.depth) {\n        i += 1;\n        if (!options.plainObjects && has.call(Object.prototype, segment[1].slice(1, -1))) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n        keys.push(segment[1]);\n    }\n\n    // If there's a remainder, just add whatever is left\n\n    if (segment) {\n        keys.push('[' + key.slice(segment.index) + ']');\n    }\n\n    return parseObject(keys, val, options);\n};\n\nmodule.exports = function (str, opts) {\n    var options = opts || {};\n\n    if (options.decoder !== null && options.decoder !== undefined && typeof options.decoder !== 'function') {\n        throw new TypeError('Decoder has to be a function.');\n    }\n\n    options.delimiter = typeof options.delimiter === 'string' || utils.isRegExp(options.delimiter) ? options.delimiter : defaults.delimiter;\n    options.depth = typeof options.depth === 'number' ? options.depth : defaults.depth;\n    options.arrayLimit = typeof options.arrayLimit === 'number' ? options.arrayLimit : defaults.arrayLimit;\n    options.parseArrays = options.parseArrays !== false;\n    options.decoder = typeof options.decoder === 'function' ? options.decoder : defaults.decoder;\n    options.allowDots = typeof options.allowDots === 'boolean' ? options.allowDots : defaults.allowDots;\n    options.plainObjects = typeof options.plainObjects === 'boolean' ? options.plainObjects : defaults.plainObjects;\n    options.allowPrototypes = typeof options.allowPrototypes === 'boolean' ? options.allowPrototypes : defaults.allowPrototypes;\n    options.parameterLimit = typeof options.parameterLimit === 'number' ? options.parameterLimit : defaults.parameterLimit;\n    options.strictNullHandling = typeof options.strictNullHandling === 'boolean' ? options.strictNullHandling : defaults.strictNullHandling;\n\n    if (str === '' || str === null || typeof str === 'undefined') {\n        return options.plainObjects ? Object.create(null) : {};\n    }\n\n    var tempObj = typeof str === 'string' ? parseValues(str, options) : str;\n    var obj = options.plainObjects ? Object.create(null) : {};\n\n    // Iterate over the keys and setup the new object\n\n    var keys = Object.keys(tempObj);\n    for (var i = 0; i < keys.length; ++i) {\n        var key = keys[i];\n        var newObj = parseKeys(key, tempObj[key], options);\n        obj = utils.merge(obj, newObj, options);\n    }\n\n    return utils.compact(obj);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/qs/lib/parse.js\n// module id = 642\n// module chunks = 1 3 5","'use strict';\n\nvar utils = require('./utils');\nvar formats = require('./formats');\n\nvar arrayPrefixGenerators = {\n    brackets: function brackets(prefix) { // eslint-disable-line func-name-matching\n        return prefix + '[]';\n    },\n    indices: function indices(prefix, key) { // eslint-disable-line func-name-matching\n        return prefix + '[' + key + ']';\n    },\n    repeat: function repeat(prefix) { // eslint-disable-line func-name-matching\n        return prefix;\n    }\n};\n\nvar toISO = Date.prototype.toISOString;\n\nvar defaults = {\n    delimiter: '&',\n    encode: true,\n    encoder: utils.encode,\n    encodeValuesOnly: false,\n    serializeDate: function serializeDate(date) { // eslint-disable-line func-name-matching\n        return toISO.call(date);\n    },\n    skipNulls: false,\n    strictNullHandling: false\n};\n\nvar stringify = function stringify( // eslint-disable-line func-name-matching\n    object,\n    prefix,\n    generateArrayPrefix,\n    strictNullHandling,\n    skipNulls,\n    encoder,\n    filter,\n    sort,\n    allowDots,\n    serializeDate,\n    formatter,\n    encodeValuesOnly\n) {\n    var obj = object;\n    if (typeof filter === 'function') {\n        obj = filter(prefix, obj);\n    } else if (obj instanceof Date) {\n        obj = serializeDate(obj);\n    } else if (obj === null) {\n        if (strictNullHandling) {\n            return encoder && !encodeValuesOnly ? encoder(prefix) : prefix;\n        }\n\n        obj = '';\n    }\n\n    if (typeof obj === 'string' || typeof obj === 'number' || typeof obj === 'boolean' || utils.isBuffer(obj)) {\n        if (encoder) {\n            var keyValue = encodeValuesOnly ? prefix : encoder(prefix);\n            return [formatter(keyValue) + '=' + formatter(encoder(obj))];\n        }\n        return [formatter(prefix) + '=' + formatter(String(obj))];\n    }\n\n    var values = [];\n\n    if (typeof obj === 'undefined') {\n        return values;\n    }\n\n    var objKeys;\n    if (Array.isArray(filter)) {\n        objKeys = filter;\n    } else {\n        var keys = Object.keys(obj);\n        objKeys = sort ? keys.sort(sort) : keys;\n    }\n\n    for (var i = 0; i < objKeys.length; ++i) {\n        var key = objKeys[i];\n\n        if (skipNulls && obj[key] === null) {\n            continue;\n        }\n\n        if (Array.isArray(obj)) {\n            values = values.concat(stringify(\n                obj[key],\n                generateArrayPrefix(prefix, key),\n                generateArrayPrefix,\n                strictNullHandling,\n                skipNulls,\n                encoder,\n                filter,\n                sort,\n                allowDots,\n                serializeDate,\n                formatter,\n                encodeValuesOnly\n            ));\n        } else {\n            values = values.concat(stringify(\n                obj[key],\n                prefix + (allowDots ? '.' + key : '[' + key + ']'),\n                generateArrayPrefix,\n                strictNullHandling,\n                skipNulls,\n                encoder,\n                filter,\n                sort,\n                allowDots,\n                serializeDate,\n                formatter,\n                encodeValuesOnly\n            ));\n        }\n    }\n\n    return values;\n};\n\nmodule.exports = function (object, opts) {\n    var obj = object;\n    var options = opts || {};\n\n    if (options.encoder !== null && options.encoder !== undefined && typeof options.encoder !== 'function') {\n        throw new TypeError('Encoder has to be a function.');\n    }\n\n    var delimiter = typeof options.delimiter === 'undefined' ? defaults.delimiter : options.delimiter;\n    var strictNullHandling = typeof options.strictNullHandling === 'boolean' ? options.strictNullHandling : defaults.strictNullHandling;\n    var skipNulls = typeof options.skipNulls === 'boolean' ? options.skipNulls : defaults.skipNulls;\n    var encode = typeof options.encode === 'boolean' ? options.encode : defaults.encode;\n    var encoder = typeof options.encoder === 'function' ? options.encoder : defaults.encoder;\n    var sort = typeof options.sort === 'function' ? options.sort : null;\n    var allowDots = typeof options.allowDots === 'undefined' ? false : options.allowDots;\n    var serializeDate = typeof options.serializeDate === 'function' ? options.serializeDate : defaults.serializeDate;\n    var encodeValuesOnly = typeof options.encodeValuesOnly === 'boolean' ? options.encodeValuesOnly : defaults.encodeValuesOnly;\n    if (typeof options.format === 'undefined') {\n        options.format = formats.default;\n    } else if (!Object.prototype.hasOwnProperty.call(formats.formatters, options.format)) {\n        throw new TypeError('Unknown format option provided.');\n    }\n    var formatter = formats.formatters[options.format];\n    var objKeys;\n    var filter;\n\n    if (typeof options.filter === 'function') {\n        filter = options.filter;\n        obj = filter('', obj);\n    } else if (Array.isArray(options.filter)) {\n        filter = options.filter;\n        objKeys = filter;\n    }\n\n    var keys = [];\n\n    if (typeof obj !== 'object' || obj === null) {\n        return '';\n    }\n\n    var arrayFormat;\n    if (options.arrayFormat in arrayPrefixGenerators) {\n        arrayFormat = options.arrayFormat;\n    } else if ('indices' in options) {\n        arrayFormat = options.indices ? 'indices' : 'repeat';\n    } else {\n        arrayFormat = 'indices';\n    }\n\n    var generateArrayPrefix = arrayPrefixGenerators[arrayFormat];\n\n    if (!objKeys) {\n        objKeys = Object.keys(obj);\n    }\n\n    if (sort) {\n        objKeys.sort(sort);\n    }\n\n    for (var i = 0; i < objKeys.length; ++i) {\n        var key = objKeys[i];\n\n        if (skipNulls && obj[key] === null) {\n            continue;\n        }\n\n        keys = keys.concat(stringify(\n            obj[key],\n            key,\n            generateArrayPrefix,\n            strictNullHandling,\n            skipNulls,\n            encode ? encoder : null,\n            filter,\n            sort,\n            allowDots,\n            serializeDate,\n            formatter,\n            encodeValuesOnly\n        ));\n    }\n\n    return keys.join(delimiter);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/qs/lib/stringify.js\n// module id = 643\n// module chunks = 1 3 5","\n/* styles */\nrequire(\"!!../../extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../vue-loader/lib/style-compiler/index?{\\\"id\\\":\\\"data-v-325aced1\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../vue-loader/lib/selector?type=styles&index=0!./ECharts.vue\")\n\nvar Component = require(\"!../../vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../vue-loader/lib/selector?type=script&index=0!./ECharts.vue\"),\n  /* template */\n  require(\"!!../../vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-325aced1\\\"}!../../vue-loader/lib/selector?type=template&index=0!./ECharts.vue\"),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-echarts/components/ECharts.vue\n// module id = 644\n// module chunks = 0 1 2","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"echarts\"\n  })\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler?{\"id\":\"data-v-325aced1\"}!./~/vue-loader/lib/selector.js?type=template&index=0!./~/vue-echarts/components/ECharts.vue\n// module id = 646\n// module chunks = 0 1 2","'use strict';\n/**\n * Handler\n * @module zrender/Handler\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (shenyi.914@gmail.com)\n */\n\n\n    var util = require('./core/util');\n    var Draggable = require('./mixin/Draggable');\n\n    var Eventful = require('./mixin/Eventful');\n\n    var SILENT = 'silent';\n\n    function makeEventPacket(eveType, targetInfo, event) {\n        return {\n            type: eveType,\n            event: event,\n            // target can only be an element that is not silent.\n            target: targetInfo.target,\n            // topTarget can be a silent element.\n            topTarget: targetInfo.topTarget,\n            cancelBubble: false,\n            offsetX: event.zrX,\n            offsetY: event.zrY,\n            gestureEvent: event.gestureEvent,\n            pinchX: event.pinchX,\n            pinchY: event.pinchY,\n            pinchScale: event.pinchScale,\n            wheelDelta: event.zrDelta,\n            zrByTouch: event.zrByTouch\n        };\n    }\n\n    function EmptyProxy () {}\n    EmptyProxy.prototype.dispose = function () {};\n\n    var handlerNames = [\n        'click', 'dblclick', 'mousewheel', 'mouseout',\n        'mouseup', 'mousedown', 'mousemove', 'contextmenu'\n    ];\n    /**\n     * @alias module:zrender/Handler\n     * @constructor\n     * @extends module:zrender/mixin/Eventful\n     * @param {module:zrender/Storage} storage Storage instance.\n     * @param {module:zrender/Painter} painter Painter instance.\n     * @param {module:zrender/dom/HandlerProxy} proxy HandlerProxy instance.\n     * @param {HTMLElement} painterRoot painter.root (not painter.getViewportRoot()).\n     */\n    var Handler = function(storage, painter, proxy, painterRoot) {\n        Eventful.call(this);\n\n        this.storage = storage;\n\n        this.painter = painter;\n\n        this.painterRoot = painterRoot;\n\n        proxy = proxy || new EmptyProxy();\n\n        /**\n         * Proxy of event. can be Dom, WebGLSurface, etc.\n         */\n        this.proxy = proxy;\n\n        // Attach handler\n        proxy.handler = this;\n\n        /**\n         * {target, topTarget}\n         * @private\n         * @type {Object}\n         */\n        this._hovered = {};\n\n        /**\n         * @private\n         * @type {Date}\n         */\n        this._lastTouchMoment;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._lastX;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._lastY;\n\n\n        Draggable.call(this);\n\n        util.each(handlerNames, function (name) {\n            proxy.on && proxy.on(name, this[name], this);\n        }, this);\n    };\n\n    Handler.prototype = {\n\n        constructor: Handler,\n\n        mousemove: function (event) {\n            var x = event.zrX;\n            var y = event.zrY;\n\n            var lastHovered = this._hovered;\n            var hovered = this._hovered = this.findHover(x, y);\n            var hoveredTarget = hovered.target;\n            var lastHoveredTarget = lastHovered.target;\n\n            var proxy = this.proxy;\n            proxy.setCursor && proxy.setCursor(hoveredTarget ? hoveredTarget.cursor : 'default');\n\n            // Mouse out on previous hovered element\n            if (lastHoveredTarget && hoveredTarget !== lastHoveredTarget && lastHoveredTarget.__zr) {\n                this.dispatchToElement(lastHovered, 'mouseout', event);\n            }\n\n            // Mouse moving on one element\n            this.dispatchToElement(hovered, 'mousemove', event);\n\n            // Mouse over on a new element\n            if (hoveredTarget && hoveredTarget !== lastHoveredTarget) {\n                this.dispatchToElement(hovered, 'mouseover', event);\n            }\n        },\n\n        mouseout: function (event) {\n            this.dispatchToElement(this._hovered, 'mouseout', event);\n\n            // There might be some doms created by upper layer application\n            // at the same level of painter.getViewportRoot() (e.g., tooltip\n            // dom created by echarts), where 'globalout' event should not\n            // be triggered when mouse enters these doms. (But 'mouseout'\n            // should be triggered at the original hovered element as usual).\n            var element = event.toElement || event.relatedTarget;\n            var innerDom;\n            do {\n                element = element && element.parentNode;\n            }\n            while (element && element.nodeType != 9 && !(\n                innerDom = element === this.painterRoot\n            ));\n\n            !innerDom && this.trigger('globalout', {event: event});\n        },\n\n        /**\n         * Resize\n         */\n        resize: function (event) {\n            this._hovered = {};\n        },\n\n        /**\n         * Dispatch event\n         * @param {string} eventName\n         * @param {event=} eventArgs\n         */\n        dispatch: function (eventName, eventArgs) {\n            var handler = this[eventName];\n            handler && handler.call(this, eventArgs);\n        },\n\n        /**\n         * Dispose\n         */\n        dispose: function () {\n\n            this.proxy.dispose();\n\n            this.storage =\n            this.proxy =\n            this.painter = null;\n        },\n\n        /**\n         * 设置默认的cursor style\n         * @param {string} [cursorStyle='default'] 例如 crosshair\n         */\n        setCursorStyle: function (cursorStyle) {\n            var proxy = this.proxy;\n            proxy.setCursor && proxy.setCursor(cursorStyle);\n        },\n\n        /**\n         * 事件分发代理\n         *\n         * @private\n         * @param {Object} targetInfo {target, topTarget} 目标图形元素\n         * @param {string} eventName 事件名称\n         * @param {Object} event 事件对象\n         */\n        dispatchToElement: function (targetInfo, eventName, event) {\n            targetInfo = targetInfo || {};\n            var eventHandler = 'on' + eventName;\n            var eventPacket = makeEventPacket(eventName, targetInfo, event);\n\n            var el = targetInfo.target;\n            while (el) {\n                el[eventHandler]\n                    && (eventPacket.cancelBubble = el[eventHandler].call(el, eventPacket));\n\n                el.trigger(eventName, eventPacket);\n\n                el = el.parent;\n\n                if (eventPacket.cancelBubble) {\n                    break;\n                }\n            }\n\n            if (!eventPacket.cancelBubble) {\n                // 冒泡到顶级 zrender 对象\n                this.trigger(eventName, eventPacket);\n                // 分发事件到用户自定义层\n                // 用户有可能在全局 click 事件中 dispose，所以需要判断下 painter 是否存在\n                this.painter && this.painter.eachOtherLayer(function (layer) {\n                    if (typeof(layer[eventHandler]) == 'function') {\n                        layer[eventHandler].call(layer, eventPacket);\n                    }\n                    if (layer.trigger) {\n                        layer.trigger(eventName, eventPacket);\n                    }\n                });\n            }\n        },\n\n        /**\n         * @private\n         * @param {number} x\n         * @param {number} y\n         * @param {module:zrender/graphic/Displayable} exclude\n         * @return {model:zrender/Element}\n         * @method\n         */\n        findHover: function(x, y, exclude) {\n            var list = this.storage.getDisplayList();\n            var out = {};\n\n            for (var i = list.length - 1; i >= 0 ; i--) {\n                var hoverCheckResult;\n                if (list[i] !== exclude\n                    // getDisplayList may include ignored item in VML mode\n                    && !list[i].ignore\n                    && (hoverCheckResult = isHover(list[i], x, y))\n                ) {\n                    !out.topTarget && (out.topTarget = list[i]);\n                    if (hoverCheckResult !== SILENT) {\n                        out.target = list[i];\n                        break;\n                    }\n                }\n            }\n\n            return out;\n        }\n    };\n\n    // Common handlers\n    util.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n        Handler.prototype[name] = function (event) {\n            // Find hover again to avoid click event is dispatched manually. Or click is triggered without mouseover\n            var hovered = this.findHover(event.zrX, event.zrY);\n            var hoveredTarget = hovered.target;\n\n            if (name === 'mousedown') {\n                this._downel = hoveredTarget;\n                // In case click triggered before mouseup\n                this._upel = hoveredTarget;\n            }\n            else if (name === 'mosueup') {\n                this._upel = hoveredTarget;\n            }\n            else if (name === 'click') {\n                if (this._downel !== this._upel) {\n                    return;\n                }\n            }\n\n            this.dispatchToElement(hovered, name, event);\n        };\n    });\n\n    function isHover(displayable, x, y) {\n        if (displayable[displayable.rectHover ? 'rectContain' : 'contain'](x, y)) {\n            var el = displayable;\n            var isSilent;\n            while (el) {\n                // If clipped by ancestor.\n                // FIXME: If clipPath has neither stroke nor fill,\n                // el.clipPath.contain(x, y) will always return false.\n                if (el.clipPath && !el.clipPath.contain(x, y))  {\n                    return false;\n                }\n                if (el.silent) {\n                    isSilent = true;\n                }\n                el = el.parent;\n            }\n            return isSilent ? SILENT : true;\n        }\n\n        return false;\n    }\n\n    util.mixin(Handler, Eventful);\n    util.mixin(Handler, Draggable);\n\n    module.exports = Handler;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/Handler.js\n// module id = 648\n// module chunks = 0 1 2","/**\n * @module zrender/Layer\n * @author pissang(https://www.github.com/pissang)\n */\n\n\n    var util = require('./core/util');\n    var config = require('./config');\n    var Style = require('./graphic/Style');\n    var Pattern = require('./graphic/Pattern');\n\n    function returnFalse() {\n        return false;\n    }\n\n    /**\n     * 创建dom\n     *\n     * @inner\n     * @param {string} id dom id 待用\n     * @param {string} type dom type，such as canvas, div etc.\n     * @param {Painter} painter painter instance\n     * @param {number} number\n     */\n    function createDom(id, type, painter, dpr) {\n        var newDom = document.createElement(type);\n        var width = painter.getWidth();\n        var height = painter.getHeight();\n\n        var newDomStyle = newDom.style;\n        // 没append呢，请原谅我这样写，清晰~\n        newDomStyle.position = 'absolute';\n        newDomStyle.left = 0;\n        newDomStyle.top = 0;\n        newDomStyle.width = width + 'px';\n        newDomStyle.height = height + 'px';\n        newDom.width = width * dpr;\n        newDom.height = height * dpr;\n\n        // id不作为索引用，避免可能造成的重名，定义为私有属性\n        newDom.setAttribute('data-zr-dom-id', id);\n        return newDom;\n    }\n\n    /**\n     * @alias module:zrender/Layer\n     * @constructor\n     * @extends module:zrender/mixin/Transformable\n     * @param {string} id\n     * @param {module:zrender/Painter} painter\n     * @param {number} [dpr]\n     */\n    var Layer = function(id, painter, dpr) {\n        var dom;\n        dpr = dpr || config.devicePixelRatio;\n        if (typeof id === 'string') {\n            dom = createDom(id, 'canvas', painter, dpr);\n        }\n        // Not using isDom because in node it will return false\n        else if (util.isObject(id)) {\n            dom = id;\n            id = dom.id;\n        }\n        this.id = id;\n        this.dom = dom;\n\n        var domStyle = dom.style;\n        if (domStyle) { // Not in node\n            dom.onselectstart = returnFalse; // 避免页面选中的尴尬\n            domStyle['-webkit-user-select'] = 'none';\n            domStyle['user-select'] = 'none';\n            domStyle['-webkit-touch-callout'] = 'none';\n            domStyle['-webkit-tap-highlight-color'] = 'rgba(0,0,0,0)';\n            domStyle['padding'] = 0;\n            domStyle['margin'] = 0;\n            domStyle['border-width'] = 0;\n        }\n\n        this.domBack = null;\n        this.ctxBack = null;\n\n        this.painter = painter;\n\n        this.config = null;\n\n        // Configs\n        /**\n         * 每次清空画布的颜色\n         * @type {string}\n         * @default 0\n         */\n        this.clearColor = 0;\n        /**\n         * 是否开启动态模糊\n         * @type {boolean}\n         * @default false\n         */\n        this.motionBlur = false;\n        /**\n         * 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n         * @type {number}\n         * @default 0.7\n         */\n        this.lastFrameAlpha = 0.7;\n\n        /**\n         * Layer dpr\n         * @type {number}\n         */\n        this.dpr = dpr;\n    };\n\n    Layer.prototype = {\n\n        constructor: Layer,\n\n        elCount: 0,\n\n        __dirty: true,\n\n        initContext: function () {\n            this.ctx = this.dom.getContext('2d');\n\n            this.ctx.dpr = this.dpr;\n        },\n\n        createBackBuffer: function () {\n            var dpr = this.dpr;\n\n            this.domBack = createDom('back-' + this.id, 'canvas', this.painter, dpr);\n            this.ctxBack = this.domBack.getContext('2d');\n\n            if (dpr != 1) {\n                this.ctxBack.scale(dpr, dpr);\n            }\n        },\n\n        /**\n         * @param  {number} width\n         * @param  {number} height\n         */\n        resize: function (width, height) {\n            var dpr = this.dpr;\n\n            var dom = this.dom;\n            var domStyle = dom.style;\n            var domBack = this.domBack;\n\n            domStyle.width = width + 'px';\n            domStyle.height = height + 'px';\n\n            dom.width = width * dpr;\n            dom.height = height * dpr;\n\n            if (domBack) {\n                domBack.width = width * dpr;\n                domBack.height = height * dpr;\n\n                if (dpr != 1) {\n                    this.ctxBack.scale(dpr, dpr);\n                }\n            }\n        },\n\n        /**\n         * 清空该层画布\n         * @param {boolean} clearAll Clear all with out motion blur\n         */\n        clear: function (clearAll) {\n            var dom = this.dom;\n            var ctx = this.ctx;\n            var width = dom.width;\n            var height = dom.height;\n\n            var clearColor = this.clearColor;\n            var haveMotionBLur = this.motionBlur && !clearAll;\n            var lastFrameAlpha = this.lastFrameAlpha;\n\n            var dpr = this.dpr;\n\n            if (haveMotionBLur) {\n                if (!this.domBack) {\n                    this.createBackBuffer();\n                }\n\n                this.ctxBack.globalCompositeOperation = 'copy';\n                this.ctxBack.drawImage(\n                    dom, 0, 0,\n                    width / dpr,\n                    height / dpr\n                );\n            }\n\n            ctx.clearRect(0, 0, width, height);\n            if (clearColor) {\n                var clearColorGradientOrPattern;\n                // Gradient\n                if (clearColor.colorStops) {\n                    // Cache canvas gradient\n                    clearColorGradientOrPattern = clearColor.__canvasGradient || Style.getGradient(ctx, clearColor, {\n                        x: 0,\n                        y: 0,\n                        width: width,\n                        height: height\n                    });\n\n                    clearColor.__canvasGradient = clearColorGradientOrPattern;\n                }\n                // Pattern\n                else if (clearColor.image) {\n                    clearColorGradientOrPattern = Pattern.prototype.getCanvasPattern.call(clearColor, ctx);\n                }\n                ctx.save();\n                ctx.fillStyle = clearColorGradientOrPattern || clearColor;\n                ctx.fillRect(0, 0, width, height);\n                ctx.restore();\n            }\n\n            if (haveMotionBLur) {\n                var domBack = this.domBack;\n                ctx.save();\n                ctx.globalAlpha = lastFrameAlpha;\n                ctx.drawImage(domBack, 0, 0, width, height);\n                ctx.restore();\n            }\n        }\n    };\n\n    module.exports = Layer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/Layer.js\n// module id = 649\n// module chunks = 0 1 2","'use strict';\n/**\n * Default canvas painter\n * @module zrender/Painter\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\n \n\n    var config = require('./config');\n    var util = require('./core/util');\n    var log = require('./core/log');\n    var BoundingRect = require('./core/BoundingRect');\n    var timsort = require('./core/timsort');\n\n    var Layer = require('./Layer');\n\n    var requestAnimationFrame = require('./animation/requestAnimationFrame');\n\n    // PENDIGN\n    // Layer exceeds MAX_PROGRESSIVE_LAYER_NUMBER may have some problem when flush directly second time.\n    //\n    // Maximum progressive layer. When exceeding this number. All elements will be drawed in the last layer.\n    var MAX_PROGRESSIVE_LAYER_NUMBER = 5;\n\n    function parseInt10(val) {\n        return parseInt(val, 10);\n    }\n\n    function isLayerValid(layer) {\n        if (!layer) {\n            return false;\n        }\n\n        if (layer.__builtin__) {\n            return true;\n        }\n\n        if (typeof(layer.resize) !== 'function'\n            || typeof(layer.refresh) !== 'function'\n        ) {\n            return false;\n        }\n\n        return true;\n    }\n\n    function preProcessLayer(layer) {\n        layer.__unusedCount++;\n    }\n\n    function postProcessLayer(layer) {\n        if (layer.__unusedCount == 1) {\n            layer.clear();\n        }\n    }\n\n    var tmpRect = new BoundingRect(0, 0, 0, 0);\n    var viewRect = new BoundingRect(0, 0, 0, 0);\n    function isDisplayableCulled(el, width, height) {\n        tmpRect.copy(el.getBoundingRect());\n        if (el.transform) {\n            tmpRect.applyTransform(el.transform);\n        }\n        viewRect.width = width;\n        viewRect.height = height;\n        return !tmpRect.intersect(viewRect);\n    }\n\n    function isClipPathChanged(clipPaths, prevClipPaths) {\n        if (clipPaths == prevClipPaths) { // Can both be null or undefined\n            return false;\n        }\n\n        if (!clipPaths || !prevClipPaths || (clipPaths.length !== prevClipPaths.length)) {\n            return true;\n        }\n        for (var i = 0; i < clipPaths.length; i++) {\n            if (clipPaths[i] !== prevClipPaths[i]) {\n                return true;\n            }\n        }\n    }\n\n    function doClip(clipPaths, ctx) {\n        for (var i = 0; i < clipPaths.length; i++) {\n            var clipPath = clipPaths[i];\n\n            clipPath.setTransform(ctx);\n            ctx.beginPath();\n            clipPath.buildPath(ctx, clipPath.shape);\n            ctx.clip();\n            // Transform back\n            clipPath.restoreTransform(ctx);\n        }\n    }\n\n    function createRoot(width, height) {\n        var domRoot = document.createElement('div');\n\n        // domRoot.onselectstart = returnFalse; // 避免页面选中的尴尬\n        domRoot.style.cssText = [\n            'position:relative',\n            'overflow:hidden',\n            'width:' + width + 'px',\n            'height:' + height + 'px',\n            'padding:0',\n            'margin:0',\n            'border-width:0'\n        ].join(';') + ';';\n\n        return domRoot;\n    }\n\n    /**\n     * @alias module:zrender/Painter\n     * @constructor\n     * @param {HTMLElement} root 绘图容器\n     * @param {module:zrender/Storage} storage\n     * @param {Ojbect} opts\n     */\n    var Painter = function (root, storage, opts) {\n        // In node environment using node-canvas\n        var singleCanvas = !root.nodeName // In node ?\n            || root.nodeName.toUpperCase() === 'CANVAS';\n\n        this._opts = opts = util.extend({}, opts || {});\n\n        /**\n         * @type {number}\n         */\n        this.dpr = opts.devicePixelRatio || config.devicePixelRatio;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this._singleCanvas = singleCanvas;\n        /**\n         * 绘图容器\n         * @type {HTMLElement}\n         */\n        this.root = root;\n\n        var rootStyle = root.style;\n\n        if (rootStyle) {\n            rootStyle['-webkit-tap-highlight-color'] = 'transparent';\n            rootStyle['-webkit-user-select'] =\n            rootStyle['user-select'] =\n            rootStyle['-webkit-touch-callout'] = 'none';\n\n            root.innerHTML = '';\n        }\n\n        /**\n         * @type {module:zrender/Storage}\n         */\n        this.storage = storage;\n\n        /**\n         * @type {Array.<number>}\n         * @private\n         */\n        var zlevelList = this._zlevelList = [];\n\n        /**\n         * @type {Object.<string, module:zrender/Layer>}\n         * @private\n         */\n        var layers = this._layers = {};\n\n        /**\n         * @type {Object.<string, Object>}\n         * @type {private}\n         */\n        this._layerConfig = {};\n\n        if (!singleCanvas) {\n            this._width = this._getSize(0);\n            this._height = this._getSize(1);\n\n            var domRoot = this._domRoot = createRoot(\n                this._width, this._height\n            );\n            root.appendChild(domRoot);\n        }\n        else {\n            if (opts.width != null) {\n                root.width = opts.width;\n            }\n            if (opts.height != null) {\n                root.height = opts.height;\n            }\n            // Use canvas width and height directly\n            var width = root.width;\n            var height = root.height;\n            this._width = width;\n            this._height = height;\n\n            // Create layer if only one given canvas\n            // Device pixel ratio is fixed to 1 because given canvas has its specified width and height\n            var mainLayer = new Layer(root, this, 1);\n            mainLayer.initContext();\n            // FIXME Use canvas width and height\n            // mainLayer.resize(width, height);\n            layers[0] = mainLayer;\n            zlevelList.push(0);\n\n            this._domRoot = root;\n        }\n\n        // Layers for progressive rendering\n        this._progressiveLayers = [];\n\n        /**\n         * @type {module:zrender/Layer}\n         * @private\n         */\n        this._hoverlayer;\n\n        this._hoverElements = [];\n    };\n\n    Painter.prototype = {\n\n        constructor: Painter,\n\n        /**\n         * If painter use a single canvas\n         * @return {boolean}\n         */\n        isSingleCanvas: function () {\n            return this._singleCanvas;\n        },\n        /**\n         * @return {HTMLDivElement}\n         */\n        getViewportRoot: function () {\n            return this._domRoot;\n        },\n\n        /**\n         * 刷新\n         * @param {boolean} [paintAll=false] 强制绘制所有displayable\n         */\n        refresh: function (paintAll) {\n\n            var list = this.storage.getDisplayList(true);\n\n            var zlevelList = this._zlevelList;\n\n            this._paintList(list, paintAll);\n\n            // Paint custum layers\n            for (var i = 0; i < zlevelList.length; i++) {\n                var z = zlevelList[i];\n                var layer = this._layers[z];\n                if (!layer.__builtin__ && layer.refresh) {\n                    layer.refresh();\n                }\n            }\n\n            this.refreshHover();\n\n            if (this._progressiveLayers.length) {\n                this._startProgessive();\n            }\n\n            return this;\n        },\n\n        addHover: function (el, hoverStyle) {\n            if (el.__hoverMir) {\n                return;\n            }\n            var elMirror = new el.constructor({\n                style: el.style,\n                shape: el.shape\n            });\n            elMirror.__from = el;\n            el.__hoverMir = elMirror;\n            elMirror.setStyle(hoverStyle);\n            this._hoverElements.push(elMirror);\n        },\n\n        removeHover: function (el) {\n            var elMirror = el.__hoverMir;\n            var hoverElements = this._hoverElements;\n            var idx = util.indexOf(hoverElements, elMirror);\n            if (idx >= 0) {\n                hoverElements.splice(idx, 1);\n            }\n            el.__hoverMir = null;\n        },\n\n        clearHover: function (el) {\n            var hoverElements = this._hoverElements;\n            for (var i = 0; i < hoverElements.length; i++) {\n                var from = hoverElements[i].__from;\n                if (from) {\n                    from.__hoverMir = null;\n                }\n            }\n            hoverElements.length = 0;\n        },\n\n        refreshHover: function () {\n            var hoverElements = this._hoverElements;\n            var len = hoverElements.length;\n            var hoverLayer = this._hoverlayer;\n            hoverLayer && hoverLayer.clear();\n\n            if (!len) {\n                return;\n            }\n            timsort(hoverElements, this.storage.displayableSortFunc);\n\n            // Use a extream large zlevel\n            // FIXME?\n            if (!hoverLayer) {\n                hoverLayer = this._hoverlayer = this.getLayer(1e5);\n            }\n\n            var scope = {};\n            hoverLayer.ctx.save();\n            for (var i = 0; i < len;) {\n                var el = hoverElements[i];\n                var originalEl = el.__from;\n                // Original el is removed\n                // PENDING\n                if (!(originalEl && originalEl.__zr)) {\n                    hoverElements.splice(i, 1);\n                    originalEl.__hoverMir = null;\n                    len--;\n                    continue;\n                }\n                i++;\n\n                // Use transform\n                // FIXME style and shape ?\n                if (!originalEl.invisible) {\n                    el.transform = originalEl.transform;\n                    el.invTransform = originalEl.invTransform;\n                    el.__clipPaths = originalEl.__clipPaths;\n                    // el.\n                    this._doPaintEl(el, hoverLayer, true, scope);\n                }\n            }\n            hoverLayer.ctx.restore();\n        },\n\n        _startProgessive: function () {\n            var self = this;\n\n            if (!self._furtherProgressive) {\n                return;\n            }\n\n            // Use a token to stop progress steps triggered by\n            // previous zr.refresh calling.\n            var token = self._progressiveToken = +new Date();\n\n            self._progress++;\n            requestAnimationFrame(step);\n\n            function step() {\n                // In case refreshed or disposed\n                if (token === self._progressiveToken && self.storage) {\n\n                    self._doPaintList(self.storage.getDisplayList());\n\n                    if (self._furtherProgressive) {\n                        self._progress++;\n                        requestAnimationFrame(step);\n                    }\n                    else {\n                        self._progressiveToken = -1;\n                    }\n                }\n            }\n        },\n\n        _clearProgressive: function () {\n            this._progressiveToken = -1;\n            this._progress = 0;\n            util.each(this._progressiveLayers, function (layer) {\n                layer.__dirty && layer.clear();\n            });\n        },\n\n        _paintList: function (list, paintAll) {\n\n            if (paintAll == null) {\n                paintAll = false;\n            }\n\n            this._updateLayerStatus(list);\n\n            this._clearProgressive();\n\n            this.eachBuiltinLayer(preProcessLayer);\n\n            this._doPaintList(list, paintAll);\n\n            this.eachBuiltinLayer(postProcessLayer);\n        },\n\n        _doPaintList: function (list, paintAll) {\n            var currentLayer;\n            var currentZLevel;\n            var ctx;\n\n            // var invTransform = [];\n            var scope;\n\n            var progressiveLayerIdx = 0;\n            var currentProgressiveLayer;\n\n            var width = this._width;\n            var height = this._height;\n            var layerProgress;\n            var frame = this._progress;\n            function flushProgressiveLayer(layer) {\n                var dpr = ctx.dpr || 1;\n                ctx.save();\n                ctx.globalAlpha = 1;\n                ctx.shadowBlur = 0;\n                // Avoid layer don't clear in next progressive frame\n                currentLayer.__dirty = true;\n                ctx.setTransform(1, 0, 0, 1, 0, 0);\n                ctx.drawImage(layer.dom, 0, 0, width * dpr, height * dpr);\n                ctx.restore();\n            }\n\n            for (var i = 0, l = list.length; i < l; i++) {\n                var el = list[i];\n                var elZLevel = this._singleCanvas ? 0 : el.zlevel;\n\n                var elFrame = el.__frame;\n\n                // Flush at current context\n                // PENDING\n                if (elFrame < 0 && currentProgressiveLayer) {\n                    flushProgressiveLayer(currentProgressiveLayer);\n                    currentProgressiveLayer = null;\n                }\n\n                // Change draw layer\n                if (currentZLevel !== elZLevel) {\n                    if (ctx) {\n                        ctx.restore();\n                    }\n\n                    // Reset scope\n                    scope = {};\n\n                    // Only 0 zlevel if only has one canvas\n                    currentZLevel = elZLevel;\n                    currentLayer = this.getLayer(currentZLevel);\n\n                    if (!currentLayer.__builtin__) {\n                        log(\n                            'ZLevel ' + currentZLevel\n                            + ' has been used by unkown layer ' + currentLayer.id\n                        );\n                    }\n\n                    ctx = currentLayer.ctx;\n                    ctx.save();\n\n                    // Reset the count\n                    currentLayer.__unusedCount = 0;\n\n                    if (currentLayer.__dirty || paintAll) {\n                        currentLayer.clear();\n                    }\n                }\n\n                if (!(currentLayer.__dirty || paintAll)) {\n                    continue;\n                }\n\n                if (elFrame >= 0) {\n                    // Progressive layer changed\n                    if (!currentProgressiveLayer) {\n                        currentProgressiveLayer = this._progressiveLayers[\n                            Math.min(progressiveLayerIdx++, MAX_PROGRESSIVE_LAYER_NUMBER - 1)\n                        ];\n\n                        currentProgressiveLayer.ctx.save();\n                        currentProgressiveLayer.renderScope = {};\n\n                        if (currentProgressiveLayer\n                            && (currentProgressiveLayer.__progress > currentProgressiveLayer.__maxProgress)\n                        ) {\n                            // flushProgressiveLayer(currentProgressiveLayer);\n                            // Quick jump all progressive elements\n                            // All progressive element are not dirty, jump over and flush directly\n                            i = currentProgressiveLayer.__nextIdxNotProg - 1;\n                            // currentProgressiveLayer = null;\n                            continue;\n                        }\n\n                        layerProgress = currentProgressiveLayer.__progress;\n\n                        if (!currentProgressiveLayer.__dirty) {\n                            // Keep rendering\n                            frame = layerProgress;\n                        }\n\n                        currentProgressiveLayer.__progress = frame + 1;\n                    }\n\n                    if (elFrame === frame) {\n                        this._doPaintEl(el, currentProgressiveLayer, true, currentProgressiveLayer.renderScope);\n                    }\n                }\n                else {\n                    this._doPaintEl(el, currentLayer, paintAll, scope);\n                }\n\n                el.__dirty = false;\n            }\n\n            if (currentProgressiveLayer) {\n                flushProgressiveLayer(currentProgressiveLayer);\n            }\n\n            // Restore the lastLayer ctx\n            ctx && ctx.restore();\n            // If still has clipping state\n            // if (scope.prevElClipPaths) {\n            //     ctx.restore();\n            // }\n\n            this._furtherProgressive = false;\n            util.each(this._progressiveLayers, function (layer) {\n                if (layer.__maxProgress >= layer.__progress) {\n                    this._furtherProgressive = true;\n                }\n            }, this);\n        },\n\n        _doPaintEl: function (el, currentLayer, forcePaint, scope) {\n            var ctx = currentLayer.ctx;\n            var m = el.transform;\n            if (\n                (currentLayer.__dirty || forcePaint)\n                // Ignore invisible element\n                && !el.invisible\n                // Ignore transparent element\n                && el.style.opacity !== 0\n                // Ignore scale 0 element, in some environment like node-canvas\n                // Draw a scale 0 element can cause all following draw wrong\n                // And setTransform with scale 0 will cause set back transform failed.\n                && !(m && !m[0] && !m[3])\n                // Ignore culled element\n                && !(el.culling && isDisplayableCulled(el, this._width, this._height))\n            ) {\n\n                var clipPaths = el.__clipPaths;\n\n                // Optimize when clipping on group with several elements\n                if (scope.prevClipLayer !== currentLayer\n                    || isClipPathChanged(clipPaths, scope.prevElClipPaths)\n                ) {\n                    // If has previous clipping state, restore from it\n                    if (scope.prevElClipPaths) {\n                        scope.prevClipLayer.ctx.restore();\n                        scope.prevClipLayer = scope.prevElClipPaths = null;\n\n                        // Reset prevEl since context has been restored\n                        scope.prevEl = null;\n                    }\n                    // New clipping state\n                    if (clipPaths) {\n                        ctx.save();\n                        doClip(clipPaths, ctx);\n                        scope.prevClipLayer = currentLayer;\n                        scope.prevElClipPaths = clipPaths;\n                    }\n                }\n                el.beforeBrush && el.beforeBrush(ctx);\n\n                el.brush(ctx, scope.prevEl || null);\n                scope.prevEl = el;\n\n                el.afterBrush && el.afterBrush(ctx);\n            }\n        },\n\n        /**\n         * 获取 zlevel 所在层，如果不存在则会创建一个新的层\n         * @param {number} zlevel\n         * @return {module:zrender/Layer}\n         */\n        getLayer: function (zlevel) {\n            if (this._singleCanvas) {\n                return this._layers[0];\n            }\n\n            var layer = this._layers[zlevel];\n            if (!layer) {\n                // Create a new layer\n                layer = new Layer('zr_' + zlevel, this, this.dpr);\n                layer.__builtin__ = true;\n\n                if (this._layerConfig[zlevel]) {\n                    util.merge(layer, this._layerConfig[zlevel], true);\n                }\n\n                this.insertLayer(zlevel, layer);\n\n                // Context is created after dom inserted to document\n                // Or excanvas will get 0px clientWidth and clientHeight\n                layer.initContext();\n            }\n\n            return layer;\n        },\n\n        insertLayer: function (zlevel, layer) {\n\n            var layersMap = this._layers;\n            var zlevelList = this._zlevelList;\n            var len = zlevelList.length;\n            var prevLayer = null;\n            var i = -1;\n            var domRoot = this._domRoot;\n\n            if (layersMap[zlevel]) {\n                log('ZLevel ' + zlevel + ' has been used already');\n                return;\n            }\n            // Check if is a valid layer\n            if (!isLayerValid(layer)) {\n                log('Layer of zlevel ' + zlevel + ' is not valid');\n                return;\n            }\n\n            if (len > 0 && zlevel > zlevelList[0]) {\n                for (i = 0; i < len - 1; i++) {\n                    if (\n                        zlevelList[i] < zlevel\n                        && zlevelList[i + 1] > zlevel\n                    ) {\n                        break;\n                    }\n                }\n                prevLayer = layersMap[zlevelList[i]];\n            }\n            zlevelList.splice(i + 1, 0, zlevel);\n\n            layersMap[zlevel] = layer;\n\n            // Vitual layer will not directly show on the screen.\n            // (It can be a WebGL layer and assigned to a ZImage element)\n            // But it still under management of zrender.\n            if (!layer.virtual) {\n                if (prevLayer) {\n                    var prevDom = prevLayer.dom;\n                    if (prevDom.nextSibling) {\n                        domRoot.insertBefore(\n                            layer.dom,\n                            prevDom.nextSibling\n                        );\n                    }\n                    else {\n                        domRoot.appendChild(layer.dom);\n                    }\n                }\n                else {\n                    if (domRoot.firstChild) {\n                        domRoot.insertBefore(layer.dom, domRoot.firstChild);\n                    }\n                    else {\n                        domRoot.appendChild(layer.dom);\n                    }\n                }\n            }\n        },\n\n        // Iterate each layer\n        eachLayer: function (cb, context) {\n            var zlevelList = this._zlevelList;\n            var z;\n            var i;\n            for (i = 0; i < zlevelList.length; i++) {\n                z = zlevelList[i];\n                cb.call(context, this._layers[z], z);\n            }\n        },\n\n        // Iterate each buildin layer\n        eachBuiltinLayer: function (cb, context) {\n            var zlevelList = this._zlevelList;\n            var layer;\n            var z;\n            var i;\n            for (i = 0; i < zlevelList.length; i++) {\n                z = zlevelList[i];\n                layer = this._layers[z];\n                if (layer.__builtin__) {\n                    cb.call(context, layer, z);\n                }\n            }\n        },\n\n        // Iterate each other layer except buildin layer\n        eachOtherLayer: function (cb, context) {\n            var zlevelList = this._zlevelList;\n            var layer;\n            var z;\n            var i;\n            for (i = 0; i < zlevelList.length; i++) {\n                z = zlevelList[i];\n                layer = this._layers[z];\n                if (!layer.__builtin__) {\n                    cb.call(context, layer, z);\n                }\n            }\n        },\n\n        /**\n         * 获取所有已创建的层\n         * @param {Array.<module:zrender/Layer>} [prevLayer]\n         */\n        getLayers: function () {\n            return this._layers;\n        },\n\n        _updateLayerStatus: function (list) {\n\n            var layers = this._layers;\n            var progressiveLayers = this._progressiveLayers;\n\n            var elCountsLastFrame = {};\n            var progressiveElCountsLastFrame = {};\n\n            this.eachBuiltinLayer(function (layer, z) {\n                elCountsLastFrame[z] = layer.elCount;\n                layer.elCount = 0;\n                layer.__dirty = false;\n            });\n\n            util.each(progressiveLayers, function (layer, idx) {\n                progressiveElCountsLastFrame[idx] = layer.elCount;\n                layer.elCount = 0;\n                layer.__dirty = false;\n            });\n\n            var progressiveLayerCount = 0;\n            var currentProgressiveLayer;\n            var lastProgressiveKey;\n            var frameCount = 0;\n            for (var i = 0, l = list.length; i < l; i++) {\n                var el = list[i];\n                var zlevel = this._singleCanvas ? 0 : el.zlevel;\n                var layer = layers[zlevel];\n                var elProgress = el.progressive;\n                if (layer) {\n                    layer.elCount++;\n                    layer.__dirty = layer.__dirty || el.__dirty;\n                }\n\n                /////// Update progressive\n                if (elProgress >= 0) {\n                    // Fix wrong progressive sequence problem.\n                    if (lastProgressiveKey !== elProgress) {\n                        lastProgressiveKey = elProgress;\n                        frameCount++;\n                    }\n                    var elFrame = el.__frame = frameCount - 1;\n                    if (!currentProgressiveLayer) {\n                        var idx = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER - 1);\n                        currentProgressiveLayer = progressiveLayers[idx];\n                        if (!currentProgressiveLayer) {\n                            currentProgressiveLayer = progressiveLayers[idx] = new Layer(\n                                'progressive', this, this.dpr\n                            );\n                            currentProgressiveLayer.initContext();\n                        }\n                        currentProgressiveLayer.__maxProgress = 0;\n                    }\n                    currentProgressiveLayer.__dirty = currentProgressiveLayer.__dirty || el.__dirty;\n                    currentProgressiveLayer.elCount++;\n\n                    currentProgressiveLayer.__maxProgress = Math.max(\n                        currentProgressiveLayer.__maxProgress, elFrame\n                    );\n\n                    if (currentProgressiveLayer.__maxProgress >= currentProgressiveLayer.__progress) {\n                        // Should keep rendering this  layer because progressive rendering is not finished yet\n                        layer.__dirty = true;\n                    }\n                }\n                else {\n                    el.__frame = -1;\n\n                    if (currentProgressiveLayer) {\n                        currentProgressiveLayer.__nextIdxNotProg = i;\n                        progressiveLayerCount++;\n                        currentProgressiveLayer = null;\n                    }\n                }\n            }\n\n            if (currentProgressiveLayer) {\n                progressiveLayerCount++;\n                currentProgressiveLayer.__nextIdxNotProg = i;\n            }\n\n            // 层中的元素数量有发生变化\n            this.eachBuiltinLayer(function (layer, z) {\n                if (elCountsLastFrame[z] !== layer.elCount) {\n                    layer.__dirty = true;\n                }\n            });\n\n            progressiveLayers.length = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER);\n            util.each(progressiveLayers, function (layer, idx) {\n                if (progressiveElCountsLastFrame[idx] !== layer.elCount) {\n                    el.__dirty = true;\n                }\n                if (layer.__dirty) {\n                    layer.__progress = 0;\n                }\n            });\n        },\n\n        /**\n         * 清除hover层外所有内容\n         */\n        clear: function () {\n            this.eachBuiltinLayer(this._clearLayer);\n            return this;\n        },\n\n        _clearLayer: function (layer) {\n            layer.clear();\n        },\n\n        /**\n         * 修改指定zlevel的绘制参数\n         *\n         * @param {string} zlevel\n         * @param {Object} config 配置对象\n         * @param {string} [config.clearColor=0] 每次清空画布的颜色\n         * @param {string} [config.motionBlur=false] 是否开启动态模糊\n         * @param {number} [config.lastFrameAlpha=0.7]\n         *                 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n         */\n        configLayer: function (zlevel, config) {\n            if (config) {\n                var layerConfig = this._layerConfig;\n                if (!layerConfig[zlevel]) {\n                    layerConfig[zlevel] = config;\n                }\n                else {\n                    util.merge(layerConfig[zlevel], config, true);\n                }\n\n                var layer = this._layers[zlevel];\n\n                if (layer) {\n                    util.merge(layer, layerConfig[zlevel], true);\n                }\n            }\n        },\n\n        /**\n         * 删除指定层\n         * @param {number} zlevel 层所在的zlevel\n         */\n        delLayer: function (zlevel) {\n            var layers = this._layers;\n            var zlevelList = this._zlevelList;\n            var layer = layers[zlevel];\n            if (!layer) {\n                return;\n            }\n            layer.dom.parentNode.removeChild(layer.dom);\n            delete layers[zlevel];\n\n            zlevelList.splice(util.indexOf(zlevelList, zlevel), 1);\n        },\n\n        /**\n         * 区域大小变化后重绘\n         */\n        resize: function (width, height) {\n            var domRoot = this._domRoot;\n            // FIXME Why ?\n            domRoot.style.display = 'none';\n\n            // Save input w/h\n            var opts = this._opts;\n            width != null && (opts.width = width);\n            height != null && (opts.height = height);\n\n            width = this._getSize(0);\n            height = this._getSize(1);\n\n            domRoot.style.display = '';\n\n            // 优化没有实际改变的resize\n            if (this._width != width || height != this._height) {\n                domRoot.style.width = width + 'px';\n                domRoot.style.height = height + 'px';\n\n                for (var id in this._layers) {\n                    if (this._layers.hasOwnProperty(id)) {\n                        this._layers[id].resize(width, height);\n                    }\n                }\n                util.each(this._progressiveLayers, function (layer) {\n                    layer.resize(width, height);\n                });\n\n                this.refresh(true);\n            }\n\n            this._width = width;\n            this._height = height;\n\n            return this;\n        },\n\n        /**\n         * 清除单独的一个层\n         * @param {number} zlevel\n         */\n        clearLayer: function (zlevel) {\n            var layer = this._layers[zlevel];\n            if (layer) {\n                layer.clear();\n            }\n        },\n\n        /**\n         * 释放\n         */\n        dispose: function () {\n            this.root.innerHTML = '';\n\n            this.root =\n            this.storage =\n\n            this._domRoot =\n            this._layers = null;\n        },\n\n        /**\n         * Get canvas which has all thing rendered\n         * @param {Object} opts\n         * @param {string} [opts.backgroundColor]\n         */\n        getRenderedCanvas: function (opts) {\n            opts = opts || {};\n            if (this._singleCanvas) {\n                return this._layers[0].dom;\n            }\n\n            var imageLayer = new Layer('image', this, opts.pixelRatio || this.dpr);\n            imageLayer.initContext();\n\n            imageLayer.clearColor = opts.backgroundColor;\n            imageLayer.clear();\n\n            var displayList = this.storage.getDisplayList(true);\n\n            var scope = {};\n            var zlevel;\n\n            var self = this;\n            function findAndDrawOtherLayer(smaller, larger) {\n                var zlevelList = self._zlevelList;\n                if (smaller == null) {\n                    smaller = -Infinity;\n                }\n                var intermediateLayer;\n                for (var i = 0; i < zlevelList.length; i++) {\n                    var z = zlevelList[i];\n                    var layer = self._layers[z];\n                    if (!layer.__builtin__ && z > smaller && z < larger) {\n                        intermediateLayer = layer;\n                        break;\n                    }\n                }\n                if (intermediateLayer && intermediateLayer.renderToCanvas) {\n                    imageLayer.ctx.save();\n                    intermediateLayer.renderToCanvas(imageLayer.ctx);\n                    imageLayer.ctx.restore();\n                }\n            }\n            for (var i = 0; i < displayList.length; i++) {\n                var el = displayList[i];\n\n                if (el.zlevel !== zlevel) {\n                    findAndDrawOtherLayer(zlevel, el.zlevel);\n                    zlevel = el.zlevel;\n                }\n                this._doPaintEl(el, imageLayer, true, scope);\n            }\n\n            findAndDrawOtherLayer(zlevel, Infinity);\n\n            return imageLayer.dom;\n        },\n        /**\n         * 获取绘图区域宽度\n         */\n        getWidth: function () {\n            return this._width;\n        },\n\n        /**\n         * 获取绘图区域高度\n         */\n        getHeight: function () {\n            return this._height;\n        },\n\n        _getSize: function (whIdx) {\n            var opts = this._opts;\n            var wh = ['width', 'height'][whIdx];\n            var cwh = ['clientWidth', 'clientHeight'][whIdx];\n            var plt = ['paddingLeft', 'paddingTop'][whIdx];\n            var prb = ['paddingRight', 'paddingBottom'][whIdx];\n\n            if (opts[wh] != null && opts[wh] !== 'auto') {\n                return parseFloat(opts[wh]);\n            }\n\n            var root = this.root;\n            var stl = document.defaultView.getComputedStyle(root);\n\n            return (\n                (root[cwh] || parseInt10(stl[wh]) || parseInt10(root.style[wh]))\n                - (parseInt10(stl[plt]) || 0)\n                - (parseInt10(stl[prb]) || 0)\n            ) | 0;\n        },\n\n        pathToImage: function (path, dpr) {\n            dpr = dpr || this.dpr;\n\n            var canvas = document.createElement('canvas');\n            var ctx = canvas.getContext('2d');\n            var rect = path.getBoundingRect();\n            var style = path.style;\n            var shadowBlurSize = style.shadowBlur;\n            var shadowOffsetX = style.shadowOffsetX;\n            var shadowOffsetY = style.shadowOffsetY;\n            var lineWidth = style.hasStroke() ? style.lineWidth : 0;\n\n            var leftMargin = Math.max(lineWidth / 2, -shadowOffsetX + shadowBlurSize);\n            var rightMargin = Math.max(lineWidth / 2, shadowOffsetX + shadowBlurSize);\n            var topMargin = Math.max(lineWidth / 2, -shadowOffsetY + shadowBlurSize);\n            var bottomMargin = Math.max(lineWidth / 2, shadowOffsetY + shadowBlurSize);\n            var width = rect.width + leftMargin + rightMargin;\n            var height = rect.height + topMargin + bottomMargin;\n\n            canvas.width = width * dpr;\n            canvas.height = height * dpr;\n\n            ctx.scale(dpr, dpr);\n            ctx.clearRect(0, 0, width, height);\n            ctx.dpr = dpr;\n\n            var pathTransform = {\n                position: path.position,\n                rotation: path.rotation,\n                scale: path.scale\n            };\n            path.position = [leftMargin - rect.x, topMargin - rect.y];\n            path.rotation = 0;\n            path.scale = [1, 1];\n            path.updateTransform();\n            if (path) {\n                path.brush(ctx);\n            }\n\n            var ImageShape = require('./graphic/Image');\n            var imgShape = new ImageShape({\n                style: {\n                    x: 0,\n                    y: 0,\n                    image: canvas\n                }\n            });\n\n            if (pathTransform.position != null) {\n                imgShape.position = path.position = pathTransform.position;\n            }\n\n            if (pathTransform.rotation != null) {\n                imgShape.rotation = path.rotation = pathTransform.rotation;\n            }\n\n            if (pathTransform.scale != null) {\n                imgShape.scale = path.scale = pathTransform.scale;\n            }\n\n            return imgShape;\n        }\n    };\n\n    module.exports = Painter;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/Painter.js\n// module id = 650\n// module chunks = 0 1 2","'use strict';\n/**\n * Storage内容仓库模块\n * @module zrender/Storage\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n * @author errorrik (errorrik@gmail.com)\n * @author pissang (https://github.com/pissang/)\n */\n\n\n    var util = require('./core/util');\n    var env = require('./core/env');\n\n    var Group = require('./container/Group');\n\n    // Use timsort because in most case elements are partially sorted\n    // https://jsfiddle.net/pissang/jr4x7mdm/8/\n    var timsort = require('./core/timsort');\n\n    function shapeCompareFunc(a, b) {\n        if (a.zlevel === b.zlevel) {\n            if (a.z === b.z) {\n                // if (a.z2 === b.z2) {\n                //     // FIXME Slow has renderidx compare\n                //     // http://stackoverflow.com/questions/20883421/sorting-in-javascript-should-every-compare-function-have-a-return-0-statement\n                //     // https://github.com/v8/v8/blob/47cce544a31ed5577ffe2963f67acb4144ee0232/src/js/array.js#L1012\n                //     return a.__renderidx - b.__renderidx;\n                // }\n                return a.z2 - b.z2;\n            }\n            return a.z - b.z;\n        }\n        return a.zlevel - b.zlevel;\n    }\n    /**\n     * 内容仓库 (M)\n     * @alias module:zrender/Storage\n     * @constructor\n     */\n    var Storage = function () {\n        this._roots = [];\n\n        this._displayList = [];\n\n        this._displayListLen = 0;\n    };\n\n    Storage.prototype = {\n\n        constructor: Storage,\n\n        /**\n         * @param  {Function} cb\n         *\n         */\n        traverse: function (cb, context) {\n            for (var i = 0; i < this._roots.length; i++) {\n                this._roots[i].traverse(cb, context);\n            }\n        },\n\n        /**\n         * 返回所有图形的绘制队列\n         * @param {boolean} [update=false] 是否在返回前更新该数组\n         * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组, 在 update 为 true 的时候有效\n         *\n         * 详见{@link module:zrender/graphic/Displayable.prototype.updateDisplayList}\n         * @return {Array.<module:zrender/graphic/Displayable>}\n         */\n        getDisplayList: function (update, includeIgnore) {\n            includeIgnore = includeIgnore || false;\n            if (update) {\n                this.updateDisplayList(includeIgnore);\n            }\n            return this._displayList;\n        },\n\n        /**\n         * 更新图形的绘制队列。\n         * 每次绘制前都会调用，该方法会先深度优先遍历整个树，更新所有Group和Shape的变换并且把所有可见的Shape保存到数组中，\n         * 最后根据绘制的优先级（zlevel > z > 插入顺序）排序得到绘制队列\n         * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组\n         */\n        updateDisplayList: function (includeIgnore) {\n            this._displayListLen = 0;\n            var roots = this._roots;\n            var displayList = this._displayList;\n            for (var i = 0, len = roots.length; i < len; i++) {\n                this._updateAndAddDisplayable(roots[i], null, includeIgnore);\n            }\n            displayList.length = this._displayListLen;\n\n            // for (var i = 0, len = displayList.length; i < len; i++) {\n            //     displayList[i].__renderidx = i;\n            // }\n\n            // displayList.sort(shapeCompareFunc);\n            env.canvasSupported && timsort(displayList, shapeCompareFunc);\n        },\n\n        _updateAndAddDisplayable: function (el, clipPaths, includeIgnore) {\n\n            if (el.ignore && !includeIgnore) {\n                return;\n            }\n\n            el.beforeUpdate();\n\n            if (el.__dirty) {\n\n                el.update();\n\n            }\n\n            el.afterUpdate();\n\n            var userSetClipPath = el.clipPath;\n            if (userSetClipPath) {\n\n                // FIXME 效率影响\n                if (clipPaths) {\n                    clipPaths = clipPaths.slice();\n                }\n                else {\n                    clipPaths = [];\n                }\n\n                var currentClipPath = userSetClipPath;\n                var parentClipPath = el;\n                // Recursively add clip path\n                while (currentClipPath) {\n                    // clipPath 的变换是基于使用这个 clipPath 的元素\n                    currentClipPath.parent = parentClipPath;\n                    currentClipPath.updateTransform();\n\n                    clipPaths.push(currentClipPath);\n\n                    parentClipPath = currentClipPath;\n                    currentClipPath = currentClipPath.clipPath;\n                }\n            }\n\n            if (el.isGroup) {\n                var children = el._children;\n\n                for (var i = 0; i < children.length; i++) {\n                    var child = children[i];\n\n                    // Force to mark as dirty if group is dirty\n                    // FIXME __dirtyPath ?\n                    if (el.__dirty) {\n                        child.__dirty = true;\n                    }\n\n                    this._updateAndAddDisplayable(child, clipPaths, includeIgnore);\n                }\n\n                // Mark group clean here\n                el.__dirty = false;\n\n            }\n            else {\n                el.__clipPaths = clipPaths;\n\n                this._displayList[this._displayListLen++] = el;\n            }\n        },\n\n        /**\n         * 添加图形(Shape)或者组(Group)到根节点\n         * @param {module:zrender/Element} el\n         */\n        addRoot: function (el) {\n            if (el.__storage === this) {\n                return;\n            }\n\n            if (el instanceof Group) {\n                el.addChildrenToStorage(this);\n            }\n\n            this.addToStorage(el);\n            this._roots.push(el);\n        },\n\n        /**\n         * 删除指定的图形(Shape)或者组(Group)\n         * @param {string|Array.<string>} [el] 如果为空清空整个Storage\n         */\n        delRoot: function (el) {\n            if (el == null) {\n                // 不指定el清空\n                for (var i = 0; i < this._roots.length; i++) {\n                    var root = this._roots[i];\n                    if (root instanceof Group) {\n                        root.delChildrenFromStorage(this);\n                    }\n                }\n\n                this._roots = [];\n                this._displayList = [];\n                this._displayListLen = 0;\n\n                return;\n            }\n\n            if (el instanceof Array) {\n                for (var i = 0, l = el.length; i < l; i++) {\n                    this.delRoot(el[i]);\n                }\n                return;\n            }\n\n\n            var idx = util.indexOf(this._roots, el);\n            if (idx >= 0) {\n                this.delFromStorage(el);\n                this._roots.splice(idx, 1);\n                if (el instanceof Group) {\n                    el.delChildrenFromStorage(this);\n                }\n            }\n        },\n\n        addToStorage: function (el) {\n            el.__storage = this;\n            el.dirty(false);\n\n            return this;\n        },\n\n        delFromStorage: function (el) {\n            if (el) {\n                el.__storage = null;\n            }\n\n            return this;\n        },\n\n        /**\n         * 清空并且释放Storage\n         */\n        dispose: function () {\n            this._renderList =\n            this._roots = null;\n        },\n\n        displayableSortFunc: shapeCompareFunc\n    };\n\n    module.exports = Storage;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/Storage.js\n// module id = 651\n// module chunks = 0 1 2","'use strict';\n/**\n * 动画主类, 调度和管理所有动画控制器\n *\n * @module zrender/animation/Animation\n * @author pissang(https://github.com/pissang)\n */\n// TODO Additive animation\n// http://iosoteric.com/additive-animations-animatewithduration-in-ios-8/\n// https://developer.apple.com/videos/wwdc2014/#236\n\n\n    var util = require('../core/util');\n    var Dispatcher = require('../core/event').Dispatcher;\n\n    var requestAnimationFrame = require('./requestAnimationFrame');\n\n    var Animator = require('./Animator');\n    /**\n     * @typedef {Object} IZRenderStage\n     * @property {Function} update\n     */\n\n    /**\n     * @alias module:zrender/animation/Animation\n     * @constructor\n     * @param {Object} [options]\n     * @param {Function} [options.onframe]\n     * @param {IZRenderStage} [options.stage]\n     * @example\n     *     var animation = new Animation();\n     *     var obj = {\n     *         x: 100,\n     *         y: 100\n     *     };\n     *     animation.animate(node.position)\n     *         .when(1000, {\n     *             x: 500,\n     *             y: 500\n     *         })\n     *         .when(2000, {\n     *             x: 100,\n     *             y: 100\n     *         })\n     *         .start('spline');\n     */\n    var Animation = function (options) {\n\n        options = options || {};\n\n        this.stage = options.stage || {};\n\n        this.onframe = options.onframe || function() {};\n\n        // private properties\n        this._clips = [];\n\n        this._running = false;\n\n        this._time;\n\n        this._pausedTime;\n\n        this._pauseStart;\n\n        this._paused = false;\n\n        Dispatcher.call(this);\n    };\n\n    Animation.prototype = {\n\n        constructor: Animation,\n        /**\n         * 添加 clip\n         * @param {module:zrender/animation/Clip} clip\n         */\n        addClip: function (clip) {\n            this._clips.push(clip);\n        },\n        /**\n         * 添加 animator\n         * @param {module:zrender/animation/Animator} animator\n         */\n        addAnimator: function (animator) {\n            animator.animation = this;\n            var clips = animator.getClips();\n            for (var i = 0; i < clips.length; i++) {\n                this.addClip(clips[i]);\n            }\n        },\n        /**\n         * 删除动画片段\n         * @param {module:zrender/animation/Clip} clip\n         */\n        removeClip: function(clip) {\n            var idx = util.indexOf(this._clips, clip);\n            if (idx >= 0) {\n                this._clips.splice(idx, 1);\n            }\n        },\n\n        /**\n         * 删除动画片段\n         * @param {module:zrender/animation/Animator} animator\n         */\n        removeAnimator: function (animator) {\n            var clips = animator.getClips();\n            for (var i = 0; i < clips.length; i++) {\n                this.removeClip(clips[i]);\n            }\n            animator.animation = null;\n        },\n\n        _update: function() {\n\n            var time = new Date().getTime() - this._pausedTime;\n            var delta = time - this._time;\n            var clips = this._clips;\n            var len = clips.length;\n\n            var deferredEvents = [];\n            var deferredClips = [];\n            for (var i = 0; i < len; i++) {\n                var clip = clips[i];\n                var e = clip.step(time, delta);\n                // Throw out the events need to be called after\n                // stage.update, like destroy\n                if (e) {\n                    deferredEvents.push(e);\n                    deferredClips.push(clip);\n                }\n            }\n\n            // Remove the finished clip\n            for (var i = 0; i < len;) {\n                if (clips[i]._needsRemove) {\n                    clips[i] = clips[len - 1];\n                    clips.pop();\n                    len--;\n                }\n                else {\n                    i++;\n                }\n            }\n\n            len = deferredEvents.length;\n            for (var i = 0; i < len; i++) {\n                deferredClips[i].fire(deferredEvents[i]);\n            }\n\n            this._time = time;\n\n            this.onframe(delta);\n\n            this.trigger('frame', delta);\n\n            if (this.stage.update) {\n                this.stage.update();\n            }\n        },\n\n        _startLoop: function () {\n            var self = this;\n\n            this._running = true;\n\n            function step() {\n                if (self._running) {\n\n                    requestAnimationFrame(step);\n\n                    !self._paused && self._update();\n                }\n            }\n\n            requestAnimationFrame(step);\n        },\n\n        /**\n         * 开始运行动画\n         */\n        start: function () {\n\n            this._time = new Date().getTime();\n            this._pausedTime = 0;\n\n            this._startLoop();\n        },\n        /**\n         * 停止运行动画\n         */\n        stop: function () {\n            this._running = false;\n        },\n\n        /**\n         * Pause\n         */\n        pause: function () {\n            if (!this._paused) {\n                this._pauseStart = new Date().getTime();\n                this._paused = true;\n            }\n        },\n\n        /**\n         * Resume\n         */\n        resume: function () {\n            if (this._paused) {\n                this._pausedTime += (new Date().getTime()) - this._pauseStart;\n                this._paused = false;\n            }\n        },\n\n        /**\n         * 清除所有动画片段\n         */\n        clear: function () {\n            this._clips = [];\n        },\n        /**\n         * 对一个目标创建一个animator对象，可以指定目标中的属性使用动画\n         * @param  {Object} target\n         * @param  {Object} options\n         * @param  {boolean} [options.loop=false] 是否循环播放动画\n         * @param  {Function} [options.getter=null]\n         *         如果指定getter函数，会通过getter函数取属性值\n         * @param  {Function} [options.setter=null]\n         *         如果指定setter函数，会通过setter函数设置属性值\n         * @return {module:zrender/animation/Animation~Animator}\n         */\n        // TODO Gap\n        animate: function (target, options) {\n            options = options || {};\n\n            var animator = new Animator(\n                target,\n                options.loop,\n                options.getter,\n                options.setter\n            );\n\n            this.addAnimator(animator);\n\n            return animator;\n        }\n    };\n\n    util.mixin(Animation, Dispatcher);\n\n    module.exports = Animation;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/animation/Animation.js\n// module id = 652\n// module chunks = 0 1 2","/**\n * 动画主控制器\n * @config target 动画对象，可以是数组，如果是数组的话会批量分发onframe等事件\n * @config life(1000) 动画时长\n * @config delay(0) 动画延迟时间\n * @config loop(true)\n * @config gap(0) 循环的间隔时间\n * @config onframe\n * @config easing(optional)\n * @config ondestroy(optional)\n * @config onrestart(optional)\n *\n * TODO pause\n */\n\n\n    var easingFuncs = require('./easing');\n\n    function Clip(options) {\n\n        this._target = options.target;\n\n        // 生命周期\n        this._life = options.life || 1000;\n        // 延时\n        this._delay = options.delay || 0;\n        // 开始时间\n        // this._startTime = new Date().getTime() + this._delay;// 单位毫秒\n        this._initialized = false;\n\n        // 是否循环\n        this.loop = options.loop == null ? false : options.loop;\n\n        this.gap = options.gap || 0;\n\n        this.easing = options.easing || 'Linear';\n\n        this.onframe = options.onframe;\n        this.ondestroy = options.ondestroy;\n        this.onrestart = options.onrestart;\n\n        this._pausedTime = 0;\n        this._paused = false;\n    }\n\n    Clip.prototype = {\n\n        constructor: Clip,\n\n        step: function (globalTime, deltaTime) {\n            // Set startTime on first step, or _startTime may has milleseconds different between clips\n            // PENDING\n            if (!this._initialized) {\n                this._startTime = globalTime + this._delay;\n                this._initialized = true;\n            }\n\n            if (this._paused) {\n                this._pausedTime += deltaTime;\n                return;\n            }\n\n            var percent = (globalTime - this._startTime - this._pausedTime) / this._life;\n\n            // 还没开始\n            if (percent < 0) {\n                return;\n            }\n\n            percent = Math.min(percent, 1);\n\n            var easing = this.easing;\n            var easingFunc = typeof easing == 'string' ? easingFuncs[easing] : easing;\n            var schedule = typeof easingFunc === 'function'\n                ? easingFunc(percent)\n                : percent;\n\n            this.fire('frame', schedule);\n\n            // 结束\n            if (percent == 1) {\n                if (this.loop) {\n                    this.restart (globalTime);\n                    // 重新开始周期\n                    // 抛出而不是直接调用事件直到 stage.update 后再统一调用这些事件\n                    return 'restart';\n                }\n\n                // 动画完成将这个控制器标识为待删除\n                // 在Animation.update中进行批量删除\n                this._needsRemove = true;\n                return 'destroy';\n            }\n\n            return null;\n        },\n\n        restart: function (globalTime) {\n            var remainder = (globalTime - this._startTime - this._pausedTime) % this._life;\n            this._startTime = globalTime - remainder + this.gap;\n            this._pausedTime = 0;\n\n            this._needsRemove = false;\n        },\n\n        fire: function (eventType, arg) {\n            eventType = 'on' + eventType;\n            if (this[eventType]) {\n                this[eventType](this._target, arg);\n            }\n        },\n\n        pause: function () {\n            this._paused = true;\n        },\n\n        resume: function () {\n            this._paused = false;\n        }\n    };\n\n    module.exports = Clip;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/animation/Clip.js\n// module id = 653\n// module chunks = 0 1 2","/**\n * 缓动代码来自 https://github.com/sole/tween.js/blob/master/src/Tween.js\n * @see http://sole.github.io/tween.js/examples/03_graphs.html\n * @exports zrender/animation/easing\n */\n\n    var easing = {\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        linear: function (k) {\n            return k;\n        },\n\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quadraticIn: function (k) {\n            return k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quadraticOut: function (k) {\n            return k * (2 - k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quadraticInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k;\n            }\n            return -0.5 * (--k * (k - 2) - 1);\n        },\n\n        // 三次方的缓动（t^3）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        cubicIn: function (k) {\n            return k * k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        cubicOut: function (k) {\n            return --k * k * k + 1;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        cubicInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k;\n            }\n            return 0.5 * ((k -= 2) * k * k + 2);\n        },\n\n        // 四次方的缓动（t^4）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quarticIn: function (k) {\n            return k * k * k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quarticOut: function (k) {\n            return 1 - (--k * k * k * k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quarticInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k * k;\n            }\n            return -0.5 * ((k -= 2) * k * k * k - 2);\n        },\n\n        // 五次方的缓动（t^5）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quinticIn: function (k) {\n            return k * k * k * k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quinticOut: function (k) {\n            return --k * k * k * k * k + 1;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quinticInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k * k * k;\n            }\n            return 0.5 * ((k -= 2) * k * k * k * k + 2);\n        },\n\n        // 正弦曲线的缓动（sin(t)）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        sinusoidalIn: function (k) {\n            return 1 - Math.cos(k * Math.PI / 2);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        sinusoidalOut: function (k) {\n            return Math.sin(k * Math.PI / 2);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        sinusoidalInOut: function (k) {\n            return 0.5 * (1 - Math.cos(Math.PI * k));\n        },\n\n        // 指数曲线的缓动（2^t）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        exponentialIn: function (k) {\n            return k === 0 ? 0 : Math.pow(1024, k - 1);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        exponentialOut: function (k) {\n            return k === 1 ? 1 : 1 - Math.pow(2, -10 * k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        exponentialInOut: function (k) {\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if ((k *= 2) < 1) {\n                return 0.5 * Math.pow(1024, k - 1);\n            }\n            return 0.5 * (-Math.pow(2, -10 * (k - 1)) + 2);\n        },\n\n        // 圆形曲线的缓动（sqrt(1-t^2)）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        circularIn: function (k) {\n            return 1 - Math.sqrt(1 - k * k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        circularOut: function (k) {\n            return Math.sqrt(1 - (--k * k));\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        circularInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return -0.5 * (Math.sqrt(1 - k * k) - 1);\n            }\n            return 0.5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\n        },\n\n        // 创建类似于弹簧在停止前来回振荡的动画\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        elasticIn: function (k) {\n            var s;\n            var a = 0.1;\n            var p = 0.4;\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            }\n            else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n            return -(a * Math.pow(2, 10 * (k -= 1)) *\n                        Math.sin((k - s) * (2 * Math.PI) / p));\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        elasticOut: function (k) {\n            var s;\n            var a = 0.1;\n            var p = 0.4;\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            }\n            else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n            return (a * Math.pow(2, -10 * k) *\n                    Math.sin((k - s) * (2 * Math.PI) / p) + 1);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        elasticInOut: function (k) {\n            var s;\n            var a = 0.1;\n            var p = 0.4;\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            }\n            else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n            if ((k *= 2) < 1) {\n                return -0.5 * (a * Math.pow(2, 10 * (k -= 1))\n                    * Math.sin((k - s) * (2 * Math.PI) / p));\n            }\n            return a * Math.pow(2, -10 * (k -= 1))\n                    * Math.sin((k - s) * (2 * Math.PI) / p) * 0.5 + 1;\n\n        },\n\n        // 在某一动画开始沿指示的路径进行动画处理前稍稍收回该动画的移动\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        backIn: function (k) {\n            var s = 1.70158;\n            return k * k * ((s + 1) * k - s);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        backOut: function (k) {\n            var s = 1.70158;\n            return --k * k * ((s + 1) * k + s) + 1;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        backInOut: function (k) {\n            var s = 1.70158 * 1.525;\n            if ((k *= 2) < 1) {\n                return 0.5 * (k * k * ((s + 1) * k - s));\n            }\n            return 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\n        },\n\n        // 创建弹跳效果\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        bounceIn: function (k) {\n            return 1 - easing.bounceOut(1 - k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        bounceOut: function (k) {\n            if (k < (1 / 2.75)) {\n                return 7.5625 * k * k;\n            }\n            else if (k < (2 / 2.75)) {\n                return 7.5625 * (k -= (1.5 / 2.75)) * k + 0.75;\n            }\n            else if (k < (2.5 / 2.75)) {\n                return 7.5625 * (k -= (2.25 / 2.75)) * k + 0.9375;\n            }\n            else {\n                return 7.5625 * (k -= (2.625 / 2.75)) * k + 0.984375;\n            }\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        bounceInOut: function (k) {\n            if (k < 0.5) {\n                return easing.bounceIn(k * 2) * 0.5;\n            }\n            return easing.bounceOut(k * 2 - 1) * 0.5 + 0.5;\n        }\n    };\n\n    module.exports = easing;\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/animation/easing.js\n// module id = 654\n// module chunks = 0 1 2","\n\n    var normalizeRadian = require('./util').normalizeRadian;\n    var PI2 = Math.PI * 2;\n\n    module.exports = {\n        /**\n         * 圆弧描边包含判断\n         * @param  {number}  cx\n         * @param  {number}  cy\n         * @param  {number}  r\n         * @param  {number}  startAngle\n         * @param  {number}  endAngle\n         * @param  {boolean}  anticlockwise\n         * @param  {number} lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {Boolean}\n         */\n        containStroke: function (\n            cx, cy, r, startAngle, endAngle, anticlockwise,\n            lineWidth, x, y\n        ) {\n\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n\n            x -= cx;\n            y -= cy;\n            var d = Math.sqrt(x * x + y * y);\n\n            if ((d - _l > r) || (d + _l < r)) {\n                return false;\n            }\n            if (Math.abs(startAngle - endAngle) % PI2 < 1e-4) {\n                // Is a circle\n                return true;\n            }\n            if (anticlockwise) {\n                var tmp = startAngle;\n                startAngle = normalizeRadian(endAngle);\n                endAngle = normalizeRadian(tmp);\n            } else {\n                startAngle = normalizeRadian(startAngle);\n                endAngle = normalizeRadian(endAngle);\n            }\n            if (startAngle > endAngle) {\n                endAngle += PI2;\n            }\n\n            var angle = Math.atan2(y, x);\n            if (angle < 0) {\n                angle += PI2;\n            }\n            return (angle >= startAngle && angle <= endAngle)\n                || (angle + PI2 >= startAngle && angle + PI2 <= endAngle);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/arc.js\n// module id = 655\n// module chunks = 0 1 2","\n\n    var curve = require('../core/curve');\n\n    module.exports = {\n        /**\n         * 三次贝塞尔曲线描边包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  x2\n         * @param  {number}  y2\n         * @param  {number}  x3\n         * @param  {number}  y3\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        containStroke: function(x0, y0, x1, y1, x2, y2, x3, y3, lineWidth, x, y) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l && y > y2 + _l && y > y3 + _l)\n                || (y < y0 - _l && y < y1 - _l && y < y2 - _l && y < y3 - _l)\n                || (x > x0 + _l && x > x1 + _l && x > x2 + _l && x > x3 + _l)\n                || (x < x0 - _l && x < x1 - _l && x < x2 - _l && x < x3 - _l)\n            ) {\n                return false;\n            }\n            var d = curve.cubicProjectPoint(\n                x0, y0, x1, y1, x2, y2, x3, y3,\n                x, y, null\n            );\n            return d <= _l / 2;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/cubic.js\n// module id = 656\n// module chunks = 0 1 2","\n    module.exports = {\n        /**\n         * 线段包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        containStroke: function (x0, y0, x1, y1, lineWidth, x, y) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n            var _a = 0;\n            var _b = x0;\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l)\n                || (y < y0 - _l && y < y1 - _l)\n                || (x > x0 + _l && x > x1 + _l)\n                || (x < x0 - _l && x < x1 - _l)\n            ) {\n                return false;\n            }\n\n            if (x0 !== x1) {\n                _a = (y0 - y1) / (x0 - x1);\n                _b = (x0 * y1 - x1 * y0) / (x0 - x1) ;\n            }\n            else {\n                return Math.abs(x - x0) <= _l / 2;\n            }\n            var tmp = _a * x - y + _b;\n            var _s = tmp * tmp / (_a * _a + 1);\n            return _s <= _l / 2 * _l / 2;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/line.js\n// module id = 657\n// module chunks = 0 1 2","'use strict';\n\n\n    var CMD = require('../core/PathProxy').CMD;\n    var line = require('./line');\n    var cubic = require('./cubic');\n    var quadratic = require('./quadratic');\n    var arc = require('./arc');\n    var normalizeRadian = require('./util').normalizeRadian;\n    var curve = require('../core/curve');\n\n    var windingLine = require('./windingLine');\n\n    var containStroke = line.containStroke;\n\n    var PI2 = Math.PI * 2;\n\n    var EPSILON = 1e-4;\n\n    function isAroundEqual(a, b) {\n        return Math.abs(a - b) < EPSILON;\n    }\n\n    // 临时数组\n    var roots = [-1, -1, -1];\n    var extrema = [-1, -1];\n\n    function swapExtrema() {\n        var tmp = extrema[0];\n        extrema[0] = extrema[1];\n        extrema[1] = tmp;\n    }\n\n    function windingCubic(x0, y0, x1, y1, x2, y2, x3, y3, x, y) {\n        // Quick reject\n        if (\n            (y > y0 && y > y1 && y > y2 && y > y3)\n            || (y < y0 && y < y1 && y < y2 && y < y3)\n        ) {\n            return 0;\n        }\n        var nRoots = curve.cubicRootAt(y0, y1, y2, y3, y, roots);\n        if (nRoots === 0) {\n            return 0;\n        }\n        else {\n            var w = 0;\n            var nExtrema = -1;\n            var y0_, y1_;\n            for (var i = 0; i < nRoots; i++) {\n                var t = roots[i];\n\n                // Avoid winding error when intersection point is the connect point of two line of polygon\n                var unit = (t === 0 || t === 1) ? 0.5 : 1;\n\n                var x_ = curve.cubicAt(x0, x1, x2, x3, t);\n                if (x_ < x) { // Quick reject\n                    continue;\n                }\n                if (nExtrema < 0) {\n                    nExtrema = curve.cubicExtrema(y0, y1, y2, y3, extrema);\n                    if (extrema[1] < extrema[0] && nExtrema > 1) {\n                        swapExtrema();\n                    }\n                    y0_ = curve.cubicAt(y0, y1, y2, y3, extrema[0]);\n                    if (nExtrema > 1) {\n                        y1_ = curve.cubicAt(y0, y1, y2, y3, extrema[1]);\n                    }\n                }\n                if (nExtrema == 2) {\n                    // 分成三段单调函数\n                    if (t < extrema[0]) {\n                        w += y0_ < y0 ? unit : -unit;\n                    }\n                    else if (t < extrema[1]) {\n                        w += y1_ < y0_ ? unit : -unit;\n                    }\n                    else {\n                        w += y3 < y1_ ? unit : -unit;\n                    }\n                }\n                else {\n                    // 分成两段单调函数\n                    if (t < extrema[0]) {\n                        w += y0_ < y0 ? unit : -unit;\n                    }\n                    else {\n                        w += y3 < y0_ ? unit : -unit;\n                    }\n                }\n            }\n            return w;\n        }\n    }\n\n    function windingQuadratic(x0, y0, x1, y1, x2, y2, x, y) {\n        // Quick reject\n        if (\n            (y > y0 && y > y1 && y > y2)\n            || (y < y0 && y < y1 && y < y2)\n        ) {\n            return 0;\n        }\n        var nRoots = curve.quadraticRootAt(y0, y1, y2, y, roots);\n        if (nRoots === 0) {\n            return 0;\n        }\n        else {\n            var t = curve.quadraticExtremum(y0, y1, y2);\n            if (t >= 0 && t <= 1) {\n                var w = 0;\n                var y_ = curve.quadraticAt(y0, y1, y2, t);\n                for (var i = 0; i < nRoots; i++) {\n                    // Remove one endpoint.\n                    var unit = (roots[i] === 0 || roots[i] === 1) ? 0.5 : 1;\n\n                    var x_ = curve.quadraticAt(x0, x1, x2, roots[i]);\n                    if (x_ < x) {   // Quick reject\n                        continue;\n                    }\n                    if (roots[i] < t) {\n                        w += y_ < y0 ? unit : -unit;\n                    }\n                    else {\n                        w += y2 < y_ ? unit : -unit;\n                    }\n                }\n                return w;\n            }\n            else {\n                // Remove one endpoint.\n                var unit = (roots[0] === 0 || roots[0] === 1) ? 0.5 : 1;\n\n                var x_ = curve.quadraticAt(x0, x1, x2, roots[0]);\n                if (x_ < x) {   // Quick reject\n                    return 0;\n                }\n                return y2 < y0 ? unit : -unit;\n            }\n        }\n    }\n\n    // TODO\n    // Arc 旋转\n    function windingArc(\n        cx, cy, r, startAngle, endAngle, anticlockwise, x, y\n    ) {\n        y -= cy;\n        if (y > r || y < -r) {\n            return 0;\n        }\n        var tmp = Math.sqrt(r * r - y * y);\n        roots[0] = -tmp;\n        roots[1] = tmp;\n\n        var diff = Math.abs(startAngle - endAngle);\n        if (diff < 1e-4) {\n            return 0;\n        }\n        if (diff % PI2 < 1e-4) {\n            // Is a circle\n            startAngle = 0;\n            endAngle = PI2;\n            var dir = anticlockwise ? 1 : -1;\n            if (x >= roots[0] + cx && x <= roots[1] + cx) {\n                return dir;\n            } else {\n                return 0;\n            }\n        }\n\n        if (anticlockwise) {\n            var tmp = startAngle;\n            startAngle = normalizeRadian(endAngle);\n            endAngle = normalizeRadian(tmp);\n        }\n        else {\n            startAngle = normalizeRadian(startAngle);\n            endAngle = normalizeRadian(endAngle);\n        }\n        if (startAngle > endAngle) {\n            endAngle += PI2;\n        }\n\n        var w = 0;\n        for (var i = 0; i < 2; i++) {\n            var x_ = roots[i];\n            if (x_ + cx > x) {\n                var angle = Math.atan2(y, x_);\n                var dir = anticlockwise ? 1 : -1;\n                if (angle < 0) {\n                    angle = PI2 + angle;\n                }\n                if (\n                    (angle >= startAngle && angle <= endAngle)\n                    || (angle + PI2 >= startAngle && angle + PI2 <= endAngle)\n                ) {\n                    if (angle > Math.PI / 2 && angle < Math.PI * 1.5) {\n                        dir = -dir;\n                    }\n                    w += dir;\n                }\n            }\n        }\n        return w;\n    }\n\n    function containPath(data, lineWidth, isStroke, x, y) {\n        var w = 0;\n        var xi = 0;\n        var yi = 0;\n        var x0 = 0;\n        var y0 = 0;\n\n        for (var i = 0; i < data.length;) {\n            var cmd = data[i++];\n            // Begin a new subpath\n            if (cmd === CMD.M && i > 1) {\n                // Close previous subpath\n                if (!isStroke) {\n                    w += windingLine(xi, yi, x0, y0, x, y);\n                }\n                // 如果被任何一个 subpath 包含\n                // if (w !== 0) {\n                //     return true;\n                // }\n            }\n\n            if (i == 1) {\n                // 如果第一个命令是 L, C, Q\n                // 则 previous point 同绘制命令的第一个 point\n                //\n                // 第一个命令为 Arc 的情况下会在后面特殊处理\n                xi = data[i];\n                yi = data[i + 1];\n\n                x0 = xi;\n                y0 = yi;\n            }\n\n            switch (cmd) {\n                case CMD.M:\n                    // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n                    // 在 closePath 的时候使用\n                    x0 = data[i++];\n                    y0 = data[i++];\n                    xi = x0;\n                    yi = y0;\n                    break;\n                case CMD.L:\n                    if (isStroke) {\n                        if (containStroke(xi, yi, data[i], data[i + 1], lineWidth, x, y)) {\n                            return true;\n                        }\n                    }\n                    else {\n                        // NOTE 在第一个命令为 L, C, Q 的时候会计算出 NaN\n                        w += windingLine(xi, yi, data[i], data[i + 1], x, y) || 0;\n                    }\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.C:\n                    if (isStroke) {\n                        if (cubic.containStroke(xi, yi,\n                            data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n                            lineWidth, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        w += windingCubic(\n                            xi, yi,\n                            data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n                            x, y\n                        ) || 0;\n                    }\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.Q:\n                    if (isStroke) {\n                        if (quadratic.containStroke(xi, yi,\n                            data[i++], data[i++], data[i], data[i + 1],\n                            lineWidth, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        w += windingQuadratic(\n                            xi, yi,\n                            data[i++], data[i++], data[i], data[i + 1],\n                            x, y\n                        ) || 0;\n                    }\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.A:\n                    // TODO Arc 判断的开销比较大\n                    var cx = data[i++];\n                    var cy = data[i++];\n                    var rx = data[i++];\n                    var ry = data[i++];\n                    var theta = data[i++];\n                    var dTheta = data[i++];\n                    // TODO Arc 旋转\n                    var psi = data[i++];\n                    var anticlockwise = 1 - data[i++];\n                    var x1 = Math.cos(theta) * rx + cx;\n                    var y1 = Math.sin(theta) * ry + cy;\n                    // 不是直接使用 arc 命令\n                    if (i > 1) {\n                        w += windingLine(xi, yi, x1, y1, x, y);\n                    }\n                    else {\n                        // 第一个命令起点还未定义\n                        x0 = x1;\n                        y0 = y1;\n                    }\n                    // zr 使用scale来模拟椭圆, 这里也对x做一定的缩放\n                    var _x = (x - cx) * ry / rx + cx;\n                    if (isStroke) {\n                        if (arc.containStroke(\n                            cx, cy, ry, theta, theta + dTheta, anticlockwise,\n                            lineWidth, _x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        w += windingArc(\n                            cx, cy, ry, theta, theta + dTheta, anticlockwise,\n                            _x, y\n                        );\n                    }\n                    xi = Math.cos(theta + dTheta) * rx + cx;\n                    yi = Math.sin(theta + dTheta) * ry + cy;\n                    break;\n                case CMD.R:\n                    x0 = xi = data[i++];\n                    y0 = yi = data[i++];\n                    var width = data[i++];\n                    var height = data[i++];\n                    var x1 = x0 + width;\n                    var y1 = y0 + height;\n                    if (isStroke) {\n                        if (containStroke(x0, y0, x1, y0, lineWidth, x, y)\n                          || containStroke(x1, y0, x1, y1, lineWidth, x, y)\n                          || containStroke(x1, y1, x0, y1, lineWidth, x, y)\n                          || containStroke(x0, y1, x0, y0, lineWidth, x, y)\n                        ) {\n                            return true;\n                        }\n                    }\n                    else {\n                        // FIXME Clockwise ?\n                        w += windingLine(x1, y0, x1, y1, x, y);\n                        w += windingLine(x0, y1, x0, y0, x, y);\n                    }\n                    break;\n                case CMD.Z:\n                    if (isStroke) {\n                        if (containStroke(\n                            xi, yi, x0, y0, lineWidth, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        // Close a subpath\n                        w += windingLine(xi, yi, x0, y0, x, y);\n                        // 如果被任何一个 subpath 包含\n                        // FIXME subpaths may overlap\n                        // if (w !== 0) {\n                        //     return true;\n                        // }\n                    }\n                    xi = x0;\n                    yi = y0;\n                    break;\n            }\n        }\n        if (!isStroke && !isAroundEqual(yi, y0)) {\n            w += windingLine(xi, yi, x0, y0, x, y) || 0;\n        }\n        return w !== 0;\n    }\n\n    module.exports = {\n        contain: function (pathData, x, y) {\n            return containPath(pathData, 0, false, x, y);\n        },\n\n        containStroke: function (pathData, lineWidth, x, y) {\n            return containPath(pathData, lineWidth, true, x, y);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/path.js\n// module id = 658\n// module chunks = 0 1 2","\n\n    var curve = require('../core/curve');\n\n    module.exports = {\n        /**\n         * 二次贝塞尔曲线描边包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  x2\n         * @param  {number}  y2\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        containStroke: function (x0, y0, x1, y1, x2, y2, lineWidth, x, y) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l && y > y2 + _l)\n                || (y < y0 - _l && y < y1 - _l && y < y2 - _l)\n                || (x > x0 + _l && x > x1 + _l && x > x2 + _l)\n                || (x < x0 - _l && x < x1 - _l && x < x2 - _l)\n            ) {\n                return false;\n            }\n            var d = curve.quadraticProjectPoint(\n                x0, y0, x1, y1, x2, y2,\n                x, y, null\n            );\n            return d <= _l / 2;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/quadratic.js\n// module id = 659\n// module chunks = 0 1 2","\n    module.exports = function windingLine(x0, y0, x1, y1, x, y) {\n        if ((y > y0 && y > y1) || (y < y0 && y < y1)) {\n            return 0;\n        }\n        // Ignore horizontal line\n        if (y1 === y0) {\n            return 0;\n        }\n        var dir = y1 < y0 ? 1 : -1;\n        var t = (y - y0) / (y1 - y0);\n\n        // Avoid winding error when intersection point is the connect point of two line of polygon\n        if (t === 1 || t === 0) {\n            dir = y1 < y0 ? 0.5 : -0.5;\n        }\n\n        var x_ = t * (x1 - x0) + x0;\n\n        return x_ > x ? dir : 0;\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/windingLine.js\n// module id = 660\n// module chunks = 0 1 2","'use strict';\n/**\n * Only implements needed gestures for mobile.\n */\n\n\n    var eventUtil = require('./event');\n\n    var GestureMgr = function () {\n\n        /**\n         * @private\n         * @type {Array.<Object>}\n         */\n        this._track = [];\n    };\n\n    GestureMgr.prototype = {\n\n        constructor: GestureMgr,\n\n        recognize: function (event, target, root) {\n            this._doTrack(event, target, root);\n            return this._recognize(event);\n        },\n\n        clear: function () {\n            this._track.length = 0;\n            return this;\n        },\n\n        _doTrack: function (event, target, root) {\n            var touches = event.touches;\n\n            if (!touches) {\n                return;\n            }\n\n            var trackItem = {\n                points: [],\n                touches: [],\n                target: target,\n                event: event\n            };\n\n            for (var i = 0, len = touches.length; i < len; i++) {\n                var touch = touches[i];\n                var pos = eventUtil.clientToLocal(root, touch, {});\n                trackItem.points.push([pos.zrX, pos.zrY]);\n                trackItem.touches.push(touch);\n            }\n\n            this._track.push(trackItem);\n        },\n\n        _recognize: function (event) {\n            for (var eventName in recognizers) {\n                if (recognizers.hasOwnProperty(eventName)) {\n                    var gestureInfo = recognizers[eventName](this._track, event);\n                    if (gestureInfo) {\n                        return gestureInfo;\n                    }\n                }\n            }\n        }\n    };\n\n    function dist(pointPair) {\n        var dx = pointPair[1][0] - pointPair[0][0];\n        var dy = pointPair[1][1] - pointPair[0][1];\n\n        return Math.sqrt(dx * dx + dy * dy);\n    }\n\n    function center(pointPair) {\n        return [\n            (pointPair[0][0] + pointPair[1][0]) / 2,\n            (pointPair[0][1] + pointPair[1][1]) / 2\n        ];\n    }\n\n    var recognizers = {\n\n        pinch: function (track, event) {\n            var trackLen = track.length;\n\n            if (!trackLen) {\n                return;\n            }\n\n            var pinchEnd = (track[trackLen - 1] || {}).points;\n            var pinchPre = (track[trackLen - 2] || {}).points || pinchEnd;\n\n            if (pinchPre\n                && pinchPre.length > 1\n                && pinchEnd\n                && pinchEnd.length > 1\n            ) {\n                var pinchScale = dist(pinchEnd) / dist(pinchPre);\n                !isFinite(pinchScale) && (pinchScale = 1);\n\n                event.pinchScale = pinchScale;\n\n                var pinchCenter = center(pinchEnd);\n                event.pinchX = pinchCenter[0];\n                event.pinchY = pinchCenter[1];\n\n                return {\n                    type: 'pinch',\n                    target: track[0].target,\n                    event: event\n                };\n            }\n        }\n\n        // Only pinch currently.\n    };\n\n    module.exports = GestureMgr;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/GestureMgr.js\n// module id = 661\n// module chunks = 0 1 2","/**\n * @author Yi Shen(https://github.com/pissang)\n */\n\n\n    var vec2 = require('./vector');\n    var curve = require('./curve');\n\n    var bbox = {};\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    var mathSin = Math.sin;\n    var mathCos = Math.cos;\n\n    var start = vec2.create();\n    var end = vec2.create();\n    var extremity = vec2.create();\n\n    var PI2 = Math.PI * 2;\n    /**\n     * 从顶点数组中计算出最小包围盒，写入`min`和`max`中\n     * @module zrender/core/bbox\n     * @param {Array<Object>} points 顶点数组\n     * @param {number} min\n     * @param {number} max\n     */\n    bbox.fromPoints = function(points, min, max) {\n        if (points.length === 0) {\n            return;\n        }\n        var p = points[0];\n        var left = p[0];\n        var right = p[0];\n        var top = p[1];\n        var bottom = p[1];\n        var i;\n\n        for (i = 1; i < points.length; i++) {\n            p = points[i];\n            left = mathMin(left, p[0]);\n            right = mathMax(right, p[0]);\n            top = mathMin(top, p[1]);\n            bottom = mathMax(bottom, p[1]);\n        }\n\n        min[0] = left;\n        min[1] = top;\n        max[0] = right;\n        max[1] = bottom;\n    };\n\n    /**\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromLine = function (x0, y0, x1, y1, min, max) {\n        min[0] = mathMin(x0, x1);\n        min[1] = mathMin(y0, y1);\n        max[0] = mathMax(x0, x1);\n        max[1] = mathMax(y0, y1);\n    };\n\n    var xDim = [];\n    var yDim = [];\n    /**\n     * 从三阶贝塞尔曲线(p0, p1, p2, p3)中计算出最小包围盒，写入`min`和`max`中\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x3\n     * @param {number} y3\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromCubic = function(\n        x0, y0, x1, y1, x2, y2, x3, y3, min, max\n    ) {\n        var cubicExtrema = curve.cubicExtrema;\n        var cubicAt = curve.cubicAt;\n        var i;\n        var n = cubicExtrema(x0, x1, x2, x3, xDim);\n        min[0] = Infinity;\n        min[1] = Infinity;\n        max[0] = -Infinity;\n        max[1] = -Infinity;\n\n        for (i = 0; i < n; i++) {\n            var x = cubicAt(x0, x1, x2, x3, xDim[i]);\n            min[0] = mathMin(x, min[0]);\n            max[0] = mathMax(x, max[0]);\n        }\n        n = cubicExtrema(y0, y1, y2, y3, yDim);\n        for (i = 0; i < n; i++) {\n            var y = cubicAt(y0, y1, y2, y3, yDim[i]);\n            min[1] = mathMin(y, min[1]);\n            max[1] = mathMax(y, max[1]);\n        }\n\n        min[0] = mathMin(x0, min[0]);\n        max[0] = mathMax(x0, max[0]);\n        min[0] = mathMin(x3, min[0]);\n        max[0] = mathMax(x3, max[0]);\n\n        min[1] = mathMin(y0, min[1]);\n        max[1] = mathMax(y0, max[1]);\n        min[1] = mathMin(y3, min[1]);\n        max[1] = mathMax(y3, max[1]);\n    };\n\n    /**\n     * 从二阶贝塞尔曲线(p0, p1, p2)中计算出最小包围盒，写入`min`和`max`中\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromQuadratic = function(x0, y0, x1, y1, x2, y2, min, max) {\n        var quadraticExtremum = curve.quadraticExtremum;\n        var quadraticAt = curve.quadraticAt;\n        // Find extremities, where derivative in x dim or y dim is zero\n        var tx =\n            mathMax(\n                mathMin(quadraticExtremum(x0, x1, x2), 1), 0\n            );\n        var ty =\n            mathMax(\n                mathMin(quadraticExtremum(y0, y1, y2), 1), 0\n            );\n\n        var x = quadraticAt(x0, x1, x2, tx);\n        var y = quadraticAt(y0, y1, y2, ty);\n\n        min[0] = mathMin(x0, x2, x);\n        min[1] = mathMin(y0, y2, y);\n        max[0] = mathMax(x0, x2, x);\n        max[1] = mathMax(y0, y2, y);\n    };\n\n    /**\n     * 从圆弧中计算出最小包围盒，写入`min`和`max`中\n     * @method\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x\n     * @param {number} y\n     * @param {number} rx\n     * @param {number} ry\n     * @param {number} startAngle\n     * @param {number} endAngle\n     * @param {number} anticlockwise\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromArc = function (\n        x, y, rx, ry, startAngle, endAngle, anticlockwise, min, max\n    ) {\n        var vec2Min = vec2.min;\n        var vec2Max = vec2.max;\n\n        var diff = Math.abs(startAngle - endAngle);\n\n\n        if (diff % PI2 < 1e-4 && diff > 1e-4) {\n            // Is a circle\n            min[0] = x - rx;\n            min[1] = y - ry;\n            max[0] = x + rx;\n            max[1] = y + ry;\n            return;\n        }\n\n        start[0] = mathCos(startAngle) * rx + x;\n        start[1] = mathSin(startAngle) * ry + y;\n\n        end[0] = mathCos(endAngle) * rx + x;\n        end[1] = mathSin(endAngle) * ry + y;\n\n        vec2Min(min, start, end);\n        vec2Max(max, start, end);\n\n        // Thresh to [0, Math.PI * 2]\n        startAngle = startAngle % (PI2);\n        if (startAngle < 0) {\n            startAngle = startAngle + PI2;\n        }\n        endAngle = endAngle % (PI2);\n        if (endAngle < 0) {\n            endAngle = endAngle + PI2;\n        }\n\n        if (startAngle > endAngle && !anticlockwise) {\n            endAngle += PI2;\n        }\n        else if (startAngle < endAngle && anticlockwise) {\n            startAngle += PI2;\n        }\n        if (anticlockwise) {\n            var tmp = endAngle;\n            endAngle = startAngle;\n            startAngle = tmp;\n        }\n\n        // var number = 0;\n        // var step = (anticlockwise ? -Math.PI : Math.PI) / 2;\n        for (var angle = 0; angle < endAngle; angle += Math.PI / 2) {\n            if (angle > startAngle) {\n                extremity[0] = mathCos(angle) * rx + x;\n                extremity[1] = mathSin(angle) * ry + y;\n\n                vec2Min(min, extremity, min);\n                vec2Max(max, extremity, max);\n            }\n        }\n    };\n\n    module.exports = bbox;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/bbox.js\n// module id = 662\n// module chunks = 0 1 2","\n\n    var eventTool = require('../core/event');\n    var zrUtil = require('../core/util');\n    var Eventful = require('../mixin/Eventful');\n    var env = require('../core/env');\n    var GestureMgr = require('../core/GestureMgr');\n\n    var addEventListener = eventTool.addEventListener;\n    var removeEventListener = eventTool.removeEventListener;\n    var normalizeEvent = eventTool.normalizeEvent;\n\n    var TOUCH_CLICK_DELAY = 300;\n\n    var mouseHandlerNames = [\n        'click', 'dblclick', 'mousewheel', 'mouseout',\n        'mouseup', 'mousedown', 'mousemove', 'contextmenu'\n    ];\n\n    var touchHandlerNames = [\n        'touchstart', 'touchend', 'touchmove'\n    ];\n\n    var pointerEventNames = {\n        pointerdown: 1, pointerup: 1, pointermove: 1, pointerout: 1\n    };\n\n    var pointerHandlerNames = zrUtil.map(mouseHandlerNames, function (name) {\n        var nm = name.replace('mouse', 'pointer');\n        return pointerEventNames[nm] ? nm : name;\n    });\n\n    function eventNameFix(name) {\n        return (name === 'mousewheel' && env.browser.firefox) ? 'DOMMouseScroll' : name;\n    }\n\n    function processGesture(proxy, event, stage) {\n        var gestureMgr = proxy._gestureMgr;\n\n        stage === 'start' && gestureMgr.clear();\n\n        var gestureInfo = gestureMgr.recognize(\n            event,\n            proxy.handler.findHover(event.zrX, event.zrY, null).target,\n            proxy.dom\n        );\n\n        stage === 'end' && gestureMgr.clear();\n\n        // Do not do any preventDefault here. Upper application do that if necessary.\n        if (gestureInfo) {\n            var type = gestureInfo.type;\n            event.gestureEvent = type;\n\n            proxy.handler.dispatchToElement({target: gestureInfo.target}, type, gestureInfo.event);\n        }\n    }\n\n    // function onMSGestureChange(proxy, event) {\n    //     if (event.translationX || event.translationY) {\n    //         // mousemove is carried by MSGesture to reduce the sensitivity.\n    //         proxy.handler.dispatchToElement(event.target, 'mousemove', event);\n    //     }\n    //     if (event.scale !== 1) {\n    //         event.pinchX = event.offsetX;\n    //         event.pinchY = event.offsetY;\n    //         event.pinchScale = event.scale;\n    //         proxy.handler.dispatchToElement(event.target, 'pinch', event);\n    //     }\n    // }\n\n    /**\n     * Prevent mouse event from being dispatched after Touch Events action\n     * @see <https://github.com/deltakosh/handjs/blob/master/src/hand.base.js>\n     * 1. Mobile browsers dispatch mouse events 300ms after touchend.\n     * 2. Chrome for Android dispatch mousedown for long-touch about 650ms\n     * Result: Blocking Mouse Events for 700ms.\n     */\n    function setTouchTimer(instance) {\n        instance._touching = true;\n        clearTimeout(instance._touchTimer);\n        instance._touchTimer = setTimeout(function () {\n            instance._touching = false;\n        }, 700);\n    }\n\n\n    var domHandlers = {\n        /**\n         * Mouse move handler\n         * @inner\n         * @param {Event} event\n         */\n        mousemove: function (event) {\n            event = normalizeEvent(this.dom, event);\n\n            this.trigger('mousemove', event);\n        },\n\n        /**\n         * Mouse out handler\n         * @inner\n         * @param {Event} event\n         */\n        mouseout: function (event) {\n            event = normalizeEvent(this.dom, event);\n\n            var element = event.toElement || event.relatedTarget;\n            if (element != this.dom) {\n                while (element && element.nodeType != 9) {\n                    // 忽略包含在root中的dom引起的mouseOut\n                    if (element === this.dom) {\n                        return;\n                    }\n\n                    element = element.parentNode;\n                }\n            }\n\n            this.trigger('mouseout', event);\n        },\n\n        /**\n         * Touch开始响应函数\n         * @inner\n         * @param {Event} event\n         */\n        touchstart: function (event) {\n            // Default mouse behaviour should not be disabled here.\n            // For example, page may needs to be slided.\n            event = normalizeEvent(this.dom, event);\n\n            // Mark touch, which is useful in distinguish touch and\n            // mouse event in upper applicatoin.\n            event.zrByTouch = true;\n\n            this._lastTouchMoment = new Date();\n\n            processGesture(this, event, 'start');\n\n            // In touch device, trigger `mousemove`(`mouseover`) should\n            // be triggered, and must before `mousedown` triggered.\n            domHandlers.mousemove.call(this, event);\n\n            domHandlers.mousedown.call(this, event);\n\n            setTouchTimer(this);\n        },\n\n        /**\n         * Touch移动响应函数\n         * @inner\n         * @param {Event} event\n         */\n        touchmove: function (event) {\n\n            event = normalizeEvent(this.dom, event);\n\n            // Mark touch, which is useful in distinguish touch and\n            // mouse event in upper applicatoin.\n            event.zrByTouch = true;\n\n            processGesture(this, event, 'change');\n\n            // Mouse move should always be triggered no matter whether\n            // there is gestrue event, because mouse move and pinch may\n            // be used at the same time.\n            domHandlers.mousemove.call(this, event);\n\n            setTouchTimer(this);\n        },\n\n        /**\n         * Touch结束响应函数\n         * @inner\n         * @param {Event} event\n         */\n        touchend: function (event) {\n\n            event = normalizeEvent(this.dom, event);\n\n            // Mark touch, which is useful in distinguish touch and\n            // mouse event in upper applicatoin.\n            event.zrByTouch = true;\n\n            processGesture(this, event, 'end');\n\n            domHandlers.mouseup.call(this, event);\n\n            // Do not trigger `mouseout` here, in spite of `mousemove`(`mouseover`) is\n            // triggered in `touchstart`. This seems to be illogical, but by this mechanism,\n            // we can conveniently implement \"hover style\" in both PC and touch device just\n            // by listening to `mouseover` to add \"hover style\" and listening to `mouseout`\n            // to remove \"hover style\" on an element, without any additional code for\n            // compatibility. (`mouseout` will not be triggered in `touchend`, so \"hover\n            // style\" will remain for user view)\n\n            // click event should always be triggered no matter whether\n            // there is gestrue event. System click can not be prevented.\n            if (+new Date() - this._lastTouchMoment < TOUCH_CLICK_DELAY) {\n                domHandlers.click.call(this, event);\n            }\n\n            setTouchTimer(this);\n        },\n\n        pointerdown: function (event) {\n            domHandlers.mousedown.call(this, event);\n\n            // if (useMSGuesture(this, event)) {\n            //     this._msGesture.addPointer(event.pointerId);\n            // }\n        },\n\n        pointermove: function (event) {\n            // FIXME\n            // pointermove is so sensitive that it always triggered when\n            // tap(click) on touch screen, which affect some judgement in\n            // upper application. So, we dont support mousemove on MS touch\n            // device yet.\n            if (!isPointerFromTouch(event)) {\n                domHandlers.mousemove.call(this, event);\n            }\n        },\n\n        pointerup: function (event) {\n            domHandlers.mouseup.call(this, event);\n        },\n\n        pointerout: function (event) {\n            // pointerout will be triggered when tap on touch screen\n            // (IE11+/Edge on MS Surface) after click event triggered,\n            // which is inconsistent with the mousout behavior we defined\n            // in touchend. So we unify them.\n            // (check domHandlers.touchend for detailed explanation)\n            if (!isPointerFromTouch(event)) {\n                domHandlers.mouseout.call(this, event);\n            }\n        }\n    };\n\n    function isPointerFromTouch(event) {\n        var pointerType = event.pointerType;\n        return pointerType === 'pen' || pointerType === 'touch';\n    }\n\n    // function useMSGuesture(handlerProxy, event) {\n    //     return isPointerFromTouch(event) && !!handlerProxy._msGesture;\n    // }\n\n    // Common handlers\n    zrUtil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n        domHandlers[name] = function (event) {\n            event = normalizeEvent(this.dom, event);\n            this.trigger(name, event);\n        };\n    });\n\n    /**\n     * 为控制类实例初始化dom 事件处理函数\n     *\n     * @inner\n     * @param {module:zrender/Handler} instance 控制类实例\n     */\n    function initDomHandler(instance) {\n        zrUtil.each(touchHandlerNames, function (name) {\n            instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n        });\n\n        zrUtil.each(pointerHandlerNames, function (name) {\n            instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n        });\n\n        zrUtil.each(mouseHandlerNames, function (name) {\n            instance._handlers[name] = makeMouseHandler(domHandlers[name], instance);\n        });\n\n        function makeMouseHandler(fn, instance) {\n            return function () {\n                if (instance._touching) {\n                    return;\n                }\n                return fn.apply(instance, arguments);\n            };\n        }\n    }\n\n\n    function HandlerDomProxy(dom) {\n        Eventful.call(this);\n\n        this.dom = dom;\n\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this._touching = false;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._touchTimer;\n\n        /**\n         * @private\n         * @type {module:zrender/core/GestureMgr}\n         */\n        this._gestureMgr = new GestureMgr();\n\n        this._handlers = {};\n\n        initDomHandler(this);\n\n        if (env.pointerEventsSupported) { // Only IE11+/Edge\n            // 1. On devices that both enable touch and mouse (e.g., MS Surface and lenovo X240),\n            // IE11+/Edge do not trigger touch event, but trigger pointer event and mouse event\n            // at the same time.\n            // 2. On MS Surface, it probablely only trigger mousedown but no mouseup when tap on\n            // screen, which do not occurs in pointer event.\n            // So we use pointer event to both detect touch gesture and mouse behavior.\n            mountHandlers(pointerHandlerNames, this);\n\n            // FIXME\n            // Note: MS Gesture require CSS touch-action set. But touch-action is not reliable,\n            // which does not prevent defuault behavior occasionally (which may cause view port\n            // zoomed in but use can not zoom it back). And event.preventDefault() does not work.\n            // So we have to not to use MSGesture and not to support touchmove and pinch on MS\n            // touch screen. And we only support click behavior on MS touch screen now.\n\n            // MS Gesture Event is only supported on IE11+/Edge and on Windows 8+.\n            // We dont support touch on IE on win7.\n            // See <https://msdn.microsoft.com/en-us/library/dn433243(v=vs.85).aspx>\n            // if (typeof MSGesture === 'function') {\n            //     (this._msGesture = new MSGesture()).target = dom; // jshint ignore:line\n            //     dom.addEventListener('MSGestureChange', onMSGestureChange);\n            // }\n        }\n        else {\n            if (env.touchEventsSupported) {\n                mountHandlers(touchHandlerNames, this);\n                // Handler of 'mouseout' event is needed in touch mode, which will be mounted below.\n                // addEventListener(root, 'mouseout', this._mouseoutHandler);\n            }\n\n            // 1. Considering some devices that both enable touch and mouse event (like on MS Surface\n            // and lenovo X240, @see #2350), we make mouse event be always listened, otherwise\n            // mouse event can not be handle in those devices.\n            // 2. On MS Surface, Chrome will trigger both touch event and mouse event. How to prevent\n            // mouseevent after touch event triggered, see `setTouchTimer`.\n            mountHandlers(mouseHandlerNames, this);\n        }\n\n        function mountHandlers(handlerNames, instance) {\n            zrUtil.each(handlerNames, function (name) {\n                addEventListener(dom, eventNameFix(name), instance._handlers[name]);\n            }, instance);\n        }\n    }\n\n    var handlerDomProxyProto = HandlerDomProxy.prototype;\n    handlerDomProxyProto.dispose = function () {\n        var handlerNames = mouseHandlerNames.concat(touchHandlerNames);\n\n        for (var i = 0; i < handlerNames.length; i++) {\n            var name = handlerNames[i];\n            removeEventListener(this.dom, eventNameFix(name), this._handlers[name]);\n        }\n    };\n\n    handlerDomProxyProto.setCursor = function (cursorStyle) {\n        this.dom.style.cursor = cursorStyle || 'default';\n    };\n\n    zrUtil.mixin(HandlerDomProxy, Eventful);\n\n    module.exports = HandlerDomProxy;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/dom/HandlerProxy.js\n// module id = 663\n// module chunks = 0 1 2","// CompoundPath to improve performance\n\n\n    var Path = require('./Path');\n\n    module.exports = Path.extend({\n\n        type: 'compound',\n\n        shape: {\n\n            paths: null\n        },\n\n        _updatePathDirty: function () {\n            var dirtyPath = this.__dirtyPath;\n            var paths = this.shape.paths;\n            for (var i = 0; i < paths.length; i++) {\n                // Mark as dirty if any subpath is dirty\n                dirtyPath = dirtyPath || paths[i].__dirtyPath;\n            }\n            this.__dirtyPath = dirtyPath;\n            this.__dirty = this.__dirty || dirtyPath;\n        },\n\n        beforeBrush: function () {\n            this._updatePathDirty();\n            var paths = this.shape.paths || [];\n            var scale = this.getGlobalScale();\n            // Update path scale\n            for (var i = 0; i < paths.length; i++) {\n                if (!paths[i].path) {\n                    paths[i].createPathProxy();\n                }\n                paths[i].path.setScale(scale[0], scale[1]);\n            }\n        },\n\n        buildPath: function (ctx, shape) {\n            var paths = shape.paths || [];\n            for (var i = 0; i < paths.length; i++) {\n                paths[i].buildPath(ctx, paths[i].shape, true);\n            }\n        },\n\n        afterBrush: function () {\n            var paths = this.shape.paths;\n            for (var i = 0; i < paths.length; i++) {\n                paths[i].__dirtyPath = false;\n            }\n        },\n\n        getBoundingRect: function () {\n            this._updatePathDirty();\n            return Path.prototype.getBoundingRect.call(this);\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/CompoundPath.js\n// module id = 664\n// module chunks = 0 1 2","'use strict';\n\n\n    var zrUtil = require('../core/util');\n\n    var Gradient = require('./Gradient');\n\n    /**\n     * x, y, x2, y2 are all percent from 0 to 1\n     * @param {number} [x=0]\n     * @param {number} [y=0]\n     * @param {number} [x2=1]\n     * @param {number} [y2=0]\n     * @param {Array.<Object>} colorStops\n     * @param {boolean} [globalCoord=false]\n     */\n    var LinearGradient = function (x, y, x2, y2, colorStops, globalCoord) {\n        // Should do nothing more in this constructor. Because gradient can be\n        // declard by `color: {type: 'linear', colorStops: ...}`, where\n        // this constructor will not be called.\n\n        this.x = x == null ? 0 : x;\n\n        this.y = y == null ? 0 : y;\n\n        this.x2 = x2 == null ? 1 : x2;\n\n        this.y2 = y2 == null ? 0 : y2;\n\n        // Can be cloned\n        this.type = 'linear';\n\n        // If use global coord\n        this.global = globalCoord || false;\n\n        Gradient.call(this, colorStops);\n    };\n\n    LinearGradient.prototype = {\n\n        constructor: LinearGradient\n    };\n\n    zrUtil.inherits(LinearGradient, Gradient);\n\n    module.exports = LinearGradient;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/LinearGradient.js\n// module id = 665\n// module chunks = 0 1 2","'use strict';\n\n\n    var zrUtil = require('../core/util');\n\n    var Gradient = require('./Gradient');\n\n    /**\n     * x, y, r are all percent from 0 to 1\n     * @param {number} [x=0.5]\n     * @param {number} [y=0.5]\n     * @param {number} [r=0.5]\n     * @param {Array.<Object>} [colorStops]\n     * @param {boolean} [globalCoord=false]\n     */\n    var RadialGradient = function (x, y, r, colorStops, globalCoord) {\n        // Should do nothing more in this constructor. Because gradient can be\n        // declard by `color: {type: 'radial', colorStops: ...}`, where\n        // this constructor will not be called.\n\n        this.x = x == null ? 0.5 : x;\n\n        this.y = y == null ? 0.5 : y;\n\n        this.r = r == null ? 0.5 : r;\n\n        // Can be cloned\n        this.type = 'radial';\n\n        // If use global coord\n        this.global = globalCoord || false;\n\n        Gradient.call(this, colorStops);\n    };\n\n    RadialGradient.prototype = {\n\n        constructor: RadialGradient\n    };\n\n    zrUtil.inherits(RadialGradient, Gradient);\n\n    module.exports = RadialGradient;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/RadialGradient.js\n// module id = 666\n// module chunks = 0 1 2","/**\n * Text element\n * @module zrender/graphic/Text\n *\n * TODO Wrapping\n *\n * Text not support gradient\n */\n\n\n\n    var Displayable = require('./Displayable');\n    var zrUtil = require('../core/util');\n    var textContain = require('../contain/text');\n\n    /**\n     * @alias zrender/graphic/Text\n     * @extends module:zrender/graphic/Displayable\n     * @constructor\n     * @param {Object} opts\n     */\n    var Text = function (opts) {\n        Displayable.call(this, opts);\n    };\n\n    Text.prototype = {\n\n        constructor: Text,\n\n        type: 'text',\n\n        brush: function (ctx, prevEl) {\n            var style = this.style;\n            var x = style.x || 0;\n            var y = style.y || 0;\n            // Convert to string\n            var text = style.text;\n\n            // Convert to string\n            text != null && (text += '');\n\n            // Always bind style\n            style.bind(ctx, this, prevEl);\n\n            if (text) {\n\n                this.setTransform(ctx);\n\n                var textBaseline;\n                var textAlign = style.textAlign;\n                var font = style.textFont || style.font;\n                if (style.textVerticalAlign) {\n                    var rect = textContain.getBoundingRect(\n                        text, font, style.textAlign, 'top'\n                    );\n                    // Ignore textBaseline\n                    textBaseline = 'middle';\n                    switch (style.textVerticalAlign) {\n                        case 'middle':\n                            y -= rect.height / 2 - rect.lineHeight / 2;\n                            break;\n                        case 'bottom':\n                            y -= rect.height - rect.lineHeight / 2;\n                            break;\n                        default:\n                            y += rect.lineHeight / 2;\n                    }\n                }\n                else {\n                    textBaseline = style.textBaseline;\n                }\n\n                // TODO Invalid font\n                ctx.font = font || '12px sans-serif';\n                ctx.textAlign = textAlign || 'left';\n                // Use canvas default left textAlign. Giving invalid value will cause state not change\n                if (ctx.textAlign !== textAlign) {\n                    ctx.textAlign = 'left';\n                }\n                // FIXME in text contain default is top\n                ctx.textBaseline = textBaseline || 'alphabetic';\n                // Use canvas default alphabetic baseline\n                if (ctx.textBaseline !== textBaseline) {\n                    ctx.textBaseline = 'alphabetic';\n                }\n\n                var lineHeight = textContain.measureText('国', ctx.font).width;\n\n                var textLines = text.split('\\n');\n                for (var i = 0; i < textLines.length; i++) {\n                    // Fill after stroke so the outline will not cover the main part.\n                    style.hasStroke() && ctx.strokeText(textLines[i], x, y);\n                    style.hasFill() && ctx.fillText(textLines[i], x, y);\n                    y += lineHeight;\n                }\n\n                this.restoreTransform(ctx);\n            }\n        },\n\n        getBoundingRect: function () {\n            var style = this.style;\n            if (!this._rect) {\n                var textVerticalAlign = style.textVerticalAlign;\n                var rect = textContain.getBoundingRect(\n                    style.text + '', style.textFont || style.font, style.textAlign,\n                    textVerticalAlign ? 'top' : style.textBaseline\n                );\n                switch (textVerticalAlign) {\n                    case 'middle':\n                        rect.y -= rect.height / 2;\n                        break;\n                    case 'bottom':\n                        rect.y -= rect.height;\n                        break;\n                }\n                rect.x += style.x || 0;\n                rect.y += style.y || 0;\n                if (style.hasStroke()) {\n                    var w = style.lineWidth;\n                    rect.x -= w / 2;\n                    rect.y -= w / 2;\n                    rect.width += w;\n                    rect.height += w;\n                }\n                this._rect = rect;\n            }\n\n            return this._rect;\n        }\n    };\n\n    zrUtil.inherits(Text, Displayable);\n\n    module.exports = Text;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Text.js\n// module id = 667\n// module chunks = 0 1 2","\n\n    module.exports = {\n        buildPath: function (ctx, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var width = shape.width;\n            var height = shape.height;\n            var r = shape.r;\n            var r1;\n            var r2;\n            var r3;\n            var r4;\n\n            // Convert width and height to positive for better borderRadius\n            if (width < 0) {\n                x = x + width;\n                width = -width;\n            }\n            if (height < 0) {\n                y = y + height;\n                height = -height;\n            }\n\n            if (typeof r === 'number') {\n                r1 = r2 = r3 = r4 = r;\n            }\n            else if (r instanceof Array) {\n                if (r.length === 1) {\n                    r1 = r2 = r3 = r4 = r[0];\n                }\n                else if (r.length === 2) {\n                    r1 = r3 = r[0];\n                    r2 = r4 = r[1];\n                }\n                else if (r.length === 3) {\n                    r1 = r[0];\n                    r2 = r4 = r[1];\n                    r3 = r[2];\n                }\n                else {\n                    r1 = r[0];\n                    r2 = r[1];\n                    r3 = r[2];\n                    r4 = r[3];\n                }\n            }\n            else {\n                r1 = r2 = r3 = r4 = 0;\n            }\n\n            var total;\n            if (r1 + r2 > width) {\n                total = r1 + r2;\n                r1 *= width / total;\n                r2 *= width / total;\n            }\n            if (r3 + r4 > width) {\n                total = r3 + r4;\n                r3 *= width / total;\n                r4 *= width / total;\n            }\n            if (r2 + r3 > height) {\n                total = r2 + r3;\n                r2 *= height / total;\n                r3 *= height / total;\n            }\n            if (r1 + r4 > height) {\n                total = r1 + r4;\n                r1 *= height / total;\n                r4 *= height / total;\n            }\n            ctx.moveTo(x + r1, y);\n            ctx.lineTo(x + width - r2, y);\n            r2 !== 0 && ctx.quadraticCurveTo(\n                x + width, y, x + width, y + r2\n            );\n            ctx.lineTo(x + width, y + height - r3);\n            r3 !== 0 && ctx.quadraticCurveTo(\n                x + width, y + height, x + width - r3, y + height\n            );\n            ctx.lineTo(x + r4, y + height);\n            r4 !== 0 && ctx.quadraticCurveTo(\n                x, y + height, x, y + height - r4\n            );\n            ctx.lineTo(x, y + r1);\n            r1 !== 0 && ctx.quadraticCurveTo(x, y, x + r1, y);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/helper/roundRect.js\n// module id = 668\n// module chunks = 0 1 2","/**\n * 贝塞尔平滑曲线\n * @module zrender/shape/util/smoothBezier\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n\n    var vec2 = require('../../core/vector');\n    var v2Min = vec2.min;\n    var v2Max = vec2.max;\n    var v2Scale = vec2.scale;\n    var v2Distance = vec2.distance;\n    var v2Add = vec2.add;\n\n    /**\n     * 贝塞尔平滑曲线\n     * @alias module:zrender/shape/util/smoothBezier\n     * @param {Array} points 线段顶点数组\n     * @param {number} smooth 平滑等级, 0-1\n     * @param {boolean} isLoop\n     * @param {Array} constraint 将计算出来的控制点约束在一个包围盒内\n     *                           比如 [[0, 0], [100, 100]], 这个包围盒会与\n     *                           整个折线的包围盒做一个并集用来约束控制点。\n     * @param {Array} 计算出来的控制点数组\n     */\n    module.exports = function (points, smooth, isLoop, constraint) {\n        var cps = [];\n\n        var v = [];\n        var v1 = [];\n        var v2 = [];\n        var prevPoint;\n        var nextPoint;\n\n        var min, max;\n        if (constraint) {\n            min = [Infinity, Infinity];\n            max = [-Infinity, -Infinity];\n            for (var i = 0, len = points.length; i < len; i++) {\n                v2Min(min, min, points[i]);\n                v2Max(max, max, points[i]);\n            }\n            // 与指定的包围盒做并集\n            v2Min(min, min, constraint[0]);\n            v2Max(max, max, constraint[1]);\n        }\n\n        for (var i = 0, len = points.length; i < len; i++) {\n            var point = points[i];\n\n            if (isLoop) {\n                prevPoint = points[i ? i - 1 : len - 1];\n                nextPoint = points[(i + 1) % len];\n            }\n            else {\n                if (i === 0 || i === len - 1) {\n                    cps.push(vec2.clone(points[i]));\n                    continue;\n                }\n                else {\n                    prevPoint = points[i - 1];\n                    nextPoint = points[i + 1];\n                }\n            }\n\n            vec2.sub(v, nextPoint, prevPoint);\n\n            // use degree to scale the handle length\n            v2Scale(v, v, smooth);\n\n            var d0 = v2Distance(point, prevPoint);\n            var d1 = v2Distance(point, nextPoint);\n            var sum = d0 + d1;\n            if (sum !== 0) {\n                d0 /= sum;\n                d1 /= sum;\n            }\n\n            v2Scale(v1, v, -d0);\n            v2Scale(v2, v, d1);\n            var cp0 = v2Add([], point, v1);\n            var cp1 = v2Add([], point, v2);\n            if (constraint) {\n                v2Max(cp0, cp0, min);\n                v2Min(cp0, cp0, max);\n                v2Max(cp1, cp1, min);\n                v2Min(cp1, cp1, max);\n            }\n            cps.push(cp0);\n            cps.push(cp1);\n        }\n\n        if (isLoop) {\n            cps.push(cps.shift());\n        }\n\n        return cps;\n    };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/helper/smoothBezier.js\n// module id = 669\n// module chunks = 0 1 2","/**\n * Catmull-Rom spline 插值折线\n * @module zrender/shape/util/smoothSpline\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n    var vec2 = require('../../core/vector');\n\n    /**\n     * @inner\n     */\n    function interpolate(p0, p1, p2, p3, t, t2, t3) {\n        var v0 = (p2 - p0) * 0.5;\n        var v1 = (p3 - p1) * 0.5;\n        return (2 * (p1 - p2) + v0 + v1) * t3\n                + (-3 * (p1 - p2) - 2 * v0 - v1) * t2\n                + v0 * t + p1;\n    }\n\n    /**\n     * @alias module:zrender/shape/util/smoothSpline\n     * @param {Array} points 线段顶点数组\n     * @param {boolean} isLoop\n     * @return {Array}\n     */\n    module.exports = function (points, isLoop) {\n        var len = points.length;\n        var ret = [];\n\n        var distance = 0;\n        for (var i = 1; i < len; i++) {\n            distance += vec2.distance(points[i - 1], points[i]);\n        }\n\n        var segs = distance / 2;\n        segs = segs < len ? len : segs;\n        for (var i = 0; i < segs; i++) {\n            var pos = i / (segs - 1) * (isLoop ? len : len - 1);\n            var idx = Math.floor(pos);\n\n            var w = pos - idx;\n\n            var p0;\n            var p1 = points[idx % len];\n            var p2;\n            var p3;\n            if (!isLoop) {\n                p0 = points[idx === 0 ? idx : idx - 1];\n                p2 = points[idx > len - 2 ? len - 1 : idx + 1];\n                p3 = points[idx > len - 3 ? len - 1 : idx + 2];\n            }\n            else {\n                p0 = points[(idx - 1 + len) % len];\n                p2 = points[(idx + 1) % len];\n                p3 = points[(idx + 2) % len];\n            }\n\n            var w2 = w * w;\n            var w3 = w * w2;\n\n            ret.push([\n                interpolate(p0[0], p1[0], p2[0], p3[0], w, w2, w3),\n                interpolate(p0[1], p1[1], p2[1], p3[1], w, w2, w3)\n            ]);\n        }\n        return ret;\n    };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/helper/smoothSpline.js\n// module id = 670\n// module chunks = 0 1 2","/**\n * Mixin for drawing text in a element bounding rect\n * @module zrender/mixin/RectText\n */\n\n\n\n    var textContain = require('../../contain/text');\n    var BoundingRect = require('../../core/BoundingRect');\n\n    var tmpRect = new BoundingRect();\n\n    var RectText = function () {};\n\n    function parsePercent(value, maxValue) {\n        if (typeof value === 'string') {\n            if (value.lastIndexOf('%') >= 0) {\n                return parseFloat(value) / 100 * maxValue;\n            }\n            return parseFloat(value);\n        }\n        return value;\n    }\n\n    RectText.prototype = {\n\n        constructor: RectText,\n\n        /**\n         * Draw text in a rect with specified position.\n         * @param  {CanvasRenderingContext} ctx\n         * @param  {Object} rect Displayable rect\n         * @return {Object} textRect Alternative precalculated text bounding rect\n         */\n        drawRectText: function (ctx, rect, textRect) {\n            var style = this.style;\n            var text = style.text;\n            // Convert to string\n            text != null && (text += '');\n            if (!text) {\n                return;\n            }\n\n            // FIXME\n            ctx.save();\n\n            var x;\n            var y;\n            var textPosition = style.textPosition;\n            var textOffset = style.textOffset;\n            var distance = style.textDistance;\n            var align = style.textAlign;\n            var font = style.textFont || style.font;\n            var baseline = style.textBaseline;\n            var verticalAlign = style.textVerticalAlign;\n            rect = style.textPositionRect || rect;\n\n            textRect = textRect || textContain.getBoundingRect(text, font, align, baseline);\n\n            // Transform rect to view space\n            var transform = this.transform;\n            if (!style.textTransform) {\n                if (transform) {\n                    tmpRect.copy(rect);\n                    tmpRect.applyTransform(transform);\n                    rect = tmpRect;\n                }\n            }\n            else {\n                this.setTransform(ctx);\n            }\n\n            // Text position represented by coord\n            if (textPosition instanceof Array) {\n                // Percent\n                x = rect.x + parsePercent(textPosition[0], rect.width);\n                y = rect.y + parsePercent(textPosition[1], rect.height);\n                align = align || 'left';\n                baseline = baseline || 'top';\n\n                if (verticalAlign) {\n                    switch (verticalAlign) {\n                        case 'middle':\n                            y -= textRect.height / 2 - textRect.lineHeight / 2;\n                            break;\n                        case 'bottom':\n                            y -= textRect.height - textRect.lineHeight / 2;\n                            break;\n                        default:\n                            y += textRect.lineHeight / 2;\n                    }\n                    // Force bseline to be middle\n                    baseline = 'middle';\n                }\n            }\n            else {\n                var res = textContain.adjustTextPositionOnRect(\n                    textPosition, rect, textRect, distance\n                );\n                x = res.x;\n                y = res.y;\n                // Default align and baseline when has textPosition\n                align = align || res.textAlign;\n                baseline = baseline || res.textBaseline;\n            }\n\n            if (textOffset) {\n                x += textOffset[0];\n                y += textOffset[1];\n            }\n\n            // Use canvas default left textAlign. Giving invalid value will cause state not change\n            ctx.textAlign = align || 'left';\n            // Use canvas default alphabetic baseline\n            ctx.textBaseline = baseline || 'alphabetic';\n\n            var textFill = style.textFill;\n            var textStroke = style.textStroke;\n            textFill && (ctx.fillStyle = textFill);\n            textStroke && (ctx.strokeStyle = textStroke);\n\n            // TODO Invalid font\n            ctx.font = font || '12px sans-serif';\n\n            // Text shadow\n            // Always set shadowBlur and shadowOffset to avoid leak from displayable\n            ctx.shadowBlur = style.textShadowBlur;\n            ctx.shadowColor = style.textShadowColor || 'transparent';\n            ctx.shadowOffsetX = style.textShadowOffsetX;\n            ctx.shadowOffsetY = style.textShadowOffsetY;\n\n            var textLines = text.split('\\n');\n\n            if (style.textRotation) {\n                transform && ctx.translate(transform[4], transform[5]);\n                ctx.rotate(style.textRotation);\n                transform && ctx.translate(-transform[4], -transform[5]);\n            }\n\n            for (var i = 0; i < textLines.length; i++) {\n                // Fill after stroke so the outline will not cover the main part.\n                textStroke && ctx.strokeText(textLines[i], x, y);\n                textFill && ctx.fillText(textLines[i], x, y);\n                y += textRect.lineHeight;\n            }\n\n            ctx.restore();\n        }\n    };\n\n    module.exports = RectText;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/mixin/RectText.js\n// module id = 671\n// module chunks = 0 1 2","/**\n * 圆弧\n * @module zrender/graphic/shape/Arc\n */\n \n\n    module.exports = require('../Path').extend({\n\n        type: 'arc',\n\n        shape: {\n\n            cx: 0,\n\n            cy: 0,\n\n            r: 0,\n\n            startAngle: 0,\n\n            endAngle: Math.PI * 2,\n\n            clockwise: true\n        },\n\n        style: {\n\n            stroke: '#000',\n\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n\n            var x = shape.cx;\n            var y = shape.cy;\n            var r = Math.max(shape.r, 0);\n            var startAngle = shape.startAngle;\n            var endAngle = shape.endAngle;\n            var clockwise = shape.clockwise;\n\n            var unitX = Math.cos(startAngle);\n            var unitY = Math.sin(startAngle);\n\n            ctx.moveTo(unitX * r + x, unitY * r + y);\n            ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Arc.js\n// module id = 672\n// module chunks = 0 1 2","'use strict';\n/**\n * 贝塞尔曲线\n * @module zrender/shape/BezierCurve\n */\n\n\n    var curveTool = require('../../core/curve');\n    var vec2 = require('../../core/vector');\n    var quadraticSubdivide = curveTool.quadraticSubdivide;\n    var cubicSubdivide = curveTool.cubicSubdivide;\n    var quadraticAt = curveTool.quadraticAt;\n    var cubicAt = curveTool.cubicAt;\n    var quadraticDerivativeAt = curveTool.quadraticDerivativeAt;\n    var cubicDerivativeAt = curveTool.cubicDerivativeAt;\n\n    var out = [];\n\n    function someVectorAt(shape, t, isTangent) {\n        var cpx2 = shape.cpx2;\n        var cpy2 = shape.cpy2;\n        if (cpx2 === null || cpy2 === null) {\n            return [\n                (isTangent ? cubicDerivativeAt : cubicAt)(shape.x1, shape.cpx1, shape.cpx2, shape.x2, t),\n                (isTangent ? cubicDerivativeAt : cubicAt)(shape.y1, shape.cpy1, shape.cpy2, shape.y2, t)\n            ];\n        }\n        else {\n            return [\n                (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.x1, shape.cpx1, shape.x2, t),\n                (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.y1, shape.cpy1, shape.y2, t)\n            ];\n        }\n    }\n    module.exports = require('../Path').extend({\n\n        type: 'bezier-curve',\n\n        shape: {\n            x1: 0,\n            y1: 0,\n            x2: 0,\n            y2: 0,\n            cpx1: 0,\n            cpy1: 0,\n            // cpx2: 0,\n            // cpy2: 0\n\n            // Curve show percent, for animating\n            percent: 1\n        },\n\n        style: {\n            stroke: '#000',\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n            var x1 = shape.x1;\n            var y1 = shape.y1;\n            var x2 = shape.x2;\n            var y2 = shape.y2;\n            var cpx1 = shape.cpx1;\n            var cpy1 = shape.cpy1;\n            var cpx2 = shape.cpx2;\n            var cpy2 = shape.cpy2;\n            var percent = shape.percent;\n            if (percent === 0) {\n                return;\n            }\n\n            ctx.moveTo(x1, y1);\n\n            if (cpx2 == null || cpy2 == null) {\n                if (percent < 1) {\n                    quadraticSubdivide(\n                        x1, cpx1, x2, percent, out\n                    );\n                    cpx1 = out[1];\n                    x2 = out[2];\n                    quadraticSubdivide(\n                        y1, cpy1, y2, percent, out\n                    );\n                    cpy1 = out[1];\n                    y2 = out[2];\n                }\n\n                ctx.quadraticCurveTo(\n                    cpx1, cpy1,\n                    x2, y2\n                );\n            }\n            else {\n                if (percent < 1) {\n                    cubicSubdivide(\n                        x1, cpx1, cpx2, x2, percent, out\n                    );\n                    cpx1 = out[1];\n                    cpx2 = out[2];\n                    x2 = out[3];\n                    cubicSubdivide(\n                        y1, cpy1, cpy2, y2, percent, out\n                    );\n                    cpy1 = out[1];\n                    cpy2 = out[2];\n                    y2 = out[3];\n                }\n                ctx.bezierCurveTo(\n                    cpx1, cpy1,\n                    cpx2, cpy2,\n                    x2, y2\n                );\n            }\n        },\n\n        /**\n         * Get point at percent\n         * @param  {number} t\n         * @return {Array.<number>}\n         */\n        pointAt: function (t) {\n            return someVectorAt(this.shape, t, false);\n        },\n\n        /**\n         * Get tangent at percent\n         * @param  {number} t\n         * @return {Array.<number>}\n         */\n        tangentAt: function (t) {\n            var p = someVectorAt(this.shape, t, true);\n            return vec2.normalize(p, p);\n        }\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/BezierCurve.js\n// module id = 673\n// module chunks = 0 1 2","'use strict';\n/**\n * 圆形\n * @module zrender/shape/Circle\n */\n\n\n\n    module.exports = require('../Path').extend({\n\n        type: 'circle',\n\n        shape: {\n            cx: 0,\n            cy: 0,\n            r: 0\n        },\n\n\n        buildPath : function (ctx, shape, inBundle) {\n            // Better stroking in ShapeBundle\n            // Always do it may have performence issue ( fill may be 2x more cost)\n            if (inBundle) {\n                ctx.moveTo(shape.cx + shape.r, shape.cy);\n            }\n            // else {\n            //     if (ctx.allocate && !ctx.data.length) {\n            //         ctx.allocate(ctx.CMD_MEM_SIZE.A);\n            //     }\n            // }\n            // Better stroking in ShapeBundle\n            // ctx.moveTo(shape.cx + shape.r, shape.cy);\n            ctx.arc(shape.cx, shape.cy, shape.r, 0, Math.PI * 2, true);\n        }\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Circle.js\n// module id = 674\n// module chunks = 0 1 2","/**\n * 直线\n * @module zrender/graphic/shape/Line\n */\n\n    module.exports = require('../Path').extend({\n\n        type: 'line',\n\n        shape: {\n            // Start point\n            x1: 0,\n            y1: 0,\n            // End point\n            x2: 0,\n            y2: 0,\n\n            percent: 1\n        },\n\n        style: {\n            stroke: '#000',\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n            var x1 = shape.x1;\n            var y1 = shape.y1;\n            var x2 = shape.x2;\n            var y2 = shape.y2;\n            var percent = shape.percent;\n\n            if (percent === 0) {\n                return;\n            }\n\n            ctx.moveTo(x1, y1);\n\n            if (percent < 1) {\n                x2 = x1 * (1 - percent) + x2 * percent;\n                y2 = y1 * (1 - percent) + y2 * percent;\n            }\n            ctx.lineTo(x2, y2);\n        },\n\n        /**\n         * Get point at percent\n         * @param  {number} percent\n         * @return {Array.<number>}\n         */\n        pointAt: function (p) {\n            var shape = this.shape;\n            return [\n                shape.x1 * (1 - p) + shape.x2 * p,\n                shape.y1 * (1 - p) + shape.y2 * p\n            ];\n        }\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Line.js\n// module id = 675\n// module chunks = 0 1 2","/**\n * 多边形\n * @module zrender/shape/Polygon\n */\n\n\n    var polyHelper = require('../helper/poly');\n\n    module.exports = require('../Path').extend({\n        \n        type: 'polygon',\n\n        shape: {\n            points: null,\n\n            smooth: false,\n\n            smoothConstraint: null\n        },\n\n        buildPath: function (ctx, shape) {\n            polyHelper.buildPath(ctx, shape, true);\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Polygon.js\n// module id = 676\n// module chunks = 0 1 2","/**\n * @module zrender/graphic/shape/Polyline\n */\n\n\n    var polyHelper = require('../helper/poly');\n\n    module.exports = require('../Path').extend({\n        \n        type: 'polyline',\n\n        shape: {\n            points: null,\n\n            smooth: false,\n\n            smoothConstraint: null\n        },\n\n        style: {\n            stroke: '#000',\n\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n            polyHelper.buildPath(ctx, shape, false);\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Polyline.js\n// module id = 677\n// module chunks = 0 1 2","/**\n * 矩形\n * @module zrender/graphic/shape/Rect\n */\n\n\n    var roundRectHelper = require('../helper/roundRect');\n\n    module.exports = require('../Path').extend({\n\n        type: 'rect',\n\n        shape: {\n            // 左上、右上、右下、左下角的半径依次为r1、r2、r3、r4\n            // r缩写为1         相当于 [1, 1, 1, 1]\n            // r缩写为[1]       相当于 [1, 1, 1, 1]\n            // r缩写为[1, 2]    相当于 [1, 2, 1, 2]\n            // r缩写为[1, 2, 3] 相当于 [1, 2, 3, 2]\n            r: 0,\n\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var width = shape.width;\n            var height = shape.height;\n            if (!shape.r) {\n                ctx.rect(x, y, width, height);\n            }\n            else {\n                roundRectHelper.buildPath(ctx, shape);\n            }\n            ctx.closePath();\n            return;\n        }\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Rect.js\n// module id = 678\n// module chunks = 0 1 2","/**\n * 圆环\n * @module zrender/graphic/shape/Ring\n */\n\n\n    module.exports = require('../Path').extend({\n\n        type: 'ring',\n\n        shape: {\n            cx: 0,\n            cy: 0,\n            r: 0,\n            r0: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var x = shape.cx;\n            var y = shape.cy;\n            var PI2 = Math.PI * 2;\n            ctx.moveTo(x + shape.r, y);\n            ctx.arc(x, y, shape.r, 0, PI2, false);\n            ctx.moveTo(x + shape.r0, y);\n            ctx.arc(x, y, shape.r0, 0, PI2, true);\n        }\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Ring.js\n// module id = 679\n// module chunks = 0 1 2","/**\n * 扇形\n * @module zrender/graphic/shape/Sector\n */\n\n\n\n    var env = require('../../core/env');\n    var Path = require('../Path');\n\n    var shadowTemp = [\n        ['shadowBlur', 0],\n        ['shadowColor', '#000'],\n        ['shadowOffsetX', 0],\n        ['shadowOffsetY', 0]\n    ];\n\n    module.exports = Path.extend({\n\n        type: 'sector',\n\n        shape: {\n\n            cx: 0,\n\n            cy: 0,\n\n            r0: 0,\n\n            r: 0,\n\n            startAngle: 0,\n\n            endAngle: Math.PI * 2,\n\n            clockwise: true\n        },\n\n        brush: (env.browser.ie && env.browser.version >= 11) // version: '11.0'\n            // Fix weird bug in some version of IE11 (like 11.0.9600.17801),\n            // where exception \"unexpected call to method or property access\"\n            // might be thrown when calling ctx.fill after a path whose area size\n            // is zero is drawn and ctx.clip() is called and shadowBlur is set.\n            // (e.g.,\n            //  ctx.moveTo(10, 10);\n            //  ctx.lineTo(20, 10);\n            //  ctx.closePath();\n            //  ctx.clip();\n            //  ctx.shadowBlur = 10;\n            //  ...\n            //  ctx.fill();\n            // )\n            ? function () {\n                var clipPaths = this.__clipPaths;\n                var style = this.style;\n                var modified;\n\n                if (clipPaths) {\n                    for (var i = 0; i < clipPaths.length; i++) {\n                        var shape = clipPaths[i] && clipPaths[i].shape;\n                        if (shape && shape.startAngle === shape.endAngle) {\n                            for (var j = 0; j < shadowTemp.length; j++) {\n                                shadowTemp[j][2] = style[shadowTemp[j][0]];\n                                style[shadowTemp[j][0]] = shadowTemp[j][1];\n                            }\n                            modified = true;\n                            break;\n                        }\n                    }\n                }\n\n                Path.prototype.brush.apply(this, arguments);\n\n                if (modified) {\n                    for (var j = 0; j < shadowTemp.length; j++) {\n                        style[shadowTemp[j][0]] = shadowTemp[j][2];\n                    }\n                }\n            }\n            : Path.prototype.brush,\n\n        buildPath: function (ctx, shape) {\n\n            var x = shape.cx;\n            var y = shape.cy;\n            var r0 = Math.max(shape.r0 || 0, 0);\n            var r = Math.max(shape.r, 0);\n            var startAngle = shape.startAngle;\n            var endAngle = shape.endAngle;\n            var clockwise = shape.clockwise;\n\n            var unitX = Math.cos(startAngle);\n            var unitY = Math.sin(startAngle);\n\n            ctx.moveTo(unitX * r0 + x, unitY * r0 + y);\n\n            ctx.lineTo(unitX * r + x, unitY * r + y);\n\n            ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n\n            ctx.lineTo(\n                Math.cos(endAngle) * r0 + x,\n                Math.sin(endAngle) * r0 + y\n            );\n\n            if (r0 !== 0) {\n                ctx.arc(x, y, r0, endAngle, startAngle, clockwise);\n            }\n\n            ctx.closePath();\n        }\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Sector.js\n// module id = 680\n// module chunks = 0 1 2","'use strict';\n/**\n * @module zrender/mixin/Animatable\n */\n\n\n    var Animator = require('../animation/Animator');\n    var util = require('../core/util');\n    var isString = util.isString;\n    var isFunction = util.isFunction;\n    var isObject = util.isObject;\n    var log = require('../core/log');\n\n    /**\n     * @alias modue:zrender/mixin/Animatable\n     * @constructor\n     */\n    var Animatable = function () {\n\n        /**\n         * @type {Array.<module:zrender/animation/Animator>}\n         * @readOnly\n         */\n        this.animators = [];\n    };\n\n    Animatable.prototype = {\n\n        constructor: Animatable,\n\n        /**\n         * 动画\n         *\n         * @param {string} path 需要添加动画的属性获取路径，可以通过a.b.c来获取深层的属性\n         * @param {boolean} [loop] 动画是否循环\n         * @return {module:zrender/animation/Animator}\n         * @example:\n         *     el.animate('style', false)\n         *         .when(1000, {x: 10} )\n         *         .done(function(){ // Animation done })\n         *         .start()\n         */\n        animate: function (path, loop) {\n            var target;\n            var animatingShape = false;\n            var el = this;\n            var zr = this.__zr;\n            if (path) {\n                var pathSplitted = path.split('.');\n                var prop = el;\n                // If animating shape\n                animatingShape = pathSplitted[0] === 'shape';\n                for (var i = 0, l = pathSplitted.length; i < l; i++) {\n                    if (!prop) {\n                        continue;\n                    }\n                    prop = prop[pathSplitted[i]];\n                }\n                if (prop) {\n                    target = prop;\n                }\n            }\n            else {\n                target = el;\n            }\n\n            if (!target) {\n                log(\n                    'Property \"'\n                    + path\n                    + '\" is not existed in element '\n                    + el.id\n                );\n                return;\n            }\n\n            var animators = el.animators;\n\n            var animator = new Animator(target, loop);\n\n            animator.during(function (target) {\n                el.dirty(animatingShape);\n            })\n            .done(function () {\n                // FIXME Animator will not be removed if use `Animator#stop` to stop animation\n                animators.splice(util.indexOf(animators, animator), 1);\n            });\n\n            animators.push(animator);\n\n            // If animate after added to the zrender\n            if (zr) {\n                zr.animation.addAnimator(animator);\n            }\n\n            return animator;\n        },\n\n        /**\n         * 停止动画\n         * @param {boolean} forwardToLast If move to last frame before stop\n         */\n        stopAnimation: function (forwardToLast) {\n            var animators = this.animators;\n            var len = animators.length;\n            for (var i = 0; i < len; i++) {\n                animators[i].stop(forwardToLast);\n            }\n            animators.length = 0;\n\n            return this;\n        },\n\n        /**\n         * @param {Object} target\n         * @param {number} [time=500] Time in ms\n         * @param {string} [easing='linear']\n         * @param {number} [delay=0]\n         * @param {Function} [callback]\n         *\n         * @example\n         *  // Animate position\n         *  el.animateTo({\n         *      position: [10, 10]\n         *  }, function () { // done })\n         *\n         *  // Animate shape, style and position in 100ms, delayed 100ms, with cubicOut easing\n         *  el.animateTo({\n         *      shape: {\n         *          width: 500\n         *      },\n         *      style: {\n         *          fill: 'red'\n         *      }\n         *      position: [10, 10]\n         *  }, 100, 100, 'cubicOut', function () { // done })\n         */\n         // TODO Return animation key\n        animateTo: function (target, time, delay, easing, callback) {\n            // animateTo(target, time, easing, callback);\n            if (isString(delay)) {\n                callback = easing;\n                easing = delay;\n                delay = 0;\n            }\n            // animateTo(target, time, delay, callback);\n            else if (isFunction(easing)) {\n                callback = easing;\n                easing = 'linear';\n                delay = 0;\n            }\n            // animateTo(target, time, callback);\n            else if (isFunction(delay)) {\n                callback = delay;\n                delay = 0;\n            }\n            // animateTo(target, callback)\n            else if (isFunction(time)) {\n                callback = time;\n                time = 500;\n            }\n            // animateTo(target)\n            else if (!time) {\n                time = 500;\n            }\n            // Stop all previous animations\n            this.stopAnimation();\n            this._animateToShallow('', this, target, time, delay, easing, callback);\n\n            // Animators may be removed immediately after start\n            // if there is nothing to animate\n            var animators = this.animators.slice();\n            var count = animators.length;\n            function done() {\n                count--;\n                if (!count) {\n                    callback && callback();\n                }\n            }\n\n            // No animators. This should be checked before animators[i].start(),\n            // because 'done' may be executed immediately if no need to animate.\n            if (!count) {\n                callback && callback();\n            }\n            // Start after all animators created\n            // Incase any animator is done immediately when all animation properties are not changed\n            for (var i = 0; i < animators.length; i++) {\n                animators[i]\n                    .done(done)\n                    .start(easing);\n            }\n        },\n\n        /**\n         * @private\n         * @param {string} path=''\n         * @param {Object} source=this\n         * @param {Object} target\n         * @param {number} [time=500]\n         * @param {number} [delay=0]\n         *\n         * @example\n         *  // Animate position\n         *  el._animateToShallow({\n         *      position: [10, 10]\n         *  })\n         *\n         *  // Animate shape, style and position in 100ms, delayed 100ms\n         *  el._animateToShallow({\n         *      shape: {\n         *          width: 500\n         *      },\n         *      style: {\n         *          fill: 'red'\n         *      }\n         *      position: [10, 10]\n         *  }, 100, 100)\n         */\n        _animateToShallow: function (path, source, target, time, delay) {\n            var objShallow = {};\n            var propertyCount = 0;\n            for (var name in target) {\n                if (!target.hasOwnProperty(name)) {\n                    continue;\n                }\n\n                if (source[name] != null) {\n                    if (isObject(target[name]) && !util.isArrayLike(target[name])) {\n                        this._animateToShallow(\n                            path ? path + '.' + name : name,\n                            source[name],\n                            target[name],\n                            time,\n                            delay\n                        );\n                    }\n                    else {\n                        objShallow[name] = target[name];\n                        propertyCount++;\n                    }\n                }\n                else if (target[name] != null) {\n                    // Attr directly if not has property\n                    // FIXME, if some property not needed for element ?\n                    if (!path) {\n                        this.attr(name, target[name]);\n                    }\n                    else {  // Shape or style\n                        var props = {};\n                        props[path] = {};\n                        props[path][name] = target[name];\n                        this.attr(props);\n                    }\n                }\n            }\n\n            if (propertyCount > 0) {\n                this.animate(path, false)\n                    .when(time == null ? 500 : time, objShallow)\n                    .delay(delay || 0);\n            }\n\n            return this;\n        }\n    };\n\n    module.exports = Animatable;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/mixin/Animatable.js\n// module id = 681\n// module chunks = 0 1 2","// TODO Draggable for group\n// FIXME Draggable on element which has parent rotation or scale\n\n    function Draggable() {\n\n        this.on('mousedown', this._dragStart, this);\n        this.on('mousemove', this._drag, this);\n        this.on('mouseup', this._dragEnd, this);\n        this.on('globalout', this._dragEnd, this);\n        // this._dropTarget = null;\n        // this._draggingTarget = null;\n\n        // this._x = 0;\n        // this._y = 0;\n    }\n\n    Draggable.prototype = {\n\n        constructor: Draggable,\n\n        _dragStart: function (e) {\n            var draggingTarget = e.target;\n            if (draggingTarget && draggingTarget.draggable) {\n                this._draggingTarget = draggingTarget;\n                draggingTarget.dragging = true;\n                this._x = e.offsetX;\n                this._y = e.offsetY;\n\n                this.dispatchToElement(param(draggingTarget, e), 'dragstart', e.event);\n            }\n        },\n\n        _drag: function (e) {\n            var draggingTarget = this._draggingTarget;\n            if (draggingTarget) {\n\n                var x = e.offsetX;\n                var y = e.offsetY;\n\n                var dx = x - this._x;\n                var dy = y - this._y;\n                this._x = x;\n                this._y = y;\n\n                draggingTarget.drift(dx, dy, e);\n                this.dispatchToElement(param(draggingTarget, e), 'drag', e.event);\n\n                var dropTarget = this.findHover(x, y, draggingTarget).target;\n                var lastDropTarget = this._dropTarget;\n                this._dropTarget = dropTarget;\n\n                if (draggingTarget !== dropTarget) {\n                    if (lastDropTarget && dropTarget !== lastDropTarget) {\n                        this.dispatchToElement(param(lastDropTarget, e), 'dragleave', e.event);\n                    }\n                    if (dropTarget && dropTarget !== lastDropTarget) {\n                        this.dispatchToElement(param(dropTarget, e), 'dragenter', e.event);\n                    }\n                }\n            }\n        },\n\n        _dragEnd: function (e) {\n            var draggingTarget = this._draggingTarget;\n\n            if (draggingTarget) {\n                draggingTarget.dragging = false;\n            }\n\n            this.dispatchToElement(param(draggingTarget, e), 'dragend', e.event);\n\n            if (this._dropTarget) {\n                this.dispatchToElement(param(this._dropTarget, e), 'drop', e.event);\n            }\n\n            this._draggingTarget = null;\n            this._dropTarget = null;\n        }\n\n    };\n\n    function param(target, e) {\n        return {target: target, topTarget: e && e.topTarget};\n    }\n\n    module.exports = Draggable;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/mixin/Draggable.js\n// module id = 682\n// module chunks = 0 1 2","\n\n    var Path = require('../graphic/Path');\n    var PathProxy = require('../core/PathProxy');\n    var transformPath = require('./transformPath');\n\n    // command chars\n    var cc = [\n        'm', 'M', 'l', 'L', 'v', 'V', 'h', 'H', 'z', 'Z',\n        'c', 'C', 'q', 'Q', 't', 'T', 's', 'S', 'a', 'A'\n    ];\n\n    var mathSqrt = Math.sqrt;\n    var mathSin = Math.sin;\n    var mathCos = Math.cos;\n    var PI = Math.PI;\n\n    var vMag = function(v) {\n        return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\n    };\n    var vRatio = function(u, v) {\n        return (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v));\n    };\n    var vAngle = function(u, v) {\n        return (u[0] * v[1] < u[1] * v[0] ? -1 : 1)\n                * Math.acos(vRatio(u, v));\n    };\n\n    function processArc(x1, y1, x2, y2, fa, fs, rx, ry, psiDeg, cmd, path) {\n        var psi = psiDeg * (PI / 180.0);\n        var xp = mathCos(psi) * (x1 - x2) / 2.0\n                 + mathSin(psi) * (y1 - y2) / 2.0;\n        var yp = -1 * mathSin(psi) * (x1 - x2) / 2.0\n                 + mathCos(psi) * (y1 - y2) / 2.0;\n\n        var lambda = (xp * xp) / (rx * rx) + (yp * yp) / (ry * ry);\n\n        if (lambda > 1) {\n            rx *= mathSqrt(lambda);\n            ry *= mathSqrt(lambda);\n        }\n\n        var f = (fa === fs ? -1 : 1)\n            * mathSqrt((((rx * rx) * (ry * ry))\n                    - ((rx * rx) * (yp * yp))\n                    - ((ry * ry) * (xp * xp))) / ((rx * rx) * (yp * yp)\n                    + (ry * ry) * (xp * xp))\n                ) || 0;\n\n        var cxp = f * rx * yp / ry;\n        var cyp = f * -ry * xp / rx;\n\n        var cx = (x1 + x2) / 2.0\n                 + mathCos(psi) * cxp\n                 - mathSin(psi) * cyp;\n        var cy = (y1 + y2) / 2.0\n                + mathSin(psi) * cxp\n                + mathCos(psi) * cyp;\n\n        var theta = vAngle([ 1, 0 ], [ (xp - cxp) / rx, (yp - cyp) / ry ]);\n        var u = [ (xp - cxp) / rx, (yp - cyp) / ry ];\n        var v = [ (-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry ];\n        var dTheta = vAngle(u, v);\n\n        if (vRatio(u, v) <= -1) {\n            dTheta = PI;\n        }\n        if (vRatio(u, v) >= 1) {\n            dTheta = 0;\n        }\n        if (fs === 0 && dTheta > 0) {\n            dTheta = dTheta - 2 * PI;\n        }\n        if (fs === 1 && dTheta < 0) {\n            dTheta = dTheta + 2 * PI;\n        }\n\n        path.addData(cmd, cx, cy, rx, ry, theta, dTheta, psi, fs);\n    }\n\n    function createPathProxyFromString(data) {\n        if (!data) {\n            return [];\n        }\n\n        // command string\n        var cs = data.replace(/-/g, ' -')\n            .replace(/  /g, ' ')\n            .replace(/ /g, ',')\n            .replace(/,,/g, ',');\n\n        var n;\n        // create pipes so that we can split the data\n        for (n = 0; n < cc.length; n++) {\n            cs = cs.replace(new RegExp(cc[n], 'g'), '|' + cc[n]);\n        }\n\n        // create array\n        var arr = cs.split('|');\n        // init context point\n        var cpx = 0;\n        var cpy = 0;\n\n        var path = new PathProxy();\n        var CMD = PathProxy.CMD;\n\n        var prevCmd;\n        for (n = 1; n < arr.length; n++) {\n            var str = arr[n];\n            var c = str.charAt(0);\n            var off = 0;\n            var p = str.slice(1).replace(/e,-/g, 'e-').split(',');\n            var cmd;\n\n            if (p.length > 0 && p[0] === '') {\n                p.shift();\n            }\n\n            for (var i = 0; i < p.length; i++) {\n                p[i] = parseFloat(p[i]);\n            }\n            while (off < p.length && !isNaN(p[off])) {\n                if (isNaN(p[0])) {\n                    break;\n                }\n                var ctlPtx;\n                var ctlPty;\n\n                var rx;\n                var ry;\n                var psi;\n                var fa;\n                var fs;\n\n                var x1 = cpx;\n                var y1 = cpy;\n\n                // convert l, H, h, V, and v to L\n                switch (c) {\n                    case 'l':\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'L':\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'm':\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.M;\n                        path.addData(cmd, cpx, cpy);\n                        c = 'l';\n                        break;\n                    case 'M':\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.M;\n                        path.addData(cmd, cpx, cpy);\n                        c = 'L';\n                        break;\n                    case 'h':\n                        cpx += p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'H':\n                        cpx = p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'v':\n                        cpy += p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'V':\n                        cpy = p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'C':\n                        cmd = CMD.C;\n                        path.addData(\n                            cmd, p[off++], p[off++], p[off++], p[off++], p[off++], p[off++]\n                        );\n                        cpx = p[off - 2];\n                        cpy = p[off - 1];\n                        break;\n                    case 'c':\n                        cmd = CMD.C;\n                        path.addData(\n                            cmd,\n                            p[off++] + cpx, p[off++] + cpy,\n                            p[off++] + cpx, p[off++] + cpy,\n                            p[off++] + cpx, p[off++] + cpy\n                        );\n                        cpx += p[off - 2];\n                        cpy += p[off - 1];\n                        break;\n                    case 'S':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.C) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cmd = CMD.C;\n                        x1 = p[off++];\n                        y1 = p[off++];\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n                        break;\n                    case 's':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.C) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cmd = CMD.C;\n                        x1 = cpx + p[off++];\n                        y1 = cpy + p[off++];\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n                        break;\n                    case 'Q':\n                        x1 = p[off++];\n                        y1 = p[off++];\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, x1, y1, cpx, cpy);\n                        break;\n                    case 'q':\n                        x1 = p[off++] + cpx;\n                        y1 = p[off++] + cpy;\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, x1, y1, cpx, cpy);\n                        break;\n                    case 'T':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.Q) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n                        break;\n                    case 't':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.Q) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n                        break;\n                    case 'A':\n                        rx = p[off++];\n                        ry = p[off++];\n                        psi = p[off++];\n                        fa = p[off++];\n                        fs = p[off++];\n\n                        x1 = cpx, y1 = cpy;\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.A;\n                        processArc(\n                            x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path\n                        );\n                        break;\n                    case 'a':\n                        rx = p[off++];\n                        ry = p[off++];\n                        psi = p[off++];\n                        fa = p[off++];\n                        fs = p[off++];\n\n                        x1 = cpx, y1 = cpy;\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.A;\n                        processArc(\n                            x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path\n                        );\n                        break;\n                }\n            }\n\n            if (c === 'z' || c === 'Z') {\n                cmd = CMD.Z;\n                path.addData(cmd);\n            }\n\n            prevCmd = cmd;\n        }\n\n        path.toStatic();\n\n        return path;\n    }\n\n    // TODO Optimize double memory cost problem\n    function createPathOptions(str, opts) {\n        var pathProxy = createPathProxyFromString(str);\n        opts = opts || {};\n        opts.buildPath = function (path) {\n            if (path.setData) {\n                path.setData(pathProxy.data);\n                // Svg and vml renderer don't have context\n                var ctx = path.getContext();\n                if (ctx) {\n                    path.rebuildPath(ctx);\n                }\n            }\n            else {\n                var ctx = path;\n                pathProxy.rebuildPath(ctx);\n            }\n        };\n\n        opts.applyTransform = function (m) {\n            transformPath(pathProxy, m);\n\n            this.dirty(true);\n        };\n\n        return opts;\n    }\n\n    module.exports = {\n        /**\n         * Create a Path object from path string data\n         * http://www.w3.org/TR/SVG/paths.html#PathData\n         * @param  {Object} opts Other options\n         */\n        createFromString: function (str, opts) {\n            return new Path(createPathOptions(str, opts));\n        },\n\n        /**\n         * Create a Path class from path string data\n         * @param  {string} str\n         * @param  {Object} opts Other options\n         */\n        extendFromString: function (str, opts) {\n            return Path.extend(createPathOptions(str, opts));\n        },\n\n        /**\n         * Merge multiple paths\n         */\n        // TODO Apply transform\n        // TODO stroke dash\n        // TODO Optimize double memory cost problem\n        mergePath: function (pathEls, opts) {\n            var pathList = [];\n            var len = pathEls.length;\n            for (var i = 0; i < len; i++) {\n                var pathEl = pathEls[i];\n                if (!pathEl.path) {\n                    pathEl.createPathProxy();\n                }\n                if (pathEl.__dirtyPath) {\n                    pathEl.buildPath(pathEl.path, pathEl.shape, true);\n                }\n                pathList.push(pathEl.path);\n            }\n\n            var pathBundle = new Path(opts);\n            // Need path proxy.\n            pathBundle.createPathProxy();\n            pathBundle.buildPath = function (path) {\n                path.appendPath(pathList);\n                // Svg and vml renderer don't have context\n                var ctx = path.getContext();\n                if (ctx) {\n                    path.rebuildPath(ctx);\n                }\n            };\n\n            return pathBundle;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/tool/path.js\n// module id = 683\n// module chunks = 0 1 2","\n\n    var CMD = require('../core/PathProxy').CMD;\n    var vec2 = require('../core/vector');\n    var v2ApplyTransform = vec2.applyTransform;\n\n    var points = [[], [], []];\n    var mathSqrt = Math.sqrt;\n    var mathAtan2 = Math.atan2;\n    function transformPath(path, m) {\n        var data = path.data;\n        var cmd;\n        var nPoint;\n        var i;\n        var j;\n        var k;\n        var p;\n\n        var M = CMD.M;\n        var C = CMD.C;\n        var L = CMD.L;\n        var R = CMD.R;\n        var A = CMD.A;\n        var Q = CMD.Q;\n\n        for (i = 0, j = 0; i < data.length;) {\n            cmd = data[i++];\n            j = i;\n            nPoint = 0;\n\n            switch (cmd) {\n                case M:\n                    nPoint = 1;\n                    break;\n                case L:\n                    nPoint = 1;\n                    break;\n                case C:\n                    nPoint = 3;\n                    break;\n                case Q:\n                    nPoint = 2;\n                    break;\n                case A:\n                    var x = m[4];\n                    var y = m[5];\n                    var sx = mathSqrt(m[0] * m[0] + m[1] * m[1]);\n                    var sy = mathSqrt(m[2] * m[2] + m[3] * m[3]);\n                    var angle = mathAtan2(-m[1] / sy, m[0] / sx);\n                    // cx\n                    data[i] *= sx;\n                    data[i++] += x;\n                    // cy\n                    data[i] *= sy;\n                    data[i++] += y;\n                    // Scale rx and ry\n                    // FIXME Assume psi is 0 here\n                    data[i++] *= sx;\n                    data[i++] *= sy;\n\n                    // Start angle\n                    data[i++] += angle;\n                    // end angle\n                    data[i++] += angle;\n                    // FIXME psi\n                    i += 2;\n                    j = i;\n                    break;\n                case R:\n                    // x0, y0\n                    p[0] = data[i++];\n                    p[1] = data[i++];\n                    v2ApplyTransform(p, p, m);\n                    data[j++] = p[0];\n                    data[j++] = p[1];\n                    // x1, y1\n                    p[0] += data[i++];\n                    p[1] += data[i++];\n                    v2ApplyTransform(p, p, m);\n                    data[j++] = p[0];\n                    data[j++] = p[1];\n            }\n\n            for (k = 0; k < nPoint; k++) {\n                var p = points[k];\n                p[0] = data[i++];\n                p[1] = data[i++];\n\n                v2ApplyTransform(p, p, m);\n                // Write back\n                data[j++] = p[0];\n                data[j++] = p[1];\n            }\n        }\n    }\n\n    module.exports = transformPath;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/tool/transformPath.js\n// module id = 684\n// module chunks = 0 1 2","/*!\n * ZRender, a high performance 2d drawing library.\n *\n * Copyright (c) 2013, Baidu Inc.\n * All rights reserved.\n *\n * LICENSE\n * https://github.com/ecomfe/zrender/blob/master/LICENSE.txt\n */\n// Global defines\n\n    var guid = require('./core/guid');\n    var env = require('./core/env');\n    var zrUtil = require('./core/util');\n\n    var Handler = require('./Handler');\n    var Storage = require('./Storage');\n    var Animation = require('./animation/Animation');\n    var HandlerProxy = require('./dom/HandlerProxy');\n\n    var useVML = !env.canvasSupported;\n\n    var painterCtors = {\n        canvas: require('./Painter')\n    };\n\n    var instances = {};    // ZRender实例map索引\n\n    var zrender = {};\n\n    /**\n     * @type {string}\n     */\n    zrender.version = '3.5.2';\n\n    /**\n     * Initializing a zrender instance\n     * @param {HTMLElement} dom\n     * @param {Object} opts\n     * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n     * @param {number} [opts.devicePixelRatio]\n     * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n     * @return {module:zrender/ZRender}\n     */\n    zrender.init = function(dom, opts) {\n        var zr = new ZRender(guid(), dom, opts);\n        instances[zr.id] = zr;\n        return zr;\n    };\n\n    /**\n     * Dispose zrender instance\n     * @param {module:zrender/ZRender} zr\n     */\n    zrender.dispose = function (zr) {\n        if (zr) {\n            zr.dispose();\n        }\n        else {\n            for (var key in instances) {\n                if (instances.hasOwnProperty(key)) {\n                    instances[key].dispose();\n                }\n            }\n            instances = {};\n        }\n\n        return zrender;\n    };\n\n    /**\n     * Get zrender instance by id\n     * @param {string} id zrender instance id\n     * @return {module:zrender/ZRender}\n     */\n    zrender.getInstance = function (id) {\n        return instances[id];\n    };\n\n    zrender.registerPainter = function (name, Ctor) {\n        painterCtors[name] = Ctor;\n    };\n\n    function delInstance(id) {\n        delete instances[id];\n    }\n\n    /**\n     * @module zrender/ZRender\n     */\n    /**\n     * @constructor\n     * @alias module:zrender/ZRender\n     * @param {string} id\n     * @param {HTMLDomElement} dom\n     * @param {Object} opts\n     * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n     * @param {number} [opts.devicePixelRatio]\n     * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n     */\n    var ZRender = function(id, dom, opts) {\n\n        opts = opts || {};\n\n        /**\n         * @type {HTMLDomElement}\n         */\n        this.dom = dom;\n\n        /**\n         * @type {string}\n         */\n        this.id = id;\n\n        var self = this;\n        var storage = new Storage();\n\n        var rendererType = opts.renderer;\n        // TODO WebGL\n        if (useVML) {\n            if (!painterCtors.vml) {\n                throw new Error('You need to require \\'zrender/vml/vml\\' to support IE8');\n            }\n            rendererType = 'vml';\n        }\n        else if (!rendererType || !painterCtors[rendererType]) {\n            rendererType = 'canvas';\n        }\n        var painter = new painterCtors[rendererType](dom, storage, opts);\n\n        this.storage = storage;\n        this.painter = painter;\n\n        var handerProxy = !env.node ? new HandlerProxy(painter.getViewportRoot()) : null;\n        this.handler = new Handler(storage, painter, handerProxy, painter.root);\n\n        /**\n         * @type {module:zrender/animation/Animation}\n         */\n        this.animation = new Animation({\n            stage: {\n                update: zrUtil.bind(this.flush, this)\n            }\n        });\n        this.animation.start();\n\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this._needsRefresh;\n\n        // 修改 storage.delFromStorage, 每次删除元素之前删除动画\n        // FIXME 有点ugly\n        var oldDelFromStorage = storage.delFromStorage;\n        var oldAddToStorage = storage.addToStorage;\n\n        storage.delFromStorage = function (el) {\n            oldDelFromStorage.call(storage, el);\n\n            el && el.removeSelfFromZr(self);\n        };\n\n        storage.addToStorage = function (el) {\n            oldAddToStorage.call(storage, el);\n\n            el.addSelfToZr(self);\n        };\n    };\n\n    ZRender.prototype = {\n\n        constructor: ZRender,\n        /**\n         * 获取实例唯一标识\n         * @return {string}\n         */\n        getId: function () {\n            return this.id;\n        },\n\n        /**\n         * 添加元素\n         * @param  {module:zrender/Element} el\n         */\n        add: function (el) {\n            this.storage.addRoot(el);\n            this._needsRefresh = true;\n        },\n\n        /**\n         * 删除元素\n         * @param  {module:zrender/Element} el\n         */\n        remove: function (el) {\n            this.storage.delRoot(el);\n            this._needsRefresh = true;\n        },\n\n        /**\n         * Change configuration of layer\n         * @param {string} zLevel\n         * @param {Object} config\n         * @param {string} [config.clearColor=0] Clear color\n         * @param {string} [config.motionBlur=false] If enable motion blur\n         * @param {number} [config.lastFrameAlpha=0.7] Motion blur factor. Larger value cause longer trailer\n        */\n        configLayer: function (zLevel, config) {\n            this.painter.configLayer(zLevel, config);\n            this._needsRefresh = true;\n        },\n\n        /**\n         * Repaint the canvas immediately\n         */\n        refreshImmediately: function () {\n            // Clear needsRefresh ahead to avoid something wrong happens in refresh\n            // Or it will cause zrender refreshes again and again.\n            this._needsRefresh = false;\n            this.painter.refresh();\n            /**\n             * Avoid trigger zr.refresh in Element#beforeUpdate hook\n             */\n            this._needsRefresh = false;\n        },\n\n        /**\n         * Mark and repaint the canvas in the next frame of browser\n         */\n        refresh: function() {\n            this._needsRefresh = true;\n        },\n\n        /**\n         * Perform all refresh\n         */\n        flush: function () {\n            if (this._needsRefresh) {\n                this.refreshImmediately();\n            }\n            if (this._needsRefreshHover) {\n                this.refreshHoverImmediately();\n            }\n        },\n\n        /**\n         * Add element to hover layer\n         * @param  {module:zrender/Element} el\n         * @param {Object} style\n         */\n        addHover: function (el, style) {\n            if (this.painter.addHover) {\n                this.painter.addHover(el, style);\n                this.refreshHover();\n            }\n        },\n\n        /**\n         * Add element from hover layer\n         * @param  {module:zrender/Element} el\n         */\n        removeHover: function (el) {\n            if (this.painter.removeHover) {\n                this.painter.removeHover(el);\n                this.refreshHover();\n            }\n        },\n\n        /**\n         * Clear all hover elements in hover layer\n         * @param  {module:zrender/Element} el\n         */\n        clearHover: function () {\n            if (this.painter.clearHover) {\n                this.painter.clearHover();\n                this.refreshHover();\n            }\n        },\n\n        /**\n         * Refresh hover in next frame\n         */\n        refreshHover: function () {\n            this._needsRefreshHover = true;\n        },\n\n        /**\n         * Refresh hover immediately\n         */\n        refreshHoverImmediately: function () {\n            this._needsRefreshHover = false;\n            this.painter.refreshHover && this.painter.refreshHover();\n        },\n\n        /**\n         * Resize the canvas.\n         * Should be invoked when container size is changed\n         * @param {Object} [opts]\n         * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n         * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n         */\n        resize: function(opts) {\n            opts = opts || {};\n            this.painter.resize(opts.width, opts.height);\n            this.handler.resize();\n        },\n\n        /**\n         * Stop and clear all animation immediately\n         */\n        clearAnimation: function () {\n            this.animation.clear();\n        },\n\n        /**\n         * Get container width\n         */\n        getWidth: function() {\n            return this.painter.getWidth();\n        },\n\n        /**\n         * Get container height\n         */\n        getHeight: function() {\n            return this.painter.getHeight();\n        },\n\n        /**\n         * Export the canvas as Base64 URL\n         * @param {string} type\n         * @param {string} [backgroundColor='#fff']\n         * @return {string} Base64 URL\n         */\n        // toDataURL: function(type, backgroundColor) {\n        //     return this.painter.getRenderedCanvas({\n        //         backgroundColor: backgroundColor\n        //     }).toDataURL(type);\n        // },\n\n        /**\n         * Converting a path to image.\n         * It has much better performance of drawing image rather than drawing a vector path.\n         * @param {module:zrender/graphic/Path} e\n         * @param {number} width\n         * @param {number} height\n         */\n        pathToImage: function(e, dpr) {\n            return this.painter.pathToImage(e, dpr);\n        },\n\n        /**\n         * Set default cursor\n         * @param {string} [cursorStyle='default'] 例如 crosshair\n         */\n        setCursorStyle: function (cursorStyle) {\n            this.handler.setCursorStyle(cursorStyle);\n        },\n\n        /**\n         * Find hovered element\n         * @param {number} x\n         * @param {number} y\n         * @return {Object} {target, topTarget}\n         */\n        findHover: function (x, y) {\n            return this.handler.findHover(x, y);\n        },\n\n        /**\n         * Bind event\n         *\n         * @param {string} eventName Event name\n         * @param {Function} eventHandler Handler function\n         * @param {Object} [context] Context object\n         */\n        on: function(eventName, eventHandler, context) {\n            this.handler.on(eventName, eventHandler, context);\n        },\n\n        /**\n         * Unbind event\n         * @param {string} eventName Event name\n         * @param {Function} [eventHandler] Handler function\n         */\n        off: function(eventName, eventHandler) {\n            this.handler.off(eventName, eventHandler);\n        },\n\n        /**\n         * Trigger event manually\n         *\n         * @param {string} eventName Event name\n         * @param {event=} event Event object\n         */\n        trigger: function (eventName, event) {\n            this.handler.trigger(eventName, event);\n        },\n\n\n        /**\n         * Clear all objects and the canvas.\n         */\n        clear: function () {\n            this.storage.delRoot();\n            this.painter.clear();\n        },\n\n        /**\n         * Dispose self.\n         */\n        dispose: function () {\n            this.animation.stop();\n\n            this.clear();\n            this.storage.dispose();\n            this.painter.dispose();\n            this.handler.dispose();\n\n            this.animation =\n            this.storage =\n            this.painter =\n            this.handler = null;\n\n            delInstance(this.id);\n        }\n    };\n\n    module.exports = zrender;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/zrender.js\n// module id = 685\n// module chunks = 0 1 2","<template lang=\"html\">\n    <tr class='dialogTr' @mouseover='over' @mouseout='clear'>\n        <slot></slot>\n        <td v-for = '(i, index) in timeData' :class='[\"dateTd\" ,{\"default\": i == 3}, {\"hasSel\": i == 2}]'>\n            <a href=\"javascript:;\" :data-index='index'></a>\n            <!-- 弹层 -->\n            <div :class='[\"dateLayer\", {\"dialog-right\": index > 20 }]' v-show='visibleList[index]'>\n                <div class='dialogContent' slot='content'>\n                    <p class=\"dialogContent-title\">日期</p>\n                    <div class=\"dialogContent-top\">\n                        <p>价格：{{layer.skuPrice}}元/天</p>\n                        <p>尺寸：{{layer.width == '' ? '-':layer.width}}*{{layer.height == '' ? '-' : layer.height}}px ≤ 100k</p>\n                    </div>\n                    <div class=\"dialogContent-bot\">\n                        <p>占用人：{{layer.dutyUserName ? layer.dutyUserName : '-'}}</p>\n                        <p>订单号：{{layer.adOrderCode ? layer.adOrderCode: '-'}}</p>\n                        <p>订单状态：{{layer.statusName ? layer.statusName: '-'}}</p>\n\n                        <p class=\"clear\">\n                            <span class=\"fl\">最终客户：</span>\n                            <span class=\"fl\" style=\"width:204px; text-indent:0\">\n                                {{layer.adCustomerName ? layer.adCustomerName : '-'}}\n                            </span>\n                        </p>\n\n\n                        <p>点击/曝光：{{layer.singleClick ? layer.singleClick : '-'}}/{{layer.singleDisplay ? layer.singleDisplay : '-'}}</p>\n                    </div>\n                </div>\n            </div>\n            <!-- 弹层 -->\n        </td>\n    </tr>\n</template>\n\n<script>\nimport {getDaysInOneMonth} from '../plugins/tool';\nimport qs from 'qs';\nexport default {\n    props: {\n        info: {\n            default: function() {\n                return {}\n            }\n        },\n        timeData: {\n            default: function() {\n                return []\n            }\n        },\n        time: {\n            default: function() {\n                return ''\n            }\n        }\n    },\n    data() {\n        return {\n            visibleList: [],\n            time: \"\",\n            styles: {\n                top: '20px'\n            },\n            timer: null,\n            searchInfo: {\n                // 开始时间\n                beginTime: '',\n                // 结束时间\n                endTime: '',\n                // 页面类型\n                pageType: '',\n                // 媒体名称\n                mediaName: '',\n                // 页面名称\n                pageName: '',\n                // 广告类型\n                adType: '',\n                // 投放地区\n                '投放地区': '',\n                // 投放车型\n                '投放车型': '',\n                // 投放品牌\n                '投放品牌': '',\n                // 投放关键字\n                '投放关键字': ''\n            },\n            layer: {\n                \"skuPrice\": \"\",\n                \"pSize\": \"\",\n                \"dutyUserName\": \"\",\n                \"adOrderCode\": \"\",\n                \"state\": \"\",\n                \"adCustomerName\": \"\",\n                \"singleClick\": \"\",\n                \"singleDisplay\": \"\"\n            },\n            tableList: {\n                // 0 可选 1 已选择  2禁止选择区域\n                days: []\n            }\n        }\n    },\n    watch: {\n        timeData: {\n            handler: function() {\n                this.initDate(this.time);\n                setTimeout(() => {\n                    //console.log(this.info);\n                })\n            }\n        }\n    },\n    mounted() {\n        for(let i = 0;i < 31; i++) {\n            this.$set(this.visibleList, i, false);\n        }\n        if (this.time) {\n            this.initDate(this.time);\n        }\n    },\n    methods: {\n        initDate(time) {\n\n            // 获取数据传输的年月\n            let arry = this.time.split('-');\n            let dataYear = arry[0];\n            let dataMoth = arry[1];\n            // 获取传入的月份有多少天\n            let totalDays = getDaysInOneMonth(dataYear, dataMoth);\n\n            if (totalDays < 31) {\n                for (let i = totalDays; i < 31; i++) {\n                    this.$nextTick(() => {\n                        this.$set(this.timeData, i, \"3\");\n                    })\n                }\n            }\n\n            let times = new Date();\n            let year = times.getFullYear();\n            let month = times.getMonth() + 1;\n            let day = times.getDate();\n\n            for (let i = 0; i < this.timeData.length; i++) {\n                 let timeName = this.timeData[i];\n                 if (timeName == 'SKU_STATUS_LOCKED' || timeName == 'SKU_STATUS_SALED' || timeName == 'SKU_STATUS_RUNNING') {\n                     this.$set(this.timeData, i, \"2\");\n                 }\n                 if (timeName == 'SKU_STATUS_NONE' || timeName =='SKU_STATUS_DELETE' || timeName == 'SKU_STATUS_IDLE') {\n                     this.$set(this.timeData, i, \"1\");\n                 }\n\n                 if (!timeName) {\n                    this.$set(this.timeData, i, \"3\");\n                 }\n\n                 if ((new Date(`${year}/${month}/${day}`)) >= new Date(`${time}/${i+1}`.replace(/\\-/g, \"\\/\"))) {\n                     this.$set(this.timeData, i, \"3\");\n                 }\n\n            }\n\n        },\n        over(event) {\n            let target = event.target.nodeName;\n            if (target.toUpperCase() === 'A') {\n                this.visibleList = [];\n\n                // this.$set(this.visibleList, index, true);\n                this.timer = setTimeout(() => {\n                    this.$nextTick(() => {\n                        let dateIndexs = parseInt(event.target.getAttribute('data-index'));\n                        let dateIndex = parseInt(event.target.getAttribute('data-index')) + 1;\n                        if (dateIndex < 10) {\n                            dateIndex = '0' + dateIndex\n                        }\n\n                        // \"adPlaceId\": `${this.info.adPlaceId}`,\n                        // \"beginTime\": `${this.time}-${dateIndex}`,\n                        // \"endTime\": `${this.time}-${dateIndex}`\n                        this.$http.post('/isp-kongming/ad/positioning', {\n                            \"beginTime\": `${this.time}-${dateIndex}`,\n                            \"endTime\": `${this.time}-${dateIndex}`,\n                            \"curDate\": `${this.time}-${dateIndex}`,\n                            \"adPlaceId\": `${this.info.adPlaceId}`\n                        }).then((res) => {\n                            if (res.data.errorCode == 0) {\n                                this.layer = Object.assign({}, res.data.result);\n                                this.layer.width = `${this.layer.width}`;\n                                this.layer.height = `${this.layer.height}`;\n                                this.layer.pSize = `${this.info.width} * ${this.info.height}`;\n\n\n                                if (window.sessionStorage.getItem('viewState') == 2) {\n                                    let sk = this.info.adStateList;\n                                    for (let i = 0; i < sk.length; i++) {\n                                        if (sk[i].time == this.time) {\n                                            this.layer.skuPrice = sk[i].dayStatus[dateIndexs].skuPrice;\n                                        }\n                                    }\n                                }\n                                else {\n                                    let skuDatas = JSON.parse(this.info.adStateLists);\n                                    for (let attr in skuDatas) {\n                                        if(attr == this.time) {\n                                            let n = skuDatas[attr];\n                                            this.layer.skuPrice = n[dateIndexs].skuPrice;\n                                        }\n                                    }\n                                }\n\n                            }\n                            else if (res.data.errorCode == 50000){\n                                this.$Modal.info({\n                                    title: '提示',\n                                    content: res.data.errorMsg,\n                                    onOk: () => {\n                                        window.location.href = 'http://dev-a.yiche.com/static_common-portal/login.html';\n                                    }\n                                });\n                            }\n                            else {\n                                this.layer = {};\n                                this.layer.width = '';\n                                this.layer.height = '';\n                                this.layer.pSize = `${this.info.width} * ${this.info.height}`;\n                                let skuDatas = JSON.parse(this.info.adStateLists);\n                                for (let attr in skuDatas) {\n                                    if(attr == this.time) {\n                                        let n = skuDatas[attr];\n                                        this.layer.skuPrice = n[dateIndexs].skuPrice;\n                                    }\n                                }\n                            }\n                        }).catch((err) => {\n                            console.log(err);\n                        })\n\n                        let index = parseInt(event.target.getAttribute('data-index'));\n                        this.$set(this.visibleList, index, true);\n                        let y = event.clientY;\n\n                        if (y < 270) {\n                            event.target.nextElementSibling.style.top = 34 + 'px';\n                        }\n                        else {\n                            event.target.nextElementSibling.style.top = -280 + 'px';\n                        }\n                    })\n                }, 2000)\n            }\n        },\n        clear() {\n            this.visibleList = [];\n            clearTimeout(this.timer);\n        }\n    }\n}\n</script>\n\n<style lang=\"scss\">\n.dialogTr {\n    .dateLayer {\n        position: absolute;\n        background: #fff;\n        top: 34px;\n        z-index: 999;\n\n    }\n\n    .dialog-right {\n        left: -320px;\n    }\n\n\n    .allMoth {\n        width: 40px;\n    }\n    .dateTd {\n        position: relative;\n        height: 28px;\n        width: 20px;\n        border: 1px solid #E9E9E9;\n\n        &.default {\n            background: #EDEFF2;\n        }\n\n        &.active {\n            background: #A8C8EE;\n        }\n\n        &.hasSel {\n            background: #6A7088;\n        }\n\n        a {\n            display: block;\n            height: 28px;\n            width: 26px;\n        }\n    }\n\n    .dialogContent {\n\n        position: relative;\n         padding: 0 20px 20px;\n         min-width: 320px;\n         font-size: 12px;\n         text-align: left;\n\n         background: #FFFFFF;\n         border: 1px solid #E9E9E9;\n         box-shadow: 0 4px 8px 0 rgba(0,0,0,0.20);\n\n        .dialogContent-title {\n            position: absolute;\n            top: 0;\n            left: 0;\n            text-indent: 20px;\n            width: 100%;\n            height: 34px;\n            line-height: 34px;\n            background: #F9F9F9;\n        }\n\n        .dialogContent-top {\n            margin-top: 34px;\n            text-indent: 4px;\n            line-height: 30px;\n            border-bottom: 1px solid #ccc;\n        }\n\n        .dialogContent-bot {\n            text-indent: 4px;\n            line-height: 30px;\n        }\n    }\n}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// DailogRow.vue?5b4d2ef6","<template lang=\"html\">\n    <chart :options=\"polar\" id='lineChart' ref='myChart' style=\"width:1104px\"></chart>\n</template>\n<script>\nimport Vue from 'vue'\nimport ECharts from 'vue-echarts/components/ECharts.vue'\nimport 'echarts/lib/chart/line'\nimport 'echarts/lib/component/tooltip'\nimport 'echarts/lib/component/dataZoom'\n\nVue.component('chart', ECharts)\n\nexport default {\n  data() {\n      return {\n          ploar: {}\n      }\n  }\n}\n</script>\n\n\n\n// WEBPACK FOOTER //\n// LineChart.vue?5c2b858a","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(true);\n// imports\n\n\n// module\nexports.push([module.id, \".dialogTr .dateLayer{position:absolute;background:#fff;top:34px;z-index:999}.dialogTr .dialog-right{left:-320px}.dialogTr .allMoth{width:40px}.dialogTr .dateTd{position:relative;height:28px;width:20px;border:1px solid #e9e9e9}.dialogTr .dateTd.default{background:#edeff2}.dialogTr .dateTd.active{background:#a8c8ee}.dialogTr .dateTd.hasSel{background:#6a7088}.dialogTr .dateTd a{display:block;height:28px;width:26px}.dialogTr .dialogContent{position:relative;padding:0 20px 20px;min-width:320px;font-size:12px;text-align:left;background:#fff;border:1px solid #e9e9e9;box-shadow:0 4px 8px 0 rgba(0,0,0,.2)}.dialogTr .dialogContent .dialogContent-title{position:absolute;top:0;left:0;text-indent:20px;width:100%;height:34px;line-height:34px;background:#f9f9f9}.dialogTr .dialogContent .dialogContent-top{margin-top:34px;text-indent:4px;line-height:30px;border-bottom:1px solid #ccc}.dialogTr .dialogContent .dialogContent-bot{text-indent:4px;line-height:30px}\", \"\", {\"version\":3,\"sources\":[\"/Users/yiche/Desktop/company/newfe/isp_feweb/src/components/DailogRow.vue\"],\"names\":[],\"mappings\":\"AACA,qBACE,kBAAmB,AACnB,gBAAiB,AACjB,SAAU,AACV,WAAa,CACd,AACD,wBACE,WAAa,CACd,AACD,mBACE,UAAY,CACb,AACD,kBACE,kBAAmB,AACnB,YAAa,AACb,WAAY,AACZ,wBAA0B,CAC3B,AACD,0BACI,kBAAoB,CACvB,AACD,yBACI,kBAAoB,CACvB,AACD,yBACI,kBAAoB,CACvB,AACD,oBACI,cAAe,AACf,YAAa,AACb,UAAY,CACf,AACD,yBACE,kBAAmB,AACnB,oBAAqB,AACrB,gBAAiB,AACjB,eAAgB,AAChB,gBAAiB,AACjB,gBAAoB,AACpB,yBAA0B,AAC1B,qCAA2C,CAC5C,AACD,8CACI,kBAAmB,AACnB,MAAO,AACP,OAAQ,AACR,iBAAkB,AAClB,WAAY,AACZ,YAAa,AACb,iBAAkB,AAClB,kBAAoB,CACvB,AACD,4CACI,gBAAiB,AACjB,gBAAiB,AACjB,iBAAkB,AAClB,4BAA8B,CACjC,AACD,4CACI,gBAAiB,AACjB,gBAAkB,CACrB\",\"file\":\"DailogRow.vue\",\"sourcesContent\":[\"\\n.dialogTr .dateLayer {\\n  position: absolute;\\n  background: #fff;\\n  top: 34px;\\n  z-index: 999;\\n}\\n.dialogTr .dialog-right {\\n  left: -320px;\\n}\\n.dialogTr .allMoth {\\n  width: 40px;\\n}\\n.dialogTr .dateTd {\\n  position: relative;\\n  height: 28px;\\n  width: 20px;\\n  border: 1px solid #E9E9E9;\\n}\\n.dialogTr .dateTd.default {\\n    background: #EDEFF2;\\n}\\n.dialogTr .dateTd.active {\\n    background: #A8C8EE;\\n}\\n.dialogTr .dateTd.hasSel {\\n    background: #6A7088;\\n}\\n.dialogTr .dateTd a {\\n    display: block;\\n    height: 28px;\\n    width: 26px;\\n}\\n.dialogTr .dialogContent {\\n  position: relative;\\n  padding: 0 20px 20px;\\n  min-width: 320px;\\n  font-size: 12px;\\n  text-align: left;\\n  background: #FFFFFF;\\n  border: 1px solid #E9E9E9;\\n  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);\\n}\\n.dialogTr .dialogContent .dialogContent-title {\\n    position: absolute;\\n    top: 0;\\n    left: 0;\\n    text-indent: 20px;\\n    width: 100%;\\n    height: 34px;\\n    line-height: 34px;\\n    background: #F9F9F9;\\n}\\n.dialogTr .dialogContent .dialogContent-top {\\n    margin-top: 34px;\\n    text-indent: 4px;\\n    line-height: 30px;\\n    border-bottom: 1px solid #ccc;\\n}\\n.dialogTr .dialogContent .dialogContent-bot {\\n    text-indent: 4px;\\n    line-height: 30px;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader?{\"minimize\":true,\"sourceMap\":true}!./~/vue-loader/lib/style-compiler?{\"id\":\"data-v-03a839f5\",\"scoped\":false,\"hasInlineConfig\":false}!./~/sass-loader/lib/loader.js?{\"sourceMap\":true}!./~/vue-loader/lib/selector.js?type=styles&index=0!./src/components/DailogRow.vue\n// module id = 692\n// module chunks = 1 3","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../node_modules/css-loader/index.js?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"id\\\":\\\"data-v-03a839f5\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../node_modules/sass-loader/lib/loader.js?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./DailogRow.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../node_modules/vue-style-loader/lib/addStylesClient.js\")(\"06fa0d2f\", content, true);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/extract-text-webpack-plugin/loader.js?{\"omit\":1,\"remove\":true}!./~/vue-style-loader!./~/css-loader?{\"minimize\":true,\"sourceMap\":true}!./~/vue-loader/lib/style-compiler?{\"id\":\"data-v-03a839f5\",\"scoped\":false,\"hasInlineConfig\":false}!./~/sass-loader/lib/loader.js?{\"sourceMap\":true}!./~/vue-loader/lib/selector.js?type=styles&index=0!./src/components/DailogRow.vue\n// module id = 695\n// module chunks = 1 3","\n/* styles */\nrequire(\"!!../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"id\\\":\\\"data-v-03a839f5\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!sass-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./DailogRow.vue\")\n\nvar Component = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./DailogRow.vue\"),\n  /* template */\n  require(\"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-03a839f5\\\"}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./DailogRow.vue\"),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/DailogRow.vue\n// module id = 699\n// module chunks = 1 3","var Component = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./LineChart.vue\"),\n  /* template */\n  require(\"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-0b5a5886\\\"}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./LineChart.vue\"),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/LineChart.vue\n// module id = 702\n// module chunks = 1 2","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('tr', {\n    staticClass: \"dialogTr\",\n    on: {\n      \"mouseover\": _vm.over,\n      \"mouseout\": _vm.clear\n    }\n  }, [_vm._t(\"default\"), _vm._v(\" \"), _vm._l((_vm.timeData), function(i, index) {\n    return _c('td', {\n      class: [\"dateTd\", {\n        \"default\": i == 3\n      }, {\n        \"hasSel\": i == 2\n      }]\n    }, [_c('a', {\n      attrs: {\n        \"href\": \"javascript:;\",\n        \"data-index\": index\n      }\n    }), _vm._v(\" \"), _c('div', {\n      directives: [{\n        name: \"show\",\n        rawName: \"v-show\",\n        value: (_vm.visibleList[index]),\n        expression: \"visibleList[index]\"\n      }],\n      class: [\"dateLayer\", {\n        \"dialog-right\": index > 20\n      }]\n    }, [_c('div', {\n      staticClass: \"dialogContent\",\n      slot: \"content\"\n    }, [_c('p', {\n      staticClass: \"dialogContent-title\"\n    }, [_vm._v(\"日期\")]), _vm._v(\" \"), _c('div', {\n      staticClass: \"dialogContent-top\"\n    }, [_c('p', [_vm._v(\"价格：\" + _vm._s(_vm.layer.skuPrice) + \"元/天\")]), _vm._v(\" \"), _c('p', [_vm._v(\"尺寸：\" + _vm._s(_vm.layer.width == '' ? '-' : _vm.layer.width) + \"*\" + _vm._s(_vm.layer.height == '' ? '-' : _vm.layer.height) + \"px ≤ 100k\")])]), _vm._v(\" \"), _c('div', {\n      staticClass: \"dialogContent-bot\"\n    }, [_c('p', [_vm._v(\"占用人：\" + _vm._s(_vm.layer.dutyUserName ? _vm.layer.dutyUserName : '-'))]), _vm._v(\" \"), _c('p', [_vm._v(\"订单号：\" + _vm._s(_vm.layer.adOrderCode ? _vm.layer.adOrderCode : '-'))]), _vm._v(\" \"), _c('p', [_vm._v(\"订单状态：\" + _vm._s(_vm.layer.statusName ? _vm.layer.statusName : '-'))]), _vm._v(\" \"), _c('p', {\n      staticClass: \"clear\"\n    }, [_c('span', {\n      staticClass: \"fl\"\n    }, [_vm._v(\"最终客户：\")]), _vm._v(\" \"), _c('span', {\n      staticClass: \"fl\",\n      staticStyle: {\n        \"width\": \"204px\",\n        \"text-indent\": \"0\"\n      }\n    }, [_vm._v(\"\\n                            \" + _vm._s(_vm.layer.adCustomerName ? _vm.layer.adCustomerName : '-') + \"\\n                        \")])]), _vm._v(\" \"), _c('p', [_vm._v(\"点击/曝光：\" + _vm._s(_vm.layer.singleClick ? _vm.layer.singleClick : '-') + \"/\" + _vm._s(_vm.layer.singleDisplay ? _vm.layer.singleDisplay : '-'))])])])])])\n  })], 2)\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler?{\"id\":\"data-v-03a839f5\"}!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/DailogRow.vue\n// module id = 703\n// module chunks = 1 3","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('chart', {\n    ref: \"myChart\",\n    staticStyle: {\n      \"width\": \"1104px\"\n    },\n    attrs: {\n      \"options\": _vm.polar,\n      \"id\": \"lineChart\"\n    }\n  })\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler?{\"id\":\"data-v-0b5a5886\"}!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/LineChart.vue\n// module id = 704\n// module chunks = 1 2","<template lang=\"html\">\n    <div class=\"viewAd\">\n        <div class=\"info\">\n            <p class=\"title\">基本信息</p>\n            <ul>\n                <li>\n                    <Row>\n                        <Col span=\"2\">广告位名称：</Col>\n                        <Col span=\"17\">{{adName}}</Col>\n                    </Row>\n                </li>\n                <li>\n                    <Row>\n                        <Col span=\"2\">广告位尺寸：</Col>\n                        <Col span=\"17\">{{size}}px ≤ 100k</Col>\n                    </Row>\n                </li>\n                <li>\n                    <Row>\n                        <Col span=\"5\">广告位价格：</Col>\n                    </Row>\n                </li>\n                <table border=\"1\" cellspacing=\"0\" class=\"ad-price\">\n                    <tr class=\"time\">\n                        <td v-for='i in first'>{{i.time}}</td>\n                    </tr>\n                    <tr>\n                        <td v-for='i in first'>{{i.kprice}}元/天</td>\n                    </tr>\n                    <tr class=\"time\">\n                        <td v-for='i in second'>{{i.time}}</td>\n                    </tr>\n                    <tr>\n                        <td v-for='i in second'>{{i.kprice}}元/天</td>\n                    </tr>\n                </table>\n            </ul>\n        </div>\n\n        <!-- 占用情况 -->\n        <div class=\"occupancy\">\n            <p class=\"title\">占用情况</p>\n            <table border=\"1\" cellspacing=\"0\" class=\"dateTable hasCheck\">\n                <tr class=\"table-title\">\n                    <td></td>\n                    <td  v-for='i in 31' class='dateTd'>{{i}}</td>\n                </tr>\n                <tr v-for='i in first' :info = 'pageData' :timeData = 'i.state.split(\",\")' :time='i.time' is='DailogRow'>\n                    <td>{{i.time}}</td>\n                </tr>\n            </table>\n        </div>\n\n        <!-- 历史曝光量 -->\n        <div class=\"occupancy\" v-if='exposureList.length != 0'>\n            <p class=\"title\">历史曝光量（最近一年）</p>\n            <Table border :columns=\"columns\" :data=\"exposureList\" style='text-align: center'></Table>\n        </div>\n        <LineChart></LineChart>\n\n\n    </div>\n</template>\n\n<script>\nimport echarts from 'echarts/lib/echarts'\nimport DailogRow from 'component/DailogRow';\nimport LineChart from 'component/LineChart';\n\nexport default {\n    components: {\n        DailogRow,\n        LineChart\n    },\n    data () {\n       return {\n           adName: '',\n           size: '',\n           result: {},\n           pageData: {},\n           // 上半年\n           first: [],\n           // 下半年\n           second: [],\n           columns: [\n               {\n                   title: '日均曝光量',\n                   key: 'displayAmount'\n               },\n               {\n                   title: '日均点击量',\n                   key: 'singleClick'\n               },\n               {\n                    title: '日均点击率',\n                    key: 'clickAmountDay'\n               },\n               {\n                    title: '节假日日均曝光量',\n                    key: 'C'\n               },\n               {\n                    title: '节假日日均点击量',\n                    key: 'D'\n               },\n               {\n                    title: '月均曝光量',\n                    key: 'displayAmountMount'\n               },\n               {\n                   title: '月均点击量',\n                   key: 'displayClickMonth'\n               },\n               {\n                   title: '月均点击率',\n                   key: 'clickAmountMount'\n               }\n           ],\n           exposureList: [\n               {\n                   //曝光数\n                   displayAmount: '',\n                   //单独点击数\n                   singleClick: '',\n                   // 统计数\n                   clickAmountDay: '',\n                   C: '0',\n                   D: '0',\n                   displayAmountMount: '',\n                   displayClickMonth: '',\n                   clickAmountMount: ''\n               }\n           ]\n       }\n   },\n    mounted() {\n    // /api/isp-kongming/ad/select_\n        this.result = JSON.parse(window.localStorage.getItem('viewAd'));\n        window.sessionStorage.setItem('viewState', '2');\n        let time  = this.$router.currentRoute.query.viewTime.split(' ')[0];\n        let month = time.split('-');\n        this.adName = this.result.name;\n        this.size = `${this.result.width}*${this.result.height}`;\n        // this.pageData = Object.assign({}, this.mockData.result[0]);\n        // let year = Object.assign([], this.pageData.adStateList).reverse();\n        // this.first = year.slice(0,6);\n        // this.second = year.slice(6);\n        let search = JSON.parse(window.sessionStorage.getItem('searchInfo'));\n        let currentYear = parseInt(month[0]);\n        let currenMonth = month[1];\n        // 曝光量\n        search.beginTime = `${currentYear}-${currenMonth}-01`\n        search.endTime = `${currentYear + 1}-${currenMonth}-01`;\n        search.adPlaceId = this.result.adPlaceId;\n        this.$http.post('/isp-kongming/ad/kuAdPlaceBo', search).then((res) => {\n           if (res.data.errorCode === 0) {\n               let datas = res.data.result[0];\n               datas.adStateList = this.initResult(datas);\n               this.pageData = Object.assign({}, datas);\n               let year = Object.assign([], this.pageData.adStateList);\n               this.first = year.slice(0,6);\n               this.second = year.slice(6);\n           }\n           else {\n               this.$Modal.info({\n                   title: '提示',\n                   content: res.data.rspMsg.errorMsg\n               });\n           }\n       }).catch((err) => {\n           console.log(err);\n       });\n\n\n       this.$http.post('/isp-kongming/ad/amountSelectSum', search).then((res) => {\n           if (res.data.errorCode === 0) {\n               let data = res.data.result;\n               this.$set(this.exposureList, 0, data);\n               this.exposureList[0].C = 0;\n               this.exposureList[0].D = 0;\n           }\n           else {\n               this.$Modal.info({\n                   title: '提示',\n                   content: res.data.rspMsg.errorMsg\n               });\n           }\n       }).catch((err) => {\n           console.log(err);\n       });\n\n       // adPlaceId: this.result.adPlaceId\n       // 折线图\n\n      let amountMonth = [];\n      // clickAmount   点击量\n      let amoutClick = [];\n      // displayAmount 曝光量\n      let amountDisplay = [];\n\n\n\n       this.$http.post('/isp-kongming/ad/amountSelect', search).then((res) => {\n           if (res.data.errorCode === 0) {\n               let datas = res.data.result;\n               for (let i = 0; i < datas.length; i++) {\n                   amountMonth.push(datas[i].rateTime);\n                   amoutClick.push(datas[i].clickAmount);\n                   amountDisplay.push(datas[i].displayAmount);\n               }\n\n           }\n           else {\n               this.$Modal.info({\n                   title: '提示',\n                   content: res.data.rspMsg.errorMsg\n               });\n           }\n       }).catch((err) => {\n           console.log(err);\n       });\n\n        setTimeout(() => {\n            let polar = {\n                title: {\n                    text: ''\n                },\n                // 坐标提示\n                tooltip : {\n                    trigger: 'axis',\n                    axisPointer: {\n                        type: 'cross',\n                        animation: false,\n                        label: {\n                            backgroundColor: '#505765'\n                        }\n                    }\n                },\n                legend: {\n                    data:['曝光量','点击量'],\n                    x: 'left'\n                },\n                dataZoom: [\n                    {\n                        show: true,\n                        realtime: true,\n                        start: 65,\n                        end: 85\n                    },\n                    {\n                        type: 'inside',\n                        realtime: true,\n                        start: 65,\n                        end: 85\n                    }\n                ],\n                xAxis: {\n                    data: amountMonth\n                },\n                yAxis: [\n                    {\n                        name: '曝光量(万)',\n                        type: 'value',\n                        max: 100\n                    },\n                    {\n                        name: '点击量',\n                        type: 'value',\n                        max: 10000\n                    }\n                ],\n                series: [\n                    {\n                        name: '曝光量',\n                        type: 'line',\n                        animation: true,\n                        lineStyle: {\n                            normal: {\n                                color: '#ccc'\n                            }\n                        },\n                        symbolSize: 10,\n                        data: amountDisplay\n                    },\n                    {\n                        name: '点击量',\n                        yAxisIndex: 1,\n                        type: 'line',\n                        animation: true,\n                        lineStyle: {\n                            normal: {\n                                color: '#000'\n                            }\n                        },\n                        symbolSize: 10,\n                        data: amoutClick\n                    }\n                ]\n            };\n            var myChart = echarts.init(document.getElementById('lineChart'));\n            myChart.setOption(polar);\n        }, 200)\n    },\n    methods: {\n        initResult(data) {\n            let adStateList = [];\n            let arr = [];\n            let monthList = [];\n            let adList = data.adStateList;\n\n            let obj = Object.assign({}, adList);\n            for (let attr in obj) {\n               monthList.push(attr);\n               let ad = obj[attr];\n               let monthData = {};\n               let dayStates = [];\n               let skuIdList = [];\n               let total = 0;\n               monthData.time = attr;\n               monthData.dayStatus = obj[attr];\n               //ad.sort(this.compare('day'));\n               // 按照日期\n               for (let j = 0; j < ad.length; j++) {\n                //    dayStates.push(ad[j].skuStatus);\n                   dayStates[ad[j].day - 1] = ad[j].skuStatus;\n                   skuIdList[ad[j].day -1 ] = ad[j].skuId;\n                   total += parseFloat(ad[j].skuPrice);\n               }\n\n               for (let k = 0; k < 31; k++ ) {\n                   if (dayStates[k] == 'SKU_STATUS_LOCKED' || dayStates[k] == 'SKU_STATUS_SALED' || dayStates[k] == 'SKU_STATUS_RUNNING') {\n                       dayStates[k] = '2'\n                   }\n                   if (dayStates[k] == 'SKU_STATUS_NONE' || dayStates[k] =='SKU_STATUS_DELETE' || dayStates[k] == 'SKU_STATUS_IDLE') {\n                       dayStates[k]  = '1';\n                   }\n                   if (!dayStates[k]) {\n                       dayStates[k]  = '3';\n                   }\n               }\n               monthData.kprice = (total/ad.length).toFixed(2);\n               monthData.state = dayStates.join(',');\n               monthData.skuIdList = skuIdList;\n               arr.push(monthData);\n            }\n\n            // 存储日期\n            monthList.sort();\n            for (let i = 0; i < monthList.length; i++) {\n                for (let j = 0; j < arr.length; j++) {\n                    if (arr[j].time == monthList[i]) {\n                        adStateList.push(arr[j]);\n                    }\n                }\n            }\n            return adStateList;\n        }\n    }\n}\n</script>\n\n<style lang=\"scss\">\n    .viewAd {\n        padding-left: 20px;\n        width: 1126px;\n\n        .info  {\n            .title {\n                font-size: 14px;\n                color: #354052;\n                line-height: 28px;\n            }\n\n            li {\n                font-size: 12px;\n                color: #333333;\n                line-height: 24px;\n            }\n        }\n\n        .ad-price {\n            width: 100%;\n            text-align: center;\n\n            .time {\n                background: #F9F9F9;\n            }\n        }\n\n        .occupancy {\n            margin-top: 60px;\n\n            .table-title {\n                background: #F9F9F9;\n            }\n\n            .title {\n                font-size: 14px;\n                color: #354052;\n                line-height: 28px;\n            }\n        }\n\n        .dateTable {\n            width: 100%;\n            text-align: center;\n            font-size: 12px;\n            border: 1px solid #DEE1E5;\n\n            .allMoth {\n                width: 34px;\n            }\n\n            .dateTd {\n                position: relative;\n                border: 1px solid #DEE1E5;;\n                height: 28px;\n                width: 30px;\n\n                &.default {\n                    background: #EDEFF2;\n                }\n\n                &.active {\n                    background: #A8C8EE;\n                }\n\n                &.hasSel {\n                    background: #6A7088;\n                }\n\n            }\n        }\n    }\n</style>\n\n\n\n// WEBPACK FOOTER //\n// ViewAd.vue?075c62ce","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(true);\n// imports\n\n\n// module\nexports.push([module.id, \".viewAd{padding-left:20px;width:1126px}.viewAd .info .title{font-size:14px;color:#354052;line-height:28px}.viewAd .info li{font-size:12px;color:#333;line-height:24px}.viewAd .ad-price{width:100%;text-align:center}.viewAd .ad-price .time{background:#f9f9f9}.viewAd .occupancy{margin-top:60px}.viewAd .occupancy .table-title{background:#f9f9f9}.viewAd .occupancy .title{font-size:14px;color:#354052;line-height:28px}.viewAd .dateTable{width:100%;text-align:center;font-size:12px;border:1px solid #dee1e5}.viewAd .dateTable .allMoth{width:34px}.viewAd .dateTable .dateTd{position:relative;border:1px solid #dee1e5;height:28px;width:30px}.viewAd .dateTable .dateTd.default{background:#edeff2}.viewAd .dateTable .dateTd.active{background:#a8c8ee}.viewAd .dateTable .dateTd.hasSel{background:#6a7088}\", \"\", {\"version\":3,\"sources\":[\"/Users/yiche/Desktop/company/newfe/isp_feweb/src/pages/viewAd/ViewAd.vue\"],\"names\":[],\"mappings\":\"AACA,QACE,kBAAmB,AACnB,YAAc,CACf,AACD,qBACI,eAAgB,AAChB,cAAe,AACf,gBAAkB,CACrB,AACD,iBACI,eAAgB,AAChB,WAAe,AACf,gBAAkB,CACrB,AACD,kBACI,WAAY,AACZ,iBAAmB,CACtB,AACD,wBACM,kBAAoB,CACzB,AACD,mBACI,eAAiB,CACpB,AACD,gCACM,kBAAoB,CACzB,AACD,0BACM,eAAgB,AAChB,cAAe,AACf,gBAAkB,CACvB,AACD,mBACI,WAAY,AACZ,kBAAmB,AACnB,eAAgB,AAChB,wBAA0B,CAC7B,AACD,4BACM,UAAY,CACjB,AACD,2BACM,kBAAmB,AACnB,yBAA0B,AAC1B,YAAa,AACb,UAAY,CACjB,AACD,mCACQ,kBAAoB,CAC3B,AACD,kCACQ,kBAAoB,CAC3B,AACD,kCACQ,kBAAoB,CAC3B\",\"file\":\"ViewAd.vue\",\"sourcesContent\":[\"\\n.viewAd {\\n  padding-left: 20px;\\n  width: 1126px;\\n}\\n.viewAd .info .title {\\n    font-size: 14px;\\n    color: #354052;\\n    line-height: 28px;\\n}\\n.viewAd .info li {\\n    font-size: 12px;\\n    color: #333333;\\n    line-height: 24px;\\n}\\n.viewAd .ad-price {\\n    width: 100%;\\n    text-align: center;\\n}\\n.viewAd .ad-price .time {\\n      background: #F9F9F9;\\n}\\n.viewAd .occupancy {\\n    margin-top: 60px;\\n}\\n.viewAd .occupancy .table-title {\\n      background: #F9F9F9;\\n}\\n.viewAd .occupancy .title {\\n      font-size: 14px;\\n      color: #354052;\\n      line-height: 28px;\\n}\\n.viewAd .dateTable {\\n    width: 100%;\\n    text-align: center;\\n    font-size: 12px;\\n    border: 1px solid #DEE1E5;\\n}\\n.viewAd .dateTable .allMoth {\\n      width: 34px;\\n}\\n.viewAd .dateTable .dateTd {\\n      position: relative;\\n      border: 1px solid #DEE1E5;\\n      height: 28px;\\n      width: 30px;\\n}\\n.viewAd .dateTable .dateTd.default {\\n        background: #EDEFF2;\\n}\\n.viewAd .dateTable .dateTd.active {\\n        background: #A8C8EE;\\n}\\n.viewAd .dateTable .dateTd.hasSel {\\n        background: #6A7088;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader?{\"minimize\":true,\"sourceMap\":true}!./~/vue-loader/lib/style-compiler?{\"id\":\"data-v-327419e8\",\"scoped\":false,\"hasInlineConfig\":false}!./~/sass-loader/lib/loader.js?{\"sourceMap\":true}!./~/vue-loader/lib/selector.js?type=styles&index=0!./src/pages/viewAd/ViewAd.vue\n// module id = 776\n// module chunks = 1","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/css-loader/index.js?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"id\\\":\\\"data-v-327419e8\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../../node_modules/sass-loader/lib/loader.js?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./ViewAd.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../../node_modules/vue-style-loader/lib/addStylesClient.js\")(\"7f422062\", content, true);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/extract-text-webpack-plugin/loader.js?{\"omit\":1,\"remove\":true}!./~/vue-style-loader!./~/css-loader?{\"minimize\":true,\"sourceMap\":true}!./~/vue-loader/lib/style-compiler?{\"id\":\"data-v-327419e8\",\"scoped\":false,\"hasInlineConfig\":false}!./~/sass-loader/lib/loader.js?{\"sourceMap\":true}!./~/vue-loader/lib/selector.js?type=styles&index=0!./src/pages/viewAd/ViewAd.vue\n// module id = 824\n// module chunks = 1","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"viewAd\"\n  }, [_c('div', {\n    staticClass: \"info\"\n  }, [_c('p', {\n    staticClass: \"title\"\n  }, [_vm._v(\"基本信息\")]), _vm._v(\" \"), _c('ul', [_c('li', [_c('Row', [_c('Col', {\n    attrs: {\n      \"span\": \"2\"\n    }\n  }, [_vm._v(\"广告位名称：\")]), _vm._v(\" \"), _c('Col', {\n    attrs: {\n      \"span\": \"17\"\n    }\n  }, [_vm._v(_vm._s(_vm.adName))])], 1)], 1), _vm._v(\" \"), _c('li', [_c('Row', [_c('Col', {\n    attrs: {\n      \"span\": \"2\"\n    }\n  }, [_vm._v(\"广告位尺寸：\")]), _vm._v(\" \"), _c('Col', {\n    attrs: {\n      \"span\": \"17\"\n    }\n  }, [_vm._v(_vm._s(_vm.size) + \"px ≤ 100k\")])], 1)], 1), _vm._v(\" \"), _c('li', [_c('Row', [_c('Col', {\n    attrs: {\n      \"span\": \"5\"\n    }\n  }, [_vm._v(\"广告位价格：\")])], 1)], 1), _vm._v(\" \"), _c('table', {\n    staticClass: \"ad-price\",\n    attrs: {\n      \"border\": \"1\",\n      \"cellspacing\": \"0\"\n    }\n  }, [_c('tr', {\n    staticClass: \"time\"\n  }, _vm._l((_vm.first), function(i) {\n    return _c('td', [_vm._v(_vm._s(i.time))])\n  })), _vm._v(\" \"), _c('tr', _vm._l((_vm.first), function(i) {\n    return _c('td', [_vm._v(_vm._s(i.kprice) + \"元/天\")])\n  })), _vm._v(\" \"), _c('tr', {\n    staticClass: \"time\"\n  }, _vm._l((_vm.second), function(i) {\n    return _c('td', [_vm._v(_vm._s(i.time))])\n  })), _vm._v(\" \"), _c('tr', _vm._l((_vm.second), function(i) {\n    return _c('td', [_vm._v(_vm._s(i.kprice) + \"元/天\")])\n  }))])])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"occupancy\"\n  }, [_c('p', {\n    staticClass: \"title\"\n  }, [_vm._v(\"占用情况\")]), _vm._v(\" \"), _c('table', {\n    staticClass: \"dateTable hasCheck\",\n    attrs: {\n      \"border\": \"1\",\n      \"cellspacing\": \"0\"\n    }\n  }, [_c('tr', {\n    staticClass: \"table-title\"\n  }, [_c('td'), _vm._v(\" \"), _vm._l((31), function(i) {\n    return _c('td', {\n      staticClass: \"dateTd\"\n    }, [_vm._v(_vm._s(i))])\n  })], 2), _vm._v(\" \"), _vm._l((_vm.first), function(i) {\n    return _c(\"DailogRow\", {\n      tag: \"tr\",\n      attrs: {\n        \"info\": _vm.pageData,\n        \"timeData\": i.state.split(\",\"),\n        \"time\": i.time\n      }\n    }, [_c('td', [_vm._v(_vm._s(i.time))])])\n  })], 2)]), _vm._v(\" \"), (_vm.exposureList.length != 0) ? _c('div', {\n    staticClass: \"occupancy\"\n  }, [_c('p', {\n    staticClass: \"title\"\n  }, [_vm._v(\"历史曝光量（最近一年）\")]), _vm._v(\" \"), _c('Table', {\n    staticStyle: {\n      \"text-align\": \"center\"\n    },\n    attrs: {\n      \"border\": \"\",\n      \"columns\": _vm.columns,\n      \"data\": _vm.exposureList\n    }\n  })], 1) : _vm._e(), _vm._v(\" \"), _c('LineChart')], 1)\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler?{\"id\":\"data-v-327419e8\"}!./~/vue-loader/lib/selector.js?type=template&index=0!./src/pages/viewAd/ViewAd.vue\n// module id = 880\n// module chunks = 1"],"sourceRoot":""}